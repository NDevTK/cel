# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: go/common/testdata/testmsgs.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import descriptor_pb2 as google_dot_protobuf_dot_descriptor__pb2
from schema.common import file_reference_pb2 as schema_dot_common_dot_file__reference__pb2
from schema.common import validation_pb2 as schema_dot_common_dot_validation__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='go/common/testdata/testmsgs.proto',
  package='common',
  syntax='proto3',
  serialized_options=_b('Z2chromium.googlesource.com/enterprise/cel/go/common'),
  serialized_pb=_b('\n!go/common/testdata/testmsgs.proto\x12\x06\x63ommon\x1a google/protobuf/descriptor.proto\x1a\"schema/common/file_reference.proto\x1a\x1eschema/common/validation.proto\"D\n\x0fTestHasBadField\x12\x0c\n\x04name\x18\x01 \x01(\t\x12#\n\x05\x66ield\x18\x02 \x01(\x0b\x32\x14.common.TestBadProto\"F\n\x10TestHasGoodField\x12\x0c\n\x04name\x18\x01 \x01(\t\x12$\n\x05\x66ield\x18\x02 \x01(\x0b\x32\x15.common.TestGoodProto\"D\n\x0fTestHasBadSlice\x12\x0c\n\x04name\x18\x01 \x01(\t\x12#\n\x05\x66ield\x18\x02 \x03(\x0b\x32\x14.common.TestBadProto\"F\n\x10TestHasGoodSlice\x12\x0c\n\x04name\x18\x01 \x01(\t\x12$\n\x05\x66ield\x18\x02 \x03(\x0b\x32\x15.common.TestGoodProto\"L\n\rTestGoodOneOf\x12\x0c\n\x04name\x18\x01 \x01(\t\x12&\n\x05\x66ield\x18\x02 \x01(\x0b\x32\x15.common.TestGoodProtoH\x00\x42\x05\n\x03opt\"J\n\x0cTestBadOneOf\x12\x0c\n\x04name\x18\x01 \x01(\t\x12%\n\x05\x66ield\x18\x02 \x01(\x0b\x32\x14.common.TestBadProtoH\x00\x42\x05\n\x03opt\"#\n\x13TestBadValidateArgs\x12\x0c\n\x04name\x18\x01 \x01(\t\"!\n\x11TestBadReturnType\x12\x0c\n\x04name\x18\x02 \x01(\t\"\x1c\n\x0cTestBadProto\x12\x0c\n\x04name\x18\x01 \x01(\t\"\x1d\n\rTestGoodProto\x12\x0c\n\x04name\x18\x01 \x01(\t\"\xd1\x01\n\x11TestMultipleOneOf\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x10\n\x06\x66ield2\x18\x02 \x01(\tH\x00\x12\x10\n\x06\x66ield3\x18\x03 \x01(\tH\x00\x12\x10\n\x06\x66ield4\x18\x04 \x01(\tH\x01\x12\x10\n\x06\x66ield5\x18\x05 \x01(\tH\x01\x12&\n\x06\x66ield6\x18\x06 \x01(\x0b\x32\x14.common.TestBadProtoH\x02\x12&\n\x06\x66ield7\x18\x07 \x01(\x0b\x32\x14.common.TestBadProtoH\x02\x42\x06\n\x04opt1B\x06\n\x04opt2B\x06\n\x04opt3\"\xfc\x02\n\x16TestMessageWithOptions\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x30\n\x03key\x18\x02 \x01(\tB#\x82\xb5\x18\x1f\x12\x1d\x61.b.with_types.repeated_field\x12\x15\n\x05label\x18\x03 \x01(\tB\x06\x82\xb5\x18\x02\x08\x02\x12;\n\x0coptional_key\x18\x04 \x01(\tB%\x82\xb5\x18!\x12\x1d\x61.b.with_types.repeated_field\x18\x01\x12\x14\n\x04\x66qdn\x18\x05 \x01(\tB\x06\x82\xb5\x18\x02\x08\x03\x12\x14\n\x04reqd\x18\x06 \x01(\tB\x06\x82\xb5\x18\x02\x08\x01\x12\x1d\n\x0foptional_string\x18\x07 \x01(\tB\x04\xc0\xf3\x18\x01\x12\x16\n\x06output\x18\x08 \x01(\tB\x06\x82\xb5\x18\x02\x08\x05\x12\x1a\n\noutput_alt\x18\t \x01(\tB\x06\x82\xb5\x18\x02\x08\x05\x12\x1a\n\noutput_int\x18\n \x01(\x05\x42\x06\x82\xb5\x18\x02\x08\x05\x12\x33\n\x0coutput_proto\x18\x0b \x01(\x0b\x32\x15.common.TestGoodProtoB\x06\x82\xb5\x18\x02\x08\x05\"l\n\rTestContainer\x12(\n\x01\x61\x18\x01 \x03(\x0b\x32\x15.common.TestGoodProtoB\x06\x82\xb5\x18\x02\x08\x07\x12\x31\n\x01\x62\x18\x02 \x03(\x0b\x32\x1e.common.TestMessageWithOptionsB\x06\x82\xb5\x18\x02\x08\x07\"1\n\x19TestBadMessageWithOptions\x12\x14\n\x04name\x18\x01 \x01(\x05\x42\x06\x82\xb5\x18\x02\x08\x02\"6\n\x10TestFileRefProto\x12\"\n\x03ref\x18\x01 \x01(\x0b\x32\x15.common.FileReference\"\xd7\x03\n\x14TestMessageWithTypes\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x12\n\nbool_value\x18\x02 \x01(\x08\x12\x11\n\tint_value\x18\x03 \x01(\x05\x12$\n\x05\x66ield\x18\x04 \x01(\x0b\x32\x15.common.TestGoodProto\x12-\n\x0erepeated_field\x18\x05 \x03(\x0b\x32\x15.common.TestGoodProto\x12/\n\x0eoptional_field\x18\x06 \x01(\x0b\x32\x15.common.TestGoodProtoH\x00\x12=\n\tmap_field\x18\x07 \x03(\x0b\x32*.common.TestMessageWithTypes.MapFieldEntry\x12?\n\nmap_string\x18\x08 \x03(\x0b\x32+.common.TestMessageWithTypes.MapStringEntry\x1a\x46\n\rMapFieldEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12$\n\x05value\x18\x02 \x01(\x0b\x32\x15.common.TestGoodProto:\x02\x38\x01\x1a\x30\n\x0eMapStringEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x42\n\n\x08optional:*\n\x01x\x12\x1d.google.protobuf.FieldOptions\x18\xb8\x8e\x03 \x01(\x08\x42\x34Z2chromium.googlesource.com/enterprise/cel/go/commonb\x06proto3')
  ,
  dependencies=[google_dot_protobuf_dot_descriptor__pb2.DESCRIPTOR,schema_dot_common_dot_file__reference__pb2.DESCRIPTOR,schema_dot_common_dot_validation__pb2.DESCRIPTOR,])


X_FIELD_NUMBER = 51000
x = _descriptor.FieldDescriptor(
  name='x', full_name='common.x', index=0,
  number=51000, type=8, cpp_type=7, label=1,
  has_default_value=False, default_value=False,
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  serialized_options=None, file=DESCRIPTOR)


_TESTHASBADFIELD = _descriptor.Descriptor(
  name='TestHasBadField',
  full_name='common.TestHasBadField',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='common.TestHasBadField.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='field', full_name='common.TestHasBadField.field', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=147,
  serialized_end=215,
)


_TESTHASGOODFIELD = _descriptor.Descriptor(
  name='TestHasGoodField',
  full_name='common.TestHasGoodField',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='common.TestHasGoodField.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='field', full_name='common.TestHasGoodField.field', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=217,
  serialized_end=287,
)


_TESTHASBADSLICE = _descriptor.Descriptor(
  name='TestHasBadSlice',
  full_name='common.TestHasBadSlice',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='common.TestHasBadSlice.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='field', full_name='common.TestHasBadSlice.field', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=289,
  serialized_end=357,
)


_TESTHASGOODSLICE = _descriptor.Descriptor(
  name='TestHasGoodSlice',
  full_name='common.TestHasGoodSlice',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='common.TestHasGoodSlice.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='field', full_name='common.TestHasGoodSlice.field', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=359,
  serialized_end=429,
)


_TESTGOODONEOF = _descriptor.Descriptor(
  name='TestGoodOneOf',
  full_name='common.TestGoodOneOf',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='common.TestGoodOneOf.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='field', full_name='common.TestGoodOneOf.field', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='opt', full_name='common.TestGoodOneOf.opt',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=431,
  serialized_end=507,
)


_TESTBADONEOF = _descriptor.Descriptor(
  name='TestBadOneOf',
  full_name='common.TestBadOneOf',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='common.TestBadOneOf.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='field', full_name='common.TestBadOneOf.field', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='opt', full_name='common.TestBadOneOf.opt',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=509,
  serialized_end=583,
)


_TESTBADVALIDATEARGS = _descriptor.Descriptor(
  name='TestBadValidateArgs',
  full_name='common.TestBadValidateArgs',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='common.TestBadValidateArgs.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=585,
  serialized_end=620,
)


_TESTBADRETURNTYPE = _descriptor.Descriptor(
  name='TestBadReturnType',
  full_name='common.TestBadReturnType',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='common.TestBadReturnType.name', index=0,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=622,
  serialized_end=655,
)


_TESTBADPROTO = _descriptor.Descriptor(
  name='TestBadProto',
  full_name='common.TestBadProto',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='common.TestBadProto.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=657,
  serialized_end=685,
)


_TESTGOODPROTO = _descriptor.Descriptor(
  name='TestGoodProto',
  full_name='common.TestGoodProto',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='common.TestGoodProto.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=687,
  serialized_end=716,
)


_TESTMULTIPLEONEOF = _descriptor.Descriptor(
  name='TestMultipleOneOf',
  full_name='common.TestMultipleOneOf',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='common.TestMultipleOneOf.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='field2', full_name='common.TestMultipleOneOf.field2', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='field3', full_name='common.TestMultipleOneOf.field3', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='field4', full_name='common.TestMultipleOneOf.field4', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='field5', full_name='common.TestMultipleOneOf.field5', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='field6', full_name='common.TestMultipleOneOf.field6', index=5,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='field7', full_name='common.TestMultipleOneOf.field7', index=6,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='opt1', full_name='common.TestMultipleOneOf.opt1',
      index=0, containing_type=None, fields=[]),
    _descriptor.OneofDescriptor(
      name='opt2', full_name='common.TestMultipleOneOf.opt2',
      index=1, containing_type=None, fields=[]),
    _descriptor.OneofDescriptor(
      name='opt3', full_name='common.TestMultipleOneOf.opt3',
      index=2, containing_type=None, fields=[]),
  ],
  serialized_start=719,
  serialized_end=928,
)


_TESTMESSAGEWITHOPTIONS = _descriptor.Descriptor(
  name='TestMessageWithOptions',
  full_name='common.TestMessageWithOptions',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='common.TestMessageWithOptions.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='key', full_name='common.TestMessageWithOptions.key', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\202\265\030\037\022\035a.b.with_types.repeated_field'), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='label', full_name='common.TestMessageWithOptions.label', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\202\265\030\002\010\002'), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='optional_key', full_name='common.TestMessageWithOptions.optional_key', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\202\265\030!\022\035a.b.with_types.repeated_field\030\001'), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='fqdn', full_name='common.TestMessageWithOptions.fqdn', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\202\265\030\002\010\003'), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='reqd', full_name='common.TestMessageWithOptions.reqd', index=5,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\202\265\030\002\010\001'), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='optional_string', full_name='common.TestMessageWithOptions.optional_string', index=6,
      number=7, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\300\363\030\001'), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='output', full_name='common.TestMessageWithOptions.output', index=7,
      number=8, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\202\265\030\002\010\005'), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='output_alt', full_name='common.TestMessageWithOptions.output_alt', index=8,
      number=9, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\202\265\030\002\010\005'), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='output_int', full_name='common.TestMessageWithOptions.output_int', index=9,
      number=10, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\202\265\030\002\010\005'), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='output_proto', full_name='common.TestMessageWithOptions.output_proto', index=10,
      number=11, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\202\265\030\002\010\005'), file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=931,
  serialized_end=1311,
)


_TESTCONTAINER = _descriptor.Descriptor(
  name='TestContainer',
  full_name='common.TestContainer',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='a', full_name='common.TestContainer.a', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\202\265\030\002\010\007'), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='b', full_name='common.TestContainer.b', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\202\265\030\002\010\007'), file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1313,
  serialized_end=1421,
)


_TESTBADMESSAGEWITHOPTIONS = _descriptor.Descriptor(
  name='TestBadMessageWithOptions',
  full_name='common.TestBadMessageWithOptions',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='common.TestBadMessageWithOptions.name', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\202\265\030\002\010\002'), file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1423,
  serialized_end=1472,
)


_TESTFILEREFPROTO = _descriptor.Descriptor(
  name='TestFileRefProto',
  full_name='common.TestFileRefProto',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ref', full_name='common.TestFileRefProto.ref', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1474,
  serialized_end=1528,
)


_TESTMESSAGEWITHTYPES_MAPFIELDENTRY = _descriptor.Descriptor(
  name='MapFieldEntry',
  full_name='common.TestMessageWithTypes.MapFieldEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='common.TestMessageWithTypes.MapFieldEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value', full_name='common.TestMessageWithTypes.MapFieldEntry.value', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=_b('8\001'),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1870,
  serialized_end=1940,
)

_TESTMESSAGEWITHTYPES_MAPSTRINGENTRY = _descriptor.Descriptor(
  name='MapStringEntry',
  full_name='common.TestMessageWithTypes.MapStringEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='common.TestMessageWithTypes.MapStringEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value', full_name='common.TestMessageWithTypes.MapStringEntry.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=_b('8\001'),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1942,
  serialized_end=1990,
)

_TESTMESSAGEWITHTYPES = _descriptor.Descriptor(
  name='TestMessageWithTypes',
  full_name='common.TestMessageWithTypes',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='common.TestMessageWithTypes.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='bool_value', full_name='common.TestMessageWithTypes.bool_value', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='int_value', full_name='common.TestMessageWithTypes.int_value', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='field', full_name='common.TestMessageWithTypes.field', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='repeated_field', full_name='common.TestMessageWithTypes.repeated_field', index=4,
      number=5, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='optional_field', full_name='common.TestMessageWithTypes.optional_field', index=5,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='map_field', full_name='common.TestMessageWithTypes.map_field', index=6,
      number=7, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='map_string', full_name='common.TestMessageWithTypes.map_string', index=7,
      number=8, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_TESTMESSAGEWITHTYPES_MAPFIELDENTRY, _TESTMESSAGEWITHTYPES_MAPSTRINGENTRY, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='optional', full_name='common.TestMessageWithTypes.optional',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=1531,
  serialized_end=2002,
)

_TESTHASBADFIELD.fields_by_name['field'].message_type = _TESTBADPROTO
_TESTHASGOODFIELD.fields_by_name['field'].message_type = _TESTGOODPROTO
_TESTHASBADSLICE.fields_by_name['field'].message_type = _TESTBADPROTO
_TESTHASGOODSLICE.fields_by_name['field'].message_type = _TESTGOODPROTO
_TESTGOODONEOF.fields_by_name['field'].message_type = _TESTGOODPROTO
_TESTGOODONEOF.oneofs_by_name['opt'].fields.append(
  _TESTGOODONEOF.fields_by_name['field'])
_TESTGOODONEOF.fields_by_name['field'].containing_oneof = _TESTGOODONEOF.oneofs_by_name['opt']
_TESTBADONEOF.fields_by_name['field'].message_type = _TESTBADPROTO
_TESTBADONEOF.oneofs_by_name['opt'].fields.append(
  _TESTBADONEOF.fields_by_name['field'])
_TESTBADONEOF.fields_by_name['field'].containing_oneof = _TESTBADONEOF.oneofs_by_name['opt']
_TESTMULTIPLEONEOF.fields_by_name['field6'].message_type = _TESTBADPROTO
_TESTMULTIPLEONEOF.fields_by_name['field7'].message_type = _TESTBADPROTO
_TESTMULTIPLEONEOF.oneofs_by_name['opt1'].fields.append(
  _TESTMULTIPLEONEOF.fields_by_name['field2'])
_TESTMULTIPLEONEOF.fields_by_name['field2'].containing_oneof = _TESTMULTIPLEONEOF.oneofs_by_name['opt1']
_TESTMULTIPLEONEOF.oneofs_by_name['opt1'].fields.append(
  _TESTMULTIPLEONEOF.fields_by_name['field3'])
_TESTMULTIPLEONEOF.fields_by_name['field3'].containing_oneof = _TESTMULTIPLEONEOF.oneofs_by_name['opt1']
_TESTMULTIPLEONEOF.oneofs_by_name['opt2'].fields.append(
  _TESTMULTIPLEONEOF.fields_by_name['field4'])
_TESTMULTIPLEONEOF.fields_by_name['field4'].containing_oneof = _TESTMULTIPLEONEOF.oneofs_by_name['opt2']
_TESTMULTIPLEONEOF.oneofs_by_name['opt2'].fields.append(
  _TESTMULTIPLEONEOF.fields_by_name['field5'])
_TESTMULTIPLEONEOF.fields_by_name['field5'].containing_oneof = _TESTMULTIPLEONEOF.oneofs_by_name['opt2']
_TESTMULTIPLEONEOF.oneofs_by_name['opt3'].fields.append(
  _TESTMULTIPLEONEOF.fields_by_name['field6'])
_TESTMULTIPLEONEOF.fields_by_name['field6'].containing_oneof = _TESTMULTIPLEONEOF.oneofs_by_name['opt3']
_TESTMULTIPLEONEOF.oneofs_by_name['opt3'].fields.append(
  _TESTMULTIPLEONEOF.fields_by_name['field7'])
_TESTMULTIPLEONEOF.fields_by_name['field7'].containing_oneof = _TESTMULTIPLEONEOF.oneofs_by_name['opt3']
_TESTMESSAGEWITHOPTIONS.fields_by_name['output_proto'].message_type = _TESTGOODPROTO
_TESTCONTAINER.fields_by_name['a'].message_type = _TESTGOODPROTO
_TESTCONTAINER.fields_by_name['b'].message_type = _TESTMESSAGEWITHOPTIONS
_TESTFILEREFPROTO.fields_by_name['ref'].message_type = schema_dot_common_dot_file__reference__pb2._FILEREFERENCE
_TESTMESSAGEWITHTYPES_MAPFIELDENTRY.fields_by_name['value'].message_type = _TESTGOODPROTO
_TESTMESSAGEWITHTYPES_MAPFIELDENTRY.containing_type = _TESTMESSAGEWITHTYPES
_TESTMESSAGEWITHTYPES_MAPSTRINGENTRY.containing_type = _TESTMESSAGEWITHTYPES
_TESTMESSAGEWITHTYPES.fields_by_name['field'].message_type = _TESTGOODPROTO
_TESTMESSAGEWITHTYPES.fields_by_name['repeated_field'].message_type = _TESTGOODPROTO
_TESTMESSAGEWITHTYPES.fields_by_name['optional_field'].message_type = _TESTGOODPROTO
_TESTMESSAGEWITHTYPES.fields_by_name['map_field'].message_type = _TESTMESSAGEWITHTYPES_MAPFIELDENTRY
_TESTMESSAGEWITHTYPES.fields_by_name['map_string'].message_type = _TESTMESSAGEWITHTYPES_MAPSTRINGENTRY
_TESTMESSAGEWITHTYPES.oneofs_by_name['optional'].fields.append(
  _TESTMESSAGEWITHTYPES.fields_by_name['optional_field'])
_TESTMESSAGEWITHTYPES.fields_by_name['optional_field'].containing_oneof = _TESTMESSAGEWITHTYPES.oneofs_by_name['optional']
DESCRIPTOR.message_types_by_name['TestHasBadField'] = _TESTHASBADFIELD
DESCRIPTOR.message_types_by_name['TestHasGoodField'] = _TESTHASGOODFIELD
DESCRIPTOR.message_types_by_name['TestHasBadSlice'] = _TESTHASBADSLICE
DESCRIPTOR.message_types_by_name['TestHasGoodSlice'] = _TESTHASGOODSLICE
DESCRIPTOR.message_types_by_name['TestGoodOneOf'] = _TESTGOODONEOF
DESCRIPTOR.message_types_by_name['TestBadOneOf'] = _TESTBADONEOF
DESCRIPTOR.message_types_by_name['TestBadValidateArgs'] = _TESTBADVALIDATEARGS
DESCRIPTOR.message_types_by_name['TestBadReturnType'] = _TESTBADRETURNTYPE
DESCRIPTOR.message_types_by_name['TestBadProto'] = _TESTBADPROTO
DESCRIPTOR.message_types_by_name['TestGoodProto'] = _TESTGOODPROTO
DESCRIPTOR.message_types_by_name['TestMultipleOneOf'] = _TESTMULTIPLEONEOF
DESCRIPTOR.message_types_by_name['TestMessageWithOptions'] = _TESTMESSAGEWITHOPTIONS
DESCRIPTOR.message_types_by_name['TestContainer'] = _TESTCONTAINER
DESCRIPTOR.message_types_by_name['TestBadMessageWithOptions'] = _TESTBADMESSAGEWITHOPTIONS
DESCRIPTOR.message_types_by_name['TestFileRefProto'] = _TESTFILEREFPROTO
DESCRIPTOR.message_types_by_name['TestMessageWithTypes'] = _TESTMESSAGEWITHTYPES
DESCRIPTOR.extensions_by_name['x'] = x
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

TestHasBadField = _reflection.GeneratedProtocolMessageType('TestHasBadField', (_message.Message,), dict(
  DESCRIPTOR = _TESTHASBADFIELD,
  __module__ = 'go.common.testdata.testmsgs_pb2'
  # @@protoc_insertion_point(class_scope:common.TestHasBadField)
  ))
_sym_db.RegisterMessage(TestHasBadField)

TestHasGoodField = _reflection.GeneratedProtocolMessageType('TestHasGoodField', (_message.Message,), dict(
  DESCRIPTOR = _TESTHASGOODFIELD,
  __module__ = 'go.common.testdata.testmsgs_pb2'
  # @@protoc_insertion_point(class_scope:common.TestHasGoodField)
  ))
_sym_db.RegisterMessage(TestHasGoodField)

TestHasBadSlice = _reflection.GeneratedProtocolMessageType('TestHasBadSlice', (_message.Message,), dict(
  DESCRIPTOR = _TESTHASBADSLICE,
  __module__ = 'go.common.testdata.testmsgs_pb2'
  # @@protoc_insertion_point(class_scope:common.TestHasBadSlice)
  ))
_sym_db.RegisterMessage(TestHasBadSlice)

TestHasGoodSlice = _reflection.GeneratedProtocolMessageType('TestHasGoodSlice', (_message.Message,), dict(
  DESCRIPTOR = _TESTHASGOODSLICE,
  __module__ = 'go.common.testdata.testmsgs_pb2'
  # @@protoc_insertion_point(class_scope:common.TestHasGoodSlice)
  ))
_sym_db.RegisterMessage(TestHasGoodSlice)

TestGoodOneOf = _reflection.GeneratedProtocolMessageType('TestGoodOneOf', (_message.Message,), dict(
  DESCRIPTOR = _TESTGOODONEOF,
  __module__ = 'go.common.testdata.testmsgs_pb2'
  # @@protoc_insertion_point(class_scope:common.TestGoodOneOf)
  ))
_sym_db.RegisterMessage(TestGoodOneOf)

TestBadOneOf = _reflection.GeneratedProtocolMessageType('TestBadOneOf', (_message.Message,), dict(
  DESCRIPTOR = _TESTBADONEOF,
  __module__ = 'go.common.testdata.testmsgs_pb2'
  # @@protoc_insertion_point(class_scope:common.TestBadOneOf)
  ))
_sym_db.RegisterMessage(TestBadOneOf)

TestBadValidateArgs = _reflection.GeneratedProtocolMessageType('TestBadValidateArgs', (_message.Message,), dict(
  DESCRIPTOR = _TESTBADVALIDATEARGS,
  __module__ = 'go.common.testdata.testmsgs_pb2'
  # @@protoc_insertion_point(class_scope:common.TestBadValidateArgs)
  ))
_sym_db.RegisterMessage(TestBadValidateArgs)

TestBadReturnType = _reflection.GeneratedProtocolMessageType('TestBadReturnType', (_message.Message,), dict(
  DESCRIPTOR = _TESTBADRETURNTYPE,
  __module__ = 'go.common.testdata.testmsgs_pb2'
  # @@protoc_insertion_point(class_scope:common.TestBadReturnType)
  ))
_sym_db.RegisterMessage(TestBadReturnType)

TestBadProto = _reflection.GeneratedProtocolMessageType('TestBadProto', (_message.Message,), dict(
  DESCRIPTOR = _TESTBADPROTO,
  __module__ = 'go.common.testdata.testmsgs_pb2'
  # @@protoc_insertion_point(class_scope:common.TestBadProto)
  ))
_sym_db.RegisterMessage(TestBadProto)

TestGoodProto = _reflection.GeneratedProtocolMessageType('TestGoodProto', (_message.Message,), dict(
  DESCRIPTOR = _TESTGOODPROTO,
  __module__ = 'go.common.testdata.testmsgs_pb2'
  # @@protoc_insertion_point(class_scope:common.TestGoodProto)
  ))
_sym_db.RegisterMessage(TestGoodProto)

TestMultipleOneOf = _reflection.GeneratedProtocolMessageType('TestMultipleOneOf', (_message.Message,), dict(
  DESCRIPTOR = _TESTMULTIPLEONEOF,
  __module__ = 'go.common.testdata.testmsgs_pb2'
  # @@protoc_insertion_point(class_scope:common.TestMultipleOneOf)
  ))
_sym_db.RegisterMessage(TestMultipleOneOf)

TestMessageWithOptions = _reflection.GeneratedProtocolMessageType('TestMessageWithOptions', (_message.Message,), dict(
  DESCRIPTOR = _TESTMESSAGEWITHOPTIONS,
  __module__ = 'go.common.testdata.testmsgs_pb2'
  # @@protoc_insertion_point(class_scope:common.TestMessageWithOptions)
  ))
_sym_db.RegisterMessage(TestMessageWithOptions)

TestContainer = _reflection.GeneratedProtocolMessageType('TestContainer', (_message.Message,), dict(
  DESCRIPTOR = _TESTCONTAINER,
  __module__ = 'go.common.testdata.testmsgs_pb2'
  # @@protoc_insertion_point(class_scope:common.TestContainer)
  ))
_sym_db.RegisterMessage(TestContainer)

TestBadMessageWithOptions = _reflection.GeneratedProtocolMessageType('TestBadMessageWithOptions', (_message.Message,), dict(
  DESCRIPTOR = _TESTBADMESSAGEWITHOPTIONS,
  __module__ = 'go.common.testdata.testmsgs_pb2'
  # @@protoc_insertion_point(class_scope:common.TestBadMessageWithOptions)
  ))
_sym_db.RegisterMessage(TestBadMessageWithOptions)

TestFileRefProto = _reflection.GeneratedProtocolMessageType('TestFileRefProto', (_message.Message,), dict(
  DESCRIPTOR = _TESTFILEREFPROTO,
  __module__ = 'go.common.testdata.testmsgs_pb2'
  # @@protoc_insertion_point(class_scope:common.TestFileRefProto)
  ))
_sym_db.RegisterMessage(TestFileRefProto)

TestMessageWithTypes = _reflection.GeneratedProtocolMessageType('TestMessageWithTypes', (_message.Message,), dict(

  MapFieldEntry = _reflection.GeneratedProtocolMessageType('MapFieldEntry', (_message.Message,), dict(
    DESCRIPTOR = _TESTMESSAGEWITHTYPES_MAPFIELDENTRY,
    __module__ = 'go.common.testdata.testmsgs_pb2'
    # @@protoc_insertion_point(class_scope:common.TestMessageWithTypes.MapFieldEntry)
    ))
  ,

  MapStringEntry = _reflection.GeneratedProtocolMessageType('MapStringEntry', (_message.Message,), dict(
    DESCRIPTOR = _TESTMESSAGEWITHTYPES_MAPSTRINGENTRY,
    __module__ = 'go.common.testdata.testmsgs_pb2'
    # @@protoc_insertion_point(class_scope:common.TestMessageWithTypes.MapStringEntry)
    ))
  ,
  DESCRIPTOR = _TESTMESSAGEWITHTYPES,
  __module__ = 'go.common.testdata.testmsgs_pb2'
  # @@protoc_insertion_point(class_scope:common.TestMessageWithTypes)
  ))
_sym_db.RegisterMessage(TestMessageWithTypes)
_sym_db.RegisterMessage(TestMessageWithTypes.MapFieldEntry)
_sym_db.RegisterMessage(TestMessageWithTypes.MapStringEntry)

google_dot_protobuf_dot_descriptor__pb2.FieldOptions.RegisterExtension(x)

DESCRIPTOR._options = None
_TESTMESSAGEWITHOPTIONS.fields_by_name['key']._options = None
_TESTMESSAGEWITHOPTIONS.fields_by_name['label']._options = None
_TESTMESSAGEWITHOPTIONS.fields_by_name['optional_key']._options = None
_TESTMESSAGEWITHOPTIONS.fields_by_name['fqdn']._options = None
_TESTMESSAGEWITHOPTIONS.fields_by_name['reqd']._options = None
_TESTMESSAGEWITHOPTIONS.fields_by_name['optional_string']._options = None
_TESTMESSAGEWITHOPTIONS.fields_by_name['output']._options = None
_TESTMESSAGEWITHOPTIONS.fields_by_name['output_alt']._options = None
_TESTMESSAGEWITHOPTIONS.fields_by_name['output_int']._options = None
_TESTMESSAGEWITHOPTIONS.fields_by_name['output_proto']._options = None
_TESTCONTAINER.fields_by_name['a']._options = None
_TESTCONTAINER.fields_by_name['b']._options = None
_TESTBADMESSAGEWITHOPTIONS.fields_by_name['name']._options = None
_TESTMESSAGEWITHTYPES_MAPFIELDENTRY._options = None
_TESTMESSAGEWITHTYPES_MAPSTRINGENTRY._options = None
# @@protoc_insertion_point(module_scope)
