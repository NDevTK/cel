// Copyright 2017 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

syntax = "proto3";
package host;
option go_package="chromium.googlesource.com/enterprise/cel/go/host";

import "schema/common/options.proto";
import "schema/asset/network.proto";
import "schema/gcp/compute/compute-api.proto";

// GCP project hosting.
message Project {
  // The project name.
  string name = 1 [(common.v).type=ORGLABEL];

  // The default zone to use when constructing resources. The |zone| also
  // implicitly defines the region.
  string zone = 2 [(common.v).type=LABEL];
}

// Dependencies are things that aren't referred to directly by an asset
// manifest, but can be referred to by other host environment settings.

// Describes a GCE source disk image. See
// https://cloud.google.com/compute/docs/images#image_families
//
// The image can be specified either using the project/family pair or using a
// direct URL. During asset resolution, a project/family pair will be resolved
// into a URL. I.e. a resolved Image{} resource always contains the URL of the
// selected image.
message Image {
  // Name of the image. Used within the host environment schema to refer to
  // this image.
  string name = 1;

  message Family {
    // The GCP project providing the image. Not a foreign key into Project though
    // since it is legal to refer to images provided by external projects.
    string project = 1 [(common.v).type=ORGLABEL];

    // The GCP Image family name. Combined with the |project| field, the |family|
    // is used to locate the GCP image family. If the |url| is not specified,
    // then the resolver will pick the latest available image from this family
    // and populate the URL with it.
    string family = 2 [(common.v).type=LABEL];
  }

  oneof source {
    Family latest = 2;

    // The full or partial URL to the disk image. If this is specified, then the
    // |project| and |family| values are ignored.
    string url = 4;
  }
}

// Describes a type of machine (virtual or otherwise).
message MachineType {
  // Name is used to match machine type name from asset description.
  string name = 1;

  // One of the following will be used to resolve this machine type.
  oneof base {
    // InstanceProperties are used for constructing a new GCE instance.
    //
    // The instance_properties.AttachedDisk.Source is special and can refer to
    // an image name using the syntax "${host.image.<imagename>.url}" where
    // <imagename> is the name of an Image object in the enclosing
    // HostEnvironment.
    compute.InstanceProperties instance_properties = 5;

    // An instance template to use for constructing a new GCE instance. Should
    // be a full or a partial URL.
    string instance_template = 6 [(common.v).type=REQUIRED];
  }
}

// Describes an external address pool.
message AddressPool {
  // Name of address pool. Used for matching incoming references from an asset
  // description.
  string name = 1;

  // Static literal addresses.
  repeated asset.Address fixed_address = 2;

  // GCE reserved addresses by exact address name. Should refer to external addresses.
  repeated string reserved_address = 3;

  // GCE reserved addresses by regex. The provided regular expression must
  // match the entire name. The reserved address must be an external address. 
  //
  // E.g.:
  //     reserved_address_regex: "foo.*"
  // ... matches "foobar", but not "egfoox"
  repeated string reserved_address_regex = 4;
}

message HostEnvironment {
  Project project = 1;

  repeated MachineType machine_type = 10;
  repeated AddressPool address_pool = 11;
  repeated Image image = 12;
}
