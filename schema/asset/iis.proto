// Copyright 2017 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

syntax = "proto3";
package asset;
option go_package = "chromium.googlesource.com/enterprise/cel/go/schema/asset";

import "schema/common/file_reference.proto";
import "schema/asset/network.proto";
import "schema/common/validation.proto";

// Corresponding PS DSC Modules:
// * https://github.com/PowerShell/xWebAdministration

// An IIS server.
//
// The following Windows features will be automatically installed for all IIS
// servers.
//   *  Web-Common-HTTP
//   *  Web-Security
message IISServer {
  // Name of server instance.
  string name = 1;

  // Name of host machine. Should refer to a |WindowsMachine| entry.
  // Container information for the IIS instance will be inherited from the
  // WindowsMachine entry.
  string windows_machine = 2 [(common.v).ref = "asset.windows_machine"];
}

// Bindings for a website onto a webserver.
message IISBindings {
  // Hostname. Can be empty to bind to all hostnames.
  string hostname = 1;

  // Protocol. Must be either HTTP or HTTPS. If using HTTPS, the SSL
  // information is also required.
  Protocol protocol = 2;

  // Port to use. Leave empty to use the default port based on protocol.
  uint32 port = 3;

  // Name of a Certificate. This certificate should include a private key. See
  // the definition in cert.proto.
  string certificate = 4
      [(common.v) = { ref: "asset.certificate", optional: true }];

  // Whether or not to use SNI. Only applicable when |protocol| is HTTPS. If
  // this value is false, then only one HTTPS site can be bound to a single
  // server.
  bool use_sni = 5;
}

// A single web site.
message IISSite {
  // Name of site.
  string name = 1;

  // Name of server. Should refer to a |Server| entry. A single server can host
  // multiple sites as long as those sites use distinct binding information.
  string iis_server = 2 [(common.v).ref = "asset.iis_server"];

  // Bindings. These are bindings. Specify bindings here. If left unset, will
  // use default bindings (HTTP, port 80, all hostnames).
  IISBindings bindings = 3;

  // Relative path to directory containing the files that will be hosted on
  // this site. The entire subtree will be copied over to the target host.
  //
  // While it is legal, avoid nesting sites and applications within a single
  // directory tree.
  common.FileReference contents = 4;

  // Authentication to use for the site. Can be NONE, NTLM or KERBEROS. If left
  // unset, this will default to NONE. Kerberos can only be used in a domain.
  IISAuthType auth_type = 5;
}

message IISApplication {
  // Name of application.
  string name = 1;

  // Name of the iis.Site that's hosting this application.
  string iis_site = 2 [(common.v).ref = "asset.iis_site"];

  // Relative path to directory containing the files that will be hosted on
  // this application. The entire subtree will be copied over to the target
  // host.
  //
  // While it is legal, avoid nesting sites and applications within a single
  // directory tree.
  common.FileReference contents = 3;

  // Relative path to an optional web.config file that will override any
  // existing web.config in |contents|.
  common.FileReference web_config_file = 4;

  // Inline web.config contents. Any contents here will be merged with the
  // |web_config_file| if there is one, a web config file found in the top
  // level of |contents|.
  string web_config_string = 5;
}

// List of IIS Authentication Types.
enum IISAuthType {
  // Anonymous Authentication
  NONE = 0;

  // NTLM Authentication
  NTLM = 1;

  // Kerberos Authentication with NTLM fallback (standard Negotiable provider)
  KERBEROS = 2;

  // Explicit Kerberos Authentication w/o NTLM fallback (Negotiable 2 provider)
  KERBEROS_NEGOTIABLE2 = 3;
}
