// This is a generated file. Do not modify directly.

// This ProtoBuf source file is based on the REST protocol defintion for the
// service at https://www.googleapis.com/compute/beta/projects/.
//
// Compute Engine API:Creates and runs virtual machines on Google Cloud Platform.
// 
// API Name      : compute (compute:beta)
// Version       : beta
// Revision      : 20171010
// Documentation : https://developers.google.com/compute/docs/reference/latest/

syntax="proto3";
package compute;
option go_package="chromium.googlesource.com/enterprise/cel/go/gcp/compute";


// A specification of the type and number of accelerator cards attached
// to the instance.
message AcceleratorConfig {
  // The number of the guest accelerator cards exposed to this instance.
  int32 acceleratorCount = 1;

  // Full or partial URL of the accelerator type resource to expose to
  // this instance.
  string acceleratorType = 2;
}

// An Accelerator Type resource.
message AcceleratorType {
  // [Output Only] Creation timestamp in RFC3339 text format.
  string creationTimestamp = 1;

  // [Output Only] The deprecation status associated with this accelerator
  // type.
  DeprecationStatus deprecated = 2;

  // [Output Only] An optional textual description of the resource.
  string description = 3;

  // [Output Only] The unique identifier for the resource. This identifier
  // is defined by the server.
  string id = 4;

  // [Output Only] The type of the resource. Always
  // compute#acceleratorType for accelerator types.
  string kind = 5;

  // [Output Only] Maximum accelerator cards allowed per instance.
  int32 maximumCardsPerInstance = 6;

  // [Output Only] Name of the resource.
  string name = 7;

  // [Output Only] Server-defined fully-qualified URL for this resource.
  string selfLink = 8;

  // [Output Only] The name of the zone where the accelerator type
  // resides, such as us-central1-a.
  string zone = 9;
}

message AcceleratorTypeAggregatedList {
  // [Output Only] Unique identifier for the resource; defined by the
  // server.
  string id = 1;

  // A list of AcceleratorTypesScopedList resources.
  map<string, AcceleratorTypesScopedList> items = 2;

  // [Output Only] Type of resource. Always
  // compute#acceleratorTypeAggregatedList for aggregated lists of
  // accelerator types.
  string kind = 3;

  // [Output Only] This token allows you to get the next page of results
  // for list requests. If the number of results is larger than
  // maxResults, use the nextPageToken as a value for the query parameter
  // pageToken in the next list request. Subsequent list requests will
  // have their own nextPageToken to continue paging through the results.
  string nextPageToken = 4;

  // [Output Only] Server-defined URL for this resource.
  string selfLink = 5;

  // [Output Only] Informational warning message.
  // [Output Only] Informational warning message.
  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute
    // Engine returns NO_RESULTS_ON_PAGE if there are no results in the
    // response.
    // Valid values:
    //     CLEANUP_FAILED
    //     DEPRECATED_RESOURCE_USED
    //     DEPRECATED_TYPE_USED
    //     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
    //     EXPERIMENTAL_TYPE_USED
    //     EXTERNAL_API_WARNING
    //     FIELD_VALUE_OVERRIDEN
    //     INJECTED_KERNELS_DEPRECATED
    //     MISSING_TYPE_DEPENDENCY
    //     NEXT_HOP_ADDRESS_NOT_ASSIGNED
    //     NEXT_HOP_CANNOT_IP_FORWARD
    //     NEXT_HOP_INSTANCE_NOT_FOUND
    //     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
    //     NEXT_HOP_NOT_RUNNING
    //     NOT_CRITICAL_ERROR
    //     NO_RESULTS_ON_PAGE
    //     REQUIRED_TOS_AGREEMENT
    //     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
    //     RESOURCE_NOT_DELETED
    //     SCHEMA_VALIDATION_IGNORED
    //     SINGLE_INSTANCE_PROPERTY_TEMPLATE
    //     UNDECLARED_PROPERTIES
    //     UNREACHABLE
    string code = 1;

    // [Output Only] Metadata about this warning in key: value format. For
    // example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the
      // key value might be the zone name. Other examples might be a key
      // indicating a deprecated resource and a suggested replacement, or a
      // warning about invalid network settings (for example, if an instance
      // attempts to perform IP forwarding but is not enabled for IP
      // forwarding).
      string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      string value = 2;
    }
    repeated Data data = 2;

    // [Output Only] A human-readable description of the warning code.
    string message = 3;
  }
  Warning warning = 6;
}

// Contains a list of accelerator types.
message AcceleratorTypeList {
  // [Output Only] Unique identifier for the resource; defined by the
  // server.
  string id = 1;

  // A list of AcceleratorType resources.
  repeated AcceleratorType items = 2;

  // [Output Only] Type of resource. Always compute#acceleratorTypeList
  // for lists of accelerator types.
  string kind = 3;

  // [Output Only] This token allows you to get the next page of results
  // for list requests. If the number of results is larger than
  // maxResults, use the nextPageToken as a value for the query parameter
  // pageToken in the next list request. Subsequent list requests will
  // have their own nextPageToken to continue paging through the results.
  string nextPageToken = 4;

  // [Output Only] Server-defined URL for this resource.
  string selfLink = 5;

  // [Output Only] Informational warning message.
  // [Output Only] Informational warning message.
  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute
    // Engine returns NO_RESULTS_ON_PAGE if there are no results in the
    // response.
    // Valid values:
    //     CLEANUP_FAILED
    //     DEPRECATED_RESOURCE_USED
    //     DEPRECATED_TYPE_USED
    //     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
    //     EXPERIMENTAL_TYPE_USED
    //     EXTERNAL_API_WARNING
    //     FIELD_VALUE_OVERRIDEN
    //     INJECTED_KERNELS_DEPRECATED
    //     MISSING_TYPE_DEPENDENCY
    //     NEXT_HOP_ADDRESS_NOT_ASSIGNED
    //     NEXT_HOP_CANNOT_IP_FORWARD
    //     NEXT_HOP_INSTANCE_NOT_FOUND
    //     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
    //     NEXT_HOP_NOT_RUNNING
    //     NOT_CRITICAL_ERROR
    //     NO_RESULTS_ON_PAGE
    //     REQUIRED_TOS_AGREEMENT
    //     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
    //     RESOURCE_NOT_DELETED
    //     SCHEMA_VALIDATION_IGNORED
    //     SINGLE_INSTANCE_PROPERTY_TEMPLATE
    //     UNDECLARED_PROPERTIES
    //     UNREACHABLE
    string code = 1;

    // [Output Only] Metadata about this warning in key: value format. For
    // example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the
      // key value might be the zone name. Other examples might be a key
      // indicating a deprecated resource and a suggested replacement, or a
      // warning about invalid network settings (for example, if an instance
      // attempts to perform IP forwarding but is not enabled for IP
      // forwarding).
      string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      string value = 2;
    }
    repeated Data data = 2;

    // [Output Only] A human-readable description of the warning code.
    string message = 3;
  }
  Warning warning = 6;
}

message AcceleratorTypesScopedList {
  // [Output Only] List of accelerator types contained in this scope.
  repeated AcceleratorType acceleratorTypes = 1;

  // [Output Only] An informational warning that appears when the
  // accelerator types list is empty.
  // [Output Only] An informational warning that appears when the
  // accelerator types list is empty.
  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute
    // Engine returns NO_RESULTS_ON_PAGE if there are no results in the
    // response.
    // Valid values:
    //     CLEANUP_FAILED
    //     DEPRECATED_RESOURCE_USED
    //     DEPRECATED_TYPE_USED
    //     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
    //     EXPERIMENTAL_TYPE_USED
    //     EXTERNAL_API_WARNING
    //     FIELD_VALUE_OVERRIDEN
    //     INJECTED_KERNELS_DEPRECATED
    //     MISSING_TYPE_DEPENDENCY
    //     NEXT_HOP_ADDRESS_NOT_ASSIGNED
    //     NEXT_HOP_CANNOT_IP_FORWARD
    //     NEXT_HOP_INSTANCE_NOT_FOUND
    //     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
    //     NEXT_HOP_NOT_RUNNING
    //     NOT_CRITICAL_ERROR
    //     NO_RESULTS_ON_PAGE
    //     REQUIRED_TOS_AGREEMENT
    //     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
    //     RESOURCE_NOT_DELETED
    //     SCHEMA_VALIDATION_IGNORED
    //     SINGLE_INSTANCE_PROPERTY_TEMPLATE
    //     UNDECLARED_PROPERTIES
    //     UNREACHABLE
    string code = 1;

    // [Output Only] Metadata about this warning in key: value format. For
    // example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the
      // key value might be the zone name. Other examples might be a key
      // indicating a deprecated resource and a suggested replacement, or a
      // warning about invalid network settings (for example, if an instance
      // attempts to perform IP forwarding but is not enabled for IP
      // forwarding).
      string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      string value = 2;
    }
    repeated Data data = 2;

    // [Output Only] A human-readable description of the warning code.
    string message = 3;
  }
  Warning warning = 2;
}

// An access configuration attached to an instance's network interface.
// Only one access config per instance is supported.
message AccessConfig {
  // [Output Only] Type of the resource. Always compute#accessConfig for
  // access configs.
  string kind = 1;

  // The name of this access configuration. The default and recommended
  // name is External NAT but you can use any arbitrary string you would
  // like. For example, My external IP or Network Access.
  string name = 2;

  // An external IP address associated with this instance. Specify an
  // unused static external IP address available to the project or leave
  // this field undefined to use an IP from a shared ephemeral IP address
  // pool. If you specify a static external IP address, it must live in
  // the same region as the zone of the instance.
  string natIP = 3;

  // The DNS domain name for the public PTR record. This field can only be
  // set when the set_public_ptr field is enabled.
  string publicPtrDomainName = 4;

  // Specifies whether a public DNS ?PTR? record should be created to map
  // the external IP address of the instance to a DNS domain name.
  bool setPublicPtr = 5;

  // The type of configuration. The default and only option is
  // ONE_TO_ONE_NAT.
  // Valid values:
  //     ONE_TO_ONE_NAT
  string type = 6;
}

// A reserved address resource.
message Address {
  // The static IP address represented by this resource.
  string address = 1;

  // The type of address to reserve. If unspecified, defaults to EXTERNAL.
  // Valid values:
  //     EXTERNAL
  //     INTERNAL
  //     UNSPECIFIED_TYPE
  string addressType = 2;

  // [Output Only] Creation timestamp in RFC3339 text format.
  string creationTimestamp = 3;

  // An optional description of this resource. Provide this property when
  // you create the resource.
  string description = 4;

  // [Output Only] The unique identifier for the resource. This identifier
  // is defined by the server.
  string id = 5;

  // The IP Version that will be used by this address. Valid options are
  // IPV4 or IPV6. This can only be specified for a global address.
  // Valid values:
  //     IPV4
  //     IPV6
  //     UNSPECIFIED_VERSION
  string ipVersion = 6;

  // [Output Only] Type of the resource. Always compute#address for
  // addresses.
  string kind = 7;

  // A fingerprint for the labels being applied to this Address, which is
  // essentially a hash of the labels set used for optimistic locking. The
  // fingerprint is initially generated by Compute Engine and changes
  // after every request to modify or update labels. You must always
  // provide an up-to-date fingerprint hash in order to update or change
  // labels.
  // 
  // To see the latest fingerprint, make a get() request to retrieve an
  // Address.
  string labelFingerprint = 8;

  // Labels to apply to this Address resource. These can be later modified
  // by the setLabels method. Each label key/value must comply with
  // RFC1035. Label values may be empty.
  map<string, string> labels = 9;

  // Name of the resource. Provided by the client when the resource is
  // created. The name must be 1-63 characters long, and comply with
  // RFC1035. Specifically, the name must be 1-63 characters long and
  // match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means
  // the first character must be a lowercase letter, and all following
  // characters must be a dash, lowercase letter, or digit, except the
  // last character, which cannot be a dash.
  string name = 10;

  // [Output Only] URL of the region where the regional address resides.
  // This field is not applicable to global addresses.
  string region = 11;

  // [Output Only] Server-defined URL for the resource.
  string selfLink = 12;

  // [Output Only] The status of the address, which can be one of
  // RESERVING, RESERVED, or IN_USE. An address that is RESERVING is
  // currently in the process of being reserved. A RESERVED address is
  // currently reserved and available to use. An IN_USE address is
  // currently being used by another resource and is not available.
  // Valid values:
  //     IN_USE
  //     RESERVED
  string status = 13;

  // For external addresses, this field should not be used.
  // 
  // The URL of the subnetwork in which to reserve the address. If an IP
  // address is specified, it must be within the subnetwork's IP range.
  string subnetwork = 14;

  // [Output Only] The URLs of the resources that are using this address.
  repeated string users = 15;
}

message AddressAggregatedList {
  // [Output Only] Unique identifier for the resource; defined by the
  // server.
  string id = 1;

  // A list of AddressesScopedList resources.
  map<string, AddressesScopedList> items = 2;

  // [Output Only] Type of resource. Always compute#addressAggregatedList
  // for aggregated lists of addresses.
  string kind = 3;

  // [Output Only] This token allows you to get the next page of results
  // for list requests. If the number of results is larger than
  // maxResults, use the nextPageToken as a value for the query parameter
  // pageToken in the next list request. Subsequent list requests will
  // have their own nextPageToken to continue paging through the results.
  string nextPageToken = 4;

  // [Output Only] Server-defined URL for this resource.
  string selfLink = 5;

  // [Output Only] Informational warning message.
  // [Output Only] Informational warning message.
  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute
    // Engine returns NO_RESULTS_ON_PAGE if there are no results in the
    // response.
    // Valid values:
    //     CLEANUP_FAILED
    //     DEPRECATED_RESOURCE_USED
    //     DEPRECATED_TYPE_USED
    //     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
    //     EXPERIMENTAL_TYPE_USED
    //     EXTERNAL_API_WARNING
    //     FIELD_VALUE_OVERRIDEN
    //     INJECTED_KERNELS_DEPRECATED
    //     MISSING_TYPE_DEPENDENCY
    //     NEXT_HOP_ADDRESS_NOT_ASSIGNED
    //     NEXT_HOP_CANNOT_IP_FORWARD
    //     NEXT_HOP_INSTANCE_NOT_FOUND
    //     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
    //     NEXT_HOP_NOT_RUNNING
    //     NOT_CRITICAL_ERROR
    //     NO_RESULTS_ON_PAGE
    //     REQUIRED_TOS_AGREEMENT
    //     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
    //     RESOURCE_NOT_DELETED
    //     SCHEMA_VALIDATION_IGNORED
    //     SINGLE_INSTANCE_PROPERTY_TEMPLATE
    //     UNDECLARED_PROPERTIES
    //     UNREACHABLE
    string code = 1;

    // [Output Only] Metadata about this warning in key: value format. For
    // example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the
      // key value might be the zone name. Other examples might be a key
      // indicating a deprecated resource and a suggested replacement, or a
      // warning about invalid network settings (for example, if an instance
      // attempts to perform IP forwarding but is not enabled for IP
      // forwarding).
      string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      string value = 2;
    }
    repeated Data data = 2;

    // [Output Only] A human-readable description of the warning code.
    string message = 3;
  }
  Warning warning = 6;
}

// Contains a list of addresses.
message AddressList {
  // [Output Only] Unique identifier for the resource; defined by the
  // server.
  string id = 1;

  // A list of Address resources.
  repeated Address items = 2;

  // [Output Only] Type of resource. Always compute#addressList for lists
  // of addresses.
  string kind = 3;

  // [Output Only] This token allows you to get the next page of results
  // for list requests. If the number of results is larger than
  // maxResults, use the nextPageToken as a value for the query parameter
  // pageToken in the next list request. Subsequent list requests will
  // have their own nextPageToken to continue paging through the results.
  string nextPageToken = 4;

  // [Output Only] Server-defined URL for this resource.
  string selfLink = 5;

  // [Output Only] Informational warning message.
  // [Output Only] Informational warning message.
  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute
    // Engine returns NO_RESULTS_ON_PAGE if there are no results in the
    // response.
    // Valid values:
    //     CLEANUP_FAILED
    //     DEPRECATED_RESOURCE_USED
    //     DEPRECATED_TYPE_USED
    //     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
    //     EXPERIMENTAL_TYPE_USED
    //     EXTERNAL_API_WARNING
    //     FIELD_VALUE_OVERRIDEN
    //     INJECTED_KERNELS_DEPRECATED
    //     MISSING_TYPE_DEPENDENCY
    //     NEXT_HOP_ADDRESS_NOT_ASSIGNED
    //     NEXT_HOP_CANNOT_IP_FORWARD
    //     NEXT_HOP_INSTANCE_NOT_FOUND
    //     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
    //     NEXT_HOP_NOT_RUNNING
    //     NOT_CRITICAL_ERROR
    //     NO_RESULTS_ON_PAGE
    //     REQUIRED_TOS_AGREEMENT
    //     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
    //     RESOURCE_NOT_DELETED
    //     SCHEMA_VALIDATION_IGNORED
    //     SINGLE_INSTANCE_PROPERTY_TEMPLATE
    //     UNDECLARED_PROPERTIES
    //     UNREACHABLE
    string code = 1;

    // [Output Only] Metadata about this warning in key: value format. For
    // example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the
      // key value might be the zone name. Other examples might be a key
      // indicating a deprecated resource and a suggested replacement, or a
      // warning about invalid network settings (for example, if an instance
      // attempts to perform IP forwarding but is not enabled for IP
      // forwarding).
      string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      string value = 2;
    }
    repeated Data data = 2;

    // [Output Only] A human-readable description of the warning code.
    string message = 3;
  }
  Warning warning = 6;
}

message AddressesScopedList {
  // [Output Only] List of addresses contained in this scope.
  repeated Address addresses = 1;

  // [Output Only] Informational warning which replaces the list of
  // addresses when the list is empty.
  // [Output Only] Informational warning which replaces the list of
  // addresses when the list is empty.
  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute
    // Engine returns NO_RESULTS_ON_PAGE if there are no results in the
    // response.
    // Valid values:
    //     CLEANUP_FAILED
    //     DEPRECATED_RESOURCE_USED
    //     DEPRECATED_TYPE_USED
    //     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
    //     EXPERIMENTAL_TYPE_USED
    //     EXTERNAL_API_WARNING
    //     FIELD_VALUE_OVERRIDEN
    //     INJECTED_KERNELS_DEPRECATED
    //     MISSING_TYPE_DEPENDENCY
    //     NEXT_HOP_ADDRESS_NOT_ASSIGNED
    //     NEXT_HOP_CANNOT_IP_FORWARD
    //     NEXT_HOP_INSTANCE_NOT_FOUND
    //     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
    //     NEXT_HOP_NOT_RUNNING
    //     NOT_CRITICAL_ERROR
    //     NO_RESULTS_ON_PAGE
    //     REQUIRED_TOS_AGREEMENT
    //     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
    //     RESOURCE_NOT_DELETED
    //     SCHEMA_VALIDATION_IGNORED
    //     SINGLE_INSTANCE_PROPERTY_TEMPLATE
    //     UNDECLARED_PROPERTIES
    //     UNREACHABLE
    string code = 1;

    // [Output Only] Metadata about this warning in key: value format. For
    // example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the
      // key value might be the zone name. Other examples might be a key
      // indicating a deprecated resource and a suggested replacement, or a
      // warning about invalid network settings (for example, if an instance
      // attempts to perform IP forwarding but is not enabled for IP
      // forwarding).
      string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      string value = 2;
    }
    repeated Data data = 2;

    // [Output Only] A human-readable description of the warning code.
    string message = 3;
  }
  Warning warning = 2;
}

// An alias IP range attached to an instance's network interface.
message AliasIpRange {
  // The IP CIDR range represented by this alias IP range. This IP CIDR
  // range must belong to the specified subnetwork and cannot contain IP
  // addresses reserved by system or used by other network interfaces.
  // This range may be a single IP address (e.g. 10.2.3.4), a netmask
  // (e.g. /24) or a CIDR format string (e.g. 10.1.2.0/24).
  string ipCidrRange = 1;

  // Optional subnetwork secondary range name specifying the secondary
  // range from which to allocate the IP CIDR range for this alias IP
  // range. If left unspecified, the primary range of the subnetwork will
  // be used.
  string subnetworkRangeName = 2;
}

// An instance-attached disk resource.
message AttachedDisk {
  // Specifies whether the disk will be auto-deleted when the instance is
  // deleted (but not when the disk is detached from the instance).
  bool autoDelete = 1;

  // Indicates that this is a boot disk. The virtual machine will use the
  // first partition of the disk for its root filesystem.
  bool boot = 2;

  // Specifies a unique device name of your choice that is reflected into
  // the /dev/disk/by-id/google-* tree of a Linux operating system running
  // within the instance. This name can be used to reference the device
  // for mounting, resizing, and so on, from within the instance.
  // 
  // If not specified, the server chooses a default device name to apply
  // to this disk, in the form persistent-disks-x, where x is a number
  // assigned by Google Compute Engine. This field is only applicable for
  // persistent disks.
  string deviceName = 3;

  // Encrypts or decrypts a disk using a customer-supplied encryption key.
  // 
  // If you are creating a new disk, this field encrypts the new disk
  // using an encryption key that you provide. If you are attaching an
  // existing disk that is already encrypted, this field decrypts the disk
  // using the customer-supplied encryption key.
  // 
  // If you encrypt a disk using a customer-supplied key, you must provide
  // the same key again when you attempt to use this resource at a later
  // time. For example, you must provide the key when you create a
  // snapshot or an image from the disk or when you attach the disk to a
  // virtual machine instance.
  // 
  // If you do not provide an encryption key, then the disk will be
  // encrypted using an automatically generated key and you do not need to
  // provide a key to use the disk later.
  // 
  // Instance templates do not store customer-supplied encryption keys, so
  // you cannot use your own keys to encrypt disks in a managed instance
  // group.
  CustomerEncryptionKey diskEncryptionKey = 4;

  // [Output Only] A zero-based index to this disk, where 0 is reserved
  // for the boot disk. If you have many disks attached to an instance,
  // each disk would have a unique index number.
  int32 index = 5;

  // [Input Only] Specifies the parameters for a new disk that will be
  // created alongside the new instance. Use initialization parameters to
  // create boot disks or local SSDs attached to the new instance.
  // 
  // This property is mutually exclusive with the source property; you can
  // only define one or the other, but not both.
  AttachedDiskInitializeParams initializeParams = 6;

  // Specifies the disk interface to use for attaching this disk, which is
  // either SCSI or NVME. The default is SCSI. Persistent disks must
  // always use SCSI and the request will fail if you attempt to attach a
  // persistent disk in any other format than SCSI. Local SSDs can use
  // either NVME or SCSI. For performance characteristics of SCSI over
  // NVMe, see Local SSD performance.
  // Valid values:
  //     NVME
  //     SCSI
  string interface = 7;

  // [Output Only] Type of the resource. Always compute#attachedDisk for
  // attached disks.
  string kind = 8;

  // [Output Only] Any valid publicly visible licenses.
  repeated string licenses = 9;

  // The mode in which to attach this disk, either READ_WRITE or
  // READ_ONLY. If not specified, the default is to attach the disk in
  // READ_WRITE mode.
  // Valid values:
  //     READ_ONLY
  //     READ_WRITE
  string mode = 10;

  // Specifies a valid partial or full URL to an existing Persistent Disk
  // resource. When creating a new instance, one of
  // initializeParams.sourceImage or disks.source is required except for
  // local SSD.
  // 
  // If desired, you can also attach existing non-root persistent disks
  // using this property. This field is only applicable for persistent
  // disks.
  // 
  // Note that for InstanceTemplate, specify the disk name, not the URL
  // for the disk.
  string source = 11;

  // Specifies the type of the disk, either SCRATCH or PERSISTENT. If not
  // specified, the default is PERSISTENT.
  // Valid values:
  //     PERSISTENT
  //     SCRATCH
  string type = 12;
}

// [Input Only] Specifies the parameters for a new disk that will be
// created alongside the new instance. Use initialization parameters to
// create boot disks or local SSDs attached to the new instance.
// 
// This property is mutually exclusive with the source property; you can
// only define one or the other, but not both.
message AttachedDiskInitializeParams {
  // Specifies the disk name. If not specified, the default is to use the
  // name of the instance.
  string diskName = 1;

  // Specifies the size of the disk in base-2 GB.
  string diskSizeGb = 2;

  // [Deprecated] Storage type of the disk.
  // Valid values:
  //     HDD
  //     SSD
  string diskStorageType = 3;

  // Specifies the disk type to use to create the instance. If not
  // specified, the default is pd-standard, specified using the full URL.
  // For example:
  // 
  // https://www.googleapis.com/compute/v1/projects/project/zones/zone/diskTypes/pd-standard
  // 
  // Other values include pd-ssd and local-ssd. If you define this field,
  // you can provide either the full or partial URL. For example, the
  // following are valid values:
  // -
  // https://www.googleapis.com/compute/v1/projects/project/zones/zone/diskTypes/diskType
  // - projects/project/zones/zone/diskTypes/diskType
  // - zones/zone/diskTypes/diskType  Note that for InstanceTemplate, this
  // is the name of the disk type, not URL.
  string diskType = 4;

  // The source image to create this disk. When creating a new instance,
  // one of initializeParams.sourceImage or disks.source is required
  // except for local SSD.
  // 
  // To create a disk with one of the public operating system images,
  // specify the image by its family name. For example, specify
  // family/debian-8 to use the latest Debian 8 image:
  // 
  // projects/debian-cloud/global/images/family/debian-8
  // 
  // Alternatively, use a specific version of a public operating system
  // image:
  // 
  // projects/debian-cloud/global/images/debian-8-jessie-vYYYYMMDD
  // 
  // To create a disk with a private image that you created, specify the
  // image name in the following format:
  // 
  // global/images/my-private-image
  // 
  // You can also specify a private image by its image family, which
  // returns the latest version of the image in that family. Replace the
  // image name with family/family-name:
  // 
  // global/images/family/my-private-family
  // 
  // If the source image is deleted later, this field will not be set.
  string sourceImage = 5;

  // The customer-supplied encryption key of the source image. Required if
  // the source image is protected by a customer-supplied encryption key.
  // 
  // Instance templates do not store customer-supplied encryption keys, so
  // you cannot create disks for instances in a managed instance group if
  // the source images are encrypted with your own keys.
  CustomerEncryptionKey sourceImageEncryptionKey = 6;
}

// Specifies the audit configuration for a service. The configuration
// determines which permission types are logged, and what identities, if
// any, are exempted from logging. An AuditConfig must have one or more
// AuditLogConfigs.
// 
// If there are AuditConfigs for both `allServices` and a specific
// service, the union of the two AuditConfigs is used for that service:
// the log_types specified in each AuditConfig are enabled, and the
// exempted_members in each AuditConfig are exempted.
// 
// Example Policy with multiple AuditConfigs:
// 
// { "audit_configs": [ { "service": "allServices" "audit_log_configs":
// [ { "log_type": "DATA_READ", "exempted_members": [
// "user:foo@gmail.com" ] }, { "log_type": "DATA_WRITE", }, {
// "log_type": "ADMIN_READ", } ] }, { "service":
// "fooservice.googleapis.com" "audit_log_configs": [ { "log_type":
// "DATA_READ", }, { "log_type": "DATA_WRITE", "exempted_members": [
// "user:bar@gmail.com" ] } ] } ] }
// 
// For fooservice, this policy enables DATA_READ, DATA_WRITE and
// ADMIN_READ logging. It also exempts foo@gmail.com from DATA_READ
// logging, and bar@gmail.com from DATA_WRITE logging.
message AuditConfig {
  // The configuration for logging of each type of permission.
  repeated AuditLogConfig auditLogConfigs = 1;

  repeated string exemptedMembers = 2;

  // Specifies a service that will be enabled for audit logging. For
  // example, `storage.googleapis.com`, `cloudsql.googleapis.com`.
  // `allServices` is a special value that covers all services.
  string service = 3;
}

// Provides the configuration for logging a type of permissions.
// Example:
// 
// { "audit_log_configs": [ { "log_type": "DATA_READ",
// "exempted_members": [ "user:foo@gmail.com" ] }, { "log_type":
// "DATA_WRITE", } ] }
// 
// This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting
// foo@gmail.com from DATA_READ logging.
message AuditLogConfig {
  // Specifies the identities that do not cause logging for this type of
  // permission. Follows the same format of [Binding.members][].
  repeated string exemptedMembers = 1;

  // The log type that this config enables.
  // Valid values:
  //     ADMIN_READ
  //     DATA_READ
  //     DATA_WRITE
  //     LOG_TYPE_UNSPECIFIED
  string logType = 2;
}

// Authorization-related information used by Cloud Audit Logging.
message AuthorizationLoggingOptions {
  // The type of the permission that was checked.
  // Valid values:
  //     ADMIN_READ
  //     ADMIN_WRITE
  //     DATA_READ
  //     DATA_WRITE
  //     PERMISSION_TYPE_UNSPECIFIED
  string permissionType = 1;
}

// Represents an Autoscaler resource. Autoscalers allow you to
// automatically scale virtual machine instances in managed instance
// groups according to an autoscaling policy that you define. For more
// information, read Autoscaling Groups of Instances.
message Autoscaler {
  // The configuration parameters for the autoscaling algorithm. You can
  // define one or more of the policies for an autoscaler: cpuUtilization,
  // customMetricUtilizations, and loadBalancingUtilization.
  // 
  // If none of these are specified, the default will be to autoscale
  // based on cpuUtilization to 0.6 or 60%.
  AutoscalingPolicy autoscalingPolicy = 1;

  // [Output Only] Creation timestamp in RFC3339 text format.
  string creationTimestamp = 2;

  // An optional description of this resource. Provide this property when
  // you create the resource.
  string description = 3;

  // [Output Only] The unique identifier for the resource. This identifier
  // is defined by the server.
  string id = 4;

  // [Output Only] Type of the resource. Always compute#autoscaler for
  // autoscalers.
  string kind = 5;

  // Name of the resource. Provided by the client when the resource is
  // created. The name must be 1-63 characters long, and comply with
  // RFC1035. Specifically, the name must be 1-63 characters long and
  // match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means
  // the first character must be a lowercase letter, and all following
  // characters must be a dash, lowercase letter, or digit, except the
  // last character, which cannot be a dash.
  string name = 6;

  // [Output Only] URL of the region where the instance group resides (for
  // autoscalers living in regional scope).
  string region = 7;

  // [Output Only] Server-defined URL for the resource.
  string selfLink = 8;

  // [Output Only] The status of the autoscaler configuration.
  // Valid values:
  //     ACTIVE
  //     DELETING
  //     ERROR
  //     PENDING
  string status = 9;

  // [Output Only] Human-readable details about the current state of the
  // autoscaler. Read the documentation for Commonly returned status
  // messages for examples of status messages you might encounter.
  repeated AutoscalerStatusDetails statusDetails = 10;

  // URL of the managed instance group that this autoscaler will scale.
  string target = 11;

  // [Output Only] URL of the zone where the instance group resides (for
  // autoscalers living in zonal scope).
  string zone = 12;
}

message AutoscalerAggregatedList {
  // [Output Only] Unique identifier for the resource; defined by the
  // server.
  string id = 1;

  // A list of AutoscalersScopedList resources.
  map<string, AutoscalersScopedList> items = 2;

  // [Output Only] Type of resource. Always
  // compute#autoscalerAggregatedList for aggregated lists of autoscalers.
  string kind = 3;

  // [Output Only] This token allows you to get the next page of results
  // for list requests. If the number of results is larger than
  // maxResults, use the nextPageToken as a value for the query parameter
  // pageToken in the next list request. Subsequent list requests will
  // have their own nextPageToken to continue paging through the results.
  string nextPageToken = 4;

  // [Output Only] Server-defined URL for this resource.
  string selfLink = 5;

  // [Output Only] Informational warning message.
  // [Output Only] Informational warning message.
  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute
    // Engine returns NO_RESULTS_ON_PAGE if there are no results in the
    // response.
    // Valid values:
    //     CLEANUP_FAILED
    //     DEPRECATED_RESOURCE_USED
    //     DEPRECATED_TYPE_USED
    //     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
    //     EXPERIMENTAL_TYPE_USED
    //     EXTERNAL_API_WARNING
    //     FIELD_VALUE_OVERRIDEN
    //     INJECTED_KERNELS_DEPRECATED
    //     MISSING_TYPE_DEPENDENCY
    //     NEXT_HOP_ADDRESS_NOT_ASSIGNED
    //     NEXT_HOP_CANNOT_IP_FORWARD
    //     NEXT_HOP_INSTANCE_NOT_FOUND
    //     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
    //     NEXT_HOP_NOT_RUNNING
    //     NOT_CRITICAL_ERROR
    //     NO_RESULTS_ON_PAGE
    //     REQUIRED_TOS_AGREEMENT
    //     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
    //     RESOURCE_NOT_DELETED
    //     SCHEMA_VALIDATION_IGNORED
    //     SINGLE_INSTANCE_PROPERTY_TEMPLATE
    //     UNDECLARED_PROPERTIES
    //     UNREACHABLE
    string code = 1;

    // [Output Only] Metadata about this warning in key: value format. For
    // example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the
      // key value might be the zone name. Other examples might be a key
      // indicating a deprecated resource and a suggested replacement, or a
      // warning about invalid network settings (for example, if an instance
      // attempts to perform IP forwarding but is not enabled for IP
      // forwarding).
      string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      string value = 2;
    }
    repeated Data data = 2;

    // [Output Only] A human-readable description of the warning code.
    string message = 3;
  }
  Warning warning = 6;
}

// Contains a list of Autoscaler resources.
message AutoscalerList {
  // [Output Only] Unique identifier for the resource; defined by the
  // server.
  string id = 1;

  // A list of Autoscaler resources.
  repeated Autoscaler items = 2;

  // [Output Only] Type of resource. Always compute#autoscalerList for
  // lists of autoscalers.
  string kind = 3;

  // [Output Only] This token allows you to get the next page of results
  // for list requests. If the number of results is larger than
  // maxResults, use the nextPageToken as a value for the query parameter
  // pageToken in the next list request. Subsequent list requests will
  // have their own nextPageToken to continue paging through the results.
  string nextPageToken = 4;

  // [Output Only] Server-defined URL for this resource.
  string selfLink = 5;

  // [Output Only] Informational warning message.
  // [Output Only] Informational warning message.
  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute
    // Engine returns NO_RESULTS_ON_PAGE if there are no results in the
    // response.
    // Valid values:
    //     CLEANUP_FAILED
    //     DEPRECATED_RESOURCE_USED
    //     DEPRECATED_TYPE_USED
    //     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
    //     EXPERIMENTAL_TYPE_USED
    //     EXTERNAL_API_WARNING
    //     FIELD_VALUE_OVERRIDEN
    //     INJECTED_KERNELS_DEPRECATED
    //     MISSING_TYPE_DEPENDENCY
    //     NEXT_HOP_ADDRESS_NOT_ASSIGNED
    //     NEXT_HOP_CANNOT_IP_FORWARD
    //     NEXT_HOP_INSTANCE_NOT_FOUND
    //     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
    //     NEXT_HOP_NOT_RUNNING
    //     NOT_CRITICAL_ERROR
    //     NO_RESULTS_ON_PAGE
    //     REQUIRED_TOS_AGREEMENT
    //     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
    //     RESOURCE_NOT_DELETED
    //     SCHEMA_VALIDATION_IGNORED
    //     SINGLE_INSTANCE_PROPERTY_TEMPLATE
    //     UNDECLARED_PROPERTIES
    //     UNREACHABLE
    string code = 1;

    // [Output Only] Metadata about this warning in key: value format. For
    // example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the
      // key value might be the zone name. Other examples might be a key
      // indicating a deprecated resource and a suggested replacement, or a
      // warning about invalid network settings (for example, if an instance
      // attempts to perform IP forwarding but is not enabled for IP
      // forwarding).
      string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      string value = 2;
    }
    repeated Data data = 2;

    // [Output Only] A human-readable description of the warning code.
    string message = 3;
  }
  Warning warning = 6;
}

message AutoscalerStatusDetails {
  // The status message.
  string message = 1;

  // The type of error returned.
  // Valid values:
  //     ALL_INSTANCES_UNHEALTHY
  //     BACKEND_SERVICE_DOES_NOT_EXIST
  //     CAPPED_AT_MAX_NUM_REPLICAS
  //     CUSTOM_METRIC_DATA_POINTS_TOO_SPARSE
  //     CUSTOM_METRIC_INVALID
  //     MIN_EQUALS_MAX
  //     MISSING_CUSTOM_METRIC_DATA_POINTS
  //     MISSING_LOAD_BALANCING_DATA_POINTS
  //     MORE_THAN_ONE_BACKEND_SERVICE
  //     NOT_ENOUGH_QUOTA_AVAILABLE
  //     REGION_RESOURCE_STOCKOUT
  //     SCALING_TARGET_DOES_NOT_EXIST
  //     UNKNOWN
  //     UNSUPPORTED_MAX_RATE_LOAD_BALANCING_CONFIGURATION
  //     ZONE_RESOURCE_STOCKOUT
  string type = 2;
}

message AutoscalersScopedList {
  // [Output Only] List of autoscalers contained in this scope.
  repeated Autoscaler autoscalers = 1;

  // [Output Only] Informational warning which replaces the list of
  // autoscalers when the list is empty.
  // [Output Only] Informational warning which replaces the list of
  // autoscalers when the list is empty.
  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute
    // Engine returns NO_RESULTS_ON_PAGE if there are no results in the
    // response.
    // Valid values:
    //     CLEANUP_FAILED
    //     DEPRECATED_RESOURCE_USED
    //     DEPRECATED_TYPE_USED
    //     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
    //     EXPERIMENTAL_TYPE_USED
    //     EXTERNAL_API_WARNING
    //     FIELD_VALUE_OVERRIDEN
    //     INJECTED_KERNELS_DEPRECATED
    //     MISSING_TYPE_DEPENDENCY
    //     NEXT_HOP_ADDRESS_NOT_ASSIGNED
    //     NEXT_HOP_CANNOT_IP_FORWARD
    //     NEXT_HOP_INSTANCE_NOT_FOUND
    //     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
    //     NEXT_HOP_NOT_RUNNING
    //     NOT_CRITICAL_ERROR
    //     NO_RESULTS_ON_PAGE
    //     REQUIRED_TOS_AGREEMENT
    //     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
    //     RESOURCE_NOT_DELETED
    //     SCHEMA_VALIDATION_IGNORED
    //     SINGLE_INSTANCE_PROPERTY_TEMPLATE
    //     UNDECLARED_PROPERTIES
    //     UNREACHABLE
    string code = 1;

    // [Output Only] Metadata about this warning in key: value format. For
    // example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the
      // key value might be the zone name. Other examples might be a key
      // indicating a deprecated resource and a suggested replacement, or a
      // warning about invalid network settings (for example, if an instance
      // attempts to perform IP forwarding but is not enabled for IP
      // forwarding).
      string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      string value = 2;
    }
    repeated Data data = 2;

    // [Output Only] A human-readable description of the warning code.
    string message = 3;
  }
  Warning warning = 2;
}

// Cloud Autoscaler policy.
message AutoscalingPolicy {
  // The number of seconds that the autoscaler should wait before it
  // starts collecting information from a new instance. This prevents the
  // autoscaler from collecting information when the instance is
  // initializing, during which the collected usage would not be reliable.
  // The default time autoscaler waits is 60 seconds.
  // 
  // Virtual machine initialization times might vary because of numerous
  // factors. We recommend that you test how long an instance may take to
  // initialize. To do this, create an instance and time the startup
  // process.
  int32 coolDownPeriodSec = 1;

  // Defines the CPU utilization policy that allows the autoscaler to
  // scale based on the average CPU utilization of a managed instance
  // group.
  AutoscalingPolicyCpuUtilization cpuUtilization = 2;

  // Configuration parameters of autoscaling based on a custom metric.
  repeated AutoscalingPolicyCustomMetricUtilization customMetricUtilizations = 3;

  // Configuration parameters of autoscaling based on load balancer.
  AutoscalingPolicyLoadBalancingUtilization loadBalancingUtilization = 4;

  // The maximum number of instances that the autoscaler can scale up to.
  // This is required when creating or updating an autoscaler. The maximum
  // number of replicas should not be lower than minimal number of
  // replicas.
  int32 maxNumReplicas = 5;

  // The minimum number of replicas that the autoscaler can scale down to.
  // This cannot be less than 0. If not provided, autoscaler will choose a
  // default value depending on maximum number of instances allowed.
  int32 minNumReplicas = 6;
}

// CPU utilization policy.
message AutoscalingPolicyCpuUtilization {
  // The target CPU utilization that the autoscaler should maintain. Must
  // be a float value in the range (0, 1]. If not specified, the default
  // is 0.6.
  // 
  // If the CPU level is below the target utilization, the autoscaler
  // scales down the number of instances until it reaches the minimum
  // number of instances you specified or until the average CPU of your
  // instances reaches the target utilization.
  // 
  // If the average CPU is above the target utilization, the autoscaler
  // scales up until it reaches the maximum number of instances you
  // specified or until the average utilization reaches the target
  // utilization.
  double utilizationTarget = 1;
}

// Custom utilization metric policy.
message AutoscalingPolicyCustomMetricUtilization {
  // A filter string, compatible with a Stackdriver Monitoring filter
  // string for TimeSeries.list API call. This filter is used to select a
  // specific TimeSeries for the purpose of autoscaling and to determine
  // whether the metric is exporting per-instance or per-group data.
  // 
  // For the filter to be valid for autoscaling purposes, the following
  // rules apply:
  // - You can only use the AND operator for joining selectors.
  // - You can only use direct equality comparison operator (=) without
  // any functions for each selector.
  // - You can specify the metric in both the filter string and in the
  // metric field. However, if specified in both places, the metric must
  // be identical.
  // - The monitored resource type determines what kind of values are
  // expected for the metric. If it is a gce_instance, the autoscaler
  // expects the metric to include a separate TimeSeries for each instance
  // in a group. In such a case, you cannot filter on resource labels.
  // If the resource type is any other value, the autoscaler expects this
  // metric to contain values that apply to the entire autoscaled instance
  // group and resource label filtering can be performed to point
  // autoscaler at the correct TimeSeries to scale upon. This is called a
  // per-group metric for the purpose of autoscaling.
  // 
  // If not specified, the type defaults to gce_instance.
  // 
  // You should provide a filter that is selective enough to pick just one
  // TimeSeries for the autoscaled group or for each of the instances (if
  // you are using gce_instance resource type). If multiple TimeSeries are
  // returned upon the query execution, the autoscaler will sum their
  // respective values to obtain its scaling value.
  string filter = 1;

  // The identifier (type) of the Stackdriver Monitoring metric. The
  // metric cannot have negative values.
  // 
  // The metric must have a value type of INT64 or DOUBLE.
  string metric = 2;

  // If scaling is based on a per-group metric value that represents the
  // total amount of work to be done or resource usage, set this value to
  // an amount assigned for a single instance of the scaled group.
  // Autoscaler will keep the number of instances proportional to the
  // value of this metric, the metric itself should not change value due
  // to group resizing.
  // 
  // A good metric to use with the target is for example
  // pubsub.googleapis.com/subscription/num_undelivered_messages or a
  // custom metric exporting the total number of requests coming to your
  // instances.
  // 
  // A bad example would be a metric exporting an average or median
  // latency, since this value can't include a chunk assignable to a
  // single instance, it could be better used with utilization_target
  // instead.
  double singleInstanceAssignment = 3;

  // The target value of the metric that autoscaler should maintain. This
  // must be a positive value. A utilization metric scales number of
  // virtual machines handling requests to increase or decrease
  // proportionally to the metric.
  // 
  // For example, a good metric to use as a utilization_target is
  // compute.googleapis.com/instance/network/received_bytes_count. The
  // autoscaler will work to keep this value constant for each of the
  // instances.
  double utilizationTarget = 4;

  // Defines how target utilization value is expressed for a Stackdriver
  // Monitoring metric. Either GAUGE, DELTA_PER_SECOND, or
  // DELTA_PER_MINUTE. If not specified, the default is GAUGE.
  // Valid values:
  //     DELTA_PER_MINUTE
  //     DELTA_PER_SECOND
  //     GAUGE
  string utilizationTargetType = 5;
}

// Configuration parameters of autoscaling based on load balancing.
message AutoscalingPolicyLoadBalancingUtilization {
  // Fraction of backend capacity utilization (set in HTTP(s) load
  // balancing configuration) that autoscaler should maintain. Must be a
  // positive float value. If not defined, the default is 0.8.
  double utilizationTarget = 1;
}

// Message containing information of one individual backend.
message Backend {
  // Specifies the balancing mode for this backend. For global HTTP(S) or
  // TCP/SSL load balancing, the default is UTILIZATION. Valid values are
  // UTILIZATION, RATE (for HTTP(S)) and CONNECTION (for TCP/SSL).
  // 
  // For Internal Load Balancing, the default and only supported mode is
  // CONNECTION.
  // Valid values:
  //     CONNECTION
  //     RATE
  //     UTILIZATION
  string balancingMode = 1;

  // A multiplier applied to the group's maximum servicing capacity (based
  // on UTILIZATION, RATE or CONNECTION). Default value is 1, which means
  // the group will serve up to 100% of its configured capacity (depending
  // on balancingMode). A setting of 0 means the group is completely
  // drained, offering 0% of its available Capacity. Valid range is
  // [0.0,1.0].
  // 
  // This cannot be used for internal load balancing.
  float capacityScaler = 2;

  // An optional description of this resource. Provide this property when
  // you create the resource.
  string description = 3;

  // The fully-qualified URL of a Instance Group resource. This instance
  // group defines the list of instances that serve traffic. Member
  // virtual machine instances from each instance group must live in the
  // same zone as the instance group itself. No two backends in a backend
  // service are allowed to use same Instance Group resource.
  // 
  // Note that you must specify an Instance Group resource using the
  // fully-qualified URL, rather than a partial URL.
  // 
  // When the BackendService has load balancing scheme INTERNAL, the
  // instance group must be within the same region as the BackendService.
  string group = 4;

  // The max number of simultaneous connections for the group. Can be used
  // with either CONNECTION or UTILIZATION balancing modes. For CONNECTION
  // mode, either maxConnections or maxConnectionsPerInstance must be set.
  // 
  // This cannot be used for internal load balancing.
  int32 maxConnections = 5;

  // The max number of simultaneous connections that a single backend
  // instance can handle. This is used to calculate the capacity of the
  // group. Can be used in either CONNECTION or UTILIZATION balancing
  // modes. For CONNECTION mode, either maxConnections or
  // maxConnectionsPerInstance must be set.
  // 
  // This cannot be used for internal load balancing.
  int32 maxConnectionsPerInstance = 6;

  // The max requests per second (RPS) of the group. Can be used with
  // either RATE or UTILIZATION balancing modes, but required if RATE
  // mode. For RATE mode, either maxRate or maxRatePerInstance must be
  // set.
  // 
  // This cannot be used for internal load balancing.
  int32 maxRate = 7;

  // The max requests per second (RPS) that a single backend instance can
  // handle. This is used to calculate the capacity of the group. Can be
  // used in either balancing mode. For RATE mode, either maxRate or
  // maxRatePerInstance must be set.
  // 
  // This cannot be used for internal load balancing.
  float maxRatePerInstance = 8;

  // Used when balancingMode is UTILIZATION. This ratio defines the CPU
  // utilization target for the group. The default is 0.8. Valid range is
  // [0.0, 1.0].
  // 
  // This cannot be used for internal load balancing.
  float maxUtilization = 9;
}

// A BackendBucket resource. This resource defines a Cloud Storage
// bucket.
message BackendBucket {
  // Cloud Storage bucket name.
  string bucketName = 1;

  // [Output Only] Creation timestamp in RFC3339 text format.
  string creationTimestamp = 2;

  // An optional textual description of the resource; provided by the
  // client when the resource is created.
  string description = 3;

  // If true, enable Cloud CDN for this BackendBucket.
  bool enableCdn = 4;

  // [Output Only] Unique identifier for the resource; defined by the
  // server.
  string id = 5;

  // Type of the resource.
  string kind = 6;

  // Name of the resource. Provided by the client when the resource is
  // created. The name must be 1-63 characters long, and comply with
  // RFC1035. Specifically, the name must be 1-63 characters long and
  // match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means
  // the first character must be a lowercase letter, and all following
  // characters must be a dash, lowercase letter, or digit, except the
  // last character, which cannot be a dash.
  string name = 7;

  // [Output Only] Server-defined URL for the resource.
  string selfLink = 8;
}

// Contains a list of BackendBucket resources.
message BackendBucketList {
  // [Output Only] Unique identifier for the resource; defined by the
  // server.
  string id = 1;

  // A list of BackendBucket resources.
  repeated BackendBucket items = 2;

  // Type of resource.
  string kind = 3;

  // [Output Only] This token allows you to get the next page of results
  // for list requests. If the number of results is larger than
  // maxResults, use the nextPageToken as a value for the query parameter
  // pageToken in the next list request. Subsequent list requests will
  // have their own nextPageToken to continue paging through the results.
  string nextPageToken = 4;

  // [Output Only] Server-defined URL for this resource.
  string selfLink = 5;

  // [Output Only] Informational warning message.
  // [Output Only] Informational warning message.
  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute
    // Engine returns NO_RESULTS_ON_PAGE if there are no results in the
    // response.
    // Valid values:
    //     CLEANUP_FAILED
    //     DEPRECATED_RESOURCE_USED
    //     DEPRECATED_TYPE_USED
    //     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
    //     EXPERIMENTAL_TYPE_USED
    //     EXTERNAL_API_WARNING
    //     FIELD_VALUE_OVERRIDEN
    //     INJECTED_KERNELS_DEPRECATED
    //     MISSING_TYPE_DEPENDENCY
    //     NEXT_HOP_ADDRESS_NOT_ASSIGNED
    //     NEXT_HOP_CANNOT_IP_FORWARD
    //     NEXT_HOP_INSTANCE_NOT_FOUND
    //     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
    //     NEXT_HOP_NOT_RUNNING
    //     NOT_CRITICAL_ERROR
    //     NO_RESULTS_ON_PAGE
    //     REQUIRED_TOS_AGREEMENT
    //     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
    //     RESOURCE_NOT_DELETED
    //     SCHEMA_VALIDATION_IGNORED
    //     SINGLE_INSTANCE_PROPERTY_TEMPLATE
    //     UNDECLARED_PROPERTIES
    //     UNREACHABLE
    string code = 1;

    // [Output Only] Metadata about this warning in key: value format. For
    // example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the
      // key value might be the zone name. Other examples might be a key
      // indicating a deprecated resource and a suggested replacement, or a
      // warning about invalid network settings (for example, if an instance
      // attempts to perform IP forwarding but is not enabled for IP
      // forwarding).
      string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      string value = 2;
    }
    repeated Data data = 2;

    // [Output Only] A human-readable description of the warning code.
    string message = 3;
  }
  Warning warning = 6;
}

// A BackendService resource. This resource defines a group of backend
// virtual machines and their serving capacity.
message BackendService {
  // Lifetime of cookies in seconds if session_affinity is
  // GENERATED_COOKIE. If set to 0, the cookie is non-persistent and lasts
  // only until the end of the browser session (or equivalent). The
  // maximum allowed value for TTL is one day.
  // 
  // When the load balancing scheme is INTERNAL, this field is not used.
  int32 affinityCookieTtlSec = 1;

  // The list of backends that serve this BackendService.
  repeated Backend backends = 2;

  // Cloud CDN configuration for this BackendService.
  BackendServiceCdnPolicy cdnPolicy = 3;

  ConnectionDraining connectionDraining = 4;

  // [Output Only] Creation timestamp in RFC3339 text format.
  string creationTimestamp = 5;

  // An optional description of this resource. Provide this property when
  // you create the resource.
  string description = 6;

  // If true, enable Cloud CDN for this BackendService.
  // 
  // When the load balancing scheme is INTERNAL, this field is not used.
  bool enableCDN = 7;

  // Fingerprint of this resource. A hash of the contents stored in this
  // object. This field is used in optimistic locking. This field will be
  // ignored when inserting a BackendService. An up-to-date fingerprint
  // must be provided in order to update the BackendService.
  string fingerprint = 8;

  // The list of URLs to the HttpHealthCheck or HttpsHealthCheck resource
  // for health checking this BackendService. Currently at most one health
  // check can be specified, and a health check is required for Compute
  // Engine backend services. A health check must not be specified for App
  // Engine backend and Cloud Function backend.
  // 
  // For internal load balancing, a URL to a HealthCheck resource must be
  // specified instead.
  repeated string healthChecks = 9;

  BackendServiceIAP iap = 10;

  // [Output Only] The unique identifier for the resource. This identifier
  // is defined by the server.
  string id = 11;

  // [Output Only] Type of resource. Always compute#backendService for
  // backend services.
  string kind = 12;

  // Indicates whether the backend service will be used with internal or
  // external load balancing. A backend service created for one type of
  // load balancing cannot be used with the other. Possible values are
  // INTERNAL and EXTERNAL.
  // Valid values:
  //     EXTERNAL
  //     INTERNAL
  //     INVALID_LOAD_BALANCING_SCHEME
  string loadBalancingScheme = 13;

  // Name of the resource. Provided by the client when the resource is
  // created. The name must be 1-63 characters long, and comply with
  // RFC1035. Specifically, the name must be 1-63 characters long and
  // match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means
  // the first character must be a lowercase letter, and all following
  // characters must be a dash, lowercase letter, or digit, except the
  // last character, which cannot be a dash.
  string name = 14;

  // Deprecated in favor of portName. The TCP port to connect on the
  // backend. The default value is 80.
  // 
  // This cannot be used for internal load balancing.
  int32 port = 15;

  // Name of backend port. The same name should appear in the instance
  // groups referenced by this service. Required when the load balancing
  // scheme is EXTERNAL.
  // 
  // When the load balancing scheme is INTERNAL, this field is not used.
  string portName = 16;

  // The protocol this BackendService uses to communicate with backends.
  // 
  // Possible values are HTTP, HTTPS, TCP, and SSL. The default is HTTP.
  // 
  // For internal load balancing, the possible values are TCP and UDP, and
  // the default is TCP.
  // Valid values:
  //     HTTP
  //     HTTPS
  //     SSL
  //     TCP
  //     UDP
  string protocol = 17;

  // [Output Only] URL of the region where the regional backend service
  // resides. This field is not applicable to global backend services.
  string region = 18;

  // [Output Only] The resource URL for the security policy associated
  // with this backend service.
  string securityPolicy = 19;

  // [Output Only] Server-defined URL for the resource.
  string selfLink = 20;

  // Type of session affinity to use. The default is NONE.
  // 
  // When the load balancing scheme is EXTERNAL, can be NONE, CLIENT_IP,
  // or GENERATED_COOKIE.
  // 
  // When the load balancing scheme is INTERNAL, can be NONE, CLIENT_IP,
  // CLIENT_IP_PROTO, or CLIENT_IP_PORT_PROTO.
  // 
  // When the protocol is UDP, this field is not used.
  // Valid values:
  //     CLIENT_IP
  //     CLIENT_IP_PORT_PROTO
  //     CLIENT_IP_PROTO
  //     GENERATED_COOKIE
  //     NONE
  string sessionAffinity = 21;

  // How many seconds to wait for the backend before considering it a
  // failed request. Default is 30 seconds.
  int32 timeoutSec = 22;
}

// Contains a list of BackendServicesScopedList.
message BackendServiceAggregatedList {
  // [Output Only] Unique identifier for the resource; defined by the
  // server.
  string id = 1;

  // A list of BackendServicesScopedList resources.
  map<string, BackendServicesScopedList> items = 2;

  // Type of resource.
  string kind = 3;

  // [Output Only] This token allows you to get the next page of results
  // for list requests. If the number of results is larger than
  // maxResults, use the nextPageToken as a value for the query parameter
  // pageToken in the next list request. Subsequent list requests will
  // have their own nextPageToken to continue paging through the results.
  string nextPageToken = 4;

  // [Output Only] Server-defined URL for this resource.
  string selfLink = 5;

  // [Output Only] Informational warning message.
  // [Output Only] Informational warning message.
  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute
    // Engine returns NO_RESULTS_ON_PAGE if there are no results in the
    // response.
    // Valid values:
    //     CLEANUP_FAILED
    //     DEPRECATED_RESOURCE_USED
    //     DEPRECATED_TYPE_USED
    //     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
    //     EXPERIMENTAL_TYPE_USED
    //     EXTERNAL_API_WARNING
    //     FIELD_VALUE_OVERRIDEN
    //     INJECTED_KERNELS_DEPRECATED
    //     MISSING_TYPE_DEPENDENCY
    //     NEXT_HOP_ADDRESS_NOT_ASSIGNED
    //     NEXT_HOP_CANNOT_IP_FORWARD
    //     NEXT_HOP_INSTANCE_NOT_FOUND
    //     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
    //     NEXT_HOP_NOT_RUNNING
    //     NOT_CRITICAL_ERROR
    //     NO_RESULTS_ON_PAGE
    //     REQUIRED_TOS_AGREEMENT
    //     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
    //     RESOURCE_NOT_DELETED
    //     SCHEMA_VALIDATION_IGNORED
    //     SINGLE_INSTANCE_PROPERTY_TEMPLATE
    //     UNDECLARED_PROPERTIES
    //     UNREACHABLE
    string code = 1;

    // [Output Only] Metadata about this warning in key: value format. For
    // example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the
      // key value might be the zone name. Other examples might be a key
      // indicating a deprecated resource and a suggested replacement, or a
      // warning about invalid network settings (for example, if an instance
      // attempts to perform IP forwarding but is not enabled for IP
      // forwarding).
      string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      string value = 2;
    }
    repeated Data data = 2;

    // [Output Only] A human-readable description of the warning code.
    string message = 3;
  }
  Warning warning = 6;
}

// Message containing Cloud CDN configuration for a backend service.
message BackendServiceCdnPolicy {
  // The CacheKeyPolicy for this CdnPolicy.
  CacheKeyPolicy cacheKeyPolicy = 1;
}

message BackendServiceGroupHealth {
  repeated HealthStatus healthStatus = 1;

  // [Output Only] Type of resource. Always
  // compute#backendServiceGroupHealth for the health of backend services.
  string kind = 2;
}

// Identity-Aware Proxy
message BackendServiceIAP {
  bool enabled = 1;

  string oauth2ClientId = 2;

  string oauth2ClientSecret = 3;

  // [Output Only] SHA256 hash value for the field oauth2_client_secret
  // above.
  string oauth2ClientSecretSha256 = 4;
}

// Contains a list of BackendService resources.
message BackendServiceList {
  // [Output Only] Unique identifier for the resource; defined by the
  // server.
  string id = 1;

  // A list of BackendService resources.
  repeated BackendService items = 2;

  // [Output Only] Type of resource. Always compute#backendServiceList for
  // lists of backend services.
  string kind = 3;

  // [Output Only] This token allows you to get the next page of results
  // for list requests. If the number of results is larger than
  // maxResults, use the nextPageToken as a value for the query parameter
  // pageToken in the next list request. Subsequent list requests will
  // have their own nextPageToken to continue paging through the results.
  string nextPageToken = 4;

  // [Output Only] Server-defined URL for this resource.
  string selfLink = 5;

  // [Output Only] Informational warning message.
  // [Output Only] Informational warning message.
  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute
    // Engine returns NO_RESULTS_ON_PAGE if there are no results in the
    // response.
    // Valid values:
    //     CLEANUP_FAILED
    //     DEPRECATED_RESOURCE_USED
    //     DEPRECATED_TYPE_USED
    //     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
    //     EXPERIMENTAL_TYPE_USED
    //     EXTERNAL_API_WARNING
    //     FIELD_VALUE_OVERRIDEN
    //     INJECTED_KERNELS_DEPRECATED
    //     MISSING_TYPE_DEPENDENCY
    //     NEXT_HOP_ADDRESS_NOT_ASSIGNED
    //     NEXT_HOP_CANNOT_IP_FORWARD
    //     NEXT_HOP_INSTANCE_NOT_FOUND
    //     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
    //     NEXT_HOP_NOT_RUNNING
    //     NOT_CRITICAL_ERROR
    //     NO_RESULTS_ON_PAGE
    //     REQUIRED_TOS_AGREEMENT
    //     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
    //     RESOURCE_NOT_DELETED
    //     SCHEMA_VALIDATION_IGNORED
    //     SINGLE_INSTANCE_PROPERTY_TEMPLATE
    //     UNDECLARED_PROPERTIES
    //     UNREACHABLE
    string code = 1;

    // [Output Only] Metadata about this warning in key: value format. For
    // example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the
      // key value might be the zone name. Other examples might be a key
      // indicating a deprecated resource and a suggested replacement, or a
      // warning about invalid network settings (for example, if an instance
      // attempts to perform IP forwarding but is not enabled for IP
      // forwarding).
      string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      string value = 2;
    }
    repeated Data data = 2;

    // [Output Only] A human-readable description of the warning code.
    string message = 3;
  }
  Warning warning = 6;
}

message BackendServicesScopedList {
  // List of BackendServices contained in this scope.
  repeated BackendService backendServices = 1;

  // Informational warning which replaces the list of backend services
  // when the list is empty.
  // Informational warning which replaces the list of backend services
  // when the list is empty.
  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute
    // Engine returns NO_RESULTS_ON_PAGE if there are no results in the
    // response.
    // Valid values:
    //     CLEANUP_FAILED
    //     DEPRECATED_RESOURCE_USED
    //     DEPRECATED_TYPE_USED
    //     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
    //     EXPERIMENTAL_TYPE_USED
    //     EXTERNAL_API_WARNING
    //     FIELD_VALUE_OVERRIDEN
    //     INJECTED_KERNELS_DEPRECATED
    //     MISSING_TYPE_DEPENDENCY
    //     NEXT_HOP_ADDRESS_NOT_ASSIGNED
    //     NEXT_HOP_CANNOT_IP_FORWARD
    //     NEXT_HOP_INSTANCE_NOT_FOUND
    //     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
    //     NEXT_HOP_NOT_RUNNING
    //     NOT_CRITICAL_ERROR
    //     NO_RESULTS_ON_PAGE
    //     REQUIRED_TOS_AGREEMENT
    //     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
    //     RESOURCE_NOT_DELETED
    //     SCHEMA_VALIDATION_IGNORED
    //     SINGLE_INSTANCE_PROPERTY_TEMPLATE
    //     UNDECLARED_PROPERTIES
    //     UNREACHABLE
    string code = 1;

    // [Output Only] Metadata about this warning in key: value format. For
    // example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the
      // key value might be the zone name. Other examples might be a key
      // indicating a deprecated resource and a suggested replacement, or a
      // warning about invalid network settings (for example, if an instance
      // attempts to perform IP forwarding but is not enabled for IP
      // forwarding).
      string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      string value = 2;
    }
    repeated Data data = 2;

    // [Output Only] A human-readable description of the warning code.
    string message = 3;
  }
  Warning warning = 2;
}

// Associates `members` with a `role`.
message Binding {
  // The condition that is associated with this binding. NOTE: an
  // unsatisfied condition will not allow user access via current binding.
  // Different bindings, including their conditions, are examined
  // independently. This field is GOOGLE_INTERNAL.
  Expr condition = 1;

  // Specifies the identities requesting access for a Cloud Platform
  // resource. `members` can have the following values:
  // 
  // * `allUsers`: A special identifier that represents anyone who is on
  // the internet; with or without a Google account.
  // 
  // * `allAuthenticatedUsers`: A special identifier that represents
  // anyone who is authenticated with a Google account or a service
  // account.
  // 
  // * `user:{emailid}`: An email address that represents a specific
  // Google account. For example, `alice@gmail.com` or `joe@example.com`.
  // 
  // 
  // 
  // * `serviceAccount:{emailid}`: An email address that represents a
  // service account. For example,
  // `my-other-app@appspot.gserviceaccount.com`.
  // 
  // * `group:{emailid}`: An email address that represents a Google group.
  // For example, `admins@example.com`.
  // 
  // 
  // 
  // * `domain:{domain}`: A Google Apps domain name that represents all
  // the users of that domain. For example, `google.com` or `example.com`.
  repeated string members = 2;

  // Role that is assigned to `members`. For example, `roles/viewer`,
  // `roles/editor`, or `roles/owner`.
  string role = 3;
}

message CacheInvalidationRule {
  // If set, this invalidation rule will only apply to requests with a
  // Host header matching host.
  string host = 1;

  string path = 2;
}

// Message containing what to include in the cache key for a request for
// Cloud CDN.
message CacheKeyPolicy {
  // If true, requests to different hosts will be cached separately.
  bool includeHost = 1;

  // If true, http and https requests will be cached separately.
  bool includeProtocol = 2;

  // If true, include query string parameters in the cache key according
  // to query_string_whitelist and query_string_blacklist. If neither is
  // set, the entire query string will be included. If false, the query
  // string will be excluded from the cache key entirely.
  bool includeQueryString = 3;

  // Names of query string parameters to exclude in cache keys. All other
  // parameters will be included. Either specify query_string_whitelist or
  // query_string_blacklist, not both. '&' and '=' will be percent encoded
  // and not treated as delimiters.
  repeated string queryStringBlacklist = 4;

  // Names of query string parameters to include in cache keys. All other
  // parameters will be excluded. Either specify query_string_whitelist or
  // query_string_blacklist, not both. '&' and '=' will be percent encoded
  // and not treated as delimiters.
  repeated string queryStringWhitelist = 5;
}

// Represents a Commitment resource. Creating a Commitment resource
// means that you are purchasing a committed use contract with an
// explicit start and end time. You can create commitments based on
// vCPUs and memory usage and receive discounted rates. For full
// details, read Signing Up for Committed Use Discounts.
// 
// Committed use discounts are subject to Google Cloud Platform's
// Service Specific Terms. By purchasing a committed use discount, you
// agree to these terms. Committed use discounts will not renew, so you
// must purchase a new commitment to continue receiving discounts.
message Commitment {
  // [Output Only] Creation timestamp in RFC3339 text format.
  string creationTimestamp = 1;

  // An optional description of this resource. Provide this property when
  // you create the resource.
  string description = 2;

  // [Output Only] Commitment end time in RFC3339 text format.
  string endTimestamp = 3;

  // [Output Only] The unique identifier for the resource. This identifier
  // is defined by the server.
  string id = 4;

  // [Output Only] Type of the resource. Always compute#commitment for
  // commitments.
  string kind = 5;

  // Name of the resource. Provided by the client when the resource is
  // created. The name must be 1-63 characters long, and comply with
  // RFC1035. Specifically, the name must be 1-63 characters long and
  // match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means
  // the first character must be a lowercase letter, and all following
  // characters must be a dash, lowercase letter, or digit, except the
  // last character, which cannot be a dash.
  string name = 6;

  // The plan for this commitment, which determines duration and discount
  // rate. The currently supported plans are TWELVE_MONTH (1 year), and
  // THIRTY_SIX_MONTH (3 years).
  // Valid values:
  //     INVALID
  //     THIRTY_SIX_MONTH
  //     TWELVE_MONTH
  string plan = 7;

  // [Output Only] URL of the region where this commitment may be used.
  string region = 8;

  // List of commitment amounts for particular resources. Note that VCPU
  // and MEMORY resource commitments must occur together.
  repeated ResourceCommitment resources = 9;

  // [Output Only] Server-defined URL for the resource.
  string selfLink = 10;

  // [Output Only] Commitment start time in RFC3339 text format.
  string startTimestamp = 11;

  // [Output Only] Status of the commitment with regards to eventual
  // expiration (each commitment has an end date defined). One of the
  // following values: NOT_YET_ACTIVE, ACTIVE, EXPIRED.
  // Valid values:
  //     ACTIVE
  //     CREATING
  //     EXPIRED
  //     NOT_YET_ACTIVE
  string status = 12;

  // [Output Only] An optional, human-readable explanation of the status.
  string statusMessage = 13;
}

message CommitmentAggregatedList {
  // [Output Only] Unique identifier for the resource; defined by the
  // server.
  string id = 1;

  // A list of CommitmentsScopedList resources.
  map<string, CommitmentsScopedList> items = 2;

  // [Output Only] Type of resource. Always
  // compute#commitmentAggregatedList for aggregated lists of commitments.
  string kind = 3;

  // [Output Only] This token allows you to get the next page of results
  // for list requests. If the number of results is larger than
  // maxResults, use the nextPageToken as a value for the query parameter
  // pageToken in the next list request. Subsequent list requests will
  // have their own nextPageToken to continue paging through the results.
  string nextPageToken = 4;

  // [Output Only] Server-defined URL for this resource.
  string selfLink = 5;

  // [Output Only] Informational warning message.
  // [Output Only] Informational warning message.
  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute
    // Engine returns NO_RESULTS_ON_PAGE if there are no results in the
    // response.
    // Valid values:
    //     CLEANUP_FAILED
    //     DEPRECATED_RESOURCE_USED
    //     DEPRECATED_TYPE_USED
    //     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
    //     EXPERIMENTAL_TYPE_USED
    //     EXTERNAL_API_WARNING
    //     FIELD_VALUE_OVERRIDEN
    //     INJECTED_KERNELS_DEPRECATED
    //     MISSING_TYPE_DEPENDENCY
    //     NEXT_HOP_ADDRESS_NOT_ASSIGNED
    //     NEXT_HOP_CANNOT_IP_FORWARD
    //     NEXT_HOP_INSTANCE_NOT_FOUND
    //     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
    //     NEXT_HOP_NOT_RUNNING
    //     NOT_CRITICAL_ERROR
    //     NO_RESULTS_ON_PAGE
    //     REQUIRED_TOS_AGREEMENT
    //     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
    //     RESOURCE_NOT_DELETED
    //     SCHEMA_VALIDATION_IGNORED
    //     SINGLE_INSTANCE_PROPERTY_TEMPLATE
    //     UNDECLARED_PROPERTIES
    //     UNREACHABLE
    string code = 1;

    // [Output Only] Metadata about this warning in key: value format. For
    // example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the
      // key value might be the zone name. Other examples might be a key
      // indicating a deprecated resource and a suggested replacement, or a
      // warning about invalid network settings (for example, if an instance
      // attempts to perform IP forwarding but is not enabled for IP
      // forwarding).
      string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      string value = 2;
    }
    repeated Data data = 2;

    // [Output Only] A human-readable description of the warning code.
    string message = 3;
  }
  Warning warning = 6;
}

// Contains a list of Commitment resources.
message CommitmentList {
  // [Output Only] Unique identifier for the resource; defined by the
  // server.
  string id = 1;

  // A list of Commitment resources.
  repeated Commitment items = 2;

  // [Output Only] Type of resource. Always compute#commitmentList for
  // lists of commitments.
  string kind = 3;

  // [Output Only] This token allows you to get the next page of results
  // for list requests. If the number of results is larger than
  // maxResults, use the nextPageToken as a value for the query parameter
  // pageToken in the next list request. Subsequent list requests will
  // have their own nextPageToken to continue paging through the results.
  string nextPageToken = 4;

  // [Output Only] Server-defined URL for this resource.
  string selfLink = 5;

  // [Output Only] Informational warning message.
  // [Output Only] Informational warning message.
  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute
    // Engine returns NO_RESULTS_ON_PAGE if there are no results in the
    // response.
    // Valid values:
    //     CLEANUP_FAILED
    //     DEPRECATED_RESOURCE_USED
    //     DEPRECATED_TYPE_USED
    //     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
    //     EXPERIMENTAL_TYPE_USED
    //     EXTERNAL_API_WARNING
    //     FIELD_VALUE_OVERRIDEN
    //     INJECTED_KERNELS_DEPRECATED
    //     MISSING_TYPE_DEPENDENCY
    //     NEXT_HOP_ADDRESS_NOT_ASSIGNED
    //     NEXT_HOP_CANNOT_IP_FORWARD
    //     NEXT_HOP_INSTANCE_NOT_FOUND
    //     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
    //     NEXT_HOP_NOT_RUNNING
    //     NOT_CRITICAL_ERROR
    //     NO_RESULTS_ON_PAGE
    //     REQUIRED_TOS_AGREEMENT
    //     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
    //     RESOURCE_NOT_DELETED
    //     SCHEMA_VALIDATION_IGNORED
    //     SINGLE_INSTANCE_PROPERTY_TEMPLATE
    //     UNDECLARED_PROPERTIES
    //     UNREACHABLE
    string code = 1;

    // [Output Only] Metadata about this warning in key: value format. For
    // example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the
      // key value might be the zone name. Other examples might be a key
      // indicating a deprecated resource and a suggested replacement, or a
      // warning about invalid network settings (for example, if an instance
      // attempts to perform IP forwarding but is not enabled for IP
      // forwarding).
      string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      string value = 2;
    }
    repeated Data data = 2;

    // [Output Only] A human-readable description of the warning code.
    string message = 3;
  }
  Warning warning = 6;
}

message CommitmentsScopedList {
  // [Output Only] List of commitments contained in this scope.
  repeated Commitment commitments = 1;

  // [Output Only] Informational warning which replaces the list of
  // commitments when the list is empty.
  // [Output Only] Informational warning which replaces the list of
  // commitments when the list is empty.
  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute
    // Engine returns NO_RESULTS_ON_PAGE if there are no results in the
    // response.
    // Valid values:
    //     CLEANUP_FAILED
    //     DEPRECATED_RESOURCE_USED
    //     DEPRECATED_TYPE_USED
    //     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
    //     EXPERIMENTAL_TYPE_USED
    //     EXTERNAL_API_WARNING
    //     FIELD_VALUE_OVERRIDEN
    //     INJECTED_KERNELS_DEPRECATED
    //     MISSING_TYPE_DEPENDENCY
    //     NEXT_HOP_ADDRESS_NOT_ASSIGNED
    //     NEXT_HOP_CANNOT_IP_FORWARD
    //     NEXT_HOP_INSTANCE_NOT_FOUND
    //     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
    //     NEXT_HOP_NOT_RUNNING
    //     NOT_CRITICAL_ERROR
    //     NO_RESULTS_ON_PAGE
    //     REQUIRED_TOS_AGREEMENT
    //     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
    //     RESOURCE_NOT_DELETED
    //     SCHEMA_VALIDATION_IGNORED
    //     SINGLE_INSTANCE_PROPERTY_TEMPLATE
    //     UNDECLARED_PROPERTIES
    //     UNREACHABLE
    string code = 1;

    // [Output Only] Metadata about this warning in key: value format. For
    // example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the
      // key value might be the zone name. Other examples might be a key
      // indicating a deprecated resource and a suggested replacement, or a
      // warning about invalid network settings (for example, if an instance
      // attempts to perform IP forwarding but is not enabled for IP
      // forwarding).
      string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      string value = 2;
    }
    repeated Data data = 2;

    // [Output Only] A human-readable description of the warning code.
    string message = 3;
  }
  Warning warning = 2;
}

// A condition to be met.
message Condition {
  // Trusted attributes supplied by the IAM system.
  // Valid values:
  //     APPROVER
  //     ATTRIBUTION
  //     AUTHORITY
  //     JUSTIFICATION_TYPE
  //     NO_ATTR
  //     SECURITY_REALM
  string iam = 1;

  // An operator to apply the subject with.
  // Valid values:
  //     DISCHARGED
  //     EQUALS
  //     IN
  //     NOT_EQUALS
  //     NOT_IN
  //     NO_OP
  string op = 2;

  // Trusted attributes discharged by the service.
  string svc = 3;

  // Trusted attributes supplied by any service that owns resources and
  // uses the IAM system for access control.
  // Valid values:
  //     IP
  //     NAME
  //     NO_ATTR
  //     REGION
  //     SERVICE
  string sys = 4;

  // DEPRECATED. Use 'values' instead.
  string value = 5;

  // The objects of the condition. This is mutually exclusive with
  // 'value'.
  repeated string values = 6;
}

// Message containing connection draining configuration.
message ConnectionDraining {
  // Time for which instance will be drained (not accept new connections,
  // but still work to finish started).
  int32 drainingTimeoutSec = 1;
}

// Represents a customer-supplied encryption key
message CustomerEncryptionKey {
  // Specifies a 256-bit customer-supplied encryption key, encoded in RFC
  // 4648 base64 to either encrypt or decrypt this resource.
  string rawKey = 1;

  // Specifies an RFC 4648 base64 encoded, RSA-wrapped 2048-bit
  // customer-supplied encryption key to either encrypt or decrypt this
  // resource.
  // 
  // The key must meet the following requirements before you can provide
  // it to Compute Engine:
  // - The key is wrapped using a RSA public key certificate provided by
  // Google.
  // - After being wrapped, the key must be encoded in RFC 4648 base64
  // encoding.  Get the RSA public key certificate provided by Google at:
  // https://cloud-certs.storage.googleapis.com/google-cloud-csek-ingress.pem
  string rsaEncryptedKey = 2;

  // [Output only] The RFC 4648 base64 encoded SHA-256 hash of the
  // customer-supplied encryption key that protects this resource.
  string sha256 = 3;
}

message CustomerEncryptionKeyProtectedDisk {
  // Decrypts data associated with the disk with a customer-supplied
  // encryption key.
  CustomerEncryptionKey diskEncryptionKey = 1;

  // Specifies a valid partial or full URL to an existing Persistent Disk
  // resource. This field is only applicable for persistent disks.
  string source = 2;
}

// Deprecation status for a public resource.
message DeprecationStatus {
  // An optional RFC3339 timestamp on or after which the state of this
  // resource is intended to change to DELETED. This is only informational
  // and the status will not change unless the client explicitly changes
  // it.
  string deleted = 1;

  // An optional RFC3339 timestamp on or after which the state of this
  // resource is intended to change to DEPRECATED. This is only
  // informational and the status will not change unless the client
  // explicitly changes it.
  string deprecated = 2;

  // An optional RFC3339 timestamp on or after which the state of this
  // resource is intended to change to OBSOLETE. This is only
  // informational and the status will not change unless the client
  // explicitly changes it.
  string obsolete = 3;

  // The URL of the suggested replacement for a deprecated resource. The
  // suggested replacement resource must be the same kind of resource as
  // the deprecated resource.
  string replacement = 4;

  // The deprecation state of this resource. This can be DEPRECATED,
  // OBSOLETE, or DELETED. Operations which create a new resource using a
  // DEPRECATED resource will return successfully, but with a warning
  // indicating the deprecated resource and recommending its replacement.
  // Operations which use OBSOLETE or DELETED resources will be rejected
  // and result in an error.
  // Valid values:
  //     DELETED
  //     DEPRECATED
  //     OBSOLETE
  string state = 5;
}

// A Disk resource.
message Disk {
  // [Output Only] Creation timestamp in RFC3339 text format.
  string creationTimestamp = 1;

  // An optional description of this resource. Provide this property when
  // you create the resource.
  string description = 2;

  // Encrypts the disk using a customer-supplied encryption key.
  // 
  // After you encrypt a disk with a customer-supplied key, you must
  // provide the same key if you use the disk later (e.g. to create a disk
  // snapshot or an image, or to attach the disk to a virtual machine).
  // 
  // Customer-supplied encryption keys do not protect access to metadata
  // of the disk.
  // 
  // If you do not provide an encryption key when creating the disk, then
  // the disk will be encrypted using an automatically generated key and
  // you do not need to provide a key to use the disk later.
  CustomerEncryptionKey diskEncryptionKey = 3;

  // [Output Only] The unique identifier for the resource. This identifier
  // is defined by the server.
  string id = 4;

  // [Output Only] Type of the resource. Always compute#disk for disks.
  string kind = 5;

  // A fingerprint for the labels being applied to this disk, which is
  // essentially a hash of the labels set used for optimistic locking. The
  // fingerprint is initially generated by Compute Engine and changes
  // after every request to modify or update labels. You must always
  // provide an up-to-date fingerprint hash in order to update or change
  // labels.
  // 
  // To see the latest fingerprint, make a get() request to retrieve a
  // disk.
  string labelFingerprint = 6;

  // Labels to apply to this disk. These can be later modified by the
  // setLabels method.
  map<string, string> labels = 7;

  // [Output Only] Last attach timestamp in RFC3339 text format.
  string lastAttachTimestamp = 8;

  // [Output Only] Last detach timestamp in RFC3339 text format.
  string lastDetachTimestamp = 9;

  // Any applicable publicly visible licenses.
  repeated string licenses = 10;

  // Name of the resource. Provided by the client when the resource is
  // created. The name must be 1-63 characters long, and comply with
  // RFC1035. Specifically, the name must be 1-63 characters long and
  // match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means
  // the first character must be a lowercase letter, and all following
  // characters must be a dash, lowercase letter, or digit, except the
  // last character, which cannot be a dash.
  string name = 11;

  // Internal use only.
  string options = 12;

  // [Output Only] Server-defined fully-qualified URL for this resource.
  string selfLink = 13;

  // Size of the persistent disk, specified in GB. You can specify this
  // field when creating a persistent disk using the sourceImage or
  // sourceSnapshot parameter, or specify it alone to create an empty
  // persistent disk.
  // 
  // If you specify this field along with sourceImage or sourceSnapshot,
  // the value of sizeGb must not be less than the size of the sourceImage
  // or the size of the snapshot. Acceptable values are 1 to 65536,
  // inclusive.
  string sizeGb = 14;

  // The source image used to create this disk. If the source image is
  // deleted, this field will not be set.
  // 
  // To create a disk with one of the public operating system images,
  // specify the image by its family name. For example, specify
  // family/debian-8 to use the latest Debian 8 image:
  // 
  // projects/debian-cloud/global/images/family/debian-8
  // 
  // Alternatively, use a specific version of a public operating system
  // image:
  // 
  // projects/debian-cloud/global/images/debian-8-jessie-vYYYYMMDD
  // 
  // To create a disk with a private image that you created, specify the
  // image name in the following format:
  // 
  // global/images/my-private-image
  // 
  // You can also specify a private image by its image family, which
  // returns the latest version of the image in that family. Replace the
  // image name with family/family-name:
  // 
  // global/images/family/my-private-family
  string sourceImage = 15;

  // The customer-supplied encryption key of the source image. Required if
  // the source image is protected by a customer-supplied encryption key.
  CustomerEncryptionKey sourceImageEncryptionKey = 16;

  // [Output Only] The ID value of the image used to create this disk.
  // This value identifies the exact image that was used to create this
  // persistent disk. For example, if you created the persistent disk from
  // an image that was later deleted and recreated under the same name,
  // the source image ID would identify the exact version of the image
  // that was used.
  string sourceImageId = 17;

  // The source snapshot used to create this disk. You can provide this as
  // a partial or full URL to the resource. For example, the following are
  // valid values:
  // -
  // https://www.googleapis.com/compute/v1/projects/project/global/snapshots/snapshot
  // - projects/project/global/snapshots/snapshot
  // - global/snapshots/snapshot
  string sourceSnapshot = 18;

  // The customer-supplied encryption key of the source snapshot. Required
  // if the source snapshot is protected by a customer-supplied encryption
  // key.
  CustomerEncryptionKey sourceSnapshotEncryptionKey = 19;

  // [Output Only] The unique ID of the snapshot used to create this disk.
  // This value identifies the exact snapshot that was used to create this
  // persistent disk. For example, if you created the persistent disk from
  // a snapshot that was later deleted and recreated under the same name,
  // the source snapshot ID would identify the exact version of the
  // snapshot that was used.
  string sourceSnapshotId = 20;

  // [Output Only] The status of disk creation.
  // Valid values:
  //     CREATING
  //     FAILED
  //     READY
  //     RESTORING
  string status = 21;

  // [Deprecated] Storage type of the persistent disk.
  // Valid values:
  //     HDD
  //     SSD
  string storageType = 22;

  // URL of the disk type resource describing which disk type to use to
  // create the disk. Provide this when creating the disk.
  string type = 23;

  // [Output Only] Links to the users of the disk (attached instances) in
  // form: project/zones/zone/instances/instance
  repeated string users = 24;

  // [Output Only] URL of the zone where the disk resides.
  string zone = 25;
}

message DiskAggregatedList {
  // [Output Only] Unique identifier for the resource; defined by the
  // server.
  string id = 1;

  // A list of DisksScopedList resources.
  map<string, DisksScopedList> items = 2;

  // [Output Only] Type of resource. Always compute#diskAggregatedList for
  // aggregated lists of persistent disks.
  string kind = 3;

  // [Output Only] This token allows you to get the next page of results
  // for list requests. If the number of results is larger than
  // maxResults, use the nextPageToken as a value for the query parameter
  // pageToken in the next list request. Subsequent list requests will
  // have their own nextPageToken to continue paging through the results.
  string nextPageToken = 4;

  // [Output Only] Server-defined URL for this resource.
  string selfLink = 5;

  // [Output Only] Informational warning message.
  // [Output Only] Informational warning message.
  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute
    // Engine returns NO_RESULTS_ON_PAGE if there are no results in the
    // response.
    // Valid values:
    //     CLEANUP_FAILED
    //     DEPRECATED_RESOURCE_USED
    //     DEPRECATED_TYPE_USED
    //     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
    //     EXPERIMENTAL_TYPE_USED
    //     EXTERNAL_API_WARNING
    //     FIELD_VALUE_OVERRIDEN
    //     INJECTED_KERNELS_DEPRECATED
    //     MISSING_TYPE_DEPENDENCY
    //     NEXT_HOP_ADDRESS_NOT_ASSIGNED
    //     NEXT_HOP_CANNOT_IP_FORWARD
    //     NEXT_HOP_INSTANCE_NOT_FOUND
    //     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
    //     NEXT_HOP_NOT_RUNNING
    //     NOT_CRITICAL_ERROR
    //     NO_RESULTS_ON_PAGE
    //     REQUIRED_TOS_AGREEMENT
    //     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
    //     RESOURCE_NOT_DELETED
    //     SCHEMA_VALIDATION_IGNORED
    //     SINGLE_INSTANCE_PROPERTY_TEMPLATE
    //     UNDECLARED_PROPERTIES
    //     UNREACHABLE
    string code = 1;

    // [Output Only] Metadata about this warning in key: value format. For
    // example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the
      // key value might be the zone name. Other examples might be a key
      // indicating a deprecated resource and a suggested replacement, or a
      // warning about invalid network settings (for example, if an instance
      // attempts to perform IP forwarding but is not enabled for IP
      // forwarding).
      string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      string value = 2;
    }
    repeated Data data = 2;

    // [Output Only] A human-readable description of the warning code.
    string message = 3;
  }
  Warning warning = 6;
}

// A list of Disk resources.
message DiskList {
  // [Output Only] Unique identifier for the resource; defined by the
  // server.
  string id = 1;

  // A list of Disk resources.
  repeated Disk items = 2;

  // [Output Only] Type of resource. Always compute#diskList for lists of
  // disks.
  string kind = 3;

  // [Output Only] This token allows you to get the next page of results
  // for list requests. If the number of results is larger than
  // maxResults, use the nextPageToken as a value for the query parameter
  // pageToken in the next list request. Subsequent list requests will
  // have their own nextPageToken to continue paging through the results.
  string nextPageToken = 4;

  // [Output Only] Server-defined URL for this resource.
  string selfLink = 5;

  // [Output Only] Informational warning message.
  // [Output Only] Informational warning message.
  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute
    // Engine returns NO_RESULTS_ON_PAGE if there are no results in the
    // response.
    // Valid values:
    //     CLEANUP_FAILED
    //     DEPRECATED_RESOURCE_USED
    //     DEPRECATED_TYPE_USED
    //     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
    //     EXPERIMENTAL_TYPE_USED
    //     EXTERNAL_API_WARNING
    //     FIELD_VALUE_OVERRIDEN
    //     INJECTED_KERNELS_DEPRECATED
    //     MISSING_TYPE_DEPENDENCY
    //     NEXT_HOP_ADDRESS_NOT_ASSIGNED
    //     NEXT_HOP_CANNOT_IP_FORWARD
    //     NEXT_HOP_INSTANCE_NOT_FOUND
    //     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
    //     NEXT_HOP_NOT_RUNNING
    //     NOT_CRITICAL_ERROR
    //     NO_RESULTS_ON_PAGE
    //     REQUIRED_TOS_AGREEMENT
    //     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
    //     RESOURCE_NOT_DELETED
    //     SCHEMA_VALIDATION_IGNORED
    //     SINGLE_INSTANCE_PROPERTY_TEMPLATE
    //     UNDECLARED_PROPERTIES
    //     UNREACHABLE
    string code = 1;

    // [Output Only] Metadata about this warning in key: value format. For
    // example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the
      // key value might be the zone name. Other examples might be a key
      // indicating a deprecated resource and a suggested replacement, or a
      // warning about invalid network settings (for example, if an instance
      // attempts to perform IP forwarding but is not enabled for IP
      // forwarding).
      string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      string value = 2;
    }
    repeated Data data = 2;

    // [Output Only] A human-readable description of the warning code.
    string message = 3;
  }
  Warning warning = 6;
}

message DiskMoveRequest {
  // The URL of the destination zone to move the disk. This can be a full
  // or partial URL. For example, the following are all valid URLs to a
  // zone:
  // - https://www.googleapis.com/compute/v1/projects/project/zones/zone
  // - projects/project/zones/zone
  // - zones/zone
  string destinationZone = 1;

  // The URL of the target disk to move. This can be a full or partial
  // URL. For example, the following are all valid URLs to a disk:
  // -
  // https://www.googleapis.com/compute/v1/projects/project/zones/zone/disks/disk
  // - projects/project/zones/zone/disks/disk
  // - zones/zone/disks/disk
  string targetDisk = 2;
}

// A DiskType resource.
message DiskType {
  // [Output Only] Creation timestamp in RFC3339 text format.
  string creationTimestamp = 1;

  // [Output Only] Server-defined default disk size in GB.
  string defaultDiskSizeGb = 2;

  // [Output Only] The deprecation status associated with this disk type.
  DeprecationStatus deprecated = 3;

  // [Output Only] An optional description of this resource.
  string description = 4;

  // [Output Only] The unique identifier for the resource. This identifier
  // is defined by the server.
  string id = 5;

  // [Output Only] Type of the resource. Always compute#diskType for disk
  // types.
  string kind = 6;

  // [Output Only] Name of the resource.
  string name = 7;

  // [Output Only] Server-defined URL for the resource.
  string selfLink = 8;

  // [Output Only] An optional textual description of the valid disk size,
  // such as "10GB-10TB".
  string validDiskSize = 9;

  // [Output Only] URL of the zone where the disk type resides.
  string zone = 10;
}

message DiskTypeAggregatedList {
  // [Output Only] Unique identifier for the resource; defined by the
  // server.
  string id = 1;

  // A list of DiskTypesScopedList resources.
  map<string, DiskTypesScopedList> items = 2;

  // [Output Only] Type of resource. Always
  // compute#diskTypeAggregatedList.
  string kind = 3;

  // [Output Only] This token allows you to get the next page of results
  // for list requests. If the number of results is larger than
  // maxResults, use the nextPageToken as a value for the query parameter
  // pageToken in the next list request. Subsequent list requests will
  // have their own nextPageToken to continue paging through the results.
  string nextPageToken = 4;

  // [Output Only] Server-defined URL for this resource.
  string selfLink = 5;

  // [Output Only] Informational warning message.
  // [Output Only] Informational warning message.
  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute
    // Engine returns NO_RESULTS_ON_PAGE if there are no results in the
    // response.
    // Valid values:
    //     CLEANUP_FAILED
    //     DEPRECATED_RESOURCE_USED
    //     DEPRECATED_TYPE_USED
    //     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
    //     EXPERIMENTAL_TYPE_USED
    //     EXTERNAL_API_WARNING
    //     FIELD_VALUE_OVERRIDEN
    //     INJECTED_KERNELS_DEPRECATED
    //     MISSING_TYPE_DEPENDENCY
    //     NEXT_HOP_ADDRESS_NOT_ASSIGNED
    //     NEXT_HOP_CANNOT_IP_FORWARD
    //     NEXT_HOP_INSTANCE_NOT_FOUND
    //     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
    //     NEXT_HOP_NOT_RUNNING
    //     NOT_CRITICAL_ERROR
    //     NO_RESULTS_ON_PAGE
    //     REQUIRED_TOS_AGREEMENT
    //     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
    //     RESOURCE_NOT_DELETED
    //     SCHEMA_VALIDATION_IGNORED
    //     SINGLE_INSTANCE_PROPERTY_TEMPLATE
    //     UNDECLARED_PROPERTIES
    //     UNREACHABLE
    string code = 1;

    // [Output Only] Metadata about this warning in key: value format. For
    // example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the
      // key value might be the zone name. Other examples might be a key
      // indicating a deprecated resource and a suggested replacement, or a
      // warning about invalid network settings (for example, if an instance
      // attempts to perform IP forwarding but is not enabled for IP
      // forwarding).
      string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      string value = 2;
    }
    repeated Data data = 2;

    // [Output Only] A human-readable description of the warning code.
    string message = 3;
  }
  Warning warning = 6;
}

// Contains a list of disk types.
message DiskTypeList {
  // [Output Only] Unique identifier for the resource; defined by the
  // server.
  string id = 1;

  // A list of DiskType resources.
  repeated DiskType items = 2;

  // [Output Only] Type of resource. Always compute#diskTypeList for disk
  // types.
  string kind = 3;

  // [Output Only] This token allows you to get the next page of results
  // for list requests. If the number of results is larger than
  // maxResults, use the nextPageToken as a value for the query parameter
  // pageToken in the next list request. Subsequent list requests will
  // have their own nextPageToken to continue paging through the results.
  string nextPageToken = 4;

  // [Output Only] Server-defined URL for this resource.
  string selfLink = 5;

  // [Output Only] Informational warning message.
  // [Output Only] Informational warning message.
  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute
    // Engine returns NO_RESULTS_ON_PAGE if there are no results in the
    // response.
    // Valid values:
    //     CLEANUP_FAILED
    //     DEPRECATED_RESOURCE_USED
    //     DEPRECATED_TYPE_USED
    //     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
    //     EXPERIMENTAL_TYPE_USED
    //     EXTERNAL_API_WARNING
    //     FIELD_VALUE_OVERRIDEN
    //     INJECTED_KERNELS_DEPRECATED
    //     MISSING_TYPE_DEPENDENCY
    //     NEXT_HOP_ADDRESS_NOT_ASSIGNED
    //     NEXT_HOP_CANNOT_IP_FORWARD
    //     NEXT_HOP_INSTANCE_NOT_FOUND
    //     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
    //     NEXT_HOP_NOT_RUNNING
    //     NOT_CRITICAL_ERROR
    //     NO_RESULTS_ON_PAGE
    //     REQUIRED_TOS_AGREEMENT
    //     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
    //     RESOURCE_NOT_DELETED
    //     SCHEMA_VALIDATION_IGNORED
    //     SINGLE_INSTANCE_PROPERTY_TEMPLATE
    //     UNDECLARED_PROPERTIES
    //     UNREACHABLE
    string code = 1;

    // [Output Only] Metadata about this warning in key: value format. For
    // example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the
      // key value might be the zone name. Other examples might be a key
      // indicating a deprecated resource and a suggested replacement, or a
      // warning about invalid network settings (for example, if an instance
      // attempts to perform IP forwarding but is not enabled for IP
      // forwarding).
      string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      string value = 2;
    }
    repeated Data data = 2;

    // [Output Only] A human-readable description of the warning code.
    string message = 3;
  }
  Warning warning = 6;
}

message DiskTypesScopedList {
  // [Output Only] List of disk types contained in this scope.
  repeated DiskType diskTypes = 1;

  // [Output Only] Informational warning which replaces the list of disk
  // types when the list is empty.
  // [Output Only] Informational warning which replaces the list of disk
  // types when the list is empty.
  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute
    // Engine returns NO_RESULTS_ON_PAGE if there are no results in the
    // response.
    // Valid values:
    //     CLEANUP_FAILED
    //     DEPRECATED_RESOURCE_USED
    //     DEPRECATED_TYPE_USED
    //     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
    //     EXPERIMENTAL_TYPE_USED
    //     EXTERNAL_API_WARNING
    //     FIELD_VALUE_OVERRIDEN
    //     INJECTED_KERNELS_DEPRECATED
    //     MISSING_TYPE_DEPENDENCY
    //     NEXT_HOP_ADDRESS_NOT_ASSIGNED
    //     NEXT_HOP_CANNOT_IP_FORWARD
    //     NEXT_HOP_INSTANCE_NOT_FOUND
    //     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
    //     NEXT_HOP_NOT_RUNNING
    //     NOT_CRITICAL_ERROR
    //     NO_RESULTS_ON_PAGE
    //     REQUIRED_TOS_AGREEMENT
    //     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
    //     RESOURCE_NOT_DELETED
    //     SCHEMA_VALIDATION_IGNORED
    //     SINGLE_INSTANCE_PROPERTY_TEMPLATE
    //     UNDECLARED_PROPERTIES
    //     UNREACHABLE
    string code = 1;

    // [Output Only] Metadata about this warning in key: value format. For
    // example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the
      // key value might be the zone name. Other examples might be a key
      // indicating a deprecated resource and a suggested replacement, or a
      // warning about invalid network settings (for example, if an instance
      // attempts to perform IP forwarding but is not enabled for IP
      // forwarding).
      string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      string value = 2;
    }
    repeated Data data = 2;

    // [Output Only] A human-readable description of the warning code.
    string message = 3;
  }
  Warning warning = 2;
}

message DisksResizeRequest {
  // The new size of the persistent disk, which is specified in GB.
  string sizeGb = 1;
}

message DisksScopedList {
  // [Output Only] List of disks contained in this scope.
  repeated Disk disks = 1;

  // [Output Only] Informational warning which replaces the list of disks
  // when the list is empty.
  // [Output Only] Informational warning which replaces the list of disks
  // when the list is empty.
  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute
    // Engine returns NO_RESULTS_ON_PAGE if there are no results in the
    // response.
    // Valid values:
    //     CLEANUP_FAILED
    //     DEPRECATED_RESOURCE_USED
    //     DEPRECATED_TYPE_USED
    //     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
    //     EXPERIMENTAL_TYPE_USED
    //     EXTERNAL_API_WARNING
    //     FIELD_VALUE_OVERRIDEN
    //     INJECTED_KERNELS_DEPRECATED
    //     MISSING_TYPE_DEPENDENCY
    //     NEXT_HOP_ADDRESS_NOT_ASSIGNED
    //     NEXT_HOP_CANNOT_IP_FORWARD
    //     NEXT_HOP_INSTANCE_NOT_FOUND
    //     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
    //     NEXT_HOP_NOT_RUNNING
    //     NOT_CRITICAL_ERROR
    //     NO_RESULTS_ON_PAGE
    //     REQUIRED_TOS_AGREEMENT
    //     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
    //     RESOURCE_NOT_DELETED
    //     SCHEMA_VALIDATION_IGNORED
    //     SINGLE_INSTANCE_PROPERTY_TEMPLATE
    //     UNDECLARED_PROPERTIES
    //     UNREACHABLE
    string code = 1;

    // [Output Only] Metadata about this warning in key: value format. For
    // example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the
      // key value might be the zone name. Other examples might be a key
      // indicating a deprecated resource and a suggested replacement, or a
      // warning about invalid network settings (for example, if an instance
      // attempts to perform IP forwarding but is not enabled for IP
      // forwarding).
      string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      string value = 2;
    }
    repeated Data data = 2;

    // [Output Only] A human-readable description of the warning code.
    string message = 3;
  }
  Warning warning = 2;
}

message DistributionPolicy {
  repeated DistributionPolicyZoneConfiguration zones = 1;
}

message DistributionPolicyZoneConfiguration {
  // URL of the zone where managed instance group is spawning instances
  // (for regional resources). Zone has to belong to the region where
  // managed instance group is located.
  string zone = 1;
}

// Represents an expression text. Example:
// 
// title: "User account presence" description: "Determines whether the
// request has a user account" expression: "size(request.user) > 0"
message Expr {
  // An optional description of the expression. This is a longer text
  // which describes the expression, e.g. when hovered over it in a UI.
  string description = 1;

  // Textual representation of an expression in Common Expression Language
  // syntax.
  // 
  // The application context of the containing message determines which
  // well-known feature set of CEL is supported.
  string expression = 2;

  // An optional string indicating the location of the expression for
  // error reporting, e.g. a file name and a position in the file.
  string location = 3;

  // An optional title for the expression, i.e. a short string describing
  // its purpose. This can be used e.g. in UIs which allow to enter the
  // expression.
  string title = 4;
}

// Represents a Firewall resource.
message Firewall {
  // The list of ALLOW rules specified by this firewall. Each rule
  // specifies a protocol and port-range tuple that describes a permitted
  // connection.
  message Allowed {
    // The IP protocol to which this rule applies. The protocol type is
    // required when creating a firewall rule. This value can either be one
    // of the following well known protocol strings (tcp, udp, icmp, esp,
    // ah, ipip, sctp), or the IP protocol number.
    string IPProtocol = 1;

    // An optional list of ports to which this rule applies. This field is
    // only applicable for UDP or TCP protocol. Each entry must be either an
    // integer or a range. If not specified, this rule applies to
    // connections through any port.
    // 
    // Example inputs include: ["22"], ["80","443"], and ["12345-12349"].
    repeated string ports = 2;
  }
  repeated Allowed allowed = 1;

  // [Output Only] Creation timestamp in RFC3339 text format.
  string creationTimestamp = 2;

  // The list of DENY rules specified by this firewall. Each rule
  // specifies a protocol and port-range tuple that describes a permitted
  // connection.
  message Denied {
    // The IP protocol to which this rule applies. The protocol type is
    // required when creating a firewall rule. This value can either be one
    // of the following well known protocol strings (tcp, udp, icmp, esp,
    // ah, ipip, sctp), or the IP protocol number.
    string IPProtocol = 1;

    // An optional list of ports to which this rule applies. This field is
    // only applicable for UDP or TCP protocol. Each entry must be either an
    // integer or a range. If not specified, this rule applies to
    // connections through any port.
    // 
    // Example inputs include: ["22"], ["80","443"], and ["12345-12349"].
    repeated string ports = 2;
  }
  repeated Denied denied = 3;

  // An optional description of this resource. Provide this property when
  // you create the resource.
  string description = 4;

  // If destination ranges are specified, the firewall will apply only to
  // traffic that has destination IP address in these ranges. These ranges
  // must be expressed in CIDR format. Only IPv4 is supported.
  repeated string destinationRanges = 5;

  // Direction of traffic to which this firewall applies; default is
  // INGRESS. Note: For INGRESS traffic, it is NOT supported to specify
  // destinationRanges; For EGRESS traffic, it is NOT supported to specify
  // sourceRanges OR sourceTags.
  // Valid values:
  //     EGRESS
  //     INGRESS
  string direction = 6;

  // [Output Only] The unique identifier for the resource. This identifier
  // is defined by the server.
  string id = 7;

  // [Output Only] Type of the resource. Always compute#firewall for
  // firewall rules.
  string kind = 8;

  // Name of the resource; provided by the client when the resource is
  // created. The name must be 1-63 characters long, and comply with
  // RFC1035. Specifically, the name must be 1-63 characters long and
  // match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means
  // the first character must be a lowercase letter, and all following
  // characters must be a dash, lowercase letter, or digit, except the
  // last character, which cannot be a dash.
  string name = 9;

  // URL of the network resource for this firewall rule. If not specified
  // when creating a firewall rule, the default network is used:
  // global/networks/default
  // If you choose to specify this property, you can specify the network
  // as a full or partial URL. For example, the following are all valid
  // URLs:
  // -
  // https://www.googleapis.com/compute/v1/projects/myproject/global/networks/my-network
  // - projects/myproject/global/networks/my-network
  // - global/networks/default
  string network = 10;

  // Priority for this rule. This is an integer between 0 and 65535, both
  // inclusive. When not specified, the value assumed is 1000. Relative
  // priorities determine precedence of conflicting rules. Lower value of
  // priority implies higher precedence (eg, a rule with priority 0 has
  // higher precedence than a rule with priority 1). DENY rules take
  // precedence over ALLOW rules having equal priority.
  int32 priority = 11;

  // [Output Only] Server-defined URL for the resource.
  string selfLink = 12;

  // If source ranges are specified, the firewall will apply only to
  // traffic that has source IP address in these ranges. These ranges must
  // be expressed in CIDR format. One or both of sourceRanges and
  // sourceTags may be set. If both properties are set, the firewall will
  // apply to traffic that has source IP address within sourceRanges OR
  // the source IP that belongs to a tag listed in the sourceTags
  // property. The connection does not need to match both properties for
  // the firewall to apply. Only IPv4 is supported.
  repeated string sourceRanges = 13;

  // If source service accounts are specified, the firewall will apply
  // only to traffic originating from an instance with a service account
  // in this list. Source service accounts cannot be used to control
  // traffic to an instance's external IP address because service accounts
  // are associated with an instance, not an IP address. sourceRanges can
  // be set at the same time as sourceServiceAccounts. If both are set,
  // the firewall will apply to traffic that has source IP address within
  // sourceRanges OR the source IP belongs to an instance with service
  // account listed in sourceServiceAccount. The connection does not need
  // to match both properties for the firewall to apply.
  // sourceServiceAccounts cannot be used at the same time as sourceTags
  // or targetTags.
  repeated string sourceServiceAccounts = 14;

  // If source tags are specified, the firewall rule applies only to
  // traffic with source IPs that match the primary network interfaces of
  // VM instances that have the tag and are in the same VPC network.
  // Source tags cannot be used to control traffic to an instance's
  // external IP address, it only applies to traffic between instances in
  // the same virtual network. Because tags are associated with instances,
  // not IP addresses. One or both of sourceRanges and sourceTags may be
  // set. If both properties are set, the firewall will apply to traffic
  // that has source IP address within sourceRanges OR the source IP that
  // belongs to a tag listed in the sourceTags property. The connection
  // does not need to match both properties for the firewall to apply.
  repeated string sourceTags = 15;

  // A list of service accounts indicating sets of instances located in
  // the network that may make network connections as specified in
  // allowed[]. targetServiceAccounts cannot be used at the same time as
  // targetTags or sourceTags. If neither targetServiceAccounts nor
  // targetTags are specified, the firewall rule applies to all instances
  // on the specified network.
  repeated string targetServiceAccounts = 16;

  // A list of tags that controls which instances the firewall rule
  // applies to. If targetTags are specified, then the firewall rule
  // applies only to instances in the VPC network that have one of those
  // tags. If no targetTags are specified, the firewall rule applies to
  // all instances on the specified network.
  repeated string targetTags = 17;
}

// Contains a list of firewalls.
message FirewallList {
  // [Output Only] Unique identifier for the resource; defined by the
  // server.
  string id = 1;

  // A list of Firewall resources.
  repeated Firewall items = 2;

  // [Output Only] Type of resource. Always compute#firewallList for lists
  // of firewalls.
  string kind = 3;

  // [Output Only] This token allows you to get the next page of results
  // for list requests. If the number of results is larger than
  // maxResults, use the nextPageToken as a value for the query parameter
  // pageToken in the next list request. Subsequent list requests will
  // have their own nextPageToken to continue paging through the results.
  string nextPageToken = 4;

  // [Output Only] Server-defined URL for this resource.
  string selfLink = 5;

  // [Output Only] Informational warning message.
  // [Output Only] Informational warning message.
  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute
    // Engine returns NO_RESULTS_ON_PAGE if there are no results in the
    // response.
    // Valid values:
    //     CLEANUP_FAILED
    //     DEPRECATED_RESOURCE_USED
    //     DEPRECATED_TYPE_USED
    //     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
    //     EXPERIMENTAL_TYPE_USED
    //     EXTERNAL_API_WARNING
    //     FIELD_VALUE_OVERRIDEN
    //     INJECTED_KERNELS_DEPRECATED
    //     MISSING_TYPE_DEPENDENCY
    //     NEXT_HOP_ADDRESS_NOT_ASSIGNED
    //     NEXT_HOP_CANNOT_IP_FORWARD
    //     NEXT_HOP_INSTANCE_NOT_FOUND
    //     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
    //     NEXT_HOP_NOT_RUNNING
    //     NOT_CRITICAL_ERROR
    //     NO_RESULTS_ON_PAGE
    //     REQUIRED_TOS_AGREEMENT
    //     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
    //     RESOURCE_NOT_DELETED
    //     SCHEMA_VALIDATION_IGNORED
    //     SINGLE_INSTANCE_PROPERTY_TEMPLATE
    //     UNDECLARED_PROPERTIES
    //     UNREACHABLE
    string code = 1;

    // [Output Only] Metadata about this warning in key: value format. For
    // example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the
      // key value might be the zone name. Other examples might be a key
      // indicating a deprecated resource and a suggested replacement, or a
      // warning about invalid network settings (for example, if an instance
      // attempts to perform IP forwarding but is not enabled for IP
      // forwarding).
      string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      string value = 2;
    }
    repeated Data data = 2;

    // [Output Only] A human-readable description of the warning code.
    string message = 3;
  }
  Warning warning = 6;
}

// Encapsulates numeric value that can be either absolute or relative.
message FixedOrPercent {
  // [Output Only] Absolute value of VM instances calculated based on the
  // specific mode.
  // 
  // 
  // - If the value is fixed, then the caculated value is equal to the
  // fixed value.
  // - If the value is a percent, then the calculated value is percent/100
  // * targetSize. For example, the calculated value of a 80% of a managed
  // instance group with 150 instances would be (80/100 * 150) = 120 VM
  // instances. If there is a remainder, the number is rounded up.
  int32 calculated = 1;

  // Specifies a fixed number of VM instances. This must be a positive
  // integer.
  int32 fixed = 2;

  // Specifies a percentage of instances between 0 to 100%, inclusive. For
  // example, specify 80 for 80%.
  int32 percent = 3;
}

// A ForwardingRule resource. A ForwardingRule resource specifies which
// pool of target virtual machines to forward a packet to if it matches
// the given [IPAddress, IPProtocol, ports] tuple.
message ForwardingRule {
  // The IP address that this forwarding rule is serving on behalf of.
  // 
  // Addresses are restricted based on the forwarding rule's load
  // balancing scheme (EXTERNAL or INTERNAL) and scope (global or
  // regional).
  // 
  // When the load balancing scheme is EXTERNAL, for global forwarding
  // rules, the address must be a global IP, and for regional forwarding
  // rules, the address must live in the same region as the forwarding
  // rule. If this field is empty, an ephemeral IPv4 address from the same
  // scope (global or regional) will be assigned. A regional forwarding
  // rule supports IPv4 only. A global forwarding rule supports either
  // IPv4 or IPv6.
  // 
  // When the load balancing scheme is INTERNAL, this can only be an RFC
  // 1918 IP address belonging to the network/subnet configured for the
  // forwarding rule. By default, if this field is empty, an ephemeral
  // internal IP address will be automatically allocated from the IP range
  // of the subnet or network configured for this forwarding rule.
  // 
  // An address can be specified either by a literal IP address or a URL
  // reference to an existing Address resource. The following examples are
  // all valid:
  // - 100.1.2.3
  // -
  // https://www.googleapis.com/compute/v1/projects/project/regions/region/addresses/address
  // - projects/project/regions/region/addresses/address
  // - regions/region/addresses/address
  // - global/addresses/address
  // - address
  string IPAddress = 1;

  // The IP protocol to which this rule applies. Valid options are TCP,
  // UDP, ESP, AH, SCTP or ICMP.
  // 
  // When the load balancing scheme is INTERNAL, only TCP and UDP are
  // valid.
  // Valid values:
  //     AH
  //     ESP
  //     ICMP
  //     SCTP
  //     TCP
  //     UDP
  string IPProtocol = 2;

  // This field is not used for external load balancing.
  // 
  // For internal load balancing, this field identifies the BackendService
  // resource to receive the matched traffic.
  string backendService = 3;

  // [Output Only] Creation timestamp in RFC3339 text format.
  string creationTimestamp = 4;

  // An optional description of this resource. Provide this property when
  // you create the resource.
  string description = 5;

  // [Output Only] The unique identifier for the resource. This identifier
  // is defined by the server.
  string id = 6;

  // The IP Version that will be used by this forwarding rule. Valid
  // options are IPV4 or IPV6. This can only be specified for a global
  // forwarding rule.
  // Valid values:
  //     IPV4
  //     IPV6
  //     UNSPECIFIED_VERSION
  string ipVersion = 7;

  // [Output Only] Type of the resource. Always compute#forwardingRule for
  // Forwarding Rule resources.
  string kind = 8;

  // A fingerprint for the labels being applied to this resource, which is
  // essentially a hash of the labels set used for optimistic locking. The
  // fingerprint is initially generated by Compute Engine and changes
  // after every request to modify or update labels. You must always
  // provide an up-to-date fingerprint hash in order to update or change
  // labels.
  // 
  // To see the latest fingerprint, make a get() request to retrieve a
  // ForwardingRule.
  string labelFingerprint = 9;

  // Labels to apply to this resource. These can be later modified by the
  // setLabels method. Each label key/value pair must comply with RFC1035.
  // Label values may be empty.
  map<string, string> labels = 10;

  // This signifies what the ForwardingRule will be used for and can only
  // take the following values: INTERNAL, EXTERNAL The value of INTERNAL
  // means that this will be used for Internal Network Load Balancing
  // (TCP, UDP). The value of EXTERNAL means that this will be used for
  // External Load Balancing (HTTP(S) LB, External TCP/UDP LB, SSL Proxy)
  // Valid values:
  //     EXTERNAL
  //     INTERNAL
  //     INVALID
  string loadBalancingScheme = 11;

  // Name of the resource; provided by the client when the resource is
  // created. The name must be 1-63 characters long, and comply with
  // RFC1035. Specifically, the name must be 1-63 characters long and
  // match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means
  // the first character must be a lowercase letter, and all following
  // characters must be a dash, lowercase letter, or digit, except the
  // last character, which cannot be a dash.
  string name = 12;

  // This field is not used for external load balancing.
  // 
  // For internal load balancing, this field identifies the network that
  // the load balanced IP should belong to for this Forwarding Rule. If
  // this field is not specified, the default network will be used.
  string network = 13;

  // This field is used along with the target field for TargetHttpProxy,
  // TargetHttpsProxy, TargetSslProxy, TargetTcpProxy, TargetVpnGateway,
  // TargetPool, TargetInstance.
  // 
  // Applicable only when IPProtocol is TCP, UDP, or SCTP, only packets
  // addressed to ports in the specified range will be forwarded to
  // target. Forwarding rules with the same [IPAddress, IPProtocol] pair
  // must have disjoint port ranges.
  // 
  // Some types of forwarding target have constraints on the acceptable
  // ports:
  // - TargetHttpProxy: 80, 8080
  // - TargetHttpsProxy: 443
  // - TargetTcpProxy: 25, 43, 110, 143, 195, 443, 465, 587, 700, 993,
  // 995, 1883, 5222
  // - TargetSslProxy: 25, 43, 110, 143, 195, 443, 465, 587, 700, 993,
  // 995, 1883, 5222
  // - TargetVpnGateway: 500, 4500
  // -
  string portRange = 14;

  // This field is used along with the backend_service field for internal
  // load balancing.
  // 
  // When the load balancing scheme is INTERNAL, a single port or a comma
  // separated list of ports can be configured. Only packets addressed to
  // these ports will be forwarded to the backends configured with this
  // forwarding rule.
  // 
  // You may specify a maximum of up to 5 ports.
  repeated string ports = 15;

  // [Output Only] URL of the region where the regional forwarding rule
  // resides. This field is not applicable to global forwarding rules.
  string region = 16;

  // [Output Only] Server-defined URL for the resource.
  string selfLink = 17;

  // An optional prefix to the service name for this Forwarding Rule. If
  // specified, will be the first label of the fully qualified service
  // name.
  // 
  // The label must be 1-63 characters long, and comply with RFC1035.
  // Specifically, the label must be 1-63 characters long and match the
  // regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first
  // character must be a lowercase letter, and all following characters
  // must be a dash, lowercase letter, or digit, except the last
  // character, which cannot be a dash.
  // 
  // This field is only used for internal load balancing.
  string serviceLabel = 18;

  // [Output Only] The internal fully qualified service name for this
  // Forwarding Rule.
  // 
  // This field is only used for internal load balancing.
  string serviceName = 19;

  // This field is not used for external load balancing.
  // 
  // For internal load balancing, this field identifies the subnetwork
  // that the load balanced IP should belong to for this Forwarding Rule.
  // 
  // If the network specified is in auto subnet mode, this field is
  // optional. However, if the network is in custom subnet mode, a
  // subnetwork must be specified.
  string subnetwork = 20;

  // The URL of the target resource to receive the matched traffic. For
  // regional forwarding rules, this target must live in the same region
  // as the forwarding rule. For global forwarding rules, this target must
  // be a global load balancing resource. The forwarded traffic must be of
  // a type appropriate to the target object.
  // 
  // This field is not used for internal load balancing.
  string target = 21;
}

message ForwardingRuleAggregatedList {
  // [Output Only] Unique identifier for the resource; defined by the
  // server.
  string id = 1;

  // A list of ForwardingRulesScopedList resources.
  map<string, ForwardingRulesScopedList> items = 2;

  // [Output Only] Type of resource. Always
  // compute#forwardingRuleAggregatedList for lists of forwarding rules.
  string kind = 3;

  // [Output Only] This token allows you to get the next page of results
  // for list requests. If the number of results is larger than
  // maxResults, use the nextPageToken as a value for the query parameter
  // pageToken in the next list request. Subsequent list requests will
  // have their own nextPageToken to continue paging through the results.
  string nextPageToken = 4;

  // [Output Only] Server-defined URL for this resource.
  string selfLink = 5;

  // [Output Only] Informational warning message.
  // [Output Only] Informational warning message.
  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute
    // Engine returns NO_RESULTS_ON_PAGE if there are no results in the
    // response.
    // Valid values:
    //     CLEANUP_FAILED
    //     DEPRECATED_RESOURCE_USED
    //     DEPRECATED_TYPE_USED
    //     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
    //     EXPERIMENTAL_TYPE_USED
    //     EXTERNAL_API_WARNING
    //     FIELD_VALUE_OVERRIDEN
    //     INJECTED_KERNELS_DEPRECATED
    //     MISSING_TYPE_DEPENDENCY
    //     NEXT_HOP_ADDRESS_NOT_ASSIGNED
    //     NEXT_HOP_CANNOT_IP_FORWARD
    //     NEXT_HOP_INSTANCE_NOT_FOUND
    //     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
    //     NEXT_HOP_NOT_RUNNING
    //     NOT_CRITICAL_ERROR
    //     NO_RESULTS_ON_PAGE
    //     REQUIRED_TOS_AGREEMENT
    //     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
    //     RESOURCE_NOT_DELETED
    //     SCHEMA_VALIDATION_IGNORED
    //     SINGLE_INSTANCE_PROPERTY_TEMPLATE
    //     UNDECLARED_PROPERTIES
    //     UNREACHABLE
    string code = 1;

    // [Output Only] Metadata about this warning in key: value format. For
    // example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the
      // key value might be the zone name. Other examples might be a key
      // indicating a deprecated resource and a suggested replacement, or a
      // warning about invalid network settings (for example, if an instance
      // attempts to perform IP forwarding but is not enabled for IP
      // forwarding).
      string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      string value = 2;
    }
    repeated Data data = 2;

    // [Output Only] A human-readable description of the warning code.
    string message = 3;
  }
  Warning warning = 6;
}

// Contains a list of ForwardingRule resources.
message ForwardingRuleList {
  // [Output Only] Unique identifier for the resource; defined by the
  // server.
  string id = 1;

  // A list of ForwardingRule resources.
  repeated ForwardingRule items = 2;

  // Type of resource.
  string kind = 3;

  // [Output Only] This token allows you to get the next page of results
  // for list requests. If the number of results is larger than
  // maxResults, use the nextPageToken as a value for the query parameter
  // pageToken in the next list request. Subsequent list requests will
  // have their own nextPageToken to continue paging through the results.
  string nextPageToken = 4;

  // [Output Only] Server-defined URL for this resource.
  string selfLink = 5;

  // [Output Only] Informational warning message.
  // [Output Only] Informational warning message.
  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute
    // Engine returns NO_RESULTS_ON_PAGE if there are no results in the
    // response.
    // Valid values:
    //     CLEANUP_FAILED
    //     DEPRECATED_RESOURCE_USED
    //     DEPRECATED_TYPE_USED
    //     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
    //     EXPERIMENTAL_TYPE_USED
    //     EXTERNAL_API_WARNING
    //     FIELD_VALUE_OVERRIDEN
    //     INJECTED_KERNELS_DEPRECATED
    //     MISSING_TYPE_DEPENDENCY
    //     NEXT_HOP_ADDRESS_NOT_ASSIGNED
    //     NEXT_HOP_CANNOT_IP_FORWARD
    //     NEXT_HOP_INSTANCE_NOT_FOUND
    //     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
    //     NEXT_HOP_NOT_RUNNING
    //     NOT_CRITICAL_ERROR
    //     NO_RESULTS_ON_PAGE
    //     REQUIRED_TOS_AGREEMENT
    //     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
    //     RESOURCE_NOT_DELETED
    //     SCHEMA_VALIDATION_IGNORED
    //     SINGLE_INSTANCE_PROPERTY_TEMPLATE
    //     UNDECLARED_PROPERTIES
    //     UNREACHABLE
    string code = 1;

    // [Output Only] Metadata about this warning in key: value format. For
    // example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the
      // key value might be the zone name. Other examples might be a key
      // indicating a deprecated resource and a suggested replacement, or a
      // warning about invalid network settings (for example, if an instance
      // attempts to perform IP forwarding but is not enabled for IP
      // forwarding).
      string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      string value = 2;
    }
    repeated Data data = 2;

    // [Output Only] A human-readable description of the warning code.
    string message = 3;
  }
  Warning warning = 6;
}

message ForwardingRulesScopedList {
  // List of forwarding rules contained in this scope.
  repeated ForwardingRule forwardingRules = 1;

  // Informational warning which replaces the list of forwarding rules
  // when the list is empty.
  // Informational warning which replaces the list of forwarding rules
  // when the list is empty.
  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute
    // Engine returns NO_RESULTS_ON_PAGE if there are no results in the
    // response.
    // Valid values:
    //     CLEANUP_FAILED
    //     DEPRECATED_RESOURCE_USED
    //     DEPRECATED_TYPE_USED
    //     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
    //     EXPERIMENTAL_TYPE_USED
    //     EXTERNAL_API_WARNING
    //     FIELD_VALUE_OVERRIDEN
    //     INJECTED_KERNELS_DEPRECATED
    //     MISSING_TYPE_DEPENDENCY
    //     NEXT_HOP_ADDRESS_NOT_ASSIGNED
    //     NEXT_HOP_CANNOT_IP_FORWARD
    //     NEXT_HOP_INSTANCE_NOT_FOUND
    //     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
    //     NEXT_HOP_NOT_RUNNING
    //     NOT_CRITICAL_ERROR
    //     NO_RESULTS_ON_PAGE
    //     REQUIRED_TOS_AGREEMENT
    //     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
    //     RESOURCE_NOT_DELETED
    //     SCHEMA_VALIDATION_IGNORED
    //     SINGLE_INSTANCE_PROPERTY_TEMPLATE
    //     UNDECLARED_PROPERTIES
    //     UNREACHABLE
    string code = 1;

    // [Output Only] Metadata about this warning in key: value format. For
    // example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the
      // key value might be the zone name. Other examples might be a key
      // indicating a deprecated resource and a suggested replacement, or a
      // warning about invalid network settings (for example, if an instance
      // attempts to perform IP forwarding but is not enabled for IP
      // forwarding).
      string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      string value = 2;
    }
    repeated Data data = 2;

    // [Output Only] A human-readable description of the warning code.
    string message = 3;
  }
  Warning warning = 2;
}

message GlobalSetLabelsRequest {
  // The fingerprint of the previous set of labels for this resource, used
  // to detect conflicts. The fingerprint is initially generated by
  // Compute Engine and changes after every request to modify or update
  // labels. You must always provide an up-to-date fingerprint hash when
  // updating or changing labels. Make a get() request to the resource to
  // get the latest fingerprint.
  string labelFingerprint = 1;

  // A list of labels to apply for this resource. Each label key & value
  // must comply with RFC1035. Specifically, the name must be 1-63
  // characters long and match the regular expression
  // [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a
  // lowercase letter, and all following characters must be a dash,
  // lowercase letter, or digit, except the last character, which cannot
  // be a dash. For example, "webserver-frontend": "images". A label value
  // can also be empty (e.g. "my-label": "").
  map<string, string> labels = 2;
}

// Guest OS features.
message GuestOsFeature {
  // The type of supported feature. Currently only VIRTIO_SCSI_MULTIQUEUE
  // is supported. For newer Windows images, the server might also
  // populate this property with the value WINDOWS to indicate that this
  // is a Windows image.
  // Valid values:
  //     FEATURE_TYPE_UNSPECIFIED
  //     MULTI_IP_SUBNET
  //     SECURE_BOOT
  //     UEFI_COMPATIBLE
  //     VIRTIO_SCSI_MULTIQUEUE
  //     WINDOWS
  string type = 1;
}

message HTTPHealthCheck {
  // The value of the host header in the HTTP health check request. If
  // left empty (default value), the IP on behalf of which this health
  // check is performed will be used.
  string host = 1;

  // The TCP port number for the health check request. The default value
  // is 80. Valid values are 1 through 65535.
  int32 port = 2;

  // Port name as defined in InstanceGroup#NamedPort#name. If both port
  // and port_name are defined, port takes precedence.
  string portName = 3;

  // Specifies the type of proxy header to append before sending data to
  // the backend, either NONE or PROXY_V1. The default is NONE.
  // Valid values:
  //     NONE
  //     PROXY_V1
  string proxyHeader = 4;

  // The request path of the HTTP health check request. The default value
  // is /.
  string requestPath = 5;

  // The string to match anywhere in the first 1024 bytes of the response
  // body. If left empty (the default value), the status code determines
  // health. The response data can only be ASCII.
  string response = 6;
}

message HTTPSHealthCheck {
  // The value of the host header in the HTTPS health check request. If
  // left empty (default value), the IP on behalf of which this health
  // check is performed will be used.
  string host = 1;

  // The TCP port number for the health check request. The default value
  // is 443. Valid values are 1 through 65535.
  int32 port = 2;

  // Port name as defined in InstanceGroup#NamedPort#name. If both port
  // and port_name are defined, port takes precedence.
  string portName = 3;

  // Specifies the type of proxy header to append before sending data to
  // the backend, either NONE or PROXY_V1. The default is NONE.
  // Valid values:
  //     NONE
  //     PROXY_V1
  string proxyHeader = 4;

  // The request path of the HTTPS health check request. The default value
  // is /.
  string requestPath = 5;

  // The string to match anywhere in the first 1024 bytes of the response
  // body. If left empty (the default value), the status code determines
  // health. The response data can only be ASCII.
  string response = 6;
}

// An HealthCheck resource. This resource defines a template for how
// individual virtual machines should be checked for health, via one of
// the supported protocols.
message HealthCheck {
  // How often (in seconds) to send a health check. The default value is 5
  // seconds.
  int32 checkIntervalSec = 1;

  // [Output Only] Creation timestamp in 3339 text format.
  string creationTimestamp = 2;

  // An optional description of this resource. Provide this property when
  // you create the resource.
  string description = 3;

  // A so-far unhealthy instance will be marked healthy after this many
  // consecutive successes. The default value is 2.
  int32 healthyThreshold = 4;

  HTTPHealthCheck httpHealthCheck = 5;

  HTTPSHealthCheck httpsHealthCheck = 6;

  // [Output Only] The unique identifier for the resource. This identifier
  // is defined by the server.
  string id = 7;

  // Type of the resource.
  string kind = 8;

  // Name of the resource. Provided by the client when the resource is
  // created. The name must be 1-63 characters long, and comply with
  // RFC1035. Specifically, the name must be 1-63 characters long and
  // match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means
  // the first character must be a lowercase letter, and all following
  // characters must be a dash, lowercase letter, or digit, except the
  // last character, which cannot be a dash.
  string name = 9;

  // [Output Only] Server-defined URL for the resource.
  string selfLink = 10;

  SSLHealthCheck sslHealthCheck = 11;

  TCPHealthCheck tcpHealthCheck = 12;

  // How long (in seconds) to wait before claiming failure. The default
  // value is 5 seconds. It is invalid for timeoutSec to have greater
  // value than checkIntervalSec.
  int32 timeoutSec = 13;

  // Specifies the type of the healthCheck, either TCP, SSL, HTTP or
  // HTTPS. If not specified, the default is TCP. Exactly one of the
  // protocol-specific health check field must be specified, which must
  // match type field.
  // Valid values:
  //     HTTP
  //     HTTPS
  //     INVALID
  //     SSL
  //     TCP
  //     UDP
  string type = 14;

  UDPHealthCheck udpHealthCheck = 15;

  // A so-far healthy instance will be marked unhealthy after this many
  // consecutive failures. The default value is 2.
  int32 unhealthyThreshold = 16;
}

// Contains a list of HealthCheck resources.
message HealthCheckList {
  // [Output Only] Unique identifier for the resource; defined by the
  // server.
  string id = 1;

  // A list of HealthCheck resources.
  repeated HealthCheck items = 2;

  // Type of resource.
  string kind = 3;

  // [Output Only] This token allows you to get the next page of results
  // for list requests. If the number of results is larger than
  // maxResults, use the nextPageToken as a value for the query parameter
  // pageToken in the next list request. Subsequent list requests will
  // have their own nextPageToken to continue paging through the results.
  string nextPageToken = 4;

  // [Output Only] Server-defined URL for this resource.
  string selfLink = 5;

  // [Output Only] Informational warning message.
  // [Output Only] Informational warning message.
  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute
    // Engine returns NO_RESULTS_ON_PAGE if there are no results in the
    // response.
    // Valid values:
    //     CLEANUP_FAILED
    //     DEPRECATED_RESOURCE_USED
    //     DEPRECATED_TYPE_USED
    //     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
    //     EXPERIMENTAL_TYPE_USED
    //     EXTERNAL_API_WARNING
    //     FIELD_VALUE_OVERRIDEN
    //     INJECTED_KERNELS_DEPRECATED
    //     MISSING_TYPE_DEPENDENCY
    //     NEXT_HOP_ADDRESS_NOT_ASSIGNED
    //     NEXT_HOP_CANNOT_IP_FORWARD
    //     NEXT_HOP_INSTANCE_NOT_FOUND
    //     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
    //     NEXT_HOP_NOT_RUNNING
    //     NOT_CRITICAL_ERROR
    //     NO_RESULTS_ON_PAGE
    //     REQUIRED_TOS_AGREEMENT
    //     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
    //     RESOURCE_NOT_DELETED
    //     SCHEMA_VALIDATION_IGNORED
    //     SINGLE_INSTANCE_PROPERTY_TEMPLATE
    //     UNDECLARED_PROPERTIES
    //     UNREACHABLE
    string code = 1;

    // [Output Only] Metadata about this warning in key: value format. For
    // example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the
      // key value might be the zone name. Other examples might be a key
      // indicating a deprecated resource and a suggested replacement, or a
      // warning about invalid network settings (for example, if an instance
      // attempts to perform IP forwarding but is not enabled for IP
      // forwarding).
      string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      string value = 2;
    }
    repeated Data data = 2;

    // [Output Only] A human-readable description of the warning code.
    string message = 3;
  }
  Warning warning = 6;
}

// A full or valid partial URL to a health check. For example, the
// following are valid URLs:
// -
// https://www.googleapis.com/compute/beta/projects/project-id/global/httpHealthChecks/health-check
// - projects/project-id/global/httpHealthChecks/health-check
// - global/httpHealthChecks/health-check
message HealthCheckReference {
  string healthCheck = 1;
}

message HealthStatus {
  // Health state of the instance.
  // Valid values:
  //     HEALTHY
  //     UNHEALTHY
  string healthState = 1;

  // URL of the instance resource.
  string instance = 2;

  // The IP address represented by this resource.
  string ipAddress = 3;

  // The port on the instance.
  int32 port = 4;
}

// UrlMaps A host-matching rule for a URL. If matched, will use the
// named PathMatcher to select the BackendService.
message HostRule {
  // An optional description of this resource. Provide this property when
  // you create the resource.
  string description = 1;

  // The list of host patterns to match. They must be valid hostnames,
  // except * will match any string of ([a-z0-9-.]*). In that case, * must
  // be the first character and must be followed in the pattern by either
  // - or ..
  repeated string hosts = 2;

  // The name of the PathMatcher to use to match the path portion of the
  // URL if the hostRule matches the URL's host portion.
  string pathMatcher = 3;
}

// An HttpHealthCheck resource. This resource defines a template for how
// individual instances should be checked for health, via HTTP.
message HttpHealthCheck {
  // How often (in seconds) to send a health check. The default value is 5
  // seconds.
  int32 checkIntervalSec = 1;

  // [Output Only] Creation timestamp in RFC3339 text format.
  string creationTimestamp = 2;

  // An optional description of this resource. Provide this property when
  // you create the resource.
  string description = 3;

  // A so-far unhealthy instance will be marked healthy after this many
  // consecutive successes. The default value is 2.
  int32 healthyThreshold = 4;

  // The value of the host header in the HTTP health check request. If
  // left empty (default value), the public IP on behalf of which this
  // health check is performed will be used.
  string host = 5;

  // [Output Only] The unique identifier for the resource. This identifier
  // is defined by the server.
  string id = 6;

  // [Output Only] Type of the resource. Always compute#httpHealthCheck
  // for HTTP health checks.
  string kind = 7;

  // Name of the resource. Provided by the client when the resource is
  // created. The name must be 1-63 characters long, and comply with
  // RFC1035. Specifically, the name must be 1-63 characters long and
  // match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means
  // the first character must be a lowercase letter, and all following
  // characters must be a dash, lowercase letter, or digit, except the
  // last character, which cannot be a dash.
  string name = 8;

  // The TCP port number for the HTTP health check request. The default
  // value is 80.
  int32 port = 9;

  // The request path of the HTTP health check request. The default value
  // is /.
  string requestPath = 10;

  // [Output Only] Server-defined URL for the resource.
  string selfLink = 11;

  // How long (in seconds) to wait before claiming failure. The default
  // value is 5 seconds. It is invalid for timeoutSec to have greater
  // value than checkIntervalSec.
  int32 timeoutSec = 12;

  // A so-far healthy instance will be marked unhealthy after this many
  // consecutive failures. The default value is 2.
  int32 unhealthyThreshold = 13;
}

// Contains a list of HttpHealthCheck resources.
message HttpHealthCheckList {
  // [Output Only] Unique identifier for the resource; defined by the
  // server.
  string id = 1;

  // A list of HttpHealthCheck resources.
  repeated HttpHealthCheck items = 2;

  // Type of resource.
  string kind = 3;

  // [Output Only] This token allows you to get the next page of results
  // for list requests. If the number of results is larger than
  // maxResults, use the nextPageToken as a value for the query parameter
  // pageToken in the next list request. Subsequent list requests will
  // have their own nextPageToken to continue paging through the results.
  string nextPageToken = 4;

  // [Output Only] Server-defined URL for this resource.
  string selfLink = 5;

  // [Output Only] Informational warning message.
  // [Output Only] Informational warning message.
  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute
    // Engine returns NO_RESULTS_ON_PAGE if there are no results in the
    // response.
    // Valid values:
    //     CLEANUP_FAILED
    //     DEPRECATED_RESOURCE_USED
    //     DEPRECATED_TYPE_USED
    //     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
    //     EXPERIMENTAL_TYPE_USED
    //     EXTERNAL_API_WARNING
    //     FIELD_VALUE_OVERRIDEN
    //     INJECTED_KERNELS_DEPRECATED
    //     MISSING_TYPE_DEPENDENCY
    //     NEXT_HOP_ADDRESS_NOT_ASSIGNED
    //     NEXT_HOP_CANNOT_IP_FORWARD
    //     NEXT_HOP_INSTANCE_NOT_FOUND
    //     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
    //     NEXT_HOP_NOT_RUNNING
    //     NOT_CRITICAL_ERROR
    //     NO_RESULTS_ON_PAGE
    //     REQUIRED_TOS_AGREEMENT
    //     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
    //     RESOURCE_NOT_DELETED
    //     SCHEMA_VALIDATION_IGNORED
    //     SINGLE_INSTANCE_PROPERTY_TEMPLATE
    //     UNDECLARED_PROPERTIES
    //     UNREACHABLE
    string code = 1;

    // [Output Only] Metadata about this warning in key: value format. For
    // example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the
      // key value might be the zone name. Other examples might be a key
      // indicating a deprecated resource and a suggested replacement, or a
      // warning about invalid network settings (for example, if an instance
      // attempts to perform IP forwarding but is not enabled for IP
      // forwarding).
      string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      string value = 2;
    }
    repeated Data data = 2;

    // [Output Only] A human-readable description of the warning code.
    string message = 3;
  }
  Warning warning = 6;
}

// An HttpsHealthCheck resource. This resource defines a template for
// how individual instances should be checked for health, via HTTPS.
message HttpsHealthCheck {
  // How often (in seconds) to send a health check. The default value is 5
  // seconds.
  int32 checkIntervalSec = 1;

  // [Output Only] Creation timestamp in RFC3339 text format.
  string creationTimestamp = 2;

  // An optional description of this resource. Provide this property when
  // you create the resource.
  string description = 3;

  // A so-far unhealthy instance will be marked healthy after this many
  // consecutive successes. The default value is 2.
  int32 healthyThreshold = 4;

  // The value of the host header in the HTTPS health check request. If
  // left empty (default value), the public IP on behalf of which this
  // health check is performed will be used.
  string host = 5;

  // [Output Only] The unique identifier for the resource. This identifier
  // is defined by the server.
  string id = 6;

  // Type of the resource.
  string kind = 7;

  // Name of the resource. Provided by the client when the resource is
  // created. The name must be 1-63 characters long, and comply with
  // RFC1035. Specifically, the name must be 1-63 characters long and
  // match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means
  // the first character must be a lowercase letter, and all following
  // characters must be a dash, lowercase letter, or digit, except the
  // last character, which cannot be a dash.
  string name = 8;

  // The TCP port number for the HTTPS health check request. The default
  // value is 443.
  int32 port = 9;

  // The request path of the HTTPS health check request. The default value
  // is "/".
  string requestPath = 10;

  // [Output Only] Server-defined URL for the resource.
  string selfLink = 11;

  // How long (in seconds) to wait before claiming failure. The default
  // value is 5 seconds. It is invalid for timeoutSec to have a greater
  // value than checkIntervalSec.
  int32 timeoutSec = 12;

  // A so-far healthy instance will be marked unhealthy after this many
  // consecutive failures. The default value is 2.
  int32 unhealthyThreshold = 13;
}

// Contains a list of HttpsHealthCheck resources.
message HttpsHealthCheckList {
  // [Output Only] Unique identifier for the resource; defined by the
  // server.
  string id = 1;

  // A list of HttpsHealthCheck resources.
  repeated HttpsHealthCheck items = 2;

  // Type of resource.
  string kind = 3;

  // [Output Only] This token allows you to get the next page of results
  // for list requests. If the number of results is larger than
  // maxResults, use the nextPageToken as a value for the query parameter
  // pageToken in the next list request. Subsequent list requests will
  // have their own nextPageToken to continue paging through the results.
  string nextPageToken = 4;

  // [Output Only] Server-defined URL for this resource.
  string selfLink = 5;

  // [Output Only] Informational warning message.
  // [Output Only] Informational warning message.
  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute
    // Engine returns NO_RESULTS_ON_PAGE if there are no results in the
    // response.
    // Valid values:
    //     CLEANUP_FAILED
    //     DEPRECATED_RESOURCE_USED
    //     DEPRECATED_TYPE_USED
    //     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
    //     EXPERIMENTAL_TYPE_USED
    //     EXTERNAL_API_WARNING
    //     FIELD_VALUE_OVERRIDEN
    //     INJECTED_KERNELS_DEPRECATED
    //     MISSING_TYPE_DEPENDENCY
    //     NEXT_HOP_ADDRESS_NOT_ASSIGNED
    //     NEXT_HOP_CANNOT_IP_FORWARD
    //     NEXT_HOP_INSTANCE_NOT_FOUND
    //     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
    //     NEXT_HOP_NOT_RUNNING
    //     NOT_CRITICAL_ERROR
    //     NO_RESULTS_ON_PAGE
    //     REQUIRED_TOS_AGREEMENT
    //     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
    //     RESOURCE_NOT_DELETED
    //     SCHEMA_VALIDATION_IGNORED
    //     SINGLE_INSTANCE_PROPERTY_TEMPLATE
    //     UNDECLARED_PROPERTIES
    //     UNREACHABLE
    string code = 1;

    // [Output Only] Metadata about this warning in key: value format. For
    // example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the
      // key value might be the zone name. Other examples might be a key
      // indicating a deprecated resource and a suggested replacement, or a
      // warning about invalid network settings (for example, if an instance
      // attempts to perform IP forwarding but is not enabled for IP
      // forwarding).
      string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      string value = 2;
    }
    repeated Data data = 2;

    // [Output Only] A human-readable description of the warning code.
    string message = 3;
  }
  Warning warning = 6;
}

// An Image resource.
message Image {
  // Size of the image tar.gz archive stored in Google Cloud Storage (in
  // bytes).
  string archiveSizeBytes = 1;

  // [Output Only] Creation timestamp in RFC3339 text format.
  string creationTimestamp = 2;

  // The deprecation status associated with this image.
  DeprecationStatus deprecated = 3;

  // An optional description of this resource. Provide this property when
  // you create the resource.
  string description = 4;

  // Size of the image when restored onto a persistent disk (in GB).
  string diskSizeGb = 5;

  // The name of the image family to which this image belongs. You can
  // create disks by specifying an image family instead of a specific
  // image name. The image family always returns its latest image that is
  // not deprecated. The name of the image family must comply with
  // RFC1035.
  string family = 6;

  // A list of features to enable on the guest OS. Applicable for bootable
  // images only. Currently, only one feature can be enabled,
  // VIRTIO_SCSI_MULTIQUEUE, which allows each virtual CPU to have its own
  // queue. For Windows images, you can only enable VIRTIO_SCSI_MULTIQUEUE
  // on images with driver version 1.2.0.1621 or higher. Linux images with
  // kernel versions 3.17 and higher will support VIRTIO_SCSI_MULTIQUEUE.
  // 
  // For newer Windows images, the server might also populate this
  // property with the value WINDOWS to indicate that this is a Windows
  // image.
  repeated GuestOsFeature guestOsFeatures = 7;

  // [Output Only] The unique identifier for the resource. This identifier
  // is defined by the server.
  string id = 8;

  // Encrypts the image using a customer-supplied encryption key.
  // 
  // After you encrypt an image with a customer-supplied key, you must
  // provide the same key if you use the image later (e.g. to create a
  // disk from the image).
  // 
  // Customer-supplied encryption keys do not protect access to metadata
  // of the disk.
  // 
  // If you do not provide an encryption key when creating the image, then
  // the disk will be encrypted using an automatically generated key and
  // you do not need to provide a key to use the image later.
  CustomerEncryptionKey imageEncryptionKey = 9;

  // [Output Only] Type of the resource. Always compute#image for images.
  string kind = 10;

  // A fingerprint for the labels being applied to this image, which is
  // essentially a hash of the labels used for optimistic locking. The
  // fingerprint is initially generated by Compute Engine and changes
  // after every request to modify or update labels. You must always
  // provide an up-to-date fingerprint hash in order to update or change
  // labels.
  // 
  // To see the latest fingerprint, make a get() request to retrieve an
  // image.
  string labelFingerprint = 11;

  // Labels to apply to this image. These can be later modified by the
  // setLabels method.
  map<string, string> labels = 12;

  // Any applicable license URI.
  repeated string licenses = 13;

  // Name of the resource; provided by the client when the resource is
  // created. The name must be 1-63 characters long, and comply with
  // RFC1035. Specifically, the name must be 1-63 characters long and
  // match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means
  // the first character must be a lowercase letter, and all following
  // characters must be a dash, lowercase letter, or digit, except the
  // last character, which cannot be a dash.
  string name = 14;

  // The parameters of the raw disk image.
  // The parameters of the raw disk image.
  message RawDisk {
    // The format used to encode and transmit the block device, which should
    // be TAR. This is just a container and transmission format and not a
    // runtime format. Provided by the client when the disk image is
    // created.
    // Valid values:
    //     TAR
    string containerType = 1;

    // An optional SHA1 checksum of the disk image before unpackaging;
    // provided by the client when the disk image is created.
    string sha1Checksum = 2;

    // The full Google Cloud Storage URL where the disk image is stored. You
    // must provide either this property or the sourceDisk property but not
    // both.
    string source = 3;
  }
  RawDisk rawDisk = 15;

  // [Output Only] Server-defined URL for the resource.
  string selfLink = 16;

  // URL of the source disk used to create this image. This can be a full
  // or valid partial URL. You must provide either this property or the
  // rawDisk.source property but not both to create an image. For example,
  // the following are valid values:
  // -
  // https://www.googleapis.com/compute/v1/projects/project/zones/zone/disks/disk
  // - projects/project/zones/zone/disks/disk
  // - zones/zone/disks/disk
  string sourceDisk = 17;

  // The customer-supplied encryption key of the source disk. Required if
  // the source disk is protected by a customer-supplied encryption key.
  CustomerEncryptionKey sourceDiskEncryptionKey = 18;

  // The ID value of the disk used to create this image. This value may be
  // used to determine whether the image was taken from the current or a
  // previous instance of a given disk name.
  string sourceDiskId = 19;

  // URL of the source image used to create this image. This can be a full
  // or valid partial URL. You must provide exactly one of:
  // - this property, or
  // - the rawDisk.source property, or
  // - the sourceDisk property   in order to create an image.
  string sourceImage = 20;

  // The customer-supplied encryption key of the source image. Required if
  // the source image is protected by a customer-supplied encryption key.
  CustomerEncryptionKey sourceImageEncryptionKey = 21;

  // [Output Only] The ID value of the image used to create this image.
  // This value may be used to determine whether the image was taken from
  // the current or a previous instance of a given image name.
  string sourceImageId = 22;

  // The type of the image used to create this disk. The default and only
  // value is RAW
  // Valid values:
  //     RAW
  string sourceType = 23;

  // [Output Only] The status of the image. An image can be used to create
  // other resources, such as instances, only after the image has been
  // successfully created and the status is set to READY. Possible values
  // are FAILED, PENDING, or READY.
  // Valid values:
  //     FAILED
  //     PENDING
  //     READY
  string status = 24;
}

// Contains a list of images.
message ImageList {
  // [Output Only] Unique identifier for the resource; defined by the
  // server.
  string id = 1;

  // A list of Image resources.
  repeated Image items = 2;

  // Type of resource.
  string kind = 3;

  // [Output Only] This token allows you to get the next page of results
  // for list requests. If the number of results is larger than
  // maxResults, use the nextPageToken as a value for the query parameter
  // pageToken in the next list request. Subsequent list requests will
  // have their own nextPageToken to continue paging through the results.
  string nextPageToken = 4;

  // [Output Only] Server-defined URL for this resource.
  string selfLink = 5;

  // [Output Only] Informational warning message.
  // [Output Only] Informational warning message.
  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute
    // Engine returns NO_RESULTS_ON_PAGE if there are no results in the
    // response.
    // Valid values:
    //     CLEANUP_FAILED
    //     DEPRECATED_RESOURCE_USED
    //     DEPRECATED_TYPE_USED
    //     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
    //     EXPERIMENTAL_TYPE_USED
    //     EXTERNAL_API_WARNING
    //     FIELD_VALUE_OVERRIDEN
    //     INJECTED_KERNELS_DEPRECATED
    //     MISSING_TYPE_DEPENDENCY
    //     NEXT_HOP_ADDRESS_NOT_ASSIGNED
    //     NEXT_HOP_CANNOT_IP_FORWARD
    //     NEXT_HOP_INSTANCE_NOT_FOUND
    //     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
    //     NEXT_HOP_NOT_RUNNING
    //     NOT_CRITICAL_ERROR
    //     NO_RESULTS_ON_PAGE
    //     REQUIRED_TOS_AGREEMENT
    //     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
    //     RESOURCE_NOT_DELETED
    //     SCHEMA_VALIDATION_IGNORED
    //     SINGLE_INSTANCE_PROPERTY_TEMPLATE
    //     UNDECLARED_PROPERTIES
    //     UNREACHABLE
    string code = 1;

    // [Output Only] Metadata about this warning in key: value format. For
    // example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the
      // key value might be the zone name. Other examples might be a key
      // indicating a deprecated resource and a suggested replacement, or a
      // warning about invalid network settings (for example, if an instance
      // attempts to perform IP forwarding but is not enabled for IP
      // forwarding).
      string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      string value = 2;
    }
    repeated Data data = 2;

    // [Output Only] A human-readable description of the warning code.
    string message = 3;
  }
  Warning warning = 6;
}

// An Instance resource.
message Instance {
  // Allows this instance to send and receive packets with non-matching
  // destination or source IPs. This is required if you plan to use this
  // instance to forward routes. For more information, see Enabling IP
  // Forwarding.
  bool canIpForward = 1;

  // [Output Only] The CPU platform used by this instance.
  string cpuPlatform = 2;

  // [Output Only] Creation timestamp in RFC3339 text format.
  string creationTimestamp = 3;

  // Whether the resource should be protected against deletion.
  bool deletionProtection = 4;

  // An optional description of this resource. Provide this property when
  // you create the resource.
  string description = 5;

  // Array of disks associated with this instance. Persistent disks must
  // be created before you can assign them.
  repeated AttachedDisk disks = 6;

  // List of the type and count of accelerator cards attached to the
  // instance.
  repeated AcceleratorConfig guestAccelerators = 7;

  // [Output Only] The unique identifier for the resource. This identifier
  // is defined by the server.
  string id = 8;

  // [Output Only] Type of the resource. Always compute#instance for
  // instances.
  string kind = 9;

  // A fingerprint for this request, which is essentially a hash of the
  // metadata's contents and used for optimistic locking. The fingerprint
  // is initially generated by Compute Engine and changes after every
  // request to modify or update metadata. You must always provide an
  // up-to-date fingerprint hash in order to update or change metadata.
  // 
  // To see the latest fingerprint, make get() request to the instance.
  string labelFingerprint = 10;

  // Labels to apply to this instance. These can be later modified by the
  // setLabels method.
  map<string, string> labels = 11;

  // Full or partial URL of the machine type resource to use for this
  // instance, in the format: zones/zone/machineTypes/machine-type. This
  // is provided by the client when the instance is created. For example,
  // the following is a valid partial url to a predefined machine type:
  // 
  // zones/us-central1-f/machineTypes/n1-standard-1
  // 
  // To create a custom machine type, provide a URL to a machine type in
  // the following format, where CPUS is 1 or an even number up to 32 (2,
  // 4, 6, ... 24, etc), and MEMORY is the total memory for this instance.
  // Memory must be a multiple of 256 MB and must be supplied in MB (e.g.
  // 5 GB of memory is 5120 MB):
  // 
  // zones/zone/machineTypes/custom-CPUS-MEMORY
  // 
  // For example: zones/us-central1-f/machineTypes/custom-4-5120
  // 
  // For a full list of restrictions, read the Specifications for custom
  // machine types.
  string machineType = 12;

  // The metadata key/value pairs assigned to this instance. This includes
  // custom metadata and predefined keys.
  Metadata metadata = 13;

  // Specifies a minimum CPU platform for the VM instance. Applicable
  // values are the friendly names of CPU platforms, such as
  // minCpuPlatform: "Intel Haswell" or minCpuPlatform: "Intel Sandy
  // Bridge".
  string minCpuPlatform = 14;

  // The name of the resource, provided by the client when initially
  // creating the resource. The resource name must be 1-63 characters
  // long, and comply with RFC1035. Specifically, the name must be 1-63
  // characters long and match the regular expression
  // [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a
  // lowercase letter, and all following characters must be a dash,
  // lowercase letter, or digit, except the last character, which cannot
  // be a dash.
  string name = 15;

  // An array of network configurations for this instance. These specify
  // how interfaces are configured to interact with other network
  // services, such as connecting to the internet. Multiple interfaces are
  // supported per instance.
  repeated NetworkInterface networkInterfaces = 16;

  // Sets the scheduling options for this instance.
  Scheduling scheduling = 17;

  // [Output Only] Server-defined URL for this resource.
  string selfLink = 18;

  // A list of service accounts, with their specified scopes, authorized
  // for this instance. Only one service account per VM instance is
  // supported.
  // 
  // Service accounts generate access tokens that can be accessed through
  // the metadata server and used to authenticate applications on the
  // instance. See Service Accounts for more information.
  repeated ServiceAccount serviceAccounts = 19;

  // [Output Only] Whether a VM has been restricted for start because
  // Compute Engine has detected suspicious activity.
  bool startRestricted = 20;

  // [Output Only] The status of the instance. One of the following
  // values: PROVISIONING, STAGING, RUNNING, STOPPING, STOPPED,
  // SUSPENDING, SUSPENDED, and TERMINATED.
  // Valid values:
  //     PROVISIONING
  //     RUNNING
  //     STAGING
  //     STOPPED
  //     STOPPING
  //     SUSPENDED
  //     SUSPENDING
  //     TERMINATED
  string status = 21;

  // [Output Only] An optional, human-readable explanation of the status.
  string statusMessage = 22;

  // A list of tags to apply to this instance. Tags are used to identify
  // valid sources or targets for network firewalls and are specified by
  // the client during instance creation. The tags can be later modified
  // by the setTags method. Each tag within the list must comply with
  // RFC1035.
  Tags tags = 23;

  // [Output Only] URL of the zone where the instance resides.
  string zone = 24;
}

message InstanceAggregatedList {
  // [Output Only] Unique identifier for the resource; defined by the
  // server.
  string id = 1;

  // A list of InstancesScopedList resources.
  map<string, InstancesScopedList> items = 2;

  // [Output Only] Type of resource. Always compute#instanceAggregatedList
  // for aggregated lists of Instance resources.
  string kind = 3;

  // [Output Only] This token allows you to get the next page of results
  // for list requests. If the number of results is larger than
  // maxResults, use the nextPageToken as a value for the query parameter
  // pageToken in the next list request. Subsequent list requests will
  // have their own nextPageToken to continue paging through the results.
  string nextPageToken = 4;

  // [Output Only] Server-defined URL for this resource.
  string selfLink = 5;

  // [Output Only] Informational warning message.
  // [Output Only] Informational warning message.
  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute
    // Engine returns NO_RESULTS_ON_PAGE if there are no results in the
    // response.
    // Valid values:
    //     CLEANUP_FAILED
    //     DEPRECATED_RESOURCE_USED
    //     DEPRECATED_TYPE_USED
    //     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
    //     EXPERIMENTAL_TYPE_USED
    //     EXTERNAL_API_WARNING
    //     FIELD_VALUE_OVERRIDEN
    //     INJECTED_KERNELS_DEPRECATED
    //     MISSING_TYPE_DEPENDENCY
    //     NEXT_HOP_ADDRESS_NOT_ASSIGNED
    //     NEXT_HOP_CANNOT_IP_FORWARD
    //     NEXT_HOP_INSTANCE_NOT_FOUND
    //     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
    //     NEXT_HOP_NOT_RUNNING
    //     NOT_CRITICAL_ERROR
    //     NO_RESULTS_ON_PAGE
    //     REQUIRED_TOS_AGREEMENT
    //     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
    //     RESOURCE_NOT_DELETED
    //     SCHEMA_VALIDATION_IGNORED
    //     SINGLE_INSTANCE_PROPERTY_TEMPLATE
    //     UNDECLARED_PROPERTIES
    //     UNREACHABLE
    string code = 1;

    // [Output Only] Metadata about this warning in key: value format. For
    // example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the
      // key value might be the zone name. Other examples might be a key
      // indicating a deprecated resource and a suggested replacement, or a
      // warning about invalid network settings (for example, if an instance
      // attempts to perform IP forwarding but is not enabled for IP
      // forwarding).
      string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      string value = 2;
    }
    repeated Data data = 2;

    // [Output Only] A human-readable description of the warning code.
    string message = 3;
  }
  Warning warning = 6;
}

message InstanceGroup {
  // [Output Only] The creation timestamp for this instance group in
  // RFC3339 text format.
  string creationTimestamp = 1;

  // An optional description of this resource. Provide this property when
  // you create the resource.
  string description = 2;

  // [Output Only] The fingerprint of the named ports. The system uses
  // this fingerprint to detect conflicts when multiple users change the
  // named ports concurrently.
  string fingerprint = 3;

  // [Output Only] A unique identifier for this instance group, generated
  // by the server.
  string id = 4;

  // [Output Only] The resource type, which is always
  // compute#instanceGroup for instance groups.
  string kind = 5;

  // The name of the instance group. The name must be 1-63 characters
  // long, and comply with RFC1035.
  string name = 6;

  // Assigns a name to a port number. For example: {name: "http", port:
  // 80}
  // 
  // This allows the system to reference ports by the assigned name
  // instead of a port number. Named ports can also contain multiple
  // ports. For example: [{name: "http", port: 80},{name: "http", port:
  // 8080}]
  // 
  // Named ports apply to all instances in this instance group.
  repeated NamedPort namedPorts = 7;

  // The URL of the network to which all instances in the instance group
  // belong.
  string network = 8;

  // The URL of the region where the instance group is located (for
  // regional resources).
  string region = 9;

  // [Output Only] The URL for this instance group. The server generates
  // this URL.
  string selfLink = 10;

  // [Output Only] The total number of instances in the instance group.
  int32 size = 11;

  // The URL of the subnetwork to which all instances in the instance
  // group belong.
  string subnetwork = 12;

  // [Output Only] The URL of the zone where the instance group is located
  // (for zonal resources).
  string zone = 13;
}

message InstanceGroupAggregatedList {
  // [Output Only] Unique identifier for the resource; defined by the
  // server.
  string id = 1;

  // A list of InstanceGroupsScopedList resources.
  map<string, InstanceGroupsScopedList> items = 2;

  // [Output Only] The resource type, which is always
  // compute#instanceGroupAggregatedList for aggregated lists of instance
  // groups.
  string kind = 3;

  // [Output Only] This token allows you to get the next page of results
  // for list requests. If the number of results is larger than
  // maxResults, use the nextPageToken as a value for the query parameter
  // pageToken in the next list request. Subsequent list requests will
  // have their own nextPageToken to continue paging through the results.
  string nextPageToken = 4;

  // [Output Only] Server-defined URL for this resource.
  string selfLink = 5;

  // [Output Only] Informational warning message.
  // [Output Only] Informational warning message.
  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute
    // Engine returns NO_RESULTS_ON_PAGE if there are no results in the
    // response.
    // Valid values:
    //     CLEANUP_FAILED
    //     DEPRECATED_RESOURCE_USED
    //     DEPRECATED_TYPE_USED
    //     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
    //     EXPERIMENTAL_TYPE_USED
    //     EXTERNAL_API_WARNING
    //     FIELD_VALUE_OVERRIDEN
    //     INJECTED_KERNELS_DEPRECATED
    //     MISSING_TYPE_DEPENDENCY
    //     NEXT_HOP_ADDRESS_NOT_ASSIGNED
    //     NEXT_HOP_CANNOT_IP_FORWARD
    //     NEXT_HOP_INSTANCE_NOT_FOUND
    //     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
    //     NEXT_HOP_NOT_RUNNING
    //     NOT_CRITICAL_ERROR
    //     NO_RESULTS_ON_PAGE
    //     REQUIRED_TOS_AGREEMENT
    //     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
    //     RESOURCE_NOT_DELETED
    //     SCHEMA_VALIDATION_IGNORED
    //     SINGLE_INSTANCE_PROPERTY_TEMPLATE
    //     UNDECLARED_PROPERTIES
    //     UNREACHABLE
    string code = 1;

    // [Output Only] Metadata about this warning in key: value format. For
    // example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the
      // key value might be the zone name. Other examples might be a key
      // indicating a deprecated resource and a suggested replacement, or a
      // warning about invalid network settings (for example, if an instance
      // attempts to perform IP forwarding but is not enabled for IP
      // forwarding).
      string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      string value = 2;
    }
    repeated Data data = 2;

    // [Output Only] A human-readable description of the warning code.
    string message = 3;
  }
  Warning warning = 6;
}

// A list of InstanceGroup resources.
message InstanceGroupList {
  // [Output Only] Unique identifier for the resource; defined by the
  // server.
  string id = 1;

  // A list of InstanceGroup resources.
  repeated InstanceGroup items = 2;

  // [Output Only] The resource type, which is always
  // compute#instanceGroupList for instance group lists.
  string kind = 3;

  // [Output Only] This token allows you to get the next page of results
  // for list requests. If the number of results is larger than
  // maxResults, use the nextPageToken as a value for the query parameter
  // pageToken in the next list request. Subsequent list requests will
  // have their own nextPageToken to continue paging through the results.
  string nextPageToken = 4;

  // [Output Only] Server-defined URL for this resource.
  string selfLink = 5;

  // [Output Only] Informational warning message.
  // [Output Only] Informational warning message.
  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute
    // Engine returns NO_RESULTS_ON_PAGE if there are no results in the
    // response.
    // Valid values:
    //     CLEANUP_FAILED
    //     DEPRECATED_RESOURCE_USED
    //     DEPRECATED_TYPE_USED
    //     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
    //     EXPERIMENTAL_TYPE_USED
    //     EXTERNAL_API_WARNING
    //     FIELD_VALUE_OVERRIDEN
    //     INJECTED_KERNELS_DEPRECATED
    //     MISSING_TYPE_DEPENDENCY
    //     NEXT_HOP_ADDRESS_NOT_ASSIGNED
    //     NEXT_HOP_CANNOT_IP_FORWARD
    //     NEXT_HOP_INSTANCE_NOT_FOUND
    //     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
    //     NEXT_HOP_NOT_RUNNING
    //     NOT_CRITICAL_ERROR
    //     NO_RESULTS_ON_PAGE
    //     REQUIRED_TOS_AGREEMENT
    //     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
    //     RESOURCE_NOT_DELETED
    //     SCHEMA_VALIDATION_IGNORED
    //     SINGLE_INSTANCE_PROPERTY_TEMPLATE
    //     UNDECLARED_PROPERTIES
    //     UNREACHABLE
    string code = 1;

    // [Output Only] Metadata about this warning in key: value format. For
    // example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the
      // key value might be the zone name. Other examples might be a key
      // indicating a deprecated resource and a suggested replacement, or a
      // warning about invalid network settings (for example, if an instance
      // attempts to perform IP forwarding but is not enabled for IP
      // forwarding).
      string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      string value = 2;
    }
    repeated Data data = 2;

    // [Output Only] A human-readable description of the warning code.
    string message = 3;
  }
  Warning warning = 6;
}

// An Instance Group Manager resource.
message InstanceGroupManager {
  // The autohealing policy for this managed instance group. You can
  // specify only one value.
  repeated InstanceGroupManagerAutoHealingPolicy autoHealingPolicies = 1;

  // The base instance name to use for instances in this group. The value
  // must be 1-58 characters long. Instances are named by appending a
  // hyphen and a random four-character string to the base instance name.
  // The base instance name must comply with RFC1035.
  string baseInstanceName = 2;

  // [Output Only] The creation timestamp for this managed instance group
  // in RFC3339 text format.
  string creationTimestamp = 3;

  // [Output Only] The list of instance actions and the number of
  // instances in this managed instance group that are scheduled for each
  // of those actions.
  InstanceGroupManagerActionsSummary currentActions = 4;

  // An optional description of this resource. Provide this property when
  // you create the resource.
  string description = 5;

  // Policy valid only for regional managed instance groups.
  DistributionPolicy distributionPolicy = 6;

  // The action to perform in case of zone failure. Only one value is
  // supported, NO_FAILOVER. The default is NO_FAILOVER.
  // Valid values:
  //     NO_FAILOVER
  //     UNKNOWN
  string failoverAction = 7;

  // [Output Only] The fingerprint of the resource data. You can use this
  // optional field for optimistic locking when you update the resource.
  string fingerprint = 8;

  // [Output Only] A unique identifier for this resource type. The server
  // generates this identifier.
  string id = 9;

  // [Output Only] The URL of the Instance Group resource.
  string instanceGroup = 10;

  // The URL of the instance template that is specified for this managed
  // instance group. The group uses this template to create all new
  // instances in the managed instance group.
  string instanceTemplate = 11;

  // [Output Only] The resource type, which is always
  // compute#instanceGroupManager for managed instance groups.
  string kind = 12;

  // The name of the managed instance group. The name must be 1-63
  // characters long, and comply with RFC1035.
  string name = 13;

  // Named ports configured for the Instance Groups complementary to this
  // Instance Group Manager.
  repeated NamedPort namedPorts = 14;

  // [Output Only] The list of instance actions and the number of
  // instances in this managed instance group that are pending for each of
  // those actions.
  InstanceGroupManagerPendingActionsSummary pendingActions = 15;

  // [Output Only] The URL of the region where the managed instance group
  // resides (for regional resources).
  string region = 16;

  // [Output Only] The URL for this managed instance group. The server
  // defines this URL.
  string selfLink = 17;

  // [Output Only] The service account to be used as credentials for all
  // operations performed by the managed instance group on instances. The
  // service accounts needs all permissions required to create and delete
  // instances. By default, the service account
  // {projectNumber}@cloudservices.gserviceaccount.com is used.
  string serviceAccount = 18;

  // The URLs for all TargetPool resources to which instances in the
  // instanceGroup field are added. The target pools automatically apply
  // to all of the instances in the managed instance group.
  repeated string targetPools = 19;

  // The target number of running instances for this managed instance
  // group. Deleting or abandoning instances reduces this number. Resizing
  // the group changes this number.
  int32 targetSize = 20;

  // The update policy for this managed instance group.
  InstanceGroupManagerUpdatePolicy updatePolicy = 21;

  // Specifies the instance templates used by this managed instance group
  // to create instances.
  // 
  // Each version is defined by an instanceTemplate. Every template can
  // appear at most once per instance group. This field overrides the
  // top-level instanceTemplate field. Read more about the relationships
  // between these fields. Exactly one version must leave the targetSize
  // field unset. That version will be applied to all remaining instances.
  // For more information, read about canary updates.
  repeated InstanceGroupManagerVersion versions = 22;

  // [Output Only] The URL of the zone where the managed instance group is
  // located (for zonal resources).
  string zone = 23;
}

message InstanceGroupManagerActionsSummary {
  // [Output Only] The total number of instances in the managed instance
  // group that are scheduled to be abandoned. Abandoning an instance
  // removes it from the managed instance group without deleting it.
  int32 abandoning = 1;

  // [Output Only] The number of instances in the managed instance group
  // that are scheduled to be created or are currently being created. If
  // the group fails to create any of these instances, it tries again
  // until it creates the instance successfully.
  // 
  // If you have disabled creation retries, this field will not be
  // populated; instead, the creatingWithoutRetries field will be
  // populated.
  int32 creating = 2;

  // [Output Only] The number of instances that the managed instance group
  // will attempt to create. The group attempts to create each instance
  // only once. If the group fails to create any of these instances, it
  // decreases the group's targetSize value accordingly.
  int32 creatingWithoutRetries = 3;

  // [Output Only] The number of instances in the managed instance group
  // that are scheduled to be deleted or are currently being deleted.
  int32 deleting = 4;

  // [Output Only] The number of instances in the managed instance group
  // that are running and have no scheduled actions.
  int32 none = 5;

  // [Output Only] The number of instances in the managed instance group
  // that are scheduled to be recreated or are currently being being
  // recreated. Recreating an instance deletes the existing root
  // persistent disk and creates a new disk from the image that is defined
  // in the instance template.
  int32 recreating = 6;

  // [Output Only] The number of instances in the managed instance group
  // that are being reconfigured with properties that do not require a
  // restart or a recreate action. For example, setting or removing target
  // pools for the instance.
  int32 refreshing = 7;

  // [Output Only] The number of instances in the managed instance group
  // that are scheduled to be restarted or are currently being restarted.
  int32 restarting = 8;

  // [Output Only] The number of instances in the managed instance group
  // that are being verified. More details regarding verification process
  // are covered in the documentation of
  // ManagedInstance.InstanceAction.VERIFYING enum field.
  int32 verifying = 9;
}

message InstanceGroupManagerAggregatedList {
  // [Output Only] Unique identifier for the resource; defined by the
  // server.
  string id = 1;

  // A list of InstanceGroupManagersScopedList resources.
  map<string, InstanceGroupManagersScopedList> items = 2;

  // [Output Only] The resource type, which is always
  // compute#instanceGroupManagerAggregatedList for an aggregated list of
  // managed instance groups.
  string kind = 3;

  // [Output Only] This token allows you to get the next page of results
  // for list requests. If the number of results is larger than
  // maxResults, use the nextPageToken as a value for the query parameter
  // pageToken in the next list request. Subsequent list requests will
  // have their own nextPageToken to continue paging through the results.
  string nextPageToken = 4;

  // [Output Only] Server-defined URL for this resource.
  string selfLink = 5;

  // [Output Only] Informational warning message.
  // [Output Only] Informational warning message.
  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute
    // Engine returns NO_RESULTS_ON_PAGE if there are no results in the
    // response.
    // Valid values:
    //     CLEANUP_FAILED
    //     DEPRECATED_RESOURCE_USED
    //     DEPRECATED_TYPE_USED
    //     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
    //     EXPERIMENTAL_TYPE_USED
    //     EXTERNAL_API_WARNING
    //     FIELD_VALUE_OVERRIDEN
    //     INJECTED_KERNELS_DEPRECATED
    //     MISSING_TYPE_DEPENDENCY
    //     NEXT_HOP_ADDRESS_NOT_ASSIGNED
    //     NEXT_HOP_CANNOT_IP_FORWARD
    //     NEXT_HOP_INSTANCE_NOT_FOUND
    //     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
    //     NEXT_HOP_NOT_RUNNING
    //     NOT_CRITICAL_ERROR
    //     NO_RESULTS_ON_PAGE
    //     REQUIRED_TOS_AGREEMENT
    //     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
    //     RESOURCE_NOT_DELETED
    //     SCHEMA_VALIDATION_IGNORED
    //     SINGLE_INSTANCE_PROPERTY_TEMPLATE
    //     UNDECLARED_PROPERTIES
    //     UNREACHABLE
    string code = 1;

    // [Output Only] Metadata about this warning in key: value format. For
    // example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the
      // key value might be the zone name. Other examples might be a key
      // indicating a deprecated resource and a suggested replacement, or a
      // warning about invalid network settings (for example, if an instance
      // attempts to perform IP forwarding but is not enabled for IP
      // forwarding).
      string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      string value = 2;
    }
    repeated Data data = 2;

    // [Output Only] A human-readable description of the warning code.
    string message = 3;
  }
  Warning warning = 6;
}

message InstanceGroupManagerAutoHealingPolicy {
  // The URL for the health check that signals autohealing.
  string healthCheck = 1;

  // The number of seconds that the managed instance group waits before it
  // applies autohealing policies to new instances or recently recreated
  // instances. This initial delay allows instances to initialize and run
  // their startup scripts before the instance group determines that they
  // are UNHEALTHY. This prevents the managed instance group from
  // recreating its instances prematurely. This value must be from range
  // [0, 3600].
  int32 initialDelaySec = 2;
}

// [Output Only] A list of managed instance groups.
message InstanceGroupManagerList {
  // [Output Only] Unique identifier for the resource; defined by the
  // server.
  string id = 1;

  // A list of InstanceGroupManager resources.
  repeated InstanceGroupManager items = 2;

  // [Output Only] The resource type, which is always
  // compute#instanceGroupManagerList for a list of managed instance
  // groups.
  string kind = 3;

  // [Output Only] This token allows you to get the next page of results
  // for list requests. If the number of results is larger than
  // maxResults, use the nextPageToken as a value for the query parameter
  // pageToken in the next list request. Subsequent list requests will
  // have their own nextPageToken to continue paging through the results.
  string nextPageToken = 4;

  // [Output Only] Server-defined URL for this resource.
  string selfLink = 5;

  // [Output Only] Informational warning message.
  // [Output Only] Informational warning message.
  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute
    // Engine returns NO_RESULTS_ON_PAGE if there are no results in the
    // response.
    // Valid values:
    //     CLEANUP_FAILED
    //     DEPRECATED_RESOURCE_USED
    //     DEPRECATED_TYPE_USED
    //     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
    //     EXPERIMENTAL_TYPE_USED
    //     EXTERNAL_API_WARNING
    //     FIELD_VALUE_OVERRIDEN
    //     INJECTED_KERNELS_DEPRECATED
    //     MISSING_TYPE_DEPENDENCY
    //     NEXT_HOP_ADDRESS_NOT_ASSIGNED
    //     NEXT_HOP_CANNOT_IP_FORWARD
    //     NEXT_HOP_INSTANCE_NOT_FOUND
    //     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
    //     NEXT_HOP_NOT_RUNNING
    //     NOT_CRITICAL_ERROR
    //     NO_RESULTS_ON_PAGE
    //     REQUIRED_TOS_AGREEMENT
    //     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
    //     RESOURCE_NOT_DELETED
    //     SCHEMA_VALIDATION_IGNORED
    //     SINGLE_INSTANCE_PROPERTY_TEMPLATE
    //     UNDECLARED_PROPERTIES
    //     UNREACHABLE
    string code = 1;

    // [Output Only] Metadata about this warning in key: value format. For
    // example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the
      // key value might be the zone name. Other examples might be a key
      // indicating a deprecated resource and a suggested replacement, or a
      // warning about invalid network settings (for example, if an instance
      // attempts to perform IP forwarding but is not enabled for IP
      // forwarding).
      string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      string value = 2;
    }
    repeated Data data = 2;

    // [Output Only] A human-readable description of the warning code.
    string message = 3;
  }
  Warning warning = 6;
}

message InstanceGroupManagerPendingActionsSummary {
  // [Output Only] The number of instances in the managed instance group
  // that are pending to be created.
  int32 creating = 1;

  // [Output Only] The number of instances in the managed instance group
  // that are pending to be deleted.
  int32 deleting = 2;

  // [Output Only] The number of instances in the managed instance group
  // that are pending to be recreated.
  int32 recreating = 3;

  // [Output Only] The number of instances in the managed instance group
  // that are pending to be restarted.
  int32 restarting = 4;
}

message InstanceGroupManagerUpdatePolicy {
  // The maximum number of instances that can be created above the
  // specified targetSize during the update process. By default, a fixed
  // value of 1 is used. This value can be either a fixed number or a
  // percentage if the instance group has 10 or more instances. If you set
  // a percentage, the number of instances will be rounded up if
  // necessary.
  // 
  // At least one of either maxSurge or maxUnavailable must be greater
  // than 0. Learn more about maxSurge.
  FixedOrPercent maxSurge = 1;

  // The maximum number of instances that can be unavailable during the
  // update process. An instance is considered available if all of the
  // following conditions are satisfied:
  // 
  // 
  // - The instance's status is RUNNING.
  // - If there is a health check on the instance grourp, the instance's
  // liveness health check result must be HEALTHY at least once. If there
  // is no health check on the group, then the instance only needs to have
  // a status of RUNNING to be considered available.  By default, a fixed
  // value of 1 is used. This value can be either a fixed number or a
  // percentage if the instance group has 10 or more instances. If you set
  // a percentage, the number of instances will be rounded up if
  // necessary.
  // 
  // At least one of either maxSurge or maxUnavailable must be greater
  // than 0. Learn more about maxUnavailable.
  FixedOrPercent maxUnavailable = 2;

  // Minimum number of seconds to wait for after a newly created instance
  // becomes available. This value must be from range [0, 3600].
  int32 minReadySec = 3;

  // Minimal action to be taken on an instance. You can specify either
  // RESTART to restart existing instances or REPLACE to delete and create
  // new instances from the target template. If you specify a
  // code>RESTART, the Updater will attempt to perform that action only.
  // However, if the Updater determines that the minimal action you
  // specify is not enough to perform the update, it might perform a more
  // disruptive action.
  // Valid values:
  //     REPLACE
  //     RESTART
  string minimalAction = 4;

  // Valid values:
  //     OPPORTUNISTIC
  //     PROACTIVE
  string type = 5;
}

message InstanceGroupManagerVersion {
  string instanceTemplate = 1;

  // Name of the version. Unique among all versions in the scope of this
  // managed instance group.
  string name = 2;

  // Specifies the intended number of instances to be created from the
  // instanceTemplate. The final number of instances created from the
  // template will be equal to:
  // - If expressed as a fixed number, the minimum of either
  // targetSize.fixed or instanceGroupManager.targetSize is used.
  // - if expressed as a percent, the targetSize would be
  // (targetSize.percent/100 * InstanceGroupManager.targetSize) If there
  // is a remainder, the number is rounded up.  If unset, this version
  // will update any remaining instances not updated by another version.
  // Read Starting a canary update for more information.
  FixedOrPercent targetSize = 3;
}

message InstanceGroupManagersAbandonInstancesRequest {
  // The URLs of one or more instances to abandon. This can be a full URL
  // or a partial URL, such as zones/[ZONE]/instances/[INSTANCE_NAME].
  repeated string instances = 1;
}

message InstanceGroupManagersDeleteInstancesRequest {
  // The URLs of one or more instances to delete. This can be a full URL
  // or a partial URL, such as zones/[ZONE]/instances/[INSTANCE_NAME].
  repeated string instances = 1;
}

message InstanceGroupManagersListManagedInstancesResponse {
  // [Output Only] The list of instances in the managed instance group.
  repeated ManagedInstance managedInstances = 1;

  // [Output Only] This token allows you to get the next page of results
  // for list requests. If the number of results is larger than
  // maxResults, use the nextPageToken as a value for the query parameter
  // pageToken in the next list request. Subsequent list requests will
  // have their own nextPageToken to continue paging through the results.
  string nextPageToken = 2;
}

message InstanceGroupManagersRecreateInstancesRequest {
  // The URLs of one or more instances to recreate. This can be a full URL
  // or a partial URL, such as zones/[ZONE]/instances/[INSTANCE_NAME].
  repeated string instances = 1;
}

message InstanceGroupManagersResizeAdvancedRequest {
  // If this flag is true, the managed instance group attempts to create
  // all instances initiated by this resize request only once. If there is
  // an error during creation, the managed instance group does not retry
  // create this instance, and we will decrease the targetSize of the
  // request instead. If the flag is false, the group attemps to recreate
  // each instance continuously until it succeeds.
  // 
  // This flag matters only in the first attempt of creation of an
  // instance. After an instance is successfully created while this flag
  // is enabled, the instance behaves the same way as all the other
  // instances created with a regular resize request. In particular, if a
  // running instance dies unexpectedly at a later time and needs to be
  // recreated, this mode does not affect the recreation behavior in that
  // scenario.
  // 
  // This flag is applicable only to the current resize request. It does
  // not influence other resize requests in any way.
  // 
  // You can see which instances is being creating in which mode by
  // calling the get or listManagedInstances API.
  bool noCreationRetries = 1;

  // The number of running instances that the managed instance group
  // should maintain at any given time. The group automatically adds or
  // removes instances to maintain the number of instances specified by
  // this parameter.
  int32 targetSize = 2;
}

message InstanceGroupManagersScopedList {
  // [Output Only] The list of managed instance groups that are contained
  // in the specified project and zone.
  repeated InstanceGroupManager instanceGroupManagers = 1;

  // [Output Only] The warning that replaces the list of managed instance
  // groups when the list is empty.
  // [Output Only] The warning that replaces the list of managed instance
  // groups when the list is empty.
  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute
    // Engine returns NO_RESULTS_ON_PAGE if there are no results in the
    // response.
    // Valid values:
    //     CLEANUP_FAILED
    //     DEPRECATED_RESOURCE_USED
    //     DEPRECATED_TYPE_USED
    //     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
    //     EXPERIMENTAL_TYPE_USED
    //     EXTERNAL_API_WARNING
    //     FIELD_VALUE_OVERRIDEN
    //     INJECTED_KERNELS_DEPRECATED
    //     MISSING_TYPE_DEPENDENCY
    //     NEXT_HOP_ADDRESS_NOT_ASSIGNED
    //     NEXT_HOP_CANNOT_IP_FORWARD
    //     NEXT_HOP_INSTANCE_NOT_FOUND
    //     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
    //     NEXT_HOP_NOT_RUNNING
    //     NOT_CRITICAL_ERROR
    //     NO_RESULTS_ON_PAGE
    //     REQUIRED_TOS_AGREEMENT
    //     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
    //     RESOURCE_NOT_DELETED
    //     SCHEMA_VALIDATION_IGNORED
    //     SINGLE_INSTANCE_PROPERTY_TEMPLATE
    //     UNDECLARED_PROPERTIES
    //     UNREACHABLE
    string code = 1;

    // [Output Only] Metadata about this warning in key: value format. For
    // example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the
      // key value might be the zone name. Other examples might be a key
      // indicating a deprecated resource and a suggested replacement, or a
      // warning about invalid network settings (for example, if an instance
      // attempts to perform IP forwarding but is not enabled for IP
      // forwarding).
      string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      string value = 2;
    }
    repeated Data data = 2;

    // [Output Only] A human-readable description of the warning code.
    string message = 3;
  }
  Warning warning = 2;
}

message InstanceGroupManagersSetAutoHealingRequest {
  repeated InstanceGroupManagerAutoHealingPolicy autoHealingPolicies = 1;
}

message InstanceGroupManagersSetInstanceTemplateRequest {
  // The URL of the instance template that is specified for this managed
  // instance group. The group uses this template to create all new
  // instances in the managed instance group.
  string instanceTemplate = 1;
}

message InstanceGroupManagersSetTargetPoolsRequest {
  // The fingerprint of the target pools information. Use this optional
  // property to prevent conflicts when multiple users change the target
  // pools settings concurrently. Obtain the fingerprint with the
  // instanceGroupManagers.get method. Then, include the fingerprint in
  // your request to ensure that you do not overwrite changes that were
  // applied from another concurrent request.
  string fingerprint = 1;

  // The list of target pool URLs that instances in this managed instance
  // group belong to. The managed instance group applies these target
  // pools to all of the instances in the group. Existing instances and
  // new instances in the group all receive these target pool settings.
  repeated string targetPools = 2;
}

message InstanceGroupsAddInstancesRequest {
  // The list of instances to add to the instance group.
  repeated InstanceReference instances = 1;
}

message InstanceGroupsListInstances {
  // [Output Only] Unique identifier for the resource; defined by the
  // server.
  string id = 1;

  // A list of InstanceWithNamedPorts resources.
  repeated InstanceWithNamedPorts items = 2;

  // [Output Only] The resource type, which is always
  // compute#instanceGroupsListInstances for the list of instances in the
  // specified instance group.
  string kind = 3;

  // [Output Only] This token allows you to get the next page of results
  // for list requests. If the number of results is larger than
  // maxResults, use the nextPageToken as a value for the query parameter
  // pageToken in the next list request. Subsequent list requests will
  // have their own nextPageToken to continue paging through the results.
  string nextPageToken = 4;

  // [Output Only] Server-defined URL for this resource.
  string selfLink = 5;

  // [Output Only] Informational warning message.
  // [Output Only] Informational warning message.
  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute
    // Engine returns NO_RESULTS_ON_PAGE if there are no results in the
    // response.
    // Valid values:
    //     CLEANUP_FAILED
    //     DEPRECATED_RESOURCE_USED
    //     DEPRECATED_TYPE_USED
    //     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
    //     EXPERIMENTAL_TYPE_USED
    //     EXTERNAL_API_WARNING
    //     FIELD_VALUE_OVERRIDEN
    //     INJECTED_KERNELS_DEPRECATED
    //     MISSING_TYPE_DEPENDENCY
    //     NEXT_HOP_ADDRESS_NOT_ASSIGNED
    //     NEXT_HOP_CANNOT_IP_FORWARD
    //     NEXT_HOP_INSTANCE_NOT_FOUND
    //     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
    //     NEXT_HOP_NOT_RUNNING
    //     NOT_CRITICAL_ERROR
    //     NO_RESULTS_ON_PAGE
    //     REQUIRED_TOS_AGREEMENT
    //     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
    //     RESOURCE_NOT_DELETED
    //     SCHEMA_VALIDATION_IGNORED
    //     SINGLE_INSTANCE_PROPERTY_TEMPLATE
    //     UNDECLARED_PROPERTIES
    //     UNREACHABLE
    string code = 1;

    // [Output Only] Metadata about this warning in key: value format. For
    // example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the
      // key value might be the zone name. Other examples might be a key
      // indicating a deprecated resource and a suggested replacement, or a
      // warning about invalid network settings (for example, if an instance
      // attempts to perform IP forwarding but is not enabled for IP
      // forwarding).
      string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      string value = 2;
    }
    repeated Data data = 2;

    // [Output Only] A human-readable description of the warning code.
    string message = 3;
  }
  Warning warning = 6;
}

message InstanceGroupsListInstancesRequest {
  // A filter for the state of the instances in the instance group. Valid
  // options are ALL or RUNNING. If you do not specify this parameter the
  // list includes all instances regardless of their state.
  // Valid values:
  //     ALL
  //     RUNNING
  string instanceState = 1;
}

message InstanceGroupsRemoveInstancesRequest {
  // The list of instances to remove from the instance group.
  repeated InstanceReference instances = 1;
}

message InstanceGroupsScopedList {
  // [Output Only] The list of instance groups that are contained in this
  // scope.
  repeated InstanceGroup instanceGroups = 1;

  // [Output Only] An informational warning that replaces the list of
  // instance groups when the list is empty.
  // [Output Only] An informational warning that replaces the list of
  // instance groups when the list is empty.
  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute
    // Engine returns NO_RESULTS_ON_PAGE if there are no results in the
    // response.
    // Valid values:
    //     CLEANUP_FAILED
    //     DEPRECATED_RESOURCE_USED
    //     DEPRECATED_TYPE_USED
    //     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
    //     EXPERIMENTAL_TYPE_USED
    //     EXTERNAL_API_WARNING
    //     FIELD_VALUE_OVERRIDEN
    //     INJECTED_KERNELS_DEPRECATED
    //     MISSING_TYPE_DEPENDENCY
    //     NEXT_HOP_ADDRESS_NOT_ASSIGNED
    //     NEXT_HOP_CANNOT_IP_FORWARD
    //     NEXT_HOP_INSTANCE_NOT_FOUND
    //     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
    //     NEXT_HOP_NOT_RUNNING
    //     NOT_CRITICAL_ERROR
    //     NO_RESULTS_ON_PAGE
    //     REQUIRED_TOS_AGREEMENT
    //     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
    //     RESOURCE_NOT_DELETED
    //     SCHEMA_VALIDATION_IGNORED
    //     SINGLE_INSTANCE_PROPERTY_TEMPLATE
    //     UNDECLARED_PROPERTIES
    //     UNREACHABLE
    string code = 1;

    // [Output Only] Metadata about this warning in key: value format. For
    // example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the
      // key value might be the zone name. Other examples might be a key
      // indicating a deprecated resource and a suggested replacement, or a
      // warning about invalid network settings (for example, if an instance
      // attempts to perform IP forwarding but is not enabled for IP
      // forwarding).
      string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      string value = 2;
    }
    repeated Data data = 2;

    // [Output Only] A human-readable description of the warning code.
    string message = 3;
  }
  Warning warning = 2;
}

message InstanceGroupsSetNamedPortsRequest {
  // The fingerprint of the named ports information for this instance
  // group. Use this optional property to prevent conflicts when multiple
  // users change the named ports settings concurrently. Obtain the
  // fingerprint with the instanceGroups.get method. Then, include the
  // fingerprint in your request to ensure that you do not overwrite
  // changes that were applied from another concurrent request.
  string fingerprint = 1;

  // The list of named ports to set for this instance group.
  repeated NamedPort namedPorts = 2;
}

// Contains a list of instances.
message InstanceList {
  // [Output Only] Unique identifier for the resource; defined by the
  // server.
  string id = 1;

  // A list of Instance resources.
  repeated Instance items = 2;

  // [Output Only] Type of resource. Always compute#instanceList for lists
  // of Instance resources.
  string kind = 3;

  // [Output Only] This token allows you to get the next page of results
  // for list requests. If the number of results is larger than
  // maxResults, use the nextPageToken as a value for the query parameter
  // pageToken in the next list request. Subsequent list requests will
  // have their own nextPageToken to continue paging through the results.
  string nextPageToken = 4;

  // [Output Only] Server-defined URL for this resource.
  string selfLink = 5;

  // [Output Only] Informational warning message.
  // [Output Only] Informational warning message.
  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute
    // Engine returns NO_RESULTS_ON_PAGE if there are no results in the
    // response.
    // Valid values:
    //     CLEANUP_FAILED
    //     DEPRECATED_RESOURCE_USED
    //     DEPRECATED_TYPE_USED
    //     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
    //     EXPERIMENTAL_TYPE_USED
    //     EXTERNAL_API_WARNING
    //     FIELD_VALUE_OVERRIDEN
    //     INJECTED_KERNELS_DEPRECATED
    //     MISSING_TYPE_DEPENDENCY
    //     NEXT_HOP_ADDRESS_NOT_ASSIGNED
    //     NEXT_HOP_CANNOT_IP_FORWARD
    //     NEXT_HOP_INSTANCE_NOT_FOUND
    //     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
    //     NEXT_HOP_NOT_RUNNING
    //     NOT_CRITICAL_ERROR
    //     NO_RESULTS_ON_PAGE
    //     REQUIRED_TOS_AGREEMENT
    //     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
    //     RESOURCE_NOT_DELETED
    //     SCHEMA_VALIDATION_IGNORED
    //     SINGLE_INSTANCE_PROPERTY_TEMPLATE
    //     UNDECLARED_PROPERTIES
    //     UNREACHABLE
    string code = 1;

    // [Output Only] Metadata about this warning in key: value format. For
    // example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the
      // key value might be the zone name. Other examples might be a key
      // indicating a deprecated resource and a suggested replacement, or a
      // warning about invalid network settings (for example, if an instance
      // attempts to perform IP forwarding but is not enabled for IP
      // forwarding).
      string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      string value = 2;
    }
    repeated Data data = 2;

    // [Output Only] A human-readable description of the warning code.
    string message = 3;
  }
  Warning warning = 6;
}

// Contains a list of instance referrers.
message InstanceListReferrers {
  // [Output Only] Unique identifier for the resource; defined by the
  // server.
  string id = 1;

  // A list of Reference resources.
  repeated Reference items = 2;

  // [Output Only] Type of resource. Always compute#instanceListReferrers
  // for lists of Instance referrers.
  string kind = 3;

  // [Output Only] This token allows you to get the next page of results
  // for list requests. If the number of results is larger than
  // maxResults, use the nextPageToken as a value for the query parameter
  // pageToken in the next list request. Subsequent list requests will
  // have their own nextPageToken to continue paging through the results.
  string nextPageToken = 4;

  // [Output Only] Server-defined URL for this resource.
  string selfLink = 5;

  // [Output Only] Informational warning message.
  // [Output Only] Informational warning message.
  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute
    // Engine returns NO_RESULTS_ON_PAGE if there are no results in the
    // response.
    // Valid values:
    //     CLEANUP_FAILED
    //     DEPRECATED_RESOURCE_USED
    //     DEPRECATED_TYPE_USED
    //     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
    //     EXPERIMENTAL_TYPE_USED
    //     EXTERNAL_API_WARNING
    //     FIELD_VALUE_OVERRIDEN
    //     INJECTED_KERNELS_DEPRECATED
    //     MISSING_TYPE_DEPENDENCY
    //     NEXT_HOP_ADDRESS_NOT_ASSIGNED
    //     NEXT_HOP_CANNOT_IP_FORWARD
    //     NEXT_HOP_INSTANCE_NOT_FOUND
    //     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
    //     NEXT_HOP_NOT_RUNNING
    //     NOT_CRITICAL_ERROR
    //     NO_RESULTS_ON_PAGE
    //     REQUIRED_TOS_AGREEMENT
    //     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
    //     RESOURCE_NOT_DELETED
    //     SCHEMA_VALIDATION_IGNORED
    //     SINGLE_INSTANCE_PROPERTY_TEMPLATE
    //     UNDECLARED_PROPERTIES
    //     UNREACHABLE
    string code = 1;

    // [Output Only] Metadata about this warning in key: value format. For
    // example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the
      // key value might be the zone name. Other examples might be a key
      // indicating a deprecated resource and a suggested replacement, or a
      // warning about invalid network settings (for example, if an instance
      // attempts to perform IP forwarding but is not enabled for IP
      // forwarding).
      string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      string value = 2;
    }
    repeated Data data = 2;

    // [Output Only] A human-readable description of the warning code.
    string message = 3;
  }
  Warning warning = 6;
}

message InstanceMoveRequest {
  // The URL of the destination zone to move the instance. This can be a
  // full or partial URL. For example, the following are all valid URLs to
  // a zone:
  // - https://www.googleapis.com/compute/v1/projects/project/zones/zone
  // - projects/project/zones/zone
  // - zones/zone
  string destinationZone = 1;

  // The URL of the target instance to move. This can be a full or partial
  // URL. For example, the following are all valid URLs to an instance:
  // -
  // https://www.googleapis.com/compute/v1/projects/project/zones/zone/instances/instance
  // - projects/project/zones/zone/instances/instance
  // - zones/zone/instances/instance
  string targetInstance = 2;
}

message InstanceProperties {
  // Enables instances created based on this template to send packets with
  // source IP addresses other than their own and receive packets with
  // destination IP addresses other than their own. If these instances
  // will be used as an IP gateway or it will be set as the next-hop in a
  // Route resource, specify true. If unsure, leave this set to false. See
  // the Enable IP forwarding documentation for more information.
  bool canIpForward = 1;

  // An optional text description for the instances that are created from
  // this instance template.
  string description = 2;

  // An array of disks that are associated with the instances that are
  // created from this template.
  repeated AttachedDisk disks = 3;

  // A list of guest accelerator cards' type and count to use for
  // instances created from the instance template.
  repeated AcceleratorConfig guestAccelerators = 4;

  // Labels to apply to instances that are created from this template.
  map<string, string> labels = 5;

  // The machine type to use for instances that are created from this
  // template.
  string machineType = 6;

  // The metadata key/value pairs to assign to instances that are created
  // from this template. These pairs can consist of custom metadata or
  // predefined keys. See Project and instance metadata for more
  // information.
  Metadata metadata = 7;

  // Minimum cpu/platform to be used by this instance. The instance may be
  // scheduled on the specified or newer cpu/platform. Applicable values
  // are the friendly names of CPU platforms, such as minCpuPlatform:
  // "Intel Haswell" or minCpuPlatform: "Intel Sandy Bridge". For more
  // information, read Specifying a Minimum CPU Platform.
  string minCpuPlatform = 8;

  // An array of network access configurations for this interface.
  repeated NetworkInterface networkInterfaces = 9;

  // Specifies the scheduling options for the instances that are created
  // from this template.
  Scheduling scheduling = 10;

  // A list of service accounts with specified scopes. Access tokens for
  // these service accounts are available to the instances that are
  // created from this template. Use metadata queries to obtain the access
  // tokens for these instances.
  repeated ServiceAccount serviceAccounts = 11;

  // A list of tags to apply to the instances that are created from this
  // template. The tags identify valid sources or targets for network
  // firewalls. The setTags method can modify this list of tags. Each tag
  // within the list must comply with RFC1035.
  Tags tags = 12;
}

message InstanceReference {
  // The URL for a specific instance.
  string instance = 1;
}

// An Instance Template resource.
message InstanceTemplate {
  // [Output Only] The creation timestamp for this instance template in
  // RFC3339 text format.
  string creationTimestamp = 1;

  // An optional description of this resource. Provide this property when
  // you create the resource.
  string description = 2;

  // [Output Only] A unique identifier for this instance template. The
  // server defines this identifier.
  string id = 3;

  // [Output Only] The resource type, which is always
  // compute#instanceTemplate for instance templates.
  string kind = 4;

  // Name of the resource; provided by the client when the resource is
  // created. The name must be 1-63 characters long, and comply with
  // RFC1035. Specifically, the name must be 1-63 characters long and
  // match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means
  // the first character must be a lowercase letter, and all following
  // characters must be a dash, lowercase letter, or digit, except the
  // last character, which cannot be a dash.
  string name = 5;

  // The instance properties for this instance template.
  InstanceProperties properties = 6;

  // [Output Only] The URL for this instance template. The server defines
  // this URL.
  string selfLink = 7;
}

// A list of instance templates.
message InstanceTemplateList {
  // [Output Only] Unique identifier for the resource; defined by the
  // server.
  string id = 1;

  // A list of InstanceTemplate resources.
  repeated InstanceTemplate items = 2;

  // [Output Only] The resource type, which is always
  // compute#instanceTemplatesListResponse for instance template lists.
  string kind = 3;

  // [Output Only] This token allows you to get the next page of results
  // for list requests. If the number of results is larger than
  // maxResults, use the nextPageToken as a value for the query parameter
  // pageToken in the next list request. Subsequent list requests will
  // have their own nextPageToken to continue paging through the results.
  string nextPageToken = 4;

  // [Output Only] Server-defined URL for this resource.
  string selfLink = 5;

  // [Output Only] Informational warning message.
  // [Output Only] Informational warning message.
  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute
    // Engine returns NO_RESULTS_ON_PAGE if there are no results in the
    // response.
    // Valid values:
    //     CLEANUP_FAILED
    //     DEPRECATED_RESOURCE_USED
    //     DEPRECATED_TYPE_USED
    //     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
    //     EXPERIMENTAL_TYPE_USED
    //     EXTERNAL_API_WARNING
    //     FIELD_VALUE_OVERRIDEN
    //     INJECTED_KERNELS_DEPRECATED
    //     MISSING_TYPE_DEPENDENCY
    //     NEXT_HOP_ADDRESS_NOT_ASSIGNED
    //     NEXT_HOP_CANNOT_IP_FORWARD
    //     NEXT_HOP_INSTANCE_NOT_FOUND
    //     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
    //     NEXT_HOP_NOT_RUNNING
    //     NOT_CRITICAL_ERROR
    //     NO_RESULTS_ON_PAGE
    //     REQUIRED_TOS_AGREEMENT
    //     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
    //     RESOURCE_NOT_DELETED
    //     SCHEMA_VALIDATION_IGNORED
    //     SINGLE_INSTANCE_PROPERTY_TEMPLATE
    //     UNDECLARED_PROPERTIES
    //     UNREACHABLE
    string code = 1;

    // [Output Only] Metadata about this warning in key: value format. For
    // example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the
      // key value might be the zone name. Other examples might be a key
      // indicating a deprecated resource and a suggested replacement, or a
      // warning about invalid network settings (for example, if an instance
      // attempts to perform IP forwarding but is not enabled for IP
      // forwarding).
      string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      string value = 2;
    }
    repeated Data data = 2;

    // [Output Only] A human-readable description of the warning code.
    string message = 3;
  }
  Warning warning = 6;
}

message InstanceWithNamedPorts {
  // [Output Only] The URL of the instance.
  string instance = 1;

  // [Output Only] The named ports that belong to this instance group.
  repeated NamedPort namedPorts = 2;

  // [Output Only] The status of the instance.
  // Valid values:
  //     PROVISIONING
  //     RUNNING
  //     STAGING
  //     STOPPED
  //     STOPPING
  //     SUSPENDED
  //     SUSPENDING
  //     TERMINATED
  string status = 3;
}

message InstancesScopedList {
  // [Output Only] List of instances contained in this scope.
  repeated Instance instances = 1;

  // [Output Only] Informational warning which replaces the list of
  // instances when the list is empty.
  // [Output Only] Informational warning which replaces the list of
  // instances when the list is empty.
  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute
    // Engine returns NO_RESULTS_ON_PAGE if there are no results in the
    // response.
    // Valid values:
    //     CLEANUP_FAILED
    //     DEPRECATED_RESOURCE_USED
    //     DEPRECATED_TYPE_USED
    //     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
    //     EXPERIMENTAL_TYPE_USED
    //     EXTERNAL_API_WARNING
    //     FIELD_VALUE_OVERRIDEN
    //     INJECTED_KERNELS_DEPRECATED
    //     MISSING_TYPE_DEPENDENCY
    //     NEXT_HOP_ADDRESS_NOT_ASSIGNED
    //     NEXT_HOP_CANNOT_IP_FORWARD
    //     NEXT_HOP_INSTANCE_NOT_FOUND
    //     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
    //     NEXT_HOP_NOT_RUNNING
    //     NOT_CRITICAL_ERROR
    //     NO_RESULTS_ON_PAGE
    //     REQUIRED_TOS_AGREEMENT
    //     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
    //     RESOURCE_NOT_DELETED
    //     SCHEMA_VALIDATION_IGNORED
    //     SINGLE_INSTANCE_PROPERTY_TEMPLATE
    //     UNDECLARED_PROPERTIES
    //     UNREACHABLE
    string code = 1;

    // [Output Only] Metadata about this warning in key: value format. For
    // example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the
      // key value might be the zone name. Other examples might be a key
      // indicating a deprecated resource and a suggested replacement, or a
      // warning about invalid network settings (for example, if an instance
      // attempts to perform IP forwarding but is not enabled for IP
      // forwarding).
      string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      string value = 2;
    }
    repeated Data data = 2;

    // [Output Only] A human-readable description of the warning code.
    string message = 3;
  }
  Warning warning = 2;
}

message InstancesSetLabelsRequest {
  // Fingerprint of the previous set of labels for this resource, used to
  // prevent conflicts. Provide the latest fingerprint value when making a
  // request to add or change labels.
  string labelFingerprint = 1;

  map<string, string> labels = 2;
}

message InstancesSetMachineResourcesRequest {
  // List of the type and count of accelerator cards attached to the
  // instance.
  repeated AcceleratorConfig guestAccelerators = 1;
}

message InstancesSetMachineTypeRequest {
  // Full or partial URL of the machine type resource. See Machine Types
  // for a full list of machine types. For example:
  // zones/us-central1-f/machineTypes/n1-standard-1
  string machineType = 1;
}

message InstancesSetMinCpuPlatformRequest {
  // Minimum cpu/platform this instance should be started at.
  string minCpuPlatform = 1;
}

message InstancesSetServiceAccountRequest {
  // Email address of the service account.
  string email = 1;

  // The list of scopes to be made available for this service account.
  repeated string scopes = 2;
}

message InstancesStartWithEncryptionKeyRequest {
  // Array of disks associated with this instance that are protected with
  // a customer-supplied encryption key.
  // 
  // In order to start the instance, the disk url and its corresponding
  // key must be provided.
  // 
  // If the disk is not protected with a customer-supplied encryption key
  // it should not be specified.
  repeated CustomerEncryptionKeyProtectedDisk disks = 1;
}

// Protocol definitions for Mixer API to support Interconnect. Next
// available tag: 25
message Interconnect {
  // Administrative status of the interconnect. When this is set to
  // ?true?, the Interconnect is functional and may carry traffic
  // (assuming there are functional InterconnectAttachments and other
  // requirements are satisfied). When set to ?false?, no packets will be
  // carried over this Interconnect and no BGP routes will be exchanged
  // over it. By default, it is set to ?true?.
  bool adminEnabled = 1;

  // [Output Only] List of CircuitInfo objects, that describe the
  // individual circuits in this LAG.
  repeated InterconnectCircuitInfo circuitInfos = 2;

  // [Output Only] Creation timestamp in RFC3339 text format.
  string creationTimestamp = 3;

  // Customer name, to put in the Letter of Authorization as the party
  // authorized to request a crossconnect.
  string customerName = 4;

  // An optional description of this resource. Provide this property when
  // you create the resource.
  string description = 5;

  // [Output Only] List of outages expected for this Interconnect.
  repeated InterconnectOutageNotification expectedOutages = 6;

  // [Output Only] IP address configured on the Google side of the
  // Interconnect link. This can be used only for ping tests.
  string googleIpAddress = 7;

  // [Output Only] Google reference ID; to be used when raising support
  // tickets with Google or otherwise to debug backend connectivity
  // issues.
  string googleReferenceId = 8;

  // [Output Only] The unique identifier for the resource. This identifier
  // is defined by the server.
  string id = 9;

  // [Output Only] A list of the URLs of all InterconnectAttachments
  // configured to use this Interconnect.
  repeated string interconnectAttachments = 10;

  // Valid values:
  //     DEDICATED
  //     IT_PRIVATE
  string interconnectType = 11;

  // [Output Only] Type of the resource. Always compute#interconnect for
  // interconnects.
  string kind = 12;

  // Valid values:
  //     LINK_TYPE_ETHERNET_10G_LR
  string linkType = 13;

  // URL of the InterconnectLocation object that represents where this
  // connection is to be provisioned.
  string location = 14;

  // Name of the resource. Provided by the client when the resource is
  // created. The name must be 1-63 characters long, and comply with
  // RFC1035. Specifically, the name must be 1-63 characters long and
  // match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means
  // the first character must be a lowercase letter, and all following
  // characters must be a dash, lowercase letter, or digit, except the
  // last character, which cannot be a dash.
  string name = 15;

  // Email address to contact the customer NOC for operations and
  // maintenance notifications regarding this Interconnect. If specified,
  // this will be used for notifications in addition to all other forms
  // described, such as Stackdriver logs alerting and Cloud Notifications.
  string nocContactEmail = 16;

  // [Output Only] The current status of whether or not this Interconnect
  // is functional.
  // Valid values:
  //     ACTIVE
  //     OS_ACTIVE
  //     OS_UNPROVISIONED
  //     UNPROVISIONED
  string operationalStatus = 17;

  // [Output Only] IP address configured on the customer side of the
  // Interconnect link. The customer should configure this IP address
  // during turnup when prompted by Google NOC. This can be used only for
  // ping tests.
  string peerIpAddress = 18;

  // [Output Only] Number of links actually provisioned in this
  // interconnect.
  int32 provisionedLinkCount = 19;

  // Target number of physical links in the link bundle, as requested by
  // the customer.
  int32 requestedLinkCount = 20;

  // [Output Only] Server-defined URL for the resource.
  string selfLink = 21;
}

// Protocol definitions for Mixer API to support InterconnectAttachment.
// Next available tag: 23
message InterconnectAttachment {
  // [Output Only] IPv4 address + prefix length to be configured on Cloud
  // Router Interface for this interconnect attachment.
  string cloudRouterIpAddress = 1;

  // [Output Only] Creation timestamp in RFC3339 text format.
  string creationTimestamp = 2;

  // [Output Only] IPv4 address + prefix length to be configured on the
  // customer router subinterface for this interconnect attachment.
  string customerRouterIpAddress = 3;

  // An optional description of this resource. Provide this property when
  // you create the resource.
  string description = 4;

  // [Output Only] Google reference ID, to be used when raising support
  // tickets with Google or otherwise to debug backend connectivity
  // issues.
  string googleReferenceId = 5;

  // [Output Only] The unique identifier for the resource. This identifier
  // is defined by the server.
  string id = 6;

  // URL of the underlying Interconnect object that this attachment's
  // traffic will traverse through.
  string interconnect = 7;

  // [Output Only] Type of the resource. Always
  // compute#interconnectAttachment for interconnect attachments.
  string kind = 8;

  // Name of the resource. Provided by the client when the resource is
  // created. The name must be 1-63 characters long, and comply with
  // RFC1035. Specifically, the name must be 1-63 characters long and
  // match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means
  // the first character must be a lowercase letter, and all following
  // characters must be a dash, lowercase letter, or digit, except the
  // last character, which cannot be a dash.
  string name = 9;

  // [Output Only] The current status of whether or not this interconnect
  // attachment is functional.
  // Valid values:
  //     ACTIVE
  //     OS_ACTIVE
  //     OS_UNPROVISIONED
  //     UNPROVISIONED
  string operationalStatus = 10;

  // [Output Only] Information specific to a Private
  // InterconnectAttachment. Only populated if the interconnect that this
  // is attached is of type IT_PRIVATE.
  InterconnectAttachmentPrivateInfo privateInterconnectInfo = 11;

  // [Output Only] URL of the region where the regional interconnect
  // attachment resides.
  string region = 12;

  // URL of the cloud router to be used for dynamic routing. This router
  // must be in the same region as this InterconnectAttachment. The
  // InterconnectAttachment will automatically connect the Interconnect to
  // the network & region within which the Cloud Router is configured.
  string router = 13;

  // [Output Only] Server-defined URL for the resource.
  string selfLink = 14;
}

message InterconnectAttachmentAggregatedList {
  // [Output Only] Unique identifier for the resource; defined by the
  // server.
  string id = 1;

  // A list of InterconnectAttachmentsScopedList resources.
  map<string, InterconnectAttachmentsScopedList> items = 2;

  // [Output Only] Type of resource. Always
  // compute#interconnectAttachmentAggregatedList for aggregated lists of
  // interconnect attachments.
  string kind = 3;

  // [Output Only] This token allows you to get the next page of results
  // for list requests. If the number of results is larger than
  // maxResults, use the nextPageToken as a value for the query parameter
  // pageToken in the next list request. Subsequent list requests will
  // have their own nextPageToken to continue paging through the results.
  string nextPageToken = 4;

  // [Output Only] Server-defined URL for this resource.
  string selfLink = 5;

  // [Output Only] Informational warning message.
  // [Output Only] Informational warning message.
  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute
    // Engine returns NO_RESULTS_ON_PAGE if there are no results in the
    // response.
    // Valid values:
    //     CLEANUP_FAILED
    //     DEPRECATED_RESOURCE_USED
    //     DEPRECATED_TYPE_USED
    //     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
    //     EXPERIMENTAL_TYPE_USED
    //     EXTERNAL_API_WARNING
    //     FIELD_VALUE_OVERRIDEN
    //     INJECTED_KERNELS_DEPRECATED
    //     MISSING_TYPE_DEPENDENCY
    //     NEXT_HOP_ADDRESS_NOT_ASSIGNED
    //     NEXT_HOP_CANNOT_IP_FORWARD
    //     NEXT_HOP_INSTANCE_NOT_FOUND
    //     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
    //     NEXT_HOP_NOT_RUNNING
    //     NOT_CRITICAL_ERROR
    //     NO_RESULTS_ON_PAGE
    //     REQUIRED_TOS_AGREEMENT
    //     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
    //     RESOURCE_NOT_DELETED
    //     SCHEMA_VALIDATION_IGNORED
    //     SINGLE_INSTANCE_PROPERTY_TEMPLATE
    //     UNDECLARED_PROPERTIES
    //     UNREACHABLE
    string code = 1;

    // [Output Only] Metadata about this warning in key: value format. For
    // example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the
      // key value might be the zone name. Other examples might be a key
      // indicating a deprecated resource and a suggested replacement, or a
      // warning about invalid network settings (for example, if an instance
      // attempts to perform IP forwarding but is not enabled for IP
      // forwarding).
      string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      string value = 2;
    }
    repeated Data data = 2;

    // [Output Only] A human-readable description of the warning code.
    string message = 3;
  }
  Warning warning = 6;
}

// Response to the list request, and contains a list of interconnect
// attachments.
message InterconnectAttachmentList {
  // [Output Only] Unique identifier for the resource; defined by the
  // server.
  string id = 1;

  // A list of InterconnectAttachment resources.
  repeated InterconnectAttachment items = 2;

  // [Output Only] Type of resource. Always
  // compute#interconnectAttachmentList for lists of interconnect
  // attachments.
  string kind = 3;

  // [Output Only] This token allows you to get the next page of results
  // for list requests. If the number of results is larger than
  // maxResults, use the nextPageToken as a value for the query parameter
  // pageToken in the next list request. Subsequent list requests will
  // have their own nextPageToken to continue paging through the results.
  string nextPageToken = 4;

  // [Output Only] Server-defined URL for this resource.
  string selfLink = 5;

  // [Output Only] Informational warning message.
  // [Output Only] Informational warning message.
  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute
    // Engine returns NO_RESULTS_ON_PAGE if there are no results in the
    // response.
    // Valid values:
    //     CLEANUP_FAILED
    //     DEPRECATED_RESOURCE_USED
    //     DEPRECATED_TYPE_USED
    //     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
    //     EXPERIMENTAL_TYPE_USED
    //     EXTERNAL_API_WARNING
    //     FIELD_VALUE_OVERRIDEN
    //     INJECTED_KERNELS_DEPRECATED
    //     MISSING_TYPE_DEPENDENCY
    //     NEXT_HOP_ADDRESS_NOT_ASSIGNED
    //     NEXT_HOP_CANNOT_IP_FORWARD
    //     NEXT_HOP_INSTANCE_NOT_FOUND
    //     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
    //     NEXT_HOP_NOT_RUNNING
    //     NOT_CRITICAL_ERROR
    //     NO_RESULTS_ON_PAGE
    //     REQUIRED_TOS_AGREEMENT
    //     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
    //     RESOURCE_NOT_DELETED
    //     SCHEMA_VALIDATION_IGNORED
    //     SINGLE_INSTANCE_PROPERTY_TEMPLATE
    //     UNDECLARED_PROPERTIES
    //     UNREACHABLE
    string code = 1;

    // [Output Only] Metadata about this warning in key: value format. For
    // example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the
      // key value might be the zone name. Other examples might be a key
      // indicating a deprecated resource and a suggested replacement, or a
      // warning about invalid network settings (for example, if an instance
      // attempts to perform IP forwarding but is not enabled for IP
      // forwarding).
      string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      string value = 2;
    }
    repeated Data data = 2;

    // [Output Only] A human-readable description of the warning code.
    string message = 3;
  }
  Warning warning = 6;
}

// Private information for an interconnect attachment when this belongs
// to an interconnect of type IT_PRIVATE.
message InterconnectAttachmentPrivateInfo {
  // [Output Only] 802.1q encapsulation tag to be used for traffic between
  // Google and the customer, going to and from this network and region.
  uint32 tag8021q = 1;
}

message InterconnectAttachmentsScopedList {
  // List of interconnect attachments contained in this scope.
  repeated InterconnectAttachment interconnectAttachments = 1;

  // Informational warning which replaces the list of addresses when the
  // list is empty.
  // Informational warning which replaces the list of addresses when the
  // list is empty.
  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute
    // Engine returns NO_RESULTS_ON_PAGE if there are no results in the
    // response.
    // Valid values:
    //     CLEANUP_FAILED
    //     DEPRECATED_RESOURCE_USED
    //     DEPRECATED_TYPE_USED
    //     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
    //     EXPERIMENTAL_TYPE_USED
    //     EXTERNAL_API_WARNING
    //     FIELD_VALUE_OVERRIDEN
    //     INJECTED_KERNELS_DEPRECATED
    //     MISSING_TYPE_DEPENDENCY
    //     NEXT_HOP_ADDRESS_NOT_ASSIGNED
    //     NEXT_HOP_CANNOT_IP_FORWARD
    //     NEXT_HOP_INSTANCE_NOT_FOUND
    //     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
    //     NEXT_HOP_NOT_RUNNING
    //     NOT_CRITICAL_ERROR
    //     NO_RESULTS_ON_PAGE
    //     REQUIRED_TOS_AGREEMENT
    //     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
    //     RESOURCE_NOT_DELETED
    //     SCHEMA_VALIDATION_IGNORED
    //     SINGLE_INSTANCE_PROPERTY_TEMPLATE
    //     UNDECLARED_PROPERTIES
    //     UNREACHABLE
    string code = 1;

    // [Output Only] Metadata about this warning in key: value format. For
    // example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the
      // key value might be the zone name. Other examples might be a key
      // indicating a deprecated resource and a suggested replacement, or a
      // warning about invalid network settings (for example, if an instance
      // attempts to perform IP forwarding but is not enabled for IP
      // forwarding).
      string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      string value = 2;
    }
    repeated Data data = 2;

    // [Output Only] A human-readable description of the warning code.
    string message = 3;
  }
  Warning warning = 2;
}

// Describes a single physical circuit between the Customer and Google.
// CircuitInfo objects are created by Google, so all fields are output
// only. Next id: 4
message InterconnectCircuitInfo {
  // Customer-side demarc ID for this circuit. This will only be set if it
  // was provided by the Customer to Google during circuit turn-up.
  string customerDemarcId = 1;

  // Google-assigned unique ID for this circuit. Assigned at circuit
  // turn-up.
  string googleCircuitId = 2;

  // Google-side demarc ID for this circuit. Assigned at circuit turn-up
  // and provided by Google to the customer in the LOA.
  string googleDemarcId = 3;
}

// Response to the list request, and contains a list of interconnects.
message InterconnectList {
  // [Output Only] Unique identifier for the resource; defined by the
  // server.
  string id = 1;

  // A list of Interconnect resources.
  repeated Interconnect items = 2;

  // [Output Only] Type of resource. Always compute#interconnectList for
  // lists of interconnects.
  string kind = 3;

  // [Output Only] This token allows you to get the next page of results
  // for list requests. If the number of results is larger than
  // maxResults, use the nextPageToken as a value for the query parameter
  // pageToken in the next list request. Subsequent list requests will
  // have their own nextPageToken to continue paging through the results.
  string nextPageToken = 4;

  // [Output Only] Server-defined URL for this resource.
  string selfLink = 5;

  // [Output Only] Informational warning message.
  // [Output Only] Informational warning message.
  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute
    // Engine returns NO_RESULTS_ON_PAGE if there are no results in the
    // response.
    // Valid values:
    //     CLEANUP_FAILED
    //     DEPRECATED_RESOURCE_USED
    //     DEPRECATED_TYPE_USED
    //     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
    //     EXPERIMENTAL_TYPE_USED
    //     EXTERNAL_API_WARNING
    //     FIELD_VALUE_OVERRIDEN
    //     INJECTED_KERNELS_DEPRECATED
    //     MISSING_TYPE_DEPENDENCY
    //     NEXT_HOP_ADDRESS_NOT_ASSIGNED
    //     NEXT_HOP_CANNOT_IP_FORWARD
    //     NEXT_HOP_INSTANCE_NOT_FOUND
    //     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
    //     NEXT_HOP_NOT_RUNNING
    //     NOT_CRITICAL_ERROR
    //     NO_RESULTS_ON_PAGE
    //     REQUIRED_TOS_AGREEMENT
    //     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
    //     RESOURCE_NOT_DELETED
    //     SCHEMA_VALIDATION_IGNORED
    //     SINGLE_INSTANCE_PROPERTY_TEMPLATE
    //     UNDECLARED_PROPERTIES
    //     UNREACHABLE
    string code = 1;

    // [Output Only] Metadata about this warning in key: value format. For
    // example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the
      // key value might be the zone name. Other examples might be a key
      // indicating a deprecated resource and a suggested replacement, or a
      // warning about invalid network settings (for example, if an instance
      // attempts to perform IP forwarding but is not enabled for IP
      // forwarding).
      string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      string value = 2;
    }
    repeated Data data = 2;

    // [Output Only] A human-readable description of the warning code.
    string message = 3;
  }
  Warning warning = 6;
}

// Protocol definitions for Mixer API to support InterconnectLocation.
message InterconnectLocation {
  // [Output Only] The postal address of the Point of Presence, each line
  // in the address is separated by a newline character.
  string address = 1;

  // Availability zone for this location. Within a city, maintenance will
  // not be simultaneously scheduled in more than one availability zone.
  // Example: "zone1" or "zone2".
  string availabilityZone = 2;

  // City designator used by the Interconnect UI to locate this
  // InterconnectLocation within the Continent. For example: "Chicago,
  // IL", "Amsterdam, Netherlands".
  string city = 3;

  // Continent for this location. Used by the location picker in the
  // Interconnect UI.
  // Valid values:
  //     AFRICA
  //     ASIA_PAC
  //     C_AFRICA
  //     C_ASIA_PAC
  //     C_EUROPE
  //     C_NORTH_AMERICA
  //     C_SOUTH_AMERICA
  //     EUROPE
  //     NORTH_AMERICA
  //     SOUTH_AMERICA
  string continent = 4;

  // [Output Only] Creation timestamp in RFC3339 text format.
  string creationTimestamp = 5;

  // [Output Only] An optional description of the resource.
  string description = 6;

  // [Output Only] The name of the provider for this facility (e.g.,
  // EQUINIX).
  string facilityProvider = 7;

  // [Output Only] A provider-assigned Identifier for this facility (e.g.,
  // Ashburn-DC1).
  string facilityProviderFacilityId = 8;

  // [Output Only] The unique identifier for the resource. This identifier
  // is defined by the server.
  string id = 9;

  // [Output Only] Type of the resource. Always
  // compute#interconnectLocation for interconnect locations.
  string kind = 10;

  // [Output Only] Name of the resource.
  string name = 11;

  // [Output Only] The peeringdb identifier for this facility
  // (corresponding with a netfac type in peeringdb).
  string peeringdbFacilityId = 12;

  // [Output Only] A list of InterconnectLocation.RegionInfo objects, that
  // describe parameters pertaining to the relation between this
  // InterconnectLocation and various Google Cloud regions.
  repeated InterconnectLocationRegionInfo regionInfos = 13;

  // [Output Only] Server-defined URL for the resource.
  string selfLink = 14;
}

// Response to the list request, and contains a list of interconnect
// locations.
message InterconnectLocationList {
  // [Output Only] Unique identifier for the resource; defined by the
  // server.
  string id = 1;

  // A list of InterconnectLocation resources.
  repeated InterconnectLocation items = 2;

  // [Output Only] Type of resource. Always
  // compute#interconnectLocationList for lists of interconnect locations.
  string kind = 3;

  // [Output Only] This token allows you to get the next page of results
  // for list requests. If the number of results is larger than
  // maxResults, use the nextPageToken as a value for the query parameter
  // pageToken in the next list request. Subsequent list requests will
  // have their own nextPageToken to continue paging through the results.
  string nextPageToken = 4;

  // [Output Only] Server-defined URL for this resource.
  string selfLink = 5;

  // [Output Only] Informational warning message.
  // [Output Only] Informational warning message.
  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute
    // Engine returns NO_RESULTS_ON_PAGE if there are no results in the
    // response.
    // Valid values:
    //     CLEANUP_FAILED
    //     DEPRECATED_RESOURCE_USED
    //     DEPRECATED_TYPE_USED
    //     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
    //     EXPERIMENTAL_TYPE_USED
    //     EXTERNAL_API_WARNING
    //     FIELD_VALUE_OVERRIDEN
    //     INJECTED_KERNELS_DEPRECATED
    //     MISSING_TYPE_DEPENDENCY
    //     NEXT_HOP_ADDRESS_NOT_ASSIGNED
    //     NEXT_HOP_CANNOT_IP_FORWARD
    //     NEXT_HOP_INSTANCE_NOT_FOUND
    //     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
    //     NEXT_HOP_NOT_RUNNING
    //     NOT_CRITICAL_ERROR
    //     NO_RESULTS_ON_PAGE
    //     REQUIRED_TOS_AGREEMENT
    //     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
    //     RESOURCE_NOT_DELETED
    //     SCHEMA_VALIDATION_IGNORED
    //     SINGLE_INSTANCE_PROPERTY_TEMPLATE
    //     UNDECLARED_PROPERTIES
    //     UNREACHABLE
    string code = 1;

    // [Output Only] Metadata about this warning in key: value format. For
    // example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the
      // key value might be the zone name. Other examples might be a key
      // indicating a deprecated resource and a suggested replacement, or a
      // warning about invalid network settings (for example, if an instance
      // attempts to perform IP forwarding but is not enabled for IP
      // forwarding).
      string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      string value = 2;
    }
    repeated Data data = 2;

    // [Output Only] A human-readable description of the warning code.
    string message = 3;
  }
  Warning warning = 6;
}

// Information about any potential InterconnectAttachments between an
// Interconnect at a specific InterconnectLocation, and a specific Cloud
// Region.
message InterconnectLocationRegionInfo {
  // Expected round-trip time in milliseconds, from this
  // InterconnectLocation to a VM in this region.
  string expectedRttMs = 1;

  // Identifies the network presence of this location.
  // Valid values:
  //     GLOBAL
  //     LOCAL_REGION
  //     LP_GLOBAL
  //     LP_LOCAL_REGION
  string locationPresence = 2;

  // URL for the region of this location.
  string region = 3;
}

// Description of a planned outage on this Interconnect. Next id: 9
message InterconnectOutageNotification {
  // Iff issue_type is IT_PARTIAL_OUTAGE, a list of the Google-side
  // circuit IDs that will be affected.
  repeated string affectedCircuits = 1;

  // Short user-visible description of the purpose of the outage.
  string description = 2;

  string endTime = 3;

  // Valid values:
  //     IT_OUTAGE
  //     IT_PARTIAL_OUTAGE
  //     OUTAGE
  //     PARTIAL_OUTAGE
  string issueType = 4;

  // Unique identifier for this outage notification.
  string name = 5;

  // Valid values:
  //     GOOGLE
  //     NSRC_GOOGLE
  string source = 6;

  // Scheduled start and end times for the outage (milliseconds since Unix
  // epoch).
  string startTime = 7;

  // Valid values:
  //     ACTIVE
  //     CANCELLED
  //     NS_ACTIVE
  //     NS_CANCELED
  string state = 8;
}

// A license resource.
message License {
  // [Output Only] Deprecated. This field no longer reflects whether a
  // license charges a usage fee.
  bool chargesUseFee = 1;

  // [Output Only] Type of resource. Always compute#license for licenses.
  string kind = 2;

  // [Output Only] Name of the resource. The name is 1-63 characters long
  // and complies with RFC1035.
  string name = 3;

  // [Output Only] Server-defined URL for the resource.
  string selfLink = 4;
}

// Specifies what kind of log the caller must write
message LogConfig {
  // Cloud audit options.
  LogConfigCloudAuditOptions cloudAudit = 1;

  // Counter options.
  LogConfigCounterOptions counter = 2;

  // Data access options.
  LogConfigDataAccessOptions dataAccess = 3;
}

// Write a Cloud Audit log
message LogConfigCloudAuditOptions {
  // Information used by the Cloud Audit Logging pipeline.
  AuthorizationLoggingOptions authorizationLoggingOptions = 1;

  // The log_name to populate in the Cloud Audit Record.
  // Valid values:
  //     ADMIN_ACTIVITY
  //     DATA_ACCESS
  //     UNSPECIFIED_LOG_NAME
  string logName = 2;
}

// Increment a streamz counter with the specified metric and field
// names.
// 
// Metric names should start with a '/', generally be lowercase-only,
// and end in "_count". Field names should not contain an initial slash.
// The actual exported metric names will have "/iam/policy" prepended.
// 
// Field names correspond to IAM request parameters and field values are
// their respective values.
// 
// At present the only supported field names are - "iam_principal",
// corresponding to IAMContext.principal; - "" (empty string), resulting
// in one aggretated counter with no field.
// 
// Examples: counter { metric: "/debug_access_count" field:
// "iam_principal" } ==> increment counter
// /iam/policy/backend_debug_access_count {iam_principal=[value of
// IAMContext.principal]}
// 
// At this time we do not support: * multiple field names (though this
// may be supported in the future) * decrementing the counter *
// incrementing it by anything other than 1
message LogConfigCounterOptions {
  // The field value to attribute.
  string field = 1;

  // The metric to update.
  string metric = 2;
}

// Write a Data Access (Gin) log
message LogConfigDataAccessOptions {
  // Whether Gin logging should happen in a fail-closed manner at the
  // caller. This is relevant only in the LocalIAM implementation, for
  // now.
  // Valid values:
  //     LOG_FAIL_CLOSED
  //     LOG_MODE_UNSPECIFIED
  string logMode = 1;
}

// A Machine Type resource.
message MachineType {
  // [Output Only] Creation timestamp in RFC3339 text format.
  string creationTimestamp = 1;

  // [Output Only] The deprecation status associated with this machine
  // type.
  DeprecationStatus deprecated = 2;

  // [Output Only] An optional textual description of the resource.
  string description = 3;

  // [Output Only] The number of virtual CPUs that are available to the
  // instance.
  int32 guestCpus = 4;

  // [Output Only] The unique identifier for the resource. This identifier
  // is defined by the server.
  string id = 5;

  // [Output Only] Whether this machine type has a shared CPU. See
  // Shared-core machine types for more information.
  bool isSharedCpu = 6;

  // [Output Only] The type of the resource. Always compute#machineType
  // for machine types.
  string kind = 7;

  // [Output Only] Maximum persistent disks allowed.
  int32 maximumPersistentDisks = 8;

  // [Output Only] Maximum total persistent disks size (GB) allowed.
  string maximumPersistentDisksSizeGb = 9;

  // [Output Only] The amount of physical memory available to the
  // instance, defined in MB.
  int32 memoryMb = 10;

  // [Output Only] Name of the resource.
  string name = 11;

  // [Output Only] Server-defined URL for the resource.
  string selfLink = 12;

  // [Output Only] The name of the zone where the machine type resides,
  // such as us-central1-a.
  string zone = 13;
}

message MachineTypeAggregatedList {
  // [Output Only] Unique identifier for the resource; defined by the
  // server.
  string id = 1;

  // A list of MachineTypesScopedList resources.
  map<string, MachineTypesScopedList> items = 2;

  // [Output Only] Type of resource. Always
  // compute#machineTypeAggregatedList for aggregated lists of machine
  // types.
  string kind = 3;

  // [Output Only] This token allows you to get the next page of results
  // for list requests. If the number of results is larger than
  // maxResults, use the nextPageToken as a value for the query parameter
  // pageToken in the next list request. Subsequent list requests will
  // have their own nextPageToken to continue paging through the results.
  string nextPageToken = 4;

  // [Output Only] Server-defined URL for this resource.
  string selfLink = 5;

  // [Output Only] Informational warning message.
  // [Output Only] Informational warning message.
  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute
    // Engine returns NO_RESULTS_ON_PAGE if there are no results in the
    // response.
    // Valid values:
    //     CLEANUP_FAILED
    //     DEPRECATED_RESOURCE_USED
    //     DEPRECATED_TYPE_USED
    //     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
    //     EXPERIMENTAL_TYPE_USED
    //     EXTERNAL_API_WARNING
    //     FIELD_VALUE_OVERRIDEN
    //     INJECTED_KERNELS_DEPRECATED
    //     MISSING_TYPE_DEPENDENCY
    //     NEXT_HOP_ADDRESS_NOT_ASSIGNED
    //     NEXT_HOP_CANNOT_IP_FORWARD
    //     NEXT_HOP_INSTANCE_NOT_FOUND
    //     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
    //     NEXT_HOP_NOT_RUNNING
    //     NOT_CRITICAL_ERROR
    //     NO_RESULTS_ON_PAGE
    //     REQUIRED_TOS_AGREEMENT
    //     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
    //     RESOURCE_NOT_DELETED
    //     SCHEMA_VALIDATION_IGNORED
    //     SINGLE_INSTANCE_PROPERTY_TEMPLATE
    //     UNDECLARED_PROPERTIES
    //     UNREACHABLE
    string code = 1;

    // [Output Only] Metadata about this warning in key: value format. For
    // example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the
      // key value might be the zone name. Other examples might be a key
      // indicating a deprecated resource and a suggested replacement, or a
      // warning about invalid network settings (for example, if an instance
      // attempts to perform IP forwarding but is not enabled for IP
      // forwarding).
      string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      string value = 2;
    }
    repeated Data data = 2;

    // [Output Only] A human-readable description of the warning code.
    string message = 3;
  }
  Warning warning = 6;
}

// Contains a list of machine types.
message MachineTypeList {
  // [Output Only] Unique identifier for the resource; defined by the
  // server.
  string id = 1;

  // A list of MachineType resources.
  repeated MachineType items = 2;

  // [Output Only] Type of resource. Always compute#machineTypeList for
  // lists of machine types.
  string kind = 3;

  // [Output Only] This token allows you to get the next page of results
  // for list requests. If the number of results is larger than
  // maxResults, use the nextPageToken as a value for the query parameter
  // pageToken in the next list request. Subsequent list requests will
  // have their own nextPageToken to continue paging through the results.
  string nextPageToken = 4;

  // [Output Only] Server-defined URL for this resource.
  string selfLink = 5;

  // [Output Only] Informational warning message.
  // [Output Only] Informational warning message.
  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute
    // Engine returns NO_RESULTS_ON_PAGE if there are no results in the
    // response.
    // Valid values:
    //     CLEANUP_FAILED
    //     DEPRECATED_RESOURCE_USED
    //     DEPRECATED_TYPE_USED
    //     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
    //     EXPERIMENTAL_TYPE_USED
    //     EXTERNAL_API_WARNING
    //     FIELD_VALUE_OVERRIDEN
    //     INJECTED_KERNELS_DEPRECATED
    //     MISSING_TYPE_DEPENDENCY
    //     NEXT_HOP_ADDRESS_NOT_ASSIGNED
    //     NEXT_HOP_CANNOT_IP_FORWARD
    //     NEXT_HOP_INSTANCE_NOT_FOUND
    //     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
    //     NEXT_HOP_NOT_RUNNING
    //     NOT_CRITICAL_ERROR
    //     NO_RESULTS_ON_PAGE
    //     REQUIRED_TOS_AGREEMENT
    //     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
    //     RESOURCE_NOT_DELETED
    //     SCHEMA_VALIDATION_IGNORED
    //     SINGLE_INSTANCE_PROPERTY_TEMPLATE
    //     UNDECLARED_PROPERTIES
    //     UNREACHABLE
    string code = 1;

    // [Output Only] Metadata about this warning in key: value format. For
    // example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the
      // key value might be the zone name. Other examples might be a key
      // indicating a deprecated resource and a suggested replacement, or a
      // warning about invalid network settings (for example, if an instance
      // attempts to perform IP forwarding but is not enabled for IP
      // forwarding).
      string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      string value = 2;
    }
    repeated Data data = 2;

    // [Output Only] A human-readable description of the warning code.
    string message = 3;
  }
  Warning warning = 6;
}

message MachineTypesScopedList {
  // [Output Only] List of machine types contained in this scope.
  repeated MachineType machineTypes = 1;

  // [Output Only] An informational warning that appears when the machine
  // types list is empty.
  // [Output Only] An informational warning that appears when the machine
  // types list is empty.
  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute
    // Engine returns NO_RESULTS_ON_PAGE if there are no results in the
    // response.
    // Valid values:
    //     CLEANUP_FAILED
    //     DEPRECATED_RESOURCE_USED
    //     DEPRECATED_TYPE_USED
    //     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
    //     EXPERIMENTAL_TYPE_USED
    //     EXTERNAL_API_WARNING
    //     FIELD_VALUE_OVERRIDEN
    //     INJECTED_KERNELS_DEPRECATED
    //     MISSING_TYPE_DEPENDENCY
    //     NEXT_HOP_ADDRESS_NOT_ASSIGNED
    //     NEXT_HOP_CANNOT_IP_FORWARD
    //     NEXT_HOP_INSTANCE_NOT_FOUND
    //     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
    //     NEXT_HOP_NOT_RUNNING
    //     NOT_CRITICAL_ERROR
    //     NO_RESULTS_ON_PAGE
    //     REQUIRED_TOS_AGREEMENT
    //     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
    //     RESOURCE_NOT_DELETED
    //     SCHEMA_VALIDATION_IGNORED
    //     SINGLE_INSTANCE_PROPERTY_TEMPLATE
    //     UNDECLARED_PROPERTIES
    //     UNREACHABLE
    string code = 1;

    // [Output Only] Metadata about this warning in key: value format. For
    // example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the
      // key value might be the zone name. Other examples might be a key
      // indicating a deprecated resource and a suggested replacement, or a
      // warning about invalid network settings (for example, if an instance
      // attempts to perform IP forwarding but is not enabled for IP
      // forwarding).
      string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      string value = 2;
    }
    repeated Data data = 2;

    // [Output Only] A human-readable description of the warning code.
    string message = 3;
  }
  Warning warning = 2;
}

message ManagedInstance {
  // [Output Only] The current action that the managed instance group has
  // scheduled for the instance. Possible values:
  // - NONE The instance is running, and the managed instance group does
  // not have any scheduled actions for this instance.
  // - CREATING The managed instance group is creating this instance. If
  // the group fails to create this instance, it will try again until it
  // is successful.
  // - CREATING_WITHOUT_RETRIES The managed instance group is attempting
  // to create this instance only once. If the group fails to create this
  // instance, it does not try again and the group's targetSize value is
  // decreased instead.
  // - RECREATING The managed instance group is recreating this instance.
  // - DELETING The managed instance group is permanently deleting this
  // instance.
  // - ABANDONING The managed instance group is abandoning this instance.
  // The instance will be removed from the instance group and from any
  // target pools that are associated with this group.
  // - RESTARTING The managed instance group is restarting the instance.
  // - REFRESHING The managed instance group is applying configuration
  // changes to the instance without stopping it. For example, the group
  // can update the target pool list for an instance without stopping that
  // instance.
  // Valid values:
  //     ABANDONING
  //     CREATING
  //     CREATING_WITHOUT_RETRIES
  //     DELETING
  //     NONE
  //     RECREATING
  //     REFRESHING
  //     RESTARTING
  //     VERIFYING
  string currentAction = 1;

  // [Output only] The unique identifier for this resource. This field is
  // empty when instance does not exist.
  string id = 2;

  // [Output Only] The URL of the instance. The URL can exist even if the
  // instance has not yet been created.
  string instance = 3;

  // [Output Only] The status of the instance. This field is empty when
  // the instance does not exist.
  // Valid values:
  //     PROVISIONING
  //     RUNNING
  //     STAGING
  //     STOPPED
  //     STOPPING
  //     SUSPENDED
  //     SUSPENDING
  //     TERMINATED
  string instanceStatus = 4;

  // [Output Only] Information about the last attempt to create or delete
  // the instance.
  ManagedInstanceLastAttempt lastAttempt = 5;

  // [Output Only] Intended version of this instance.
  ManagedInstanceVersion version = 6;
}

message ManagedInstanceLastAttempt {
  // [Output Only] Encountered errors during the last attempt to create or
  // delete the instance.
  // [Output Only] Encountered errors during the last attempt to create or
  // delete the instance.
  message Errors {
    // [Output Only] The array of errors encountered while processing this
    // operation.
    message Errors {
      // [Output Only] The error type identifier for this error.
      string code = 1;

      // [Output Only] Indicates the field in the request that caused the
      // error. This property is optional.
      string location = 2;

      // [Output Only] An optional, human-readable error message.
      string message = 3;
    }
    repeated Errors errors = 1;
  }
  Errors errors = 1;
}

message ManagedInstanceVersion {
  // [Output Only] The intended template of the instance. This field is
  // empty when current_action is one of { DELETING, ABANDONING }.
  string instanceTemplate = 1;

  // [Output Only] Name of the version.
  string name = 2;
}

// A metadata key/value entry.
message Metadata {
  // Specifies a fingerprint for this request, which is essentially a hash
  // of the metadata's contents and used for optimistic locking. The
  // fingerprint is initially generated by Compute Engine and changes
  // after every request to modify or update metadata. You must always
  // provide an up-to-date fingerprint hash in order to update or change
  // metadata.
  string fingerprint = 1;

  // Array of key/value pairs. The total size of all keys and values must
  // be less than 512 KB.
  message Items {
    // Key for the metadata entry. Keys must conform to the following
    // regexp: [a-zA-Z0-9-_]+, and be less than 128 bytes in length. This is
    // reflected as part of a URL in the metadata server. Additionally, to
    // avoid ambiguity, keys must not conflict with any other metadata keys
    // for the project.
    string key = 1;

    // Value for the metadata entry. These are free-form strings, and only
    // have meaning as interpreted by the image running in the instance. The
    // only restriction placed on values is that their size must be less
    // than or equal to 262144 bytes (256 KiB).
    string value = 2;
  }
  repeated Items items = 2;

  // [Output Only] Type of the resource. Always compute#metadata for
  // metadata.
  string kind = 3;
}

// The named port. For example: .
message NamedPort {
  // The name for this named port. The name must be 1-63 characters long,
  // and comply with RFC1035.
  string name = 1;

  // The port number, which can be a value between 1 and 65535.
  int32 port = 2;
}

// Represents a Network resource. Read Networks and Firewalls for more
// information.
message Network {
  // The range of internal addresses that are legal on this network. This
  // range is a CIDR specification, for example: 192.168.0.0/16. Provided
  // by the client when the network is created.
  string IPv4Range = 1;

  // When set to true, the network is created in "auto subnet mode". When
  // set to false, the network is in "custom subnet mode".
  // 
  // In "auto subnet mode", a newly created network is assigned the
  // default CIDR of 10.128.0.0/9 and it automatically creates one
  // subnetwork per region.
  bool autoCreateSubnetworks = 2;

  // [Output Only] Creation timestamp in RFC3339 text format.
  string creationTimestamp = 3;

  // An optional description of this resource. Provide this property when
  // you create the resource.
  string description = 4;

  // A gateway address for default routing to other networks. This value
  // is read only and is selected by the Google Compute Engine, typically
  // as the first usable address in the IPv4Range.
  string gatewayIPv4 = 5;

  // [Output Only] The unique identifier for the resource. This identifier
  // is defined by the server.
  string id = 6;

  // [Output Only] Type of the resource. Always compute#network for
  // networks.
  string kind = 7;

  // Name of the resource. Provided by the client when the resource is
  // created. The name must be 1-63 characters long, and comply with
  // RFC1035. Specifically, the name must be 1-63 characters long and
  // match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means
  // the first character must be a lowercase letter, and all following
  // characters must be a dash, lowercase letter, or digit, except the
  // last character, which cannot be a dash.
  string name = 8;

  // [Output Only] List of network peerings for the resource.
  repeated NetworkPeering peerings = 9;

  // The network-level routing configuration for this network. Used by
  // Cloud Router to determine what type of network-wide routing behavior
  // to enforce.
  NetworkRoutingConfig routingConfig = 10;

  // [Output Only] Server-defined URL for the resource.
  string selfLink = 11;

  // [Output Only] Server-defined fully-qualified URLs for all subnetworks
  // in this network.
  repeated string subnetworks = 12;
}

// A network interface resource attached to an instance.
message NetworkInterface {
  // An array of configurations for this interface. Currently, only one
  // access config, ONE_TO_ONE_NAT, is supported. If there are no
  // accessConfigs specified, then this instance will have no external
  // internet access.
  repeated AccessConfig accessConfigs = 1;

  // An array of alias IP ranges for this network interface. Can only be
  // specified for network interfaces on subnet-mode networks.
  repeated AliasIpRange aliasIpRanges = 2;

  // Fingerprint hash of contents stored in this network interface. This
  // field will be ignored when inserting an Instance or adding a
  // NetworkInterface. An up-to-date fingerprint must be provided in order
  // to update the NetworkInterface.
  string fingerprint = 3;

  // [Output Only] Type of the resource. Always compute#networkInterface
  // for network interfaces.
  string kind = 4;

  // [Output Only] The name of the network interface, generated by the
  // server. For network devices, these are eth0, eth1, etc.
  string name = 5;

  // URL of the network resource for this instance. When creating an
  // instance, if neither the network nor the subnetwork is specified, the
  // default network global/networks/default is used; if the network is
  // not specified but the subnetwork is specified, the network is
  // inferred.
  // 
  // This field is optional when creating a firewall rule. If not
  // specified when creating a firewall rule, the default network
  // global/networks/default is used.
  // 
  // If you specify this property, you can specify the network as a full
  // or partial URL. For example, the following are all valid URLs:
  // -
  // https://www.googleapis.com/compute/v1/projects/project/global/networks/network
  // - projects/project/global/networks/network
  // - global/networks/default
  string network = 6;

  // An IPv4 internal network address to assign to the instance for this
  // network interface. If not specified by the user, an unused internal
  // IP is assigned by the system.
  string networkIP = 7;

  // The URL of the Subnetwork resource for this instance. If the network
  // resource is in legacy mode, do not provide this property. If the
  // network is in auto subnet mode, providing the subnetwork is optional.
  // If the network is in custom subnet mode, then this field should be
  // specified. If you specify this property, you can specify the
  // subnetwork as a full or partial URL. For example, the following are
  // all valid URLs:
  // -
  // https://www.googleapis.com/compute/v1/projects/project/regions/region/subnetworks/subnetwork
  // - regions/region/subnetworks/subnetwork
  string subnetwork = 8;
}

// Contains a list of networks.
message NetworkList {
  // [Output Only] Unique identifier for the resource; defined by the
  // server.
  string id = 1;

  // A list of Network resources.
  repeated Network items = 2;

  // [Output Only] Type of resource. Always compute#networkList for lists
  // of networks.
  string kind = 3;

  // [Output Only] This token allows you to get the next page of results
  // for list requests. If the number of results is larger than
  // maxResults, use the nextPageToken as a value for the query parameter
  // pageToken in the next list request. Subsequent list requests will
  // have their own nextPageToken to continue paging through the results.
  string nextPageToken = 4;

  // [Output Only] Server-defined URL for this resource.
  string selfLink = 5;

  // [Output Only] Informational warning message.
  // [Output Only] Informational warning message.
  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute
    // Engine returns NO_RESULTS_ON_PAGE if there are no results in the
    // response.
    // Valid values:
    //     CLEANUP_FAILED
    //     DEPRECATED_RESOURCE_USED
    //     DEPRECATED_TYPE_USED
    //     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
    //     EXPERIMENTAL_TYPE_USED
    //     EXTERNAL_API_WARNING
    //     FIELD_VALUE_OVERRIDEN
    //     INJECTED_KERNELS_DEPRECATED
    //     MISSING_TYPE_DEPENDENCY
    //     NEXT_HOP_ADDRESS_NOT_ASSIGNED
    //     NEXT_HOP_CANNOT_IP_FORWARD
    //     NEXT_HOP_INSTANCE_NOT_FOUND
    //     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
    //     NEXT_HOP_NOT_RUNNING
    //     NOT_CRITICAL_ERROR
    //     NO_RESULTS_ON_PAGE
    //     REQUIRED_TOS_AGREEMENT
    //     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
    //     RESOURCE_NOT_DELETED
    //     SCHEMA_VALIDATION_IGNORED
    //     SINGLE_INSTANCE_PROPERTY_TEMPLATE
    //     UNDECLARED_PROPERTIES
    //     UNREACHABLE
    string code = 1;

    // [Output Only] Metadata about this warning in key: value format. For
    // example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the
      // key value might be the zone name. Other examples might be a key
      // indicating a deprecated resource and a suggested replacement, or a
      // warning about invalid network settings (for example, if an instance
      // attempts to perform IP forwarding but is not enabled for IP
      // forwarding).
      string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      string value = 2;
    }
    repeated Data data = 2;

    // [Output Only] A human-readable description of the warning code.
    string message = 3;
  }
  Warning warning = 6;
}

// A network peering attached to a network resource. The message
// includes the peering name, peer network, peering state, and a flag
// indicating whether Google Compute Engine should automatically create
// routes for the peering.
message NetworkPeering {
  // Whether full mesh connectivity is created and managed automatically.
  // When it is set to true, Google Compute Engine will automatically
  // create and manage the routes between two networks when the state is
  // ACTIVE. Otherwise, user needs to create routes manually to route
  // packets to peer network.
  bool autoCreateRoutes = 1;

  // Name of this peering. Provided by the client when the peering is
  // created. The name must comply with RFC1035. Specifically, the name
  // must be 1-63 characters long and match regular expression
  // [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a
  // lowercase letter, and all the following characters must be a dash,
  // lowercase letter, or digit, except the last character, which cannot
  // be a dash.
  string name = 2;

  // The URL of the peer network. It can be either full URL or partial
  // URL. The peer network may belong to a different project. If the
  // partial URL does not contain project, it is assumed that the peer
  // network is in the same project as the current network.
  string network = 3;

  // [Output Only] State for the peering.
  // Valid values:
  //     ACTIVE
  //     INACTIVE
  string state = 4;

  // [Output Only] Details about the current state of the peering.
  string stateDetails = 5;
}

// A routing configuration attached to a network resource. The message
// includes the list of routers associated with the network, and a flag
// indicating the type of routing behavior to enforce network-wide.
message NetworkRoutingConfig {
  // The network-wide routing mode to use. If set to REGIONAL, this
  // network's cloud routers will only advertise routes with subnetworks
  // of this network in the same region as the router. If set to GLOBAL,
  // this network's cloud routers will advertise routes with all
  // subnetworks of this network, across regions.
  // Valid values:
  //     GLOBAL
  //     REGIONAL
  string routingMode = 1;
}

message NetworksAddPeeringRequest {
  // Whether Google Compute Engine manages the routes automatically.
  bool autoCreateRoutes = 1;

  // Name of the peering, which should conform to RFC1035.
  string name = 2;

  // URL of the peer network. It can be either full URL or partial URL.
  // The peer network may belong to a different project. If the partial
  // URL does not contain project, it is assumed that the peer network is
  // in the same project as the current network.
  string peerNetwork = 3;
}

message NetworksRemovePeeringRequest {
  // Name of the peering, which should conform to RFC1035.
  string name = 1;
}

// An Operation resource, used to manage asynchronous API requests.
message Operation {
  // [Output Only] Reserved for future use.
  string clientOperationId = 1;

  // [Deprecated] This field is deprecated.
  string creationTimestamp = 2;

  // [Output Only] A textual description of the operation, which is set
  // when the operation is created.
  string description = 3;

  // [Output Only] The time that this operation was completed. This value
  // is in RFC3339 text format.
  string endTime = 4;

  // [Output Only] If errors are generated during processing of the
  // operation, this field will be populated.
  // [Output Only] If errors are generated during processing of the
  // operation, this field will be populated.
  message Error {
    // [Output Only] The array of errors encountered while processing this
    // operation.
    message Errors {
      // [Output Only] The error type identifier for this error.
      string code = 1;

      // [Output Only] Indicates the field in the request that caused the
      // error. This property is optional.
      string location = 2;

      // [Output Only] An optional, human-readable error message.
      string message = 3;
    }
    repeated Errors errors = 1;
  }
  Error error = 5;

  // [Output Only] If the operation fails, this field contains the HTTP
  // error message that was returned, such as NOT FOUND.
  string httpErrorMessage = 6;

  // [Output Only] If the operation fails, this field contains the HTTP
  // error status code that was returned. For example, a 404 means the
  // resource was not found.
  int32 httpErrorStatusCode = 7;

  // [Output Only] The unique identifier for the resource. This identifier
  // is defined by the server.
  string id = 8;

  // [Output Only] The time that this operation was requested. This value
  // is in RFC3339 text format.
  string insertTime = 9;

  // [Output Only] Type of the resource. Always compute#operation for
  // Operation resources.
  string kind = 10;

  // [Output Only] Name of the resource.
  string name = 11;

  // [Output Only] The type of operation, such as insert, update, or
  // delete, and so on.
  string operationType = 12;

  // [Output Only] An optional progress indicator that ranges from 0 to
  // 100. There is no requirement that this be linear or support any
  // granularity of operations. This should not be used to guess when the
  // operation will be complete. This number should monotonically increase
  // as the operation progresses.
  int32 progress = 13;

  // [Output Only] The URL of the region where the operation resides. Only
  // available when performing regional operations.
  string region = 14;

  // [Output Only] Server-defined URL for the resource.
  string selfLink = 15;

  // [Output Only] The time that this operation was started by the server.
  // This value is in RFC3339 text format.
  string startTime = 16;

  // [Output Only] The status of the operation, which can be one of the
  // following: PENDING, RUNNING, or DONE.
  // Valid values:
  //     DONE
  //     PENDING
  //     RUNNING
  string status = 17;

  // [Output Only] An optional textual description of the current status
  // of the operation.
  string statusMessage = 18;

  // [Output Only] The unique target ID, which identifies a specific
  // incarnation of the target resource.
  string targetId = 19;

  // [Output Only] The URL of the resource that the operation modifies.
  // For operations related to creating a snapshot, this points to the
  // persistent disk that the snapshot was created from.
  string targetLink = 20;

  // [Output Only] User who requested the operation, for example:
  // user@example.com.
  string user = 21;

  // [Output Only] If warning messages are generated during processing of
  // the operation, this field will be populated.
  message Warnings {
    // [Output Only] A warning code, if applicable. For example, Compute
    // Engine returns NO_RESULTS_ON_PAGE if there are no results in the
    // response.
    // Valid values:
    //     CLEANUP_FAILED
    //     DEPRECATED_RESOURCE_USED
    //     DEPRECATED_TYPE_USED
    //     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
    //     EXPERIMENTAL_TYPE_USED
    //     EXTERNAL_API_WARNING
    //     FIELD_VALUE_OVERRIDEN
    //     INJECTED_KERNELS_DEPRECATED
    //     MISSING_TYPE_DEPENDENCY
    //     NEXT_HOP_ADDRESS_NOT_ASSIGNED
    //     NEXT_HOP_CANNOT_IP_FORWARD
    //     NEXT_HOP_INSTANCE_NOT_FOUND
    //     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
    //     NEXT_HOP_NOT_RUNNING
    //     NOT_CRITICAL_ERROR
    //     NO_RESULTS_ON_PAGE
    //     REQUIRED_TOS_AGREEMENT
    //     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
    //     RESOURCE_NOT_DELETED
    //     SCHEMA_VALIDATION_IGNORED
    //     SINGLE_INSTANCE_PROPERTY_TEMPLATE
    //     UNDECLARED_PROPERTIES
    //     UNREACHABLE
    string code = 1;

    // [Output Only] Metadata about this warning in key: value format. For
    // example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the
      // key value might be the zone name. Other examples might be a key
      // indicating a deprecated resource and a suggested replacement, or a
      // warning about invalid network settings (for example, if an instance
      // attempts to perform IP forwarding but is not enabled for IP
      // forwarding).
      string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      string value = 2;
    }
    repeated Data data = 2;

    // [Output Only] A human-readable description of the warning code.
    string message = 3;
  }
  repeated Warnings warnings = 22;

  // [Output Only] The URL of the zone where the operation resides. Only
  // available when performing per-zone operations.
  string zone = 23;
}

message OperationAggregatedList {
  // [Output Only] The unique identifier for the resource. This identifier
  // is defined by the server.
  string id = 1;

  // [Output Only] A map of scoped operation lists.
  map<string, OperationsScopedList> items = 2;

  // [Output Only] Type of resource. Always
  // compute#operationAggregatedList for aggregated lists of operations.
  string kind = 3;

  // [Output Only] This token allows you to get the next page of results
  // for list requests. If the number of results is larger than
  // maxResults, use the nextPageToken as a value for the query parameter
  // pageToken in the next list request. Subsequent list requests will
  // have their own nextPageToken to continue paging through the results.
  string nextPageToken = 4;

  // [Output Only] Server-defined URL for this resource.
  string selfLink = 5;

  // [Output Only] Informational warning message.
  // [Output Only] Informational warning message.
  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute
    // Engine returns NO_RESULTS_ON_PAGE if there are no results in the
    // response.
    // Valid values:
    //     CLEANUP_FAILED
    //     DEPRECATED_RESOURCE_USED
    //     DEPRECATED_TYPE_USED
    //     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
    //     EXPERIMENTAL_TYPE_USED
    //     EXTERNAL_API_WARNING
    //     FIELD_VALUE_OVERRIDEN
    //     INJECTED_KERNELS_DEPRECATED
    //     MISSING_TYPE_DEPENDENCY
    //     NEXT_HOP_ADDRESS_NOT_ASSIGNED
    //     NEXT_HOP_CANNOT_IP_FORWARD
    //     NEXT_HOP_INSTANCE_NOT_FOUND
    //     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
    //     NEXT_HOP_NOT_RUNNING
    //     NOT_CRITICAL_ERROR
    //     NO_RESULTS_ON_PAGE
    //     REQUIRED_TOS_AGREEMENT
    //     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
    //     RESOURCE_NOT_DELETED
    //     SCHEMA_VALIDATION_IGNORED
    //     SINGLE_INSTANCE_PROPERTY_TEMPLATE
    //     UNDECLARED_PROPERTIES
    //     UNREACHABLE
    string code = 1;

    // [Output Only] Metadata about this warning in key: value format. For
    // example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the
      // key value might be the zone name. Other examples might be a key
      // indicating a deprecated resource and a suggested replacement, or a
      // warning about invalid network settings (for example, if an instance
      // attempts to perform IP forwarding but is not enabled for IP
      // forwarding).
      string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      string value = 2;
    }
    repeated Data data = 2;

    // [Output Only] A human-readable description of the warning code.
    string message = 3;
  }
  Warning warning = 6;
}

// Contains a list of Operation resources.
message OperationList {
  // [Output Only] The unique identifier for the resource. This identifier
  // is defined by the server.
  string id = 1;

  // [Output Only] A list of Operation resources.
  repeated Operation items = 2;

  // [Output Only] Type of resource. Always compute#operations for
  // Operations resource.
  string kind = 3;

  // [Output Only] This token allows you to get the next page of results
  // for list requests. If the number of results is larger than
  // maxResults, use the nextPageToken as a value for the query parameter
  // pageToken in the next list request. Subsequent list requests will
  // have their own nextPageToken to continue paging through the results.
  string nextPageToken = 4;

  // [Output Only] Server-defined URL for this resource.
  string selfLink = 5;

  // [Output Only] Informational warning message.
  // [Output Only] Informational warning message.
  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute
    // Engine returns NO_RESULTS_ON_PAGE if there are no results in the
    // response.
    // Valid values:
    //     CLEANUP_FAILED
    //     DEPRECATED_RESOURCE_USED
    //     DEPRECATED_TYPE_USED
    //     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
    //     EXPERIMENTAL_TYPE_USED
    //     EXTERNAL_API_WARNING
    //     FIELD_VALUE_OVERRIDEN
    //     INJECTED_KERNELS_DEPRECATED
    //     MISSING_TYPE_DEPENDENCY
    //     NEXT_HOP_ADDRESS_NOT_ASSIGNED
    //     NEXT_HOP_CANNOT_IP_FORWARD
    //     NEXT_HOP_INSTANCE_NOT_FOUND
    //     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
    //     NEXT_HOP_NOT_RUNNING
    //     NOT_CRITICAL_ERROR
    //     NO_RESULTS_ON_PAGE
    //     REQUIRED_TOS_AGREEMENT
    //     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
    //     RESOURCE_NOT_DELETED
    //     SCHEMA_VALIDATION_IGNORED
    //     SINGLE_INSTANCE_PROPERTY_TEMPLATE
    //     UNDECLARED_PROPERTIES
    //     UNREACHABLE
    string code = 1;

    // [Output Only] Metadata about this warning in key: value format. For
    // example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the
      // key value might be the zone name. Other examples might be a key
      // indicating a deprecated resource and a suggested replacement, or a
      // warning about invalid network settings (for example, if an instance
      // attempts to perform IP forwarding but is not enabled for IP
      // forwarding).
      string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      string value = 2;
    }
    repeated Data data = 2;

    // [Output Only] A human-readable description of the warning code.
    string message = 3;
  }
  Warning warning = 6;
}

message OperationsScopedList {
  // [Output Only] List of operations contained in this scope.
  repeated Operation operations = 1;

  // [Output Only] Informational warning which replaces the list of
  // operations when the list is empty.
  // [Output Only] Informational warning which replaces the list of
  // operations when the list is empty.
  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute
    // Engine returns NO_RESULTS_ON_PAGE if there are no results in the
    // response.
    // Valid values:
    //     CLEANUP_FAILED
    //     DEPRECATED_RESOURCE_USED
    //     DEPRECATED_TYPE_USED
    //     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
    //     EXPERIMENTAL_TYPE_USED
    //     EXTERNAL_API_WARNING
    //     FIELD_VALUE_OVERRIDEN
    //     INJECTED_KERNELS_DEPRECATED
    //     MISSING_TYPE_DEPENDENCY
    //     NEXT_HOP_ADDRESS_NOT_ASSIGNED
    //     NEXT_HOP_CANNOT_IP_FORWARD
    //     NEXT_HOP_INSTANCE_NOT_FOUND
    //     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
    //     NEXT_HOP_NOT_RUNNING
    //     NOT_CRITICAL_ERROR
    //     NO_RESULTS_ON_PAGE
    //     REQUIRED_TOS_AGREEMENT
    //     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
    //     RESOURCE_NOT_DELETED
    //     SCHEMA_VALIDATION_IGNORED
    //     SINGLE_INSTANCE_PROPERTY_TEMPLATE
    //     UNDECLARED_PROPERTIES
    //     UNREACHABLE
    string code = 1;

    // [Output Only] Metadata about this warning in key: value format. For
    // example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the
      // key value might be the zone name. Other examples might be a key
      // indicating a deprecated resource and a suggested replacement, or a
      // warning about invalid network settings (for example, if an instance
      // attempts to perform IP forwarding but is not enabled for IP
      // forwarding).
      string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      string value = 2;
    }
    repeated Data data = 2;

    // [Output Only] A human-readable description of the warning code.
    string message = 3;
  }
  Warning warning = 2;
}

// A matcher for the path portion of the URL. The BackendService from
// the longest-matched rule will serve the URL. If no rule was matched,
// the default service will be used.
message PathMatcher {
  // The full or partial URL to the BackendService resource. This will be
  // used if none of the pathRules defined by this PathMatcher is matched
  // by the URL's path portion. For example, the following are all valid
  // URLs to a BackendService resource:
  // -
  // https://www.googleapis.com/compute/v1/projects/project/global/backendServices/backendService
  // - compute/v1/projects/project/global/backendServices/backendService
  // - global/backendServices/backendService
  string defaultService = 1;

  // An optional description of this resource. Provide this property when
  // you create the resource.
  string description = 2;

  // The name to which this PathMatcher is referred by the HostRule.
  string name = 3;

  // The list of path rules.
  repeated PathRule pathRules = 4;
}

// A path-matching rule for a URL. If matched, will use the specified
// BackendService to handle the traffic arriving at this URL.
message PathRule {
  // The list of path patterns to match. Each must start with / and the
  // only place a * is allowed is at the end following a /. The string fed
  // to the path matcher does not include any text after the first ? or #,
  // and those chars are not allowed here.
  repeated string paths = 1;

  // The URL of the BackendService resource if this rule is matched.
  string service = 2;
}

// Defines an Identity and Access Management (IAM) policy. It is used to
// specify access control policies for Cloud Platform resources.
// 
// 
// 
// A `Policy` consists of a list of `bindings`. A `Binding` binds a list
// of `members` to a `role`, where the members can be user accounts,
// Google groups, Google domains, and service accounts. A `role` is a
// named list of permissions defined by IAM.
// 
// **Example**
// 
// { "bindings": [ { "role": "roles/owner", "members": [
// "user:mike@example.com", "group:admins@example.com",
// "domain:google.com",
// "serviceAccount:my-other-app@appspot.gserviceaccount.com", ] }, {
// "role": "roles/viewer", "members": ["user:sean@example.com"] } ] }
// 
// For a description of IAM and its features, see the [IAM developer's
// guide](https://cloud.google.com/iam).
message Policy {
  // Specifies cloud audit logging configuration for this policy.
  repeated AuditConfig auditConfigs = 1;

  // Associates a list of `members` to a `role`. `bindings` with no
  // members will result in an error.
  repeated Binding bindings = 2;

  // `etag` is used for optimistic concurrency control as a way to help
  // prevent simultaneous updates of a policy from overwriting each other.
  // It is strongly suggested that systems make use of the `etag` in the
  // read-modify-write cycle to perform policy updates in order to avoid
  // race conditions: An `etag` is returned in the response to
  // `getIamPolicy`, and systems are expected to put that etag in the
  // request to `setIamPolicy` to ensure that their change will be applied
  // to the same version of the policy.
  // 
  // If no `etag` is provided in the call to `setIamPolicy`, then the
  // existing policy is overwritten blindly.
  string etag = 3;

  bool iamOwned = 4;

  // If more than one rule is specified, the rules are applied in the
  // following manner: - All matching LOG rules are always applied. - If
  // any DENY/DENY_WITH_LOG rule matches, permission is denied. Logging
  // will be applied if one or more matching rule requires logging. -
  // Otherwise, if any ALLOW/ALLOW_WITH_LOG rule matches, permission is
  // granted. Logging will be applied if one or more matching rule
  // requires logging. - Otherwise, if no rule applies, permission is
  // denied.
  repeated Rule rules = 5;

  // Version of the `Policy`. The default version is 0.
  int32 version = 6;
}

// A Project resource. Projects can only be created in the Google Cloud
// Platform Console. Unless marked otherwise, values can only be
// modified in the console.
message Project {
  // Metadata key/value pairs available to all instances contained in this
  // project. See Custom metadata for more information.
  Metadata commonInstanceMetadata = 1;

  // [Output Only] Creation timestamp in RFC3339 text format.
  string creationTimestamp = 2;

  // [Output Only] Default service account used by VMs running in this
  // project.
  string defaultServiceAccount = 3;

  // An optional textual description of the resource.
  string description = 4;

  // Restricted features enabled for use on this project.
  repeated string enabledFeatures = 5;

  // [Output Only] The unique identifier for the resource. This identifier
  // is defined by the server. This is not the project ID, and is just a
  // unique ID used by Compute Engine to identify resources.
  string id = 6;

  // [Output Only] Type of the resource. Always compute#project for
  // projects.
  string kind = 7;

  // The project ID. For example: my-example-project. Use the project ID
  // to make requests to Compute Engine.
  string name = 8;

  // [Output Only] Quotas assigned to this project.
  repeated Quota quotas = 9;

  // [Output Only] Server-defined URL for the resource.
  string selfLink = 10;

  // The naming prefix for daily usage reports and the Google Cloud
  // Storage bucket where they are stored.
  UsageExportLocation usageExportLocation = 11;

  // [Output Only] The role this project has in a shared VPC
  // configuration. Currently only HOST projects are differentiated.
  // Valid values:
  //     HOST
  //     UNSPECIFIED_XPN_PROJECT_STATUS
  string xpnProjectStatus = 12;
}

message ProjectsDisableXpnResourceRequest {
  // Service resource (a.k.a service project) ID.
  XpnResourceId xpnResource = 1;
}

message ProjectsEnableXpnResourceRequest {
  // Service resource (a.k.a service project) ID.
  XpnResourceId xpnResource = 1;
}

message ProjectsGetXpnResources {
  // [Output Only] Type of resource. Always
  // compute#projectsGetXpnResources for lists of service resources (a.k.a
  // service projects)
  string kind = 1;

  // [Output Only] This token allows you to get the next page of results
  // for list requests. If the number of results is larger than
  // maxResults, use the nextPageToken as a value for the query parameter
  // pageToken in the next list request. Subsequent list requests will
  // have their own nextPageToken to continue paging through the results.
  string nextPageToken = 2;

  // Service resources (a.k.a service projects) attached to this project
  // as their shared VPC host.
  repeated XpnResourceId resources = 3;
}

message ProjectsListXpnHostsRequest {
  // Optional organization ID managed by Cloud Resource Manager, for which
  // to list shared VPC host projects. If not specified, the organization
  // will be inferred from the project.
  string organization = 1;
}

// A quotas entry.
message Quota {
  // [Output Only] Quota limit for this metric.
  double limit = 1;

  // [Output Only] Name of the quota metric.
  // Valid values:
  //     AUTOSCALERS
  //     BACKEND_BUCKETS
  //     BACKEND_SERVICES
  //     COMMITMENTS
  //     CPUS
  //     CPUS_ALL_REGIONS
  //     DISKS_TOTAL_GB
  //     FIREWALLS
  //     FORWARDING_RULES
  //     HEALTH_CHECKS
  //     IMAGES
  //     INSTANCES
  //     INSTANCE_GROUPS
  //     INSTANCE_GROUP_MANAGERS
  //     INSTANCE_TEMPLATES
  //     INTERCONNECTS
  //     IN_USE_ADDRESSES
  //     LOCAL_SSD_TOTAL_GB
  //     NETWORKS
  //     NVIDIA_K80_GPUS
  //     NVIDIA_P100_GPUS
  //     PREEMPTIBLE_CPUS
  //     PREEMPTIBLE_LOCAL_SSD_GB
  //     REGIONAL_AUTOSCALERS
  //     REGIONAL_INSTANCE_GROUP_MANAGERS
  //     ROUTERS
  //     ROUTES
  //     SECURITY_POLICIES
  //     SECURITY_POLICY_RULES
  //     SNAPSHOTS
  //     SSD_TOTAL_GB
  //     SSL_CERTIFICATES
  //     STATIC_ADDRESSES
  //     SUBNETWORKS
  //     TARGET_HTTPS_PROXIES
  //     TARGET_HTTP_PROXIES
  //     TARGET_INSTANCES
  //     TARGET_POOLS
  //     TARGET_SSL_PROXIES
  //     TARGET_TCP_PROXIES
  //     TARGET_VPN_GATEWAYS
  //     URL_MAPS
  //     VPN_TUNNELS
  string metric = 2;

  // [Output Only] Current usage of this metric.
  double usage = 3;
}

// Represents a reference to a resource.
message Reference {
  // [Output Only] Type of the resource. Always compute#reference for
  // references.
  string kind = 1;

  // A description of the reference type with no implied semantics.
  // Possible values include:
  // - MEMBER_OF
  string referenceType = 2;

  // URL of the resource which refers to the target.
  string referrer = 3;

  // URL of the resource to which this reference points.
  string target = 4;
}

// Region resource.
message Region {
  // [Output Only] Creation timestamp in RFC3339 text format.
  string creationTimestamp = 1;

  // [Output Only] The deprecation status associated with this region.
  DeprecationStatus deprecated = 2;

  // [Output Only] Textual description of the resource.
  string description = 3;

  // [Output Only] The unique identifier for the resource. This identifier
  // is defined by the server.
  string id = 4;

  // [Output Only] Type of the resource. Always compute#region for
  // regions.
  string kind = 5;

  // [Output Only] Name of the resource.
  string name = 6;

  // [Output Only] Quotas assigned to this region.
  repeated Quota quotas = 7;

  // [Output Only] Server-defined URL for the resource.
  string selfLink = 8;

  // [Output Only] Status of the region, either UP or DOWN.
  // Valid values:
  //     DOWN
  //     UP
  string status = 9;

  // [Output Only] A list of zones available in this region, in the form
  // of resource URLs.
  repeated string zones = 10;
}

// Contains a list of autoscalers.
message RegionAutoscalerList {
  // [Output Only] Unique identifier for the resource; defined by the
  // server.
  string id = 1;

  // A list of Autoscaler resources.
  repeated Autoscaler items = 2;

  // Type of resource.
  string kind = 3;

  // [Output Only] This token allows you to get the next page of results
  // for list requests. If the number of results is larger than
  // maxResults, use the nextPageToken as a value for the query parameter
  // pageToken in the next list request. Subsequent list requests will
  // have their own nextPageToken to continue paging through the results.
  string nextPageToken = 4;

  // [Output Only] Server-defined URL for this resource.
  string selfLink = 5;

  // [Output Only] Informational warning message.
  // [Output Only] Informational warning message.
  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute
    // Engine returns NO_RESULTS_ON_PAGE if there are no results in the
    // response.
    // Valid values:
    //     CLEANUP_FAILED
    //     DEPRECATED_RESOURCE_USED
    //     DEPRECATED_TYPE_USED
    //     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
    //     EXPERIMENTAL_TYPE_USED
    //     EXTERNAL_API_WARNING
    //     FIELD_VALUE_OVERRIDEN
    //     INJECTED_KERNELS_DEPRECATED
    //     MISSING_TYPE_DEPENDENCY
    //     NEXT_HOP_ADDRESS_NOT_ASSIGNED
    //     NEXT_HOP_CANNOT_IP_FORWARD
    //     NEXT_HOP_INSTANCE_NOT_FOUND
    //     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
    //     NEXT_HOP_NOT_RUNNING
    //     NOT_CRITICAL_ERROR
    //     NO_RESULTS_ON_PAGE
    //     REQUIRED_TOS_AGREEMENT
    //     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
    //     RESOURCE_NOT_DELETED
    //     SCHEMA_VALIDATION_IGNORED
    //     SINGLE_INSTANCE_PROPERTY_TEMPLATE
    //     UNDECLARED_PROPERTIES
    //     UNREACHABLE
    string code = 1;

    // [Output Only] Metadata about this warning in key: value format. For
    // example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the
      // key value might be the zone name. Other examples might be a key
      // indicating a deprecated resource and a suggested replacement, or a
      // warning about invalid network settings (for example, if an instance
      // attempts to perform IP forwarding but is not enabled for IP
      // forwarding).
      string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      string value = 2;
    }
    repeated Data data = 2;

    // [Output Only] A human-readable description of the warning code.
    string message = 3;
  }
  Warning warning = 6;
}

// Contains a list of InstanceGroup resources.
message RegionInstanceGroupList {
  // [Output Only] Unique identifier for the resource; defined by the
  // server.
  string id = 1;

  // A list of InstanceGroup resources.
  repeated InstanceGroup items = 2;

  // The resource type.
  string kind = 3;

  // [Output Only] This token allows you to get the next page of results
  // for list requests. If the number of results is larger than
  // maxResults, use the nextPageToken as a value for the query parameter
  // pageToken in the next list request. Subsequent list requests will
  // have their own nextPageToken to continue paging through the results.
  string nextPageToken = 4;

  // [Output Only] Server-defined URL for this resource.
  string selfLink = 5;

  // [Output Only] Informational warning message.
  // [Output Only] Informational warning message.
  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute
    // Engine returns NO_RESULTS_ON_PAGE if there are no results in the
    // response.
    // Valid values:
    //     CLEANUP_FAILED
    //     DEPRECATED_RESOURCE_USED
    //     DEPRECATED_TYPE_USED
    //     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
    //     EXPERIMENTAL_TYPE_USED
    //     EXTERNAL_API_WARNING
    //     FIELD_VALUE_OVERRIDEN
    //     INJECTED_KERNELS_DEPRECATED
    //     MISSING_TYPE_DEPENDENCY
    //     NEXT_HOP_ADDRESS_NOT_ASSIGNED
    //     NEXT_HOP_CANNOT_IP_FORWARD
    //     NEXT_HOP_INSTANCE_NOT_FOUND
    //     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
    //     NEXT_HOP_NOT_RUNNING
    //     NOT_CRITICAL_ERROR
    //     NO_RESULTS_ON_PAGE
    //     REQUIRED_TOS_AGREEMENT
    //     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
    //     RESOURCE_NOT_DELETED
    //     SCHEMA_VALIDATION_IGNORED
    //     SINGLE_INSTANCE_PROPERTY_TEMPLATE
    //     UNDECLARED_PROPERTIES
    //     UNREACHABLE
    string code = 1;

    // [Output Only] Metadata about this warning in key: value format. For
    // example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the
      // key value might be the zone name. Other examples might be a key
      // indicating a deprecated resource and a suggested replacement, or a
      // warning about invalid network settings (for example, if an instance
      // attempts to perform IP forwarding but is not enabled for IP
      // forwarding).
      string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      string value = 2;
    }
    repeated Data data = 2;

    // [Output Only] A human-readable description of the warning code.
    string message = 3;
  }
  Warning warning = 6;
}

// Contains a list of managed instance groups.
message RegionInstanceGroupManagerList {
  // [Output Only] Unique identifier for the resource; defined by the
  // server.
  string id = 1;

  // A list of InstanceGroupManager resources.
  repeated InstanceGroupManager items = 2;

  // [Output Only] The resource type, which is always
  // compute#instanceGroupManagerList for a list of managed instance
  // groups that exist in th regional scope.
  string kind = 3;

  // [Output Only] This token allows you to get the next page of results
  // for list requests. If the number of results is larger than
  // maxResults, use the nextPageToken as a value for the query parameter
  // pageToken in the next list request. Subsequent list requests will
  // have their own nextPageToken to continue paging through the results.
  string nextPageToken = 4;

  // [Output Only] Server-defined URL for this resource.
  string selfLink = 5;

  // [Output Only] Informational warning message.
  // [Output Only] Informational warning message.
  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute
    // Engine returns NO_RESULTS_ON_PAGE if there are no results in the
    // response.
    // Valid values:
    //     CLEANUP_FAILED
    //     DEPRECATED_RESOURCE_USED
    //     DEPRECATED_TYPE_USED
    //     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
    //     EXPERIMENTAL_TYPE_USED
    //     EXTERNAL_API_WARNING
    //     FIELD_VALUE_OVERRIDEN
    //     INJECTED_KERNELS_DEPRECATED
    //     MISSING_TYPE_DEPENDENCY
    //     NEXT_HOP_ADDRESS_NOT_ASSIGNED
    //     NEXT_HOP_CANNOT_IP_FORWARD
    //     NEXT_HOP_INSTANCE_NOT_FOUND
    //     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
    //     NEXT_HOP_NOT_RUNNING
    //     NOT_CRITICAL_ERROR
    //     NO_RESULTS_ON_PAGE
    //     REQUIRED_TOS_AGREEMENT
    //     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
    //     RESOURCE_NOT_DELETED
    //     SCHEMA_VALIDATION_IGNORED
    //     SINGLE_INSTANCE_PROPERTY_TEMPLATE
    //     UNDECLARED_PROPERTIES
    //     UNREACHABLE
    string code = 1;

    // [Output Only] Metadata about this warning in key: value format. For
    // example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the
      // key value might be the zone name. Other examples might be a key
      // indicating a deprecated resource and a suggested replacement, or a
      // warning about invalid network settings (for example, if an instance
      // attempts to perform IP forwarding but is not enabled for IP
      // forwarding).
      string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      string value = 2;
    }
    repeated Data data = 2;

    // [Output Only] A human-readable description of the warning code.
    string message = 3;
  }
  Warning warning = 6;
}

message RegionInstanceGroupManagersAbandonInstancesRequest {
  // The URLs of one or more instances to abandon. This can be a full URL
  // or a partial URL, such as zones/[ZONE]/instances/[INSTANCE_NAME].
  repeated string instances = 1;
}

message RegionInstanceGroupManagersDeleteInstancesRequest {
  // The URLs of one or more instances to delete. This can be a full URL
  // or a partial URL, such as zones/[ZONE]/instances/[INSTANCE_NAME].
  repeated string instances = 1;
}

message RegionInstanceGroupManagersListInstancesResponse {
  // List of managed instances.
  repeated ManagedInstance managedInstances = 1;

  // [Output Only] This token allows you to get the next page of results
  // for list requests. If the number of results is larger than
  // maxResults, use the nextPageToken as a value for the query parameter
  // pageToken in the next list request. Subsequent list requests will
  // have their own nextPageToken to continue paging through the results.
  string nextPageToken = 2;
}

message RegionInstanceGroupManagersRecreateRequest {
  // The URLs of one or more instances to recreate. This can be a full URL
  // or a partial URL, such as zones/[ZONE]/instances/[INSTANCE_NAME].
  repeated string instances = 1;
}

message RegionInstanceGroupManagersSetAutoHealingRequest {
  repeated InstanceGroupManagerAutoHealingPolicy autoHealingPolicies = 1;
}

message RegionInstanceGroupManagersSetTargetPoolsRequest {
  // Fingerprint of the target pools information, which is a hash of the
  // contents. This field is used for optimistic locking when you update
  // the target pool entries. This field is optional.
  string fingerprint = 1;

  // The URL of all TargetPool resources to which instances in the
  // instanceGroup field are added. The target pools automatically apply
  // to all of the instances in the managed instance group.
  repeated string targetPools = 2;
}

message RegionInstanceGroupManagersSetTemplateRequest {
  // URL of the InstanceTemplate resource from which all new instances
  // will be created.
  string instanceTemplate = 1;
}

message RegionInstanceGroupsListInstances {
  // [Output Only] Unique identifier for the resource; defined by the
  // server.
  string id = 1;

  // A list of InstanceWithNamedPorts resources.
  repeated InstanceWithNamedPorts items = 2;

  // The resource type.
  string kind = 3;

  // [Output Only] This token allows you to get the next page of results
  // for list requests. If the number of results is larger than
  // maxResults, use the nextPageToken as a value for the query parameter
  // pageToken in the next list request. Subsequent list requests will
  // have their own nextPageToken to continue paging through the results.
  string nextPageToken = 4;

  // [Output Only] Server-defined URL for this resource.
  string selfLink = 5;

  // [Output Only] Informational warning message.
  // [Output Only] Informational warning message.
  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute
    // Engine returns NO_RESULTS_ON_PAGE if there are no results in the
    // response.
    // Valid values:
    //     CLEANUP_FAILED
    //     DEPRECATED_RESOURCE_USED
    //     DEPRECATED_TYPE_USED
    //     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
    //     EXPERIMENTAL_TYPE_USED
    //     EXTERNAL_API_WARNING
    //     FIELD_VALUE_OVERRIDEN
    //     INJECTED_KERNELS_DEPRECATED
    //     MISSING_TYPE_DEPENDENCY
    //     NEXT_HOP_ADDRESS_NOT_ASSIGNED
    //     NEXT_HOP_CANNOT_IP_FORWARD
    //     NEXT_HOP_INSTANCE_NOT_FOUND
    //     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
    //     NEXT_HOP_NOT_RUNNING
    //     NOT_CRITICAL_ERROR
    //     NO_RESULTS_ON_PAGE
    //     REQUIRED_TOS_AGREEMENT
    //     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
    //     RESOURCE_NOT_DELETED
    //     SCHEMA_VALIDATION_IGNORED
    //     SINGLE_INSTANCE_PROPERTY_TEMPLATE
    //     UNDECLARED_PROPERTIES
    //     UNREACHABLE
    string code = 1;

    // [Output Only] Metadata about this warning in key: value format. For
    // example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the
      // key value might be the zone name. Other examples might be a key
      // indicating a deprecated resource and a suggested replacement, or a
      // warning about invalid network settings (for example, if an instance
      // attempts to perform IP forwarding but is not enabled for IP
      // forwarding).
      string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      string value = 2;
    }
    repeated Data data = 2;

    // [Output Only] A human-readable description of the warning code.
    string message = 3;
  }
  Warning warning = 6;
}

message RegionInstanceGroupsListInstancesRequest {
  // Instances in which state should be returned. Valid options are:
  // 'ALL', 'RUNNING'. By default, it lists all instances.
  // Valid values:
  //     ALL
  //     RUNNING
  string instanceState = 1;

  // Name of port user is interested in. It is optional. If it is set,
  // only information about this ports will be returned. If it is not set,
  // all the named ports will be returned. Always lists all instances.
  string portName = 2;
}

message RegionInstanceGroupsSetNamedPortsRequest {
  // The fingerprint of the named ports information for this instance
  // group. Use this optional property to prevent conflicts when multiple
  // users change the named ports settings concurrently. Obtain the
  // fingerprint with the instanceGroups.get method. Then, include the
  // fingerprint in your request to ensure that you do not overwrite
  // changes that were applied from another concurrent request.
  string fingerprint = 1;

  // The list of named ports to set for this instance group.
  repeated NamedPort namedPorts = 2;
}

// Contains a list of region resources.
message RegionList {
  // [Output Only] Unique identifier for the resource; defined by the
  // server.
  string id = 1;

  // A list of Region resources.
  repeated Region items = 2;

  // [Output Only] Type of resource. Always compute#regionList for lists
  // of regions.
  string kind = 3;

  // [Output Only] This token allows you to get the next page of results
  // for list requests. If the number of results is larger than
  // maxResults, use the nextPageToken as a value for the query parameter
  // pageToken in the next list request. Subsequent list requests will
  // have their own nextPageToken to continue paging through the results.
  string nextPageToken = 4;

  // [Output Only] Server-defined URL for this resource.
  string selfLink = 5;

  // [Output Only] Informational warning message.
  // [Output Only] Informational warning message.
  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute
    // Engine returns NO_RESULTS_ON_PAGE if there are no results in the
    // response.
    // Valid values:
    //     CLEANUP_FAILED
    //     DEPRECATED_RESOURCE_USED
    //     DEPRECATED_TYPE_USED
    //     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
    //     EXPERIMENTAL_TYPE_USED
    //     EXTERNAL_API_WARNING
    //     FIELD_VALUE_OVERRIDEN
    //     INJECTED_KERNELS_DEPRECATED
    //     MISSING_TYPE_DEPENDENCY
    //     NEXT_HOP_ADDRESS_NOT_ASSIGNED
    //     NEXT_HOP_CANNOT_IP_FORWARD
    //     NEXT_HOP_INSTANCE_NOT_FOUND
    //     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
    //     NEXT_HOP_NOT_RUNNING
    //     NOT_CRITICAL_ERROR
    //     NO_RESULTS_ON_PAGE
    //     REQUIRED_TOS_AGREEMENT
    //     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
    //     RESOURCE_NOT_DELETED
    //     SCHEMA_VALIDATION_IGNORED
    //     SINGLE_INSTANCE_PROPERTY_TEMPLATE
    //     UNDECLARED_PROPERTIES
    //     UNREACHABLE
    string code = 1;

    // [Output Only] Metadata about this warning in key: value format. For
    // example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the
      // key value might be the zone name. Other examples might be a key
      // indicating a deprecated resource and a suggested replacement, or a
      // warning about invalid network settings (for example, if an instance
      // attempts to perform IP forwarding but is not enabled for IP
      // forwarding).
      string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      string value = 2;
    }
    repeated Data data = 2;

    // [Output Only] A human-readable description of the warning code.
    string message = 3;
  }
  Warning warning = 6;
}

message RegionSetLabelsRequest {
  // The fingerprint of the previous set of labels for this resource, used
  // to detect conflicts. The fingerprint is initially generated by
  // Compute Engine and changes after every request to modify or update
  // labels. You must always provide an up-to-date fingerprint hash in
  // order to update or change labels. Make a get() request to the
  // resource to get the latest fingerprint.
  string labelFingerprint = 1;

  // The labels to set for this resource.
  map<string, string> labels = 2;
}

// Commitment for a particular resource (a Commitment is composed of one
// or more of these).
message ResourceCommitment {
  // The amount of the resource purchased (in a type-dependent unit, such
  // as bytes). For vCPUs, this can just be an integer. For memory, this
  // must be provided in MB. Memory must be a multiple of 256 MB, with up
  // to 6.5GB of memory per every vCPU.
  string amount = 1;

  // Type of resource for which this commitment applies. Possible values
  // are VCPU and MEMORY
  // Valid values:
  //     MEMORY
  //     UNSPECIFIED
  //     VCPU
  string type = 2;
}

message ResourceGroupReference {
  // A URI referencing one of the instance groups listed in the backend
  // service.
  string group = 1;
}

// Represents a Route resource. A route specifies how certain packets
// should be handled by the network. Routes are associated with
// instances by tags and the set of routes for a particular instance is
// called its routing table.
// 
// For each packet leaving an instance, the system searches that
// instance's routing table for a single best matching route. Routes
// match packets by destination IP address, preferring smaller or more
// specific ranges over larger ones. If there is a tie, the system
// selects the route with the smallest priority value. If there is still
// a tie, it uses the layer three and four packet headers to select just
// one of the remaining matching routes. The packet is then forwarded as
// specified by the nextHop field of the winning route - either to
// another instance destination, an instance gateway, or a Google
// Compute Engine-operated gateway.
// 
// Packets that do not match any route in the sending instance's routing
// table are dropped.
message Route {
  // [Output Only] Creation timestamp in RFC3339 text format.
  string creationTimestamp = 1;

  // An optional description of this resource. Provide this property when
  // you create the resource.
  string description = 2;

  // The destination range of outgoing packets that this route applies to.
  // Only IPv4 is supported.
  string destRange = 3;

  // [Output Only] The unique identifier for the resource. This identifier
  // is defined by the server.
  string id = 4;

  // [Output Only] Type of this resource. Always compute#routes for Route
  // resources.
  string kind = 5;

  // Name of the resource. Provided by the client when the resource is
  // created. The name must be 1-63 characters long, and comply with
  // RFC1035. Specifically, the name must be 1-63 characters long and
  // match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means
  // the first character must be a lowercase letter, and all following
  // characters must be a dash, lowercase letter, or digit, except the
  // last character, which cannot be a dash.
  string name = 6;

  // Fully-qualified URL of the network that this route applies to.
  string network = 7;

  // The URL to a gateway that should handle matching packets. You can
  // only specify the internet gateway using a full or partial valid URL: 
  // projects/<project-id>/global/gateways/default-internet-gateway
  string nextHopGateway = 8;

  // The URL to an instance that should handle matching packets. You can
  // specify this as a full or partial URL. For example:
  // https://www.googleapis.com/compute/v1/projects/project/zones/zone/instances/
  string nextHopInstance = 9;

  // The network IP address of an instance that should handle matching
  // packets. Only IPv4 is supported.
  string nextHopIp = 10;

  // The URL of the local network if it should handle matching packets.
  string nextHopNetwork = 11;

  // [Output Only] The network peering name that should handle matching
  // packets, which should conform to RFC1035.
  string nextHopPeering = 12;

  // The URL to a VpnTunnel that should handle matching packets.
  string nextHopVpnTunnel = 13;

  // The priority of this route. Priority is used to break ties in cases
  // where there is more than one matching route of equal prefix length.
  // In the case of two routes with equal prefix length, the one with the
  // lowest-numbered priority value wins. Default value is 1000. Valid
  // range is 0 through 65535.
  uint32 priority = 14;

  // [Output Only] Server-defined fully-qualified URL for this resource.
  string selfLink = 15;

  // A list of instance tags to which this route applies.
  repeated string tags = 16;

  // [Output Only] If potential misconfigurations are detected for this
  // route, this field will be populated with warning messages.
  message Warnings {
    // [Output Only] A warning code, if applicable. For example, Compute
    // Engine returns NO_RESULTS_ON_PAGE if there are no results in the
    // response.
    // Valid values:
    //     CLEANUP_FAILED
    //     DEPRECATED_RESOURCE_USED
    //     DEPRECATED_TYPE_USED
    //     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
    //     EXPERIMENTAL_TYPE_USED
    //     EXTERNAL_API_WARNING
    //     FIELD_VALUE_OVERRIDEN
    //     INJECTED_KERNELS_DEPRECATED
    //     MISSING_TYPE_DEPENDENCY
    //     NEXT_HOP_ADDRESS_NOT_ASSIGNED
    //     NEXT_HOP_CANNOT_IP_FORWARD
    //     NEXT_HOP_INSTANCE_NOT_FOUND
    //     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
    //     NEXT_HOP_NOT_RUNNING
    //     NOT_CRITICAL_ERROR
    //     NO_RESULTS_ON_PAGE
    //     REQUIRED_TOS_AGREEMENT
    //     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
    //     RESOURCE_NOT_DELETED
    //     SCHEMA_VALIDATION_IGNORED
    //     SINGLE_INSTANCE_PROPERTY_TEMPLATE
    //     UNDECLARED_PROPERTIES
    //     UNREACHABLE
    string code = 1;

    // [Output Only] Metadata about this warning in key: value format. For
    // example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the
      // key value might be the zone name. Other examples might be a key
      // indicating a deprecated resource and a suggested replacement, or a
      // warning about invalid network settings (for example, if an instance
      // attempts to perform IP forwarding but is not enabled for IP
      // forwarding).
      string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      string value = 2;
    }
    repeated Data data = 2;

    // [Output Only] A human-readable description of the warning code.
    string message = 3;
  }
  repeated Warnings warnings = 17;
}

// Contains a list of Route resources.
message RouteList {
  // [Output Only] Unique identifier for the resource; defined by the
  // server.
  string id = 1;

  // A list of Route resources.
  repeated Route items = 2;

  // Type of resource.
  string kind = 3;

  // [Output Only] This token allows you to get the next page of results
  // for list requests. If the number of results is larger than
  // maxResults, use the nextPageToken as a value for the query parameter
  // pageToken in the next list request. Subsequent list requests will
  // have their own nextPageToken to continue paging through the results.
  string nextPageToken = 4;

  // [Output Only] Server-defined URL for this resource.
  string selfLink = 5;

  // [Output Only] Informational warning message.
  // [Output Only] Informational warning message.
  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute
    // Engine returns NO_RESULTS_ON_PAGE if there are no results in the
    // response.
    // Valid values:
    //     CLEANUP_FAILED
    //     DEPRECATED_RESOURCE_USED
    //     DEPRECATED_TYPE_USED
    //     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
    //     EXPERIMENTAL_TYPE_USED
    //     EXTERNAL_API_WARNING
    //     FIELD_VALUE_OVERRIDEN
    //     INJECTED_KERNELS_DEPRECATED
    //     MISSING_TYPE_DEPENDENCY
    //     NEXT_HOP_ADDRESS_NOT_ASSIGNED
    //     NEXT_HOP_CANNOT_IP_FORWARD
    //     NEXT_HOP_INSTANCE_NOT_FOUND
    //     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
    //     NEXT_HOP_NOT_RUNNING
    //     NOT_CRITICAL_ERROR
    //     NO_RESULTS_ON_PAGE
    //     REQUIRED_TOS_AGREEMENT
    //     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
    //     RESOURCE_NOT_DELETED
    //     SCHEMA_VALIDATION_IGNORED
    //     SINGLE_INSTANCE_PROPERTY_TEMPLATE
    //     UNDECLARED_PROPERTIES
    //     UNREACHABLE
    string code = 1;

    // [Output Only] Metadata about this warning in key: value format. For
    // example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the
      // key value might be the zone name. Other examples might be a key
      // indicating a deprecated resource and a suggested replacement, or a
      // warning about invalid network settings (for example, if an instance
      // attempts to perform IP forwarding but is not enabled for IP
      // forwarding).
      string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      string value = 2;
    }
    repeated Data data = 2;

    // [Output Only] A human-readable description of the warning code.
    string message = 3;
  }
  Warning warning = 6;
}

// Router resource.
message Router {
  // BGP information specific to this router.
  RouterBgp bgp = 1;

  // BGP information that needs to be configured into the routing stack to
  // establish the BGP peering. It must specify peer ASN and either
  // interface name, IP, or peer IP. Please refer to RFC4273.
  repeated RouterBgpPeer bgpPeers = 2;

  // [Output Only] Creation timestamp in RFC3339 text format.
  string creationTimestamp = 3;

  // An optional description of this resource. Provide this property when
  // you create the resource.
  string description = 4;

  // [Output Only] The unique identifier for the resource. This identifier
  // is defined by the server.
  string id = 5;

  // Router interfaces. Each interface requires either one linked resource
  // (e.g. linkedVpnTunnel), or IP address and IP address range (e.g.
  // ipRange), or both.
  repeated RouterInterface interfaces = 6;

  // [Output Only] Type of resource. Always compute#router for routers.
  string kind = 7;

  // Name of the resource. Provided by the client when the resource is
  // created. The name must be 1-63 characters long, and comply with
  // RFC1035. Specifically, the name must be 1-63 characters long and
  // match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means
  // the first character must be a lowercase letter, and all following
  // characters must be a dash, lowercase letter, or digit, except the
  // last character, which cannot be a dash.
  string name = 8;

  // URI of the network to which this router belongs.
  string network = 9;

  // [Output Only] URI of the region where the router resides.
  string region = 10;

  // [Output Only] Server-defined URL for the resource.
  string selfLink = 11;
}

// Contains a list of routers.
message RouterAggregatedList {
  // [Output Only] Unique identifier for the resource; defined by the
  // server.
  string id = 1;

  // A list of Router resources.
  map<string, RoutersScopedList> items = 2;

  // Type of resource.
  string kind = 3;

  // [Output Only] This token allows you to get the next page of results
  // for list requests. If the number of results is larger than
  // maxResults, use the nextPageToken as a value for the query parameter
  // pageToken in the next list request. Subsequent list requests will
  // have their own nextPageToken to continue paging through the results.
  string nextPageToken = 4;

  // [Output Only] Server-defined URL for this resource.
  string selfLink = 5;

  // [Output Only] Informational warning message.
  // [Output Only] Informational warning message.
  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute
    // Engine returns NO_RESULTS_ON_PAGE if there are no results in the
    // response.
    // Valid values:
    //     CLEANUP_FAILED
    //     DEPRECATED_RESOURCE_USED
    //     DEPRECATED_TYPE_USED
    //     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
    //     EXPERIMENTAL_TYPE_USED
    //     EXTERNAL_API_WARNING
    //     FIELD_VALUE_OVERRIDEN
    //     INJECTED_KERNELS_DEPRECATED
    //     MISSING_TYPE_DEPENDENCY
    //     NEXT_HOP_ADDRESS_NOT_ASSIGNED
    //     NEXT_HOP_CANNOT_IP_FORWARD
    //     NEXT_HOP_INSTANCE_NOT_FOUND
    //     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
    //     NEXT_HOP_NOT_RUNNING
    //     NOT_CRITICAL_ERROR
    //     NO_RESULTS_ON_PAGE
    //     REQUIRED_TOS_AGREEMENT
    //     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
    //     RESOURCE_NOT_DELETED
    //     SCHEMA_VALIDATION_IGNORED
    //     SINGLE_INSTANCE_PROPERTY_TEMPLATE
    //     UNDECLARED_PROPERTIES
    //     UNREACHABLE
    string code = 1;

    // [Output Only] Metadata about this warning in key: value format. For
    // example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the
      // key value might be the zone name. Other examples might be a key
      // indicating a deprecated resource and a suggested replacement, or a
      // warning about invalid network settings (for example, if an instance
      // attempts to perform IP forwarding but is not enabled for IP
      // forwarding).
      string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      string value = 2;
    }
    repeated Data data = 2;

    // [Output Only] A human-readable description of the warning code.
    string message = 3;
  }
  Warning warning = 6;
}

message RouterBgp {
  // Local BGP Autonomous System Number (ASN). Must be an RFC6996 private
  // ASN, either 16-bit or 32-bit. The value will be fixed for this router
  // resource. All VPN tunnels that link to this router will have the same
  // local ASN.
  uint32 asn = 1;
}

message RouterBgpPeer {
  // The priority of routes advertised to this BGP peer. In the case where
  // there is more than one matching route of maximum length, the routes
  // with lowest priority value win.
  uint32 advertisedRoutePriority = 1;

  // Name of the interface the BGP peer is associated with.
  string interfaceName = 2;

  // IP address of the interface inside Google Cloud Platform. Only IPv4
  // is supported.
  string ipAddress = 3;

  // Name of this BGP peer. The name must be 1-63 characters long and
  // comply with RFC1035.
  string name = 4;

  // Peer BGP Autonomous System Number (ASN). For VPN use case, this value
  // can be different for every tunnel.
  uint32 peerAsn = 5;

  // IP address of the BGP interface outside Google cloud. Only IPv4 is
  // supported.
  string peerIpAddress = 6;
}

message RouterInterface {
  // IP address and range of the interface. The IP range must be in the
  // RFC3927 link-local IP space. The value must be a CIDR-formatted
  // string, for example: 169.254.0.1/30. NOTE: Do not truncate the
  // address as it represents the IP address of the interface.
  string ipRange = 1;

  // URI of the linked interconnect attachment. It must be in the same
  // region as the router. Each interface can have at most one linked
  // resource and it could either be a VPN Tunnel or an interconnect
  // attachment.
  string linkedInterconnectAttachment = 2;

  // URI of the linked VPN tunnel. It must be in the same region as the
  // router. Each interface can have at most one linked resource and it
  // could either be a VPN Tunnel or an interconnect attachment.
  string linkedVpnTunnel = 3;

  // Name of this interface entry. The name must be 1-63 characters long
  // and comply with RFC1035.
  string name = 4;
}

// Contains a list of Router resources.
message RouterList {
  // [Output Only] Unique identifier for the resource; defined by the
  // server.
  string id = 1;

  // A list of Router resources.
  repeated Router items = 2;

  // [Output Only] Type of resource. Always compute#router for routers.
  string kind = 3;

  // [Output Only] This token allows you to get the next page of results
  // for list requests. If the number of results is larger than
  // maxResults, use the nextPageToken as a value for the query parameter
  // pageToken in the next list request. Subsequent list requests will
  // have their own nextPageToken to continue paging through the results.
  string nextPageToken = 4;

  // [Output Only] Server-defined URL for this resource.
  string selfLink = 5;

  // [Output Only] Informational warning message.
  // [Output Only] Informational warning message.
  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute
    // Engine returns NO_RESULTS_ON_PAGE if there are no results in the
    // response.
    // Valid values:
    //     CLEANUP_FAILED
    //     DEPRECATED_RESOURCE_USED
    //     DEPRECATED_TYPE_USED
    //     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
    //     EXPERIMENTAL_TYPE_USED
    //     EXTERNAL_API_WARNING
    //     FIELD_VALUE_OVERRIDEN
    //     INJECTED_KERNELS_DEPRECATED
    //     MISSING_TYPE_DEPENDENCY
    //     NEXT_HOP_ADDRESS_NOT_ASSIGNED
    //     NEXT_HOP_CANNOT_IP_FORWARD
    //     NEXT_HOP_INSTANCE_NOT_FOUND
    //     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
    //     NEXT_HOP_NOT_RUNNING
    //     NOT_CRITICAL_ERROR
    //     NO_RESULTS_ON_PAGE
    //     REQUIRED_TOS_AGREEMENT
    //     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
    //     RESOURCE_NOT_DELETED
    //     SCHEMA_VALIDATION_IGNORED
    //     SINGLE_INSTANCE_PROPERTY_TEMPLATE
    //     UNDECLARED_PROPERTIES
    //     UNREACHABLE
    string code = 1;

    // [Output Only] Metadata about this warning in key: value format. For
    // example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the
      // key value might be the zone name. Other examples might be a key
      // indicating a deprecated resource and a suggested replacement, or a
      // warning about invalid network settings (for example, if an instance
      // attempts to perform IP forwarding but is not enabled for IP
      // forwarding).
      string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      string value = 2;
    }
    repeated Data data = 2;

    // [Output Only] A human-readable description of the warning code.
    string message = 3;
  }
  Warning warning = 6;
}

message RouterStatus {
  // Best routes for this router's network.
  repeated Route bestRoutes = 1;

  // Best routes learned by this router.
  repeated Route bestRoutesForRouter = 2;

  repeated RouterStatusBgpPeerStatus bgpPeerStatus = 3;

  // URI of the network to which this router belongs.
  string network = 4;
}

message RouterStatusBgpPeerStatus {
  // Routes that were advertised to the remote BGP peer
  repeated Route advertisedRoutes = 1;

  // IP address of the local BGP interface.
  string ipAddress = 2;

  // URL of the VPN tunnel that this BGP peer controls.
  string linkedVpnTunnel = 3;

  // Name of this BGP peer. Unique within the Routers resource.
  string name = 4;

  // Number of routes learned from the remote BGP Peer.
  uint32 numLearnedRoutes = 5;

  // IP address of the remote BGP interface.
  string peerIpAddress = 6;

  // BGP state as specified in RFC1771.
  string state = 7;

  // Status of the BGP peer: {UP, DOWN}
  // Valid values:
  //     DOWN
  //     UNKNOWN
  //     UP
  string status = 8;

  // Time this session has been up. Format: 14 years, 51 weeks, 6 days, 23
  // hours, 59 minutes, 59 seconds
  string uptime = 9;

  // Time this session has been up, in seconds. Format: 145
  string uptimeSeconds = 10;
}

message RouterStatusResponse {
  // Type of resource.
  string kind = 1;

  RouterStatus result = 2;
}

message RoutersPreviewResponse {
  // Preview of given router.
  Router resource = 1;
}

message RoutersScopedList {
  // List of routers contained in this scope.
  repeated Router routers = 1;

  // Informational warning which replaces the list of routers when the
  // list is empty.
  // Informational warning which replaces the list of routers when the
  // list is empty.
  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute
    // Engine returns NO_RESULTS_ON_PAGE if there are no results in the
    // response.
    // Valid values:
    //     CLEANUP_FAILED
    //     DEPRECATED_RESOURCE_USED
    //     DEPRECATED_TYPE_USED
    //     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
    //     EXPERIMENTAL_TYPE_USED
    //     EXTERNAL_API_WARNING
    //     FIELD_VALUE_OVERRIDEN
    //     INJECTED_KERNELS_DEPRECATED
    //     MISSING_TYPE_DEPENDENCY
    //     NEXT_HOP_ADDRESS_NOT_ASSIGNED
    //     NEXT_HOP_CANNOT_IP_FORWARD
    //     NEXT_HOP_INSTANCE_NOT_FOUND
    //     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
    //     NEXT_HOP_NOT_RUNNING
    //     NOT_CRITICAL_ERROR
    //     NO_RESULTS_ON_PAGE
    //     REQUIRED_TOS_AGREEMENT
    //     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
    //     RESOURCE_NOT_DELETED
    //     SCHEMA_VALIDATION_IGNORED
    //     SINGLE_INSTANCE_PROPERTY_TEMPLATE
    //     UNDECLARED_PROPERTIES
    //     UNREACHABLE
    string code = 1;

    // [Output Only] Metadata about this warning in key: value format. For
    // example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the
      // key value might be the zone name. Other examples might be a key
      // indicating a deprecated resource and a suggested replacement, or a
      // warning about invalid network settings (for example, if an instance
      // attempts to perform IP forwarding but is not enabled for IP
      // forwarding).
      string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      string value = 2;
    }
    repeated Data data = 2;

    // [Output Only] A human-readable description of the warning code.
    string message = 3;
  }
  Warning warning = 2;
}

// A rule to be applied in a Policy.
message Rule {
  // Required
  // Valid values:
  //     ALLOW
  //     ALLOW_WITH_LOG
  //     DENY
  //     DENY_WITH_LOG
  //     LOG
  //     NO_ACTION
  string action = 1;

  // Additional restrictions that must be met. All conditions must pass
  // for the rule to match.
  repeated Condition conditions = 2;

  // Human-readable description of the rule.
  string description = 3;

  // If one or more 'in' clauses are specified, the rule matches if the
  // PRINCIPAL/AUTHORITY_SELECTOR is in at least one of these entries.
  repeated string ins = 4;

  // The config returned to callers of tech.iam.IAM.CheckPolicy for any
  // entries that match the LOG action.
  repeated LogConfig logConfigs = 5;

  // If one or more 'not_in' clauses are specified, the rule matches if
  // the PRINCIPAL/AUTHORITY_SELECTOR is in none of the entries.
  repeated string notIns = 6;

  // A permission is a string of form '..' (e.g., 'storage.buckets.list').
  // A value of '*' matches all permissions, and a verb part of '*' (e.g.,
  // 'storage.buckets.*') matches all verbs.
  repeated string permissions = 7;
}

message SSLHealthCheck {
  // The TCP port number for the health check request. The default value
  // is 443. Valid values are 1 through 65535.
  int32 port = 1;

  // Port name as defined in InstanceGroup#NamedPort#name. If both port
  // and port_name are defined, port takes precedence.
  string portName = 2;

  // Specifies the type of proxy header to append before sending data to
  // the backend, either NONE or PROXY_V1. The default is NONE.
  // Valid values:
  //     NONE
  //     PROXY_V1
  string proxyHeader = 3;

  // The application data to send once the SSL connection has been
  // established (default value is empty). If both request and response
  // are empty, the connection establishment alone will indicate health.
  // The request data can only be ASCII.
  string request = 4;

  // The bytes to match against the beginning of the response data. If
  // left empty (the default value), any response will indicate health.
  // The response data can only be ASCII.
  string response = 5;
}

// Sets the scheduling options for an Instance.
message Scheduling {
  // Specifies whether the instance should be automatically restarted if
  // it is terminated by Compute Engine (not terminated by a user). You
  // can only set the automatic restart option for standard instances.
  // Preemptible instances cannot be automatically restarted.
  // 
  // By default, this is set to true so an instance is automatically
  // restarted if it is terminated by Compute Engine.
  bool automaticRestart = 1;

  // Defines the maintenance behavior for this instance. For standard
  // instances, the default behavior is MIGRATE. For preemptible
  // instances, the default and only possible behavior is TERMINATE. For
  // more information, see Setting Instance Scheduling Options.
  // Valid values:
  //     MIGRATE
  //     TERMINATE
  string onHostMaintenance = 2;

  // Defines whether the instance is preemptible. This can only be set
  // during instance creation, it cannot be set or changed after the
  // instance has been created.
  bool preemptible = 3;
}

// A security policy is comprised of one or more rules. It can also be
// associated with one or more 'targets'.
message SecurityPolicy {
  // [Output Only] Creation timestamp in RFC3339 text format.
  string creationTimestamp = 1;

  // An optional description of this resource. Provide this property when
  // you create the resource.
  string description = 2;

  // Specifies a fingerprint for this resource, which is essentially a
  // hash of the metadata's contents and used for optimistic locking. The
  // fingerprint is initially generated by Compute Engine and changes
  // after every request to modify or update metadata. You must always
  // provide an up-to-date fingerprint hash in order to update or change
  // metadata.
  // 
  // To see the latest fingerprint, make get() request to the security
  // policy.
  string fingerprint = 3;

  // [Output Only] The unique identifier for the resource. This identifier
  // is defined by the server.
  string id = 4;

  // [Output only] Type of the resource. Always compute#securityPolicyfor
  // security policies
  string kind = 5;

  // Name of the resource. Provided by the client when the resource is
  // created. The name must be 1-63 characters long, and comply with
  // RFC1035. Specifically, the name must be 1-63 characters long and
  // match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means
  // the first character must be a lowercase letter, and all following
  // characters must be a dash, lowercase letter, or digit, except the
  // last character, which cannot be a dash.
  string name = 6;

  // List of rules that belong to this policy. There must always be a
  // default rule (rule with priority 2147483647 and match "*"). If no
  // rules are provided when creating a security policy, a default rule
  // with action "allow" will be added.
  repeated SecurityPolicyRule rules = 7;

  // [Output Only] Server-defined URL for the resource.
  string selfLink = 8;
}

message SecurityPolicyList {
  // [Output Only] Unique identifier for the resource; defined by the
  // server.
  string id = 1;

  // A list of SecurityPolicy resources.
  repeated SecurityPolicy items = 2;

  // [Output Only] Type of resource. Always compute#securityPolicyList for
  // listsof securityPolicies
  string kind = 3;

  // [Output Only] This token allows you to get the next page of results
  // for list requests. If the number of results is larger than
  // maxResults, use the nextPageToken as a value for the query parameter
  // pageToken in the next list request. Subsequent list requests will
  // have their own nextPageToken to continue paging through the results.
  string nextPageToken = 4;

  // [Output Only] Informational warning message.
  // [Output Only] Informational warning message.
  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute
    // Engine returns NO_RESULTS_ON_PAGE if there are no results in the
    // response.
    // Valid values:
    //     CLEANUP_FAILED
    //     DEPRECATED_RESOURCE_USED
    //     DEPRECATED_TYPE_USED
    //     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
    //     EXPERIMENTAL_TYPE_USED
    //     EXTERNAL_API_WARNING
    //     FIELD_VALUE_OVERRIDEN
    //     INJECTED_KERNELS_DEPRECATED
    //     MISSING_TYPE_DEPENDENCY
    //     NEXT_HOP_ADDRESS_NOT_ASSIGNED
    //     NEXT_HOP_CANNOT_IP_FORWARD
    //     NEXT_HOP_INSTANCE_NOT_FOUND
    //     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
    //     NEXT_HOP_NOT_RUNNING
    //     NOT_CRITICAL_ERROR
    //     NO_RESULTS_ON_PAGE
    //     REQUIRED_TOS_AGREEMENT
    //     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
    //     RESOURCE_NOT_DELETED
    //     SCHEMA_VALIDATION_IGNORED
    //     SINGLE_INSTANCE_PROPERTY_TEMPLATE
    //     UNDECLARED_PROPERTIES
    //     UNREACHABLE
    string code = 1;

    // [Output Only] Metadata about this warning in key: value format. For
    // example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the
      // key value might be the zone name. Other examples might be a key
      // indicating a deprecated resource and a suggested replacement, or a
      // warning about invalid network settings (for example, if an instance
      // attempts to perform IP forwarding but is not enabled for IP
      // forwarding).
      string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      string value = 2;
    }
    repeated Data data = 2;

    // [Output Only] A human-readable description of the warning code.
    string message = 3;
  }
  Warning warning = 5;
}

message SecurityPolicyReference {
  string securityPolicy = 1;
}

// Represents a rule that describes one or more match conditions along
// with the action to be taken when traffic matches this condition
// (allow or deny).
message SecurityPolicyRule {
  // The Action to preform when the client connection triggers the rule.
  // Can currently be either "allow" or "deny()" where valid values for
  // status are 403, 404, and 502.
  string action = 1;

  // An optional description of this resource. Provide this property when
  // you create the resource.
  string description = 2;

  // [Output only] Type of the resource. Always compute#securityPolicyRule
  // for security policy rules
  string kind = 3;

  // A match condition that incoming traffic is evaluated against. If it
  // evaluates to true, the corresponding ?action? is enforced.
  SecurityPolicyRuleMatcher match = 4;

  // If set to true, the specified action is not enforced.
  bool preview = 5;

  // An integer indicating the priority of a rule in the list. The
  // priority must be a positive value between 0 and 2147483647. Rules are
  // evaluated in the increasing order of priority.
  int32 priority = 6;
}

// Represents a match condition that incoming traffic is evaluated
// against. Exactly one field must be specified.
message SecurityPolicyRuleMatcher {
  // CIDR IP address range. Only IPv4 is supported.
  repeated string srcIpRanges = 1;
}

// An instance's serial console output.
message SerialPortOutput {
  // [Output Only] The contents of the console output.
  string contents = 1;

  // [Output Only] Type of the resource. Always compute#serialPortOutput
  // for serial port output.
  string kind = 2;

  // [Output Only] The position of the next byte of content from the
  // serial console output. Use this value in the next request as the
  // start parameter.
  string next = 3;

  // [Output Only] Server-defined URL for this resource.
  string selfLink = 4;

  // The starting byte position of the output that was returned. This
  // should match the start parameter sent with the request. If the serial
  // console output exceeds the size of the buffer, older output will be
  // overwritten by newer content and the start values will be mismatched.
  string start = 5;
}

// A service account.
message ServiceAccount {
  // Email address of the service account.
  string email = 1;

  // The list of scopes to be made available for this service account.
  repeated string scopes = 2;
}

// A persistent disk snapshot resource.
message Snapshot {
  // [Output Only] Creation timestamp in RFC3339 text format.
  string creationTimestamp = 1;

  // An optional description of this resource. Provide this property when
  // you create the resource.
  string description = 2;

  // [Output Only] Size of the snapshot, specified in GB.
  string diskSizeGb = 3;

  // [Output Only] The unique identifier for the resource. This identifier
  // is defined by the server.
  string id = 4;

  // [Output Only] Type of the resource. Always compute#snapshot for
  // Snapshot resources.
  string kind = 5;

  // A fingerprint for the labels being applied to this snapshot, which is
  // essentially a hash of the labels set used for optimistic locking. The
  // fingerprint is initially generated by Compute Engine and changes
  // after every request to modify or update labels. You must always
  // provide an up-to-date fingerprint hash in order to update or change
  // labels.
  // 
  // To see the latest fingerprint, make a get() request to retrieve a
  // snapshot.
  string labelFingerprint = 6;

  // Labels to apply to this snapshot. These can be later modified by the
  // setLabels method. Label values may be empty.
  map<string, string> labels = 7;

  // [Output Only] A list of public visible licenses that apply to this
  // snapshot. This can be because the original image had licenses
  // attached (such as a Windows image).
  repeated string licenses = 8;

  // Name of the resource; provided by the client when the resource is
  // created. The name must be 1-63 characters long, and comply with
  // RFC1035. Specifically, the name must be 1-63 characters long and
  // match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means
  // the first character must be a lowercase letter, and all following
  // characters must be a dash, lowercase letter, or digit, except the
  // last character, which cannot be a dash.
  string name = 9;

  // [Output Only] Server-defined URL for the resource.
  string selfLink = 10;

  // Encrypts the snapshot using a customer-supplied encryption key.
  // 
  // After you encrypt a snapshot using a customer-supplied key, you must
  // provide the same key if you use the image later For example, you must
  // provide the encryption key when you create a disk from the encrypted
  // snapshot in a future request.
  // 
  // Customer-supplied encryption keys do not protect access to metadata
  // of the disk.
  // 
  // If you do not provide an encryption key when creating the snapshot,
  // then the snapshot will be encrypted using an automatically generated
  // key and you do not need to provide a key to use the snapshot later.
  CustomerEncryptionKey snapshotEncryptionKey = 11;

  // [Output Only] The source disk used to create this snapshot.
  string sourceDisk = 12;

  // The customer-supplied encryption key of the source disk. Required if
  // the source disk is protected by a customer-supplied encryption key.
  CustomerEncryptionKey sourceDiskEncryptionKey = 13;

  // [Output Only] The ID value of the disk used to create this snapshot.
  // This value may be used to determine whether the snapshot was taken
  // from the current or a previous instance of a given disk name.
  string sourceDiskId = 14;

  // [Output Only] The status of the snapshot. This can be CREATING,
  // DELETING, FAILED, READY, or UPLOADING.
  // Valid values:
  //     CREATING
  //     DELETING
  //     FAILED
  //     READY
  //     UPLOADING
  string status = 15;

  // [Output Only] A size of the storage used by the snapshot. As
  // snapshots share storage, this number is expected to change with
  // snapshot creation/deletion.
  string storageBytes = 16;

  // [Output Only] An indicator whether storageBytes is in a stable state
  // or it is being adjusted as a result of shared storage reallocation.
  // This status can either be UPDATING, meaning the size of the snapshot
  // is being updated, or UP_TO_DATE, meaning the size of the snapshot is
  // up-to-date.
  // Valid values:
  //     UPDATING
  //     UP_TO_DATE
  string storageBytesStatus = 17;
}

// Contains a list of Snapshot resources.
message SnapshotList {
  // [Output Only] Unique identifier for the resource; defined by the
  // server.
  string id = 1;

  // A list of Snapshot resources.
  repeated Snapshot items = 2;

  // Type of resource.
  string kind = 3;

  // [Output Only] This token allows you to get the next page of results
  // for list requests. If the number of results is larger than
  // maxResults, use the nextPageToken as a value for the query parameter
  // pageToken in the next list request. Subsequent list requests will
  // have their own nextPageToken to continue paging through the results.
  string nextPageToken = 4;

  // [Output Only] Server-defined URL for this resource.
  string selfLink = 5;

  // [Output Only] Informational warning message.
  // [Output Only] Informational warning message.
  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute
    // Engine returns NO_RESULTS_ON_PAGE if there are no results in the
    // response.
    // Valid values:
    //     CLEANUP_FAILED
    //     DEPRECATED_RESOURCE_USED
    //     DEPRECATED_TYPE_USED
    //     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
    //     EXPERIMENTAL_TYPE_USED
    //     EXTERNAL_API_WARNING
    //     FIELD_VALUE_OVERRIDEN
    //     INJECTED_KERNELS_DEPRECATED
    //     MISSING_TYPE_DEPENDENCY
    //     NEXT_HOP_ADDRESS_NOT_ASSIGNED
    //     NEXT_HOP_CANNOT_IP_FORWARD
    //     NEXT_HOP_INSTANCE_NOT_FOUND
    //     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
    //     NEXT_HOP_NOT_RUNNING
    //     NOT_CRITICAL_ERROR
    //     NO_RESULTS_ON_PAGE
    //     REQUIRED_TOS_AGREEMENT
    //     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
    //     RESOURCE_NOT_DELETED
    //     SCHEMA_VALIDATION_IGNORED
    //     SINGLE_INSTANCE_PROPERTY_TEMPLATE
    //     UNDECLARED_PROPERTIES
    //     UNREACHABLE
    string code = 1;

    // [Output Only] Metadata about this warning in key: value format. For
    // example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the
      // key value might be the zone name. Other examples might be a key
      // indicating a deprecated resource and a suggested replacement, or a
      // warning about invalid network settings (for example, if an instance
      // attempts to perform IP forwarding but is not enabled for IP
      // forwarding).
      string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      string value = 2;
    }
    repeated Data data = 2;

    // [Output Only] A human-readable description of the warning code.
    string message = 3;
  }
  Warning warning = 6;
}

// An SslCertificate resource. This resource provides a mechanism to
// upload an SSL key and certificate to the load balancer to serve
// secure connections from the user.
message SslCertificate {
  // A local certificate file. The certificate must be in PEM format. The
  // certificate chain must be no greater than 5 certs long. The chain
  // must include at least one intermediate cert.
  string certificate = 1;

  // [Output Only] Creation timestamp in RFC3339 text format.
  string creationTimestamp = 2;

  // An optional description of this resource. Provide this property when
  // you create the resource.
  string description = 3;

  // [Output Only] The unique identifier for the resource. This identifier
  // is defined by the server.
  string id = 4;

  // [Output Only] Type of the resource. Always compute#sslCertificate for
  // SSL certificates.
  string kind = 5;

  // Name of the resource. Provided by the client when the resource is
  // created. The name must be 1-63 characters long, and comply with
  // RFC1035. Specifically, the name must be 1-63 characters long and
  // match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means
  // the first character must be a lowercase letter, and all following
  // characters must be a dash, lowercase letter, or digit, except the
  // last character, which cannot be a dash.
  string name = 6;

  // A write-only private key in PEM format. Only insert requests will
  // include this field.
  string privateKey = 7;

  // [Output only] Server-defined URL for the resource.
  string selfLink = 8;
}

// Contains a list of SslCertificate resources.
message SslCertificateList {
  // [Output Only] Unique identifier for the resource; defined by the
  // server.
  string id = 1;

  // A list of SslCertificate resources.
  repeated SslCertificate items = 2;

  // Type of resource.
  string kind = 3;

  // [Output Only] This token allows you to get the next page of results
  // for list requests. If the number of results is larger than
  // maxResults, use the nextPageToken as a value for the query parameter
  // pageToken in the next list request. Subsequent list requests will
  // have their own nextPageToken to continue paging through the results.
  string nextPageToken = 4;

  // [Output Only] Server-defined URL for this resource.
  string selfLink = 5;

  // [Output Only] Informational warning message.
  // [Output Only] Informational warning message.
  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute
    // Engine returns NO_RESULTS_ON_PAGE if there are no results in the
    // response.
    // Valid values:
    //     CLEANUP_FAILED
    //     DEPRECATED_RESOURCE_USED
    //     DEPRECATED_TYPE_USED
    //     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
    //     EXPERIMENTAL_TYPE_USED
    //     EXTERNAL_API_WARNING
    //     FIELD_VALUE_OVERRIDEN
    //     INJECTED_KERNELS_DEPRECATED
    //     MISSING_TYPE_DEPENDENCY
    //     NEXT_HOP_ADDRESS_NOT_ASSIGNED
    //     NEXT_HOP_CANNOT_IP_FORWARD
    //     NEXT_HOP_INSTANCE_NOT_FOUND
    //     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
    //     NEXT_HOP_NOT_RUNNING
    //     NOT_CRITICAL_ERROR
    //     NO_RESULTS_ON_PAGE
    //     REQUIRED_TOS_AGREEMENT
    //     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
    //     RESOURCE_NOT_DELETED
    //     SCHEMA_VALIDATION_IGNORED
    //     SINGLE_INSTANCE_PROPERTY_TEMPLATE
    //     UNDECLARED_PROPERTIES
    //     UNREACHABLE
    string code = 1;

    // [Output Only] Metadata about this warning in key: value format. For
    // example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the
      // key value might be the zone name. Other examples might be a key
      // indicating a deprecated resource and a suggested replacement, or a
      // warning about invalid network settings (for example, if an instance
      // attempts to perform IP forwarding but is not enabled for IP
      // forwarding).
      string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      string value = 2;
    }
    repeated Data data = 2;

    // [Output Only] A human-readable description of the warning code.
    string message = 3;
  }
  Warning warning = 6;
}

// A Subnetwork resource.
message Subnetwork {
  // Whether this subnetwork can conflict with static routes. Setting this
  // to true allows this subnetwork's primary and secondary ranges to
  // conflict with routes that have already been configured on the
  // corresponding network. Static routes will take precedence over the
  // subnetwork route if the route prefix length is at least as large as
  // the subnetwork prefix length.
  // 
  // Also, packets destined to IPs within subnetwork may contain
  // private/sensitive data and are prevented from leaving the virtual
  // network. Setting this field to true will disable this feature.
  // 
  // The default value is false and applies to all existing subnetworks
  // and automatically created subnetworks.
  // 
  // This field cannot be set to true at resource creation time.
  bool allowSubnetCidrRoutesOverlap = 1;

  // [Output Only] Creation timestamp in RFC3339 text format.
  string creationTimestamp = 2;

  // An optional description of this resource. Provide this property when
  // you create the resource. This field can be set only at resource
  // creation time.
  string description = 3;

  // Fingerprint of this resource. A hash of the contents stored in this
  // object. This field is used in optimistic locking. This field will be
  // ignored when inserting a Subnetwork. An up-to-date fingerprint must
  // be provided in order to update the Subnetwork.
  string fingerprint = 4;

  // [Output Only] The gateway address for default routes to reach
  // destination addresses outside this subnetwork. This field can be set
  // only at resource creation time.
  string gatewayAddress = 5;

  // [Output Only] The unique identifier for the resource. This identifier
  // is defined by the server.
  string id = 6;

  // The range of internal addresses that are owned by this subnetwork.
  // Provide this property when you create the subnetwork. For example,
  // 10.0.0.0/8 or 192.168.0.0/16. Ranges must be unique and
  // non-overlapping within a network. Only IPv4 is supported. This field
  // can be set only at resource creation time.
  string ipCidrRange = 7;

  // [Output Only] Type of the resource. Always compute#subnetwork for
  // Subnetwork resources.
  string kind = 8;

  // The name of the resource, provided by the client when initially
  // creating the resource. The name must be 1-63 characters long, and
  // comply with RFC1035. Specifically, the name must be 1-63 characters
  // long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])?
  // which means the first character must be a lowercase letter, and all
  // following characters must be a dash, lowercase letter, or digit,
  // except the last character, which cannot be a dash.
  string name = 9;

  // The URL of the network to which this subnetwork belongs, provided by
  // the client when initially creating the subnetwork. Only networks that
  // are in the distributed mode can have subnetworks. This field can be
  // set only at resource creation time.
  string network = 10;

  // Whether the VMs in this subnet can access Google services without
  // assigned external IP addresses. This field can be both set at
  // resource creation time and updated using setPrivateIpGoogleAccess.
  bool privateIpGoogleAccess = 11;

  // URL of the region where the Subnetwork resides. This field can be set
  // only at resource creation time.
  string region = 12;

  // An array of configurations for secondary IP ranges for VM instances
  // contained in this subnetwork. The primary IP of such VM must belong
  // to the primary ipCidrRange of the subnetwork. The alias IPs may
  // belong to either primary or secondary ranges.
  repeated SubnetworkSecondaryRange secondaryIpRanges = 13;

  // [Output Only] Server-defined URL for the resource.
  string selfLink = 14;
}

message SubnetworkAggregatedList {
  // [Output Only] Unique identifier for the resource; defined by the
  // server.
  string id = 1;

  // A list of SubnetworksScopedList resources.
  map<string, SubnetworksScopedList> items = 2;

  // [Output Only] Type of resource. Always
  // compute#subnetworkAggregatedList for aggregated lists of subnetworks.
  string kind = 3;

  // [Output Only] This token allows you to get the next page of results
  // for list requests. If the number of results is larger than
  // maxResults, use the nextPageToken as a value for the query parameter
  // pageToken in the next list request. Subsequent list requests will
  // have their own nextPageToken to continue paging through the results.
  string nextPageToken = 4;

  // [Output Only] Server-defined URL for this resource.
  string selfLink = 5;

  // [Output Only] Informational warning message.
  // [Output Only] Informational warning message.
  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute
    // Engine returns NO_RESULTS_ON_PAGE if there are no results in the
    // response.
    // Valid values:
    //     CLEANUP_FAILED
    //     DEPRECATED_RESOURCE_USED
    //     DEPRECATED_TYPE_USED
    //     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
    //     EXPERIMENTAL_TYPE_USED
    //     EXTERNAL_API_WARNING
    //     FIELD_VALUE_OVERRIDEN
    //     INJECTED_KERNELS_DEPRECATED
    //     MISSING_TYPE_DEPENDENCY
    //     NEXT_HOP_ADDRESS_NOT_ASSIGNED
    //     NEXT_HOP_CANNOT_IP_FORWARD
    //     NEXT_HOP_INSTANCE_NOT_FOUND
    //     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
    //     NEXT_HOP_NOT_RUNNING
    //     NOT_CRITICAL_ERROR
    //     NO_RESULTS_ON_PAGE
    //     REQUIRED_TOS_AGREEMENT
    //     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
    //     RESOURCE_NOT_DELETED
    //     SCHEMA_VALIDATION_IGNORED
    //     SINGLE_INSTANCE_PROPERTY_TEMPLATE
    //     UNDECLARED_PROPERTIES
    //     UNREACHABLE
    string code = 1;

    // [Output Only] Metadata about this warning in key: value format. For
    // example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the
      // key value might be the zone name. Other examples might be a key
      // indicating a deprecated resource and a suggested replacement, or a
      // warning about invalid network settings (for example, if an instance
      // attempts to perform IP forwarding but is not enabled for IP
      // forwarding).
      string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      string value = 2;
    }
    repeated Data data = 2;

    // [Output Only] A human-readable description of the warning code.
    string message = 3;
  }
  Warning warning = 6;
}

// Contains a list of Subnetwork resources.
message SubnetworkList {
  // [Output Only] Unique identifier for the resource; defined by the
  // server.
  string id = 1;

  // A list of Subnetwork resources.
  repeated Subnetwork items = 2;

  // [Output Only] Type of resource. Always compute#subnetworkList for
  // lists of subnetworks.
  string kind = 3;

  // [Output Only] This token allows you to get the next page of results
  // for list requests. If the number of results is larger than
  // maxResults, use the nextPageToken as a value for the query parameter
  // pageToken in the next list request. Subsequent list requests will
  // have their own nextPageToken to continue paging through the results.
  string nextPageToken = 4;

  // [Output Only] Server-defined URL for this resource.
  string selfLink = 5;

  // [Output Only] Informational warning message.
  // [Output Only] Informational warning message.
  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute
    // Engine returns NO_RESULTS_ON_PAGE if there are no results in the
    // response.
    // Valid values:
    //     CLEANUP_FAILED
    //     DEPRECATED_RESOURCE_USED
    //     DEPRECATED_TYPE_USED
    //     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
    //     EXPERIMENTAL_TYPE_USED
    //     EXTERNAL_API_WARNING
    //     FIELD_VALUE_OVERRIDEN
    //     INJECTED_KERNELS_DEPRECATED
    //     MISSING_TYPE_DEPENDENCY
    //     NEXT_HOP_ADDRESS_NOT_ASSIGNED
    //     NEXT_HOP_CANNOT_IP_FORWARD
    //     NEXT_HOP_INSTANCE_NOT_FOUND
    //     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
    //     NEXT_HOP_NOT_RUNNING
    //     NOT_CRITICAL_ERROR
    //     NO_RESULTS_ON_PAGE
    //     REQUIRED_TOS_AGREEMENT
    //     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
    //     RESOURCE_NOT_DELETED
    //     SCHEMA_VALIDATION_IGNORED
    //     SINGLE_INSTANCE_PROPERTY_TEMPLATE
    //     UNDECLARED_PROPERTIES
    //     UNREACHABLE
    string code = 1;

    // [Output Only] Metadata about this warning in key: value format. For
    // example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the
      // key value might be the zone name. Other examples might be a key
      // indicating a deprecated resource and a suggested replacement, or a
      // warning about invalid network settings (for example, if an instance
      // attempts to perform IP forwarding but is not enabled for IP
      // forwarding).
      string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      string value = 2;
    }
    repeated Data data = 2;

    // [Output Only] A human-readable description of the warning code.
    string message = 3;
  }
  Warning warning = 6;
}

// Represents a secondary IP range of a subnetwork.
message SubnetworkSecondaryRange {
  // The range of IP addresses belonging to this subnetwork secondary
  // range. Provide this property when you create the subnetwork. Ranges
  // must be unique and non-overlapping with all primary and secondary IP
  // ranges within a network. Only IPv4 is supported.
  string ipCidrRange = 1;

  // The name associated with this subnetwork secondary range, used when
  // adding an alias IP range to a VM instance. The name must be 1-63
  // characters long, and comply with RFC1035. The name must be unique
  // within the subnetwork.
  string rangeName = 2;
}

message SubnetworksExpandIpCidrRangeRequest {
  // The IP (in CIDR format or netmask) of internal addresses that are
  // legal on this Subnetwork. This range should be disjoint from other
  // subnetworks within this network. This range can only be larger than
  // (i.e. a superset of) the range previously defined before the update.
  string ipCidrRange = 1;
}

message SubnetworksScopedList {
  // List of subnetworks contained in this scope.
  repeated Subnetwork subnetworks = 1;

  // An informational warning that appears when the list of addresses is
  // empty.
  // An informational warning that appears when the list of addresses is
  // empty.
  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute
    // Engine returns NO_RESULTS_ON_PAGE if there are no results in the
    // response.
    // Valid values:
    //     CLEANUP_FAILED
    //     DEPRECATED_RESOURCE_USED
    //     DEPRECATED_TYPE_USED
    //     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
    //     EXPERIMENTAL_TYPE_USED
    //     EXTERNAL_API_WARNING
    //     FIELD_VALUE_OVERRIDEN
    //     INJECTED_KERNELS_DEPRECATED
    //     MISSING_TYPE_DEPENDENCY
    //     NEXT_HOP_ADDRESS_NOT_ASSIGNED
    //     NEXT_HOP_CANNOT_IP_FORWARD
    //     NEXT_HOP_INSTANCE_NOT_FOUND
    //     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
    //     NEXT_HOP_NOT_RUNNING
    //     NOT_CRITICAL_ERROR
    //     NO_RESULTS_ON_PAGE
    //     REQUIRED_TOS_AGREEMENT
    //     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
    //     RESOURCE_NOT_DELETED
    //     SCHEMA_VALIDATION_IGNORED
    //     SINGLE_INSTANCE_PROPERTY_TEMPLATE
    //     UNDECLARED_PROPERTIES
    //     UNREACHABLE
    string code = 1;

    // [Output Only] Metadata about this warning in key: value format. For
    // example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the
      // key value might be the zone name. Other examples might be a key
      // indicating a deprecated resource and a suggested replacement, or a
      // warning about invalid network settings (for example, if an instance
      // attempts to perform IP forwarding but is not enabled for IP
      // forwarding).
      string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      string value = 2;
    }
    repeated Data data = 2;

    // [Output Only] A human-readable description of the warning code.
    string message = 3;
  }
  Warning warning = 2;
}

message SubnetworksSetPrivateIpGoogleAccessRequest {
  bool privateIpGoogleAccess = 1;
}

message TCPHealthCheck {
  // The TCP port number for the health check request. The default value
  // is 80. Valid values are 1 through 65535.
  int32 port = 1;

  // Port name as defined in InstanceGroup#NamedPort#name. If both port
  // and port_name are defined, port takes precedence.
  string portName = 2;

  // Specifies the type of proxy header to append before sending data to
  // the backend, either NONE or PROXY_V1. The default is NONE.
  // Valid values:
  //     NONE
  //     PROXY_V1
  string proxyHeader = 3;

  // The application data to send once the TCP connection has been
  // established (default value is empty). If both request and response
  // are empty, the connection establishment alone will indicate health.
  // The request data can only be ASCII.
  string request = 4;

  // The bytes to match against the beginning of the response data. If
  // left empty (the default value), any response will indicate health.
  // The response data can only be ASCII.
  string response = 5;
}

// A set of instance tags.
message Tags {
  // Specifies a fingerprint for this request, which is essentially a hash
  // of the metadata's contents and used for optimistic locking. The
  // fingerprint is initially generated by Compute Engine and changes
  // after every request to modify or update metadata. You must always
  // provide an up-to-date fingerprint hash in order to update or change
  // metadata.
  // 
  // To see the latest fingerprint, make get() request to the instance.
  string fingerprint = 1;

  // An array of tags. Each tag must be 1-63 characters long, and comply
  // with RFC1035.
  repeated string items = 2;
}

// A TargetHttpProxy resource. This resource defines an HTTP proxy.
message TargetHttpProxy {
  // [Output Only] Creation timestamp in RFC3339 text format.
  string creationTimestamp = 1;

  // An optional description of this resource. Provide this property when
  // you create the resource.
  string description = 2;

  // [Output Only] The unique identifier for the resource. This identifier
  // is defined by the server.
  string id = 3;

  // [Output Only] Type of resource. Always compute#targetHttpProxy for
  // target HTTP proxies.
  string kind = 4;

  // Name of the resource. Provided by the client when the resource is
  // created. The name must be 1-63 characters long, and comply with
  // RFC1035. Specifically, the name must be 1-63 characters long and
  // match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means
  // the first character must be a lowercase letter, and all following
  // characters must be a dash, lowercase letter, or digit, except the
  // last character, which cannot be a dash.
  string name = 5;

  // [Output Only] Server-defined URL for the resource.
  string selfLink = 6;

  // URL to the UrlMap resource that defines the mapping from URL to the
  // BackendService.
  string urlMap = 7;
}

// A list of TargetHttpProxy resources.
message TargetHttpProxyList {
  // [Output Only] Unique identifier for the resource; defined by the
  // server.
  string id = 1;

  // A list of TargetHttpProxy resources.
  repeated TargetHttpProxy items = 2;

  // Type of resource. Always compute#targetHttpProxyList for lists of
  // target HTTP proxies.
  string kind = 3;

  // [Output Only] This token allows you to get the next page of results
  // for list requests. If the number of results is larger than
  // maxResults, use the nextPageToken as a value for the query parameter
  // pageToken in the next list request. Subsequent list requests will
  // have their own nextPageToken to continue paging through the results.
  string nextPageToken = 4;

  // [Output Only] Server-defined URL for this resource.
  string selfLink = 5;

  // [Output Only] Informational warning message.
  // [Output Only] Informational warning message.
  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute
    // Engine returns NO_RESULTS_ON_PAGE if there are no results in the
    // response.
    // Valid values:
    //     CLEANUP_FAILED
    //     DEPRECATED_RESOURCE_USED
    //     DEPRECATED_TYPE_USED
    //     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
    //     EXPERIMENTAL_TYPE_USED
    //     EXTERNAL_API_WARNING
    //     FIELD_VALUE_OVERRIDEN
    //     INJECTED_KERNELS_DEPRECATED
    //     MISSING_TYPE_DEPENDENCY
    //     NEXT_HOP_ADDRESS_NOT_ASSIGNED
    //     NEXT_HOP_CANNOT_IP_FORWARD
    //     NEXT_HOP_INSTANCE_NOT_FOUND
    //     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
    //     NEXT_HOP_NOT_RUNNING
    //     NOT_CRITICAL_ERROR
    //     NO_RESULTS_ON_PAGE
    //     REQUIRED_TOS_AGREEMENT
    //     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
    //     RESOURCE_NOT_DELETED
    //     SCHEMA_VALIDATION_IGNORED
    //     SINGLE_INSTANCE_PROPERTY_TEMPLATE
    //     UNDECLARED_PROPERTIES
    //     UNREACHABLE
    string code = 1;

    // [Output Only] Metadata about this warning in key: value format. For
    // example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the
      // key value might be the zone name. Other examples might be a key
      // indicating a deprecated resource and a suggested replacement, or a
      // warning about invalid network settings (for example, if an instance
      // attempts to perform IP forwarding but is not enabled for IP
      // forwarding).
      string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      string value = 2;
    }
    repeated Data data = 2;

    // [Output Only] A human-readable description of the warning code.
    string message = 3;
  }
  Warning warning = 6;
}

message TargetHttpsProxiesSetSslCertificatesRequest {
  // New set of SslCertificate resources to associate with this
  // TargetHttpsProxy resource. Currently exactly one SslCertificate
  // resource must be specified.
  repeated string sslCertificates = 1;
}

// A TargetHttpsProxy resource. This resource defines an HTTPS proxy.
message TargetHttpsProxy {
  // [Output Only] Creation timestamp in RFC3339 text format.
  string creationTimestamp = 1;

  // An optional description of this resource. Provide this property when
  // you create the resource.
  string description = 2;

  // [Output Only] The unique identifier for the resource. This identifier
  // is defined by the server.
  string id = 3;

  // [Output Only] Type of resource. Always compute#targetHttpsProxy for
  // target HTTPS proxies.
  string kind = 4;

  // Name of the resource. Provided by the client when the resource is
  // created. The name must be 1-63 characters long, and comply with
  // RFC1035. Specifically, the name must be 1-63 characters long and
  // match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means
  // the first character must be a lowercase letter, and all following
  // characters must be a dash, lowercase letter, or digit, except the
  // last character, which cannot be a dash.
  string name = 5;

  // [Output Only] Server-defined URL for the resource.
  string selfLink = 6;

  // URLs to SslCertificate resources that are used to authenticate
  // connections between users and the load balancer. Currently, exactly
  // one SSL certificate must be specified.
  repeated string sslCertificates = 7;

  // A fully-qualified or valid partial URL to the UrlMap resource that
  // defines the mapping from URL to the BackendService. For example, the
  // following are all valid URLs for specifying a URL map:
  // -
  // https://www.googleapis.compute/v1/projects/project/global/urlMaps/url-map
  // - projects/project/global/urlMaps/url-map
  // - global/urlMaps/url-map
  string urlMap = 8;
}

// Contains a list of TargetHttpsProxy resources.
message TargetHttpsProxyList {
  // [Output Only] Unique identifier for the resource; defined by the
  // server.
  string id = 1;

  // A list of TargetHttpsProxy resources.
  repeated TargetHttpsProxy items = 2;

  // Type of resource. Always compute#targetHttpsProxyList for lists of
  // target HTTPS proxies.
  string kind = 3;

  // [Output Only] This token allows you to get the next page of results
  // for list requests. If the number of results is larger than
  // maxResults, use the nextPageToken as a value for the query parameter
  // pageToken in the next list request. Subsequent list requests will
  // have their own nextPageToken to continue paging through the results.
  string nextPageToken = 4;

  // [Output Only] Server-defined URL for this resource.
  string selfLink = 5;

  // [Output Only] Informational warning message.
  // [Output Only] Informational warning message.
  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute
    // Engine returns NO_RESULTS_ON_PAGE if there are no results in the
    // response.
    // Valid values:
    //     CLEANUP_FAILED
    //     DEPRECATED_RESOURCE_USED
    //     DEPRECATED_TYPE_USED
    //     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
    //     EXPERIMENTAL_TYPE_USED
    //     EXTERNAL_API_WARNING
    //     FIELD_VALUE_OVERRIDEN
    //     INJECTED_KERNELS_DEPRECATED
    //     MISSING_TYPE_DEPENDENCY
    //     NEXT_HOP_ADDRESS_NOT_ASSIGNED
    //     NEXT_HOP_CANNOT_IP_FORWARD
    //     NEXT_HOP_INSTANCE_NOT_FOUND
    //     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
    //     NEXT_HOP_NOT_RUNNING
    //     NOT_CRITICAL_ERROR
    //     NO_RESULTS_ON_PAGE
    //     REQUIRED_TOS_AGREEMENT
    //     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
    //     RESOURCE_NOT_DELETED
    //     SCHEMA_VALIDATION_IGNORED
    //     SINGLE_INSTANCE_PROPERTY_TEMPLATE
    //     UNDECLARED_PROPERTIES
    //     UNREACHABLE
    string code = 1;

    // [Output Only] Metadata about this warning in key: value format. For
    // example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the
      // key value might be the zone name. Other examples might be a key
      // indicating a deprecated resource and a suggested replacement, or a
      // warning about invalid network settings (for example, if an instance
      // attempts to perform IP forwarding but is not enabled for IP
      // forwarding).
      string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      string value = 2;
    }
    repeated Data data = 2;

    // [Output Only] A human-readable description of the warning code.
    string message = 3;
  }
  Warning warning = 6;
}

// A TargetInstance resource. This resource defines an endpoint instance
// that terminates traffic of certain protocols.
message TargetInstance {
  // [Output Only] Creation timestamp in RFC3339 text format.
  string creationTimestamp = 1;

  // An optional description of this resource. Provide this property when
  // you create the resource.
  string description = 2;

  // [Output Only] The unique identifier for the resource. This identifier
  // is defined by the server.
  string id = 3;

  // A URL to the virtual machine instance that handles traffic for this
  // target instance. When creating a target instance, you can provide the
  // fully-qualified URL or a valid partial URL to the desired virtual
  // machine. For example, the following are all valid URLs:
  // -
  // https://www.googleapis.com/compute/v1/projects/project/zones/zone/instances/instance
  // - projects/project/zones/zone/instances/instance
  // - zones/zone/instances/instance
  string instance = 4;

  // [Output Only] The type of the resource. Always compute#targetInstance
  // for target instances.
  string kind = 5;

  // Name of the resource. Provided by the client when the resource is
  // created. The name must be 1-63 characters long, and comply with
  // RFC1035. Specifically, the name must be 1-63 characters long and
  // match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means
  // the first character must be a lowercase letter, and all following
  // characters must be a dash, lowercase letter, or digit, except the
  // last character, which cannot be a dash.
  string name = 6;

  // NAT option controlling how IPs are NAT'ed to the instance. Currently
  // only NO_NAT (default value) is supported.
  // Valid values:
  //     NO_NAT
  string natPolicy = 7;

  // [Output Only] Server-defined URL for the resource.
  string selfLink = 8;

  // [Output Only] URL of the zone where the target instance resides.
  string zone = 9;
}

message TargetInstanceAggregatedList {
  // [Output Only] Unique identifier for the resource; defined by the
  // server.
  string id = 1;

  // A list of TargetInstance resources.
  map<string, TargetInstancesScopedList> items = 2;

  // Type of resource.
  string kind = 3;

  // [Output Only] This token allows you to get the next page of results
  // for list requests. If the number of results is larger than
  // maxResults, use the nextPageToken as a value for the query parameter
  // pageToken in the next list request. Subsequent list requests will
  // have their own nextPageToken to continue paging through the results.
  string nextPageToken = 4;

  // [Output Only] Server-defined URL for this resource.
  string selfLink = 5;

  // [Output Only] Informational warning message.
  // [Output Only] Informational warning message.
  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute
    // Engine returns NO_RESULTS_ON_PAGE if there are no results in the
    // response.
    // Valid values:
    //     CLEANUP_FAILED
    //     DEPRECATED_RESOURCE_USED
    //     DEPRECATED_TYPE_USED
    //     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
    //     EXPERIMENTAL_TYPE_USED
    //     EXTERNAL_API_WARNING
    //     FIELD_VALUE_OVERRIDEN
    //     INJECTED_KERNELS_DEPRECATED
    //     MISSING_TYPE_DEPENDENCY
    //     NEXT_HOP_ADDRESS_NOT_ASSIGNED
    //     NEXT_HOP_CANNOT_IP_FORWARD
    //     NEXT_HOP_INSTANCE_NOT_FOUND
    //     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
    //     NEXT_HOP_NOT_RUNNING
    //     NOT_CRITICAL_ERROR
    //     NO_RESULTS_ON_PAGE
    //     REQUIRED_TOS_AGREEMENT
    //     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
    //     RESOURCE_NOT_DELETED
    //     SCHEMA_VALIDATION_IGNORED
    //     SINGLE_INSTANCE_PROPERTY_TEMPLATE
    //     UNDECLARED_PROPERTIES
    //     UNREACHABLE
    string code = 1;

    // [Output Only] Metadata about this warning in key: value format. For
    // example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the
      // key value might be the zone name. Other examples might be a key
      // indicating a deprecated resource and a suggested replacement, or a
      // warning about invalid network settings (for example, if an instance
      // attempts to perform IP forwarding but is not enabled for IP
      // forwarding).
      string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      string value = 2;
    }
    repeated Data data = 2;

    // [Output Only] A human-readable description of the warning code.
    string message = 3;
  }
  Warning warning = 6;
}

// Contains a list of TargetInstance resources.
message TargetInstanceList {
  // [Output Only] Unique identifier for the resource; defined by the
  // server.
  string id = 1;

  // A list of TargetInstance resources.
  repeated TargetInstance items = 2;

  // Type of resource.
  string kind = 3;

  // [Output Only] This token allows you to get the next page of results
  // for list requests. If the number of results is larger than
  // maxResults, use the nextPageToken as a value for the query parameter
  // pageToken in the next list request. Subsequent list requests will
  // have their own nextPageToken to continue paging through the results.
  string nextPageToken = 4;

  // [Output Only] Server-defined URL for this resource.
  string selfLink = 5;

  // [Output Only] Informational warning message.
  // [Output Only] Informational warning message.
  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute
    // Engine returns NO_RESULTS_ON_PAGE if there are no results in the
    // response.
    // Valid values:
    //     CLEANUP_FAILED
    //     DEPRECATED_RESOURCE_USED
    //     DEPRECATED_TYPE_USED
    //     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
    //     EXPERIMENTAL_TYPE_USED
    //     EXTERNAL_API_WARNING
    //     FIELD_VALUE_OVERRIDEN
    //     INJECTED_KERNELS_DEPRECATED
    //     MISSING_TYPE_DEPENDENCY
    //     NEXT_HOP_ADDRESS_NOT_ASSIGNED
    //     NEXT_HOP_CANNOT_IP_FORWARD
    //     NEXT_HOP_INSTANCE_NOT_FOUND
    //     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
    //     NEXT_HOP_NOT_RUNNING
    //     NOT_CRITICAL_ERROR
    //     NO_RESULTS_ON_PAGE
    //     REQUIRED_TOS_AGREEMENT
    //     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
    //     RESOURCE_NOT_DELETED
    //     SCHEMA_VALIDATION_IGNORED
    //     SINGLE_INSTANCE_PROPERTY_TEMPLATE
    //     UNDECLARED_PROPERTIES
    //     UNREACHABLE
    string code = 1;

    // [Output Only] Metadata about this warning in key: value format. For
    // example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the
      // key value might be the zone name. Other examples might be a key
      // indicating a deprecated resource and a suggested replacement, or a
      // warning about invalid network settings (for example, if an instance
      // attempts to perform IP forwarding but is not enabled for IP
      // forwarding).
      string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      string value = 2;
    }
    repeated Data data = 2;

    // [Output Only] A human-readable description of the warning code.
    string message = 3;
  }
  Warning warning = 6;
}

message TargetInstancesScopedList {
  // List of target instances contained in this scope.
  repeated TargetInstance targetInstances = 1;

  // Informational warning which replaces the list of addresses when the
  // list is empty.
  // Informational warning which replaces the list of addresses when the
  // list is empty.
  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute
    // Engine returns NO_RESULTS_ON_PAGE if there are no results in the
    // response.
    // Valid values:
    //     CLEANUP_FAILED
    //     DEPRECATED_RESOURCE_USED
    //     DEPRECATED_TYPE_USED
    //     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
    //     EXPERIMENTAL_TYPE_USED
    //     EXTERNAL_API_WARNING
    //     FIELD_VALUE_OVERRIDEN
    //     INJECTED_KERNELS_DEPRECATED
    //     MISSING_TYPE_DEPENDENCY
    //     NEXT_HOP_ADDRESS_NOT_ASSIGNED
    //     NEXT_HOP_CANNOT_IP_FORWARD
    //     NEXT_HOP_INSTANCE_NOT_FOUND
    //     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
    //     NEXT_HOP_NOT_RUNNING
    //     NOT_CRITICAL_ERROR
    //     NO_RESULTS_ON_PAGE
    //     REQUIRED_TOS_AGREEMENT
    //     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
    //     RESOURCE_NOT_DELETED
    //     SCHEMA_VALIDATION_IGNORED
    //     SINGLE_INSTANCE_PROPERTY_TEMPLATE
    //     UNDECLARED_PROPERTIES
    //     UNREACHABLE
    string code = 1;

    // [Output Only] Metadata about this warning in key: value format. For
    // example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the
      // key value might be the zone name. Other examples might be a key
      // indicating a deprecated resource and a suggested replacement, or a
      // warning about invalid network settings (for example, if an instance
      // attempts to perform IP forwarding but is not enabled for IP
      // forwarding).
      string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      string value = 2;
    }
    repeated Data data = 2;

    // [Output Only] A human-readable description of the warning code.
    string message = 3;
  }
  Warning warning = 2;
}

// A TargetPool resource. This resource defines a pool of instances, an
// associated HttpHealthCheck resource, and the fallback target pool.
message TargetPool {
  // This field is applicable only when the containing target pool is
  // serving a forwarding rule as the primary pool, and its failoverRatio
  // field is properly set to a value between [0, 1].
  // 
  // backupPool and failoverRatio together define the fallback behavior of
  // the primary target pool: if the ratio of the healthy instances in the
  // primary pool is at or below failoverRatio, traffic arriving at the
  // load-balanced IP will be directed to the backup pool.
  // 
  // In case where failoverRatio and backupPool are not set, or all the
  // instances in the backup pool are unhealthy, the traffic will be
  // directed back to the primary pool in the "force" mode, where traffic
  // will be spread to the healthy instances with the best effort, or to
  // all instances when no instance is healthy.
  string backupPool = 1;

  // [Output Only] Creation timestamp in RFC3339 text format.
  string creationTimestamp = 2;

  // An optional description of this resource. Provide this property when
  // you create the resource.
  string description = 3;

  // This field is applicable only when the containing target pool is
  // serving a forwarding rule as the primary pool (i.e., not as a backup
  // pool to some other target pool). The value of the field must be in
  // [0, 1].
  // 
  // If set, backupPool must also be set. They together define the
  // fallback behavior of the primary target pool: if the ratio of the
  // healthy instances in the primary pool is at or below this number,
  // traffic arriving at the load-balanced IP will be directed to the
  // backup pool.
  // 
  // In case where failoverRatio is not set or all the instances in the
  // backup pool are unhealthy, the traffic will be directed back to the
  // primary pool in the "force" mode, where traffic will be spread to the
  // healthy instances with the best effort, or to all instances when no
  // instance is healthy.
  float failoverRatio = 4;

  // The URL of the HttpHealthCheck resource. A member instance in this
  // pool is considered healthy if and only if the health checks pass. An
  // empty list means all member instances will be considered healthy at
  // all times. Only HttpHealthChecks are supported. Only one health check
  // may be specified.
  repeated string healthChecks = 5;

  // [Output Only] The unique identifier for the resource. This identifier
  // is defined by the server.
  string id = 6;

  // A list of resource URLs to the virtual machine instances serving this
  // pool. They must live in zones contained in the same region as this
  // pool.
  repeated string instances = 7;

  // [Output Only] Type of the resource. Always compute#targetPool for
  // target pools.
  string kind = 8;

  // Name of the resource. Provided by the client when the resource is
  // created. The name must be 1-63 characters long, and comply with
  // RFC1035. Specifically, the name must be 1-63 characters long and
  // match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means
  // the first character must be a lowercase letter, and all following
  // characters must be a dash, lowercase letter, or digit, except the
  // last character, which cannot be a dash.
  string name = 9;

  // [Output Only] URL of the region where the target pool resides.
  string region = 10;

  // [Output Only] Server-defined URL for the resource.
  string selfLink = 11;

  // Sesssion affinity option, must be one of the following values:
  // NONE: Connections from the same client IP may go to any instance in
  // the pool.
  // CLIENT_IP: Connections from the same client IP will go to the same
  // instance in the pool while that instance remains healthy.
  // CLIENT_IP_PROTO: Connections from the same client IP with the same IP
  // protocol will go to the same instance in the pool while that instance
  // remains healthy.
  // Valid values:
  //     CLIENT_IP
  //     CLIENT_IP_PORT_PROTO
  //     CLIENT_IP_PROTO
  //     GENERATED_COOKIE
  //     NONE
  string sessionAffinity = 12;
}

message TargetPoolAggregatedList {
  // [Output Only] Unique identifier for the resource; defined by the
  // server.
  string id = 1;

  // A list of TargetPool resources.
  map<string, TargetPoolsScopedList> items = 2;

  // [Output Only] Type of resource. Always
  // compute#targetPoolAggregatedList for aggregated lists of target
  // pools.
  string kind = 3;

  // [Output Only] This token allows you to get the next page of results
  // for list requests. If the number of results is larger than
  // maxResults, use the nextPageToken as a value for the query parameter
  // pageToken in the next list request. Subsequent list requests will
  // have their own nextPageToken to continue paging through the results.
  string nextPageToken = 4;

  // [Output Only] Server-defined URL for this resource.
  string selfLink = 5;

  // [Output Only] Informational warning message.
  // [Output Only] Informational warning message.
  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute
    // Engine returns NO_RESULTS_ON_PAGE if there are no results in the
    // response.
    // Valid values:
    //     CLEANUP_FAILED
    //     DEPRECATED_RESOURCE_USED
    //     DEPRECATED_TYPE_USED
    //     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
    //     EXPERIMENTAL_TYPE_USED
    //     EXTERNAL_API_WARNING
    //     FIELD_VALUE_OVERRIDEN
    //     INJECTED_KERNELS_DEPRECATED
    //     MISSING_TYPE_DEPENDENCY
    //     NEXT_HOP_ADDRESS_NOT_ASSIGNED
    //     NEXT_HOP_CANNOT_IP_FORWARD
    //     NEXT_HOP_INSTANCE_NOT_FOUND
    //     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
    //     NEXT_HOP_NOT_RUNNING
    //     NOT_CRITICAL_ERROR
    //     NO_RESULTS_ON_PAGE
    //     REQUIRED_TOS_AGREEMENT
    //     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
    //     RESOURCE_NOT_DELETED
    //     SCHEMA_VALIDATION_IGNORED
    //     SINGLE_INSTANCE_PROPERTY_TEMPLATE
    //     UNDECLARED_PROPERTIES
    //     UNREACHABLE
    string code = 1;

    // [Output Only] Metadata about this warning in key: value format. For
    // example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the
      // key value might be the zone name. Other examples might be a key
      // indicating a deprecated resource and a suggested replacement, or a
      // warning about invalid network settings (for example, if an instance
      // attempts to perform IP forwarding but is not enabled for IP
      // forwarding).
      string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      string value = 2;
    }
    repeated Data data = 2;

    // [Output Only] A human-readable description of the warning code.
    string message = 3;
  }
  Warning warning = 6;
}

message TargetPoolInstanceHealth {
  repeated HealthStatus healthStatus = 1;

  // [Output Only] Type of resource. Always
  // compute#targetPoolInstanceHealth when checking the health of an
  // instance.
  string kind = 2;
}

// Contains a list of TargetPool resources.
message TargetPoolList {
  // [Output Only] Unique identifier for the resource; defined by the
  // server.
  string id = 1;

  // A list of TargetPool resources.
  repeated TargetPool items = 2;

  // [Output Only] Type of resource. Always compute#targetPoolList for
  // lists of target pools.
  string kind = 3;

  // [Output Only] This token allows you to get the next page of results
  // for list requests. If the number of results is larger than
  // maxResults, use the nextPageToken as a value for the query parameter
  // pageToken in the next list request. Subsequent list requests will
  // have their own nextPageToken to continue paging through the results.
  string nextPageToken = 4;

  // [Output Only] Server-defined URL for this resource.
  string selfLink = 5;

  // [Output Only] Informational warning message.
  // [Output Only] Informational warning message.
  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute
    // Engine returns NO_RESULTS_ON_PAGE if there are no results in the
    // response.
    // Valid values:
    //     CLEANUP_FAILED
    //     DEPRECATED_RESOURCE_USED
    //     DEPRECATED_TYPE_USED
    //     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
    //     EXPERIMENTAL_TYPE_USED
    //     EXTERNAL_API_WARNING
    //     FIELD_VALUE_OVERRIDEN
    //     INJECTED_KERNELS_DEPRECATED
    //     MISSING_TYPE_DEPENDENCY
    //     NEXT_HOP_ADDRESS_NOT_ASSIGNED
    //     NEXT_HOP_CANNOT_IP_FORWARD
    //     NEXT_HOP_INSTANCE_NOT_FOUND
    //     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
    //     NEXT_HOP_NOT_RUNNING
    //     NOT_CRITICAL_ERROR
    //     NO_RESULTS_ON_PAGE
    //     REQUIRED_TOS_AGREEMENT
    //     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
    //     RESOURCE_NOT_DELETED
    //     SCHEMA_VALIDATION_IGNORED
    //     SINGLE_INSTANCE_PROPERTY_TEMPLATE
    //     UNDECLARED_PROPERTIES
    //     UNREACHABLE
    string code = 1;

    // [Output Only] Metadata about this warning in key: value format. For
    // example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the
      // key value might be the zone name. Other examples might be a key
      // indicating a deprecated resource and a suggested replacement, or a
      // warning about invalid network settings (for example, if an instance
      // attempts to perform IP forwarding but is not enabled for IP
      // forwarding).
      string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      string value = 2;
    }
    repeated Data data = 2;

    // [Output Only] A human-readable description of the warning code.
    string message = 3;
  }
  Warning warning = 6;
}

message TargetPoolsAddHealthCheckRequest {
  // The HttpHealthCheck to add to the target pool.
  repeated HealthCheckReference healthChecks = 1;
}

message TargetPoolsAddInstanceRequest {
  // A full or partial URL to an instance to add to this target pool. This
  // can be a full or partial URL. For example, the following are valid
  // URLs:
  // -
  // https://www.googleapis.com/compute/v1/projects/project-id/zones/zone/instances/instance-name
  // - projects/project-id/zones/zone/instances/instance-name
  // - zones/zone/instances/instance-name
  repeated InstanceReference instances = 1;
}

message TargetPoolsRemoveHealthCheckRequest {
  // Health check URL to be removed. This can be a full or valid partial
  // URL. For example, the following are valid URLs:
  // -
  // https://www.googleapis.com/compute/beta/projects/project/global/httpHealthChecks/health-check
  // - projects/project/global/httpHealthChecks/health-check
  // - global/httpHealthChecks/health-check
  repeated HealthCheckReference healthChecks = 1;
}

message TargetPoolsRemoveInstanceRequest {
  // URLs of the instances to be removed from target pool.
  repeated InstanceReference instances = 1;
}

message TargetPoolsScopedList {
  // List of target pools contained in this scope.
  repeated TargetPool targetPools = 1;

  // Informational warning which replaces the list of addresses when the
  // list is empty.
  // Informational warning which replaces the list of addresses when the
  // list is empty.
  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute
    // Engine returns NO_RESULTS_ON_PAGE if there are no results in the
    // response.
    // Valid values:
    //     CLEANUP_FAILED
    //     DEPRECATED_RESOURCE_USED
    //     DEPRECATED_TYPE_USED
    //     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
    //     EXPERIMENTAL_TYPE_USED
    //     EXTERNAL_API_WARNING
    //     FIELD_VALUE_OVERRIDEN
    //     INJECTED_KERNELS_DEPRECATED
    //     MISSING_TYPE_DEPENDENCY
    //     NEXT_HOP_ADDRESS_NOT_ASSIGNED
    //     NEXT_HOP_CANNOT_IP_FORWARD
    //     NEXT_HOP_INSTANCE_NOT_FOUND
    //     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
    //     NEXT_HOP_NOT_RUNNING
    //     NOT_CRITICAL_ERROR
    //     NO_RESULTS_ON_PAGE
    //     REQUIRED_TOS_AGREEMENT
    //     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
    //     RESOURCE_NOT_DELETED
    //     SCHEMA_VALIDATION_IGNORED
    //     SINGLE_INSTANCE_PROPERTY_TEMPLATE
    //     UNDECLARED_PROPERTIES
    //     UNREACHABLE
    string code = 1;

    // [Output Only] Metadata about this warning in key: value format. For
    // example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the
      // key value might be the zone name. Other examples might be a key
      // indicating a deprecated resource and a suggested replacement, or a
      // warning about invalid network settings (for example, if an instance
      // attempts to perform IP forwarding but is not enabled for IP
      // forwarding).
      string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      string value = 2;
    }
    repeated Data data = 2;

    // [Output Only] A human-readable description of the warning code.
    string message = 3;
  }
  Warning warning = 2;
}

message TargetReference {
  string target = 1;
}

message TargetSslProxiesSetBackendServiceRequest {
  // The URL of the new BackendService resource for the targetSslProxy.
  string service = 1;
}

message TargetSslProxiesSetProxyHeaderRequest {
  // The new type of proxy header to append before sending data to the
  // backend. NONE or PROXY_V1 are allowed.
  // Valid values:
  //     NONE
  //     PROXY_V1
  string proxyHeader = 1;
}

message TargetSslProxiesSetSslCertificatesRequest {
  // New set of URLs to SslCertificate resources to associate with this
  // TargetSslProxy. Currently exactly one ssl certificate must be
  // specified.
  repeated string sslCertificates = 1;
}

// A TargetSslProxy resource. This resource defines an SSL proxy.
message TargetSslProxy {
  // [Output Only] Creation timestamp in RFC3339 text format.
  string creationTimestamp = 1;

  // An optional description of this resource. Provide this property when
  // you create the resource.
  string description = 2;

  // [Output Only] The unique identifier for the resource. This identifier
  // is defined by the server.
  string id = 3;

  // [Output Only] Type of the resource. Always compute#targetSslProxy for
  // target SSL proxies.
  string kind = 4;

  // Name of the resource. Provided by the client when the resource is
  // created. The name must be 1-63 characters long, and comply with
  // RFC1035. Specifically, the name must be 1-63 characters long and
  // match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means
  // the first character must be a lowercase letter, and all following
  // characters must be a dash, lowercase letter, or digit, except the
  // last character, which cannot be a dash.
  string name = 5;

  // Specifies the type of proxy header to append before sending data to
  // the backend, either NONE or PROXY_V1. The default is NONE.
  // Valid values:
  //     NONE
  //     PROXY_V1
  string proxyHeader = 6;

  // [Output Only] Server-defined URL for the resource.
  string selfLink = 7;

  // URL to the BackendService resource.
  string service = 8;

  // URLs to SslCertificate resources that are used to authenticate
  // connections to Backends. Currently exactly one SSL certificate must
  // be specified.
  repeated string sslCertificates = 9;
}

// Contains a list of TargetSslProxy resources.
message TargetSslProxyList {
  // [Output Only] Unique identifier for the resource; defined by the
  // server.
  string id = 1;

  // A list of TargetSslProxy resources.
  repeated TargetSslProxy items = 2;

  // Type of resource.
  string kind = 3;

  // [Output Only] This token allows you to get the next page of results
  // for list requests. If the number of results is larger than
  // maxResults, use the nextPageToken as a value for the query parameter
  // pageToken in the next list request. Subsequent list requests will
  // have their own nextPageToken to continue paging through the results.
  string nextPageToken = 4;

  // [Output Only] Server-defined URL for this resource.
  string selfLink = 5;

  // [Output Only] Informational warning message.
  // [Output Only] Informational warning message.
  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute
    // Engine returns NO_RESULTS_ON_PAGE if there are no results in the
    // response.
    // Valid values:
    //     CLEANUP_FAILED
    //     DEPRECATED_RESOURCE_USED
    //     DEPRECATED_TYPE_USED
    //     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
    //     EXPERIMENTAL_TYPE_USED
    //     EXTERNAL_API_WARNING
    //     FIELD_VALUE_OVERRIDEN
    //     INJECTED_KERNELS_DEPRECATED
    //     MISSING_TYPE_DEPENDENCY
    //     NEXT_HOP_ADDRESS_NOT_ASSIGNED
    //     NEXT_HOP_CANNOT_IP_FORWARD
    //     NEXT_HOP_INSTANCE_NOT_FOUND
    //     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
    //     NEXT_HOP_NOT_RUNNING
    //     NOT_CRITICAL_ERROR
    //     NO_RESULTS_ON_PAGE
    //     REQUIRED_TOS_AGREEMENT
    //     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
    //     RESOURCE_NOT_DELETED
    //     SCHEMA_VALIDATION_IGNORED
    //     SINGLE_INSTANCE_PROPERTY_TEMPLATE
    //     UNDECLARED_PROPERTIES
    //     UNREACHABLE
    string code = 1;

    // [Output Only] Metadata about this warning in key: value format. For
    // example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the
      // key value might be the zone name. Other examples might be a key
      // indicating a deprecated resource and a suggested replacement, or a
      // warning about invalid network settings (for example, if an instance
      // attempts to perform IP forwarding but is not enabled for IP
      // forwarding).
      string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      string value = 2;
    }
    repeated Data data = 2;

    // [Output Only] A human-readable description of the warning code.
    string message = 3;
  }
  Warning warning = 6;
}

message TargetTcpProxiesSetBackendServiceRequest {
  // The URL of the new BackendService resource for the targetTcpProxy.
  string service = 1;
}

message TargetTcpProxiesSetProxyHeaderRequest {
  // The new type of proxy header to append before sending data to the
  // backend. NONE or PROXY_V1 are allowed.
  // Valid values:
  //     NONE
  //     PROXY_V1
  string proxyHeader = 1;
}

// A TargetTcpProxy resource. This resource defines a TCP proxy.
message TargetTcpProxy {
  // [Output Only] Creation timestamp in RFC3339 text format.
  string creationTimestamp = 1;

  // An optional description of this resource. Provide this property when
  // you create the resource.
  string description = 2;

  // [Output Only] The unique identifier for the resource. This identifier
  // is defined by the server.
  string id = 3;

  // [Output Only] Type of the resource. Always compute#targetTcpProxy for
  // target TCP proxies.
  string kind = 4;

  // Name of the resource. Provided by the client when the resource is
  // created. The name must be 1-63 characters long, and comply with
  // RFC1035. Specifically, the name must be 1-63 characters long and
  // match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means
  // the first character must be a lowercase letter, and all following
  // characters must be a dash, lowercase letter, or digit, except the
  // last character, which cannot be a dash.
  string name = 5;

  // Specifies the type of proxy header to append before sending data to
  // the backend, either NONE or PROXY_V1. The default is NONE.
  // Valid values:
  //     NONE
  //     PROXY_V1
  string proxyHeader = 6;

  // [Output Only] Server-defined URL for the resource.
  string selfLink = 7;

  // URL to the BackendService resource.
  string service = 8;
}

// Contains a list of TargetTcpProxy resources.
message TargetTcpProxyList {
  // [Output Only] Unique identifier for the resource; defined by the
  // server.
  string id = 1;

  // A list of TargetTcpProxy resources.
  repeated TargetTcpProxy items = 2;

  // Type of resource.
  string kind = 3;

  // [Output Only] This token allows you to get the next page of results
  // for list requests. If the number of results is larger than
  // maxResults, use the nextPageToken as a value for the query parameter
  // pageToken in the next list request. Subsequent list requests will
  // have their own nextPageToken to continue paging through the results.
  string nextPageToken = 4;

  // [Output Only] Server-defined URL for this resource.
  string selfLink = 5;

  // [Output Only] Informational warning message.
  // [Output Only] Informational warning message.
  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute
    // Engine returns NO_RESULTS_ON_PAGE if there are no results in the
    // response.
    // Valid values:
    //     CLEANUP_FAILED
    //     DEPRECATED_RESOURCE_USED
    //     DEPRECATED_TYPE_USED
    //     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
    //     EXPERIMENTAL_TYPE_USED
    //     EXTERNAL_API_WARNING
    //     FIELD_VALUE_OVERRIDEN
    //     INJECTED_KERNELS_DEPRECATED
    //     MISSING_TYPE_DEPENDENCY
    //     NEXT_HOP_ADDRESS_NOT_ASSIGNED
    //     NEXT_HOP_CANNOT_IP_FORWARD
    //     NEXT_HOP_INSTANCE_NOT_FOUND
    //     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
    //     NEXT_HOP_NOT_RUNNING
    //     NOT_CRITICAL_ERROR
    //     NO_RESULTS_ON_PAGE
    //     REQUIRED_TOS_AGREEMENT
    //     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
    //     RESOURCE_NOT_DELETED
    //     SCHEMA_VALIDATION_IGNORED
    //     SINGLE_INSTANCE_PROPERTY_TEMPLATE
    //     UNDECLARED_PROPERTIES
    //     UNREACHABLE
    string code = 1;

    // [Output Only] Metadata about this warning in key: value format. For
    // example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the
      // key value might be the zone name. Other examples might be a key
      // indicating a deprecated resource and a suggested replacement, or a
      // warning about invalid network settings (for example, if an instance
      // attempts to perform IP forwarding but is not enabled for IP
      // forwarding).
      string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      string value = 2;
    }
    repeated Data data = 2;

    // [Output Only] A human-readable description of the warning code.
    string message = 3;
  }
  Warning warning = 6;
}

// Represents a Target VPN gateway resource.
message TargetVpnGateway {
  // [Output Only] Creation timestamp in RFC3339 text format.
  string creationTimestamp = 1;

  // An optional description of this resource. Provide this property when
  // you create the resource.
  string description = 2;

  // [Output Only] A list of URLs to the ForwardingRule resources.
  // ForwardingRules are created using compute.forwardingRules.insert and
  // associated to a VPN gateway.
  repeated string forwardingRules = 3;

  // [Output Only] The unique identifier for the resource. This identifier
  // is defined by the server.
  string id = 4;

  // [Output Only] Type of resource. Always compute#targetVpnGateway for
  // target VPN gateways.
  string kind = 5;

  // Name of the resource. Provided by the client when the resource is
  // created. The name must be 1-63 characters long, and comply with
  // RFC1035. Specifically, the name must be 1-63 characters long and
  // match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means
  // the first character must be a lowercase letter, and all following
  // characters must be a dash, lowercase letter, or digit, except the
  // last character, which cannot be a dash.
  string name = 6;

  // URL of the network to which this VPN gateway is attached. Provided by
  // the client when the VPN gateway is created.
  string network = 7;

  // [Output Only] URL of the region where the target VPN gateway resides.
  string region = 8;

  // [Output Only] Server-defined URL for the resource.
  string selfLink = 9;

  // [Output Only] The status of the VPN gateway.
  // Valid values:
  //     CREATING
  //     DELETING
  //     FAILED
  //     READY
  string status = 10;

  // [Output Only] A list of URLs to VpnTunnel resources. VpnTunnels are
  // created using compute.vpntunnels.insert method and associated to a
  // VPN gateway.
  repeated string tunnels = 11;
}

message TargetVpnGatewayAggregatedList {
  // [Output Only] Unique identifier for the resource; defined by the
  // server.
  string id = 1;

  // A list of TargetVpnGateway resources.
  map<string, TargetVpnGatewaysScopedList> items = 2;

  // [Output Only] Type of resource. Always compute#targetVpnGateway for
  // target VPN gateways.
  string kind = 3;

  // [Output Only] This token allows you to get the next page of results
  // for list requests. If the number of results is larger than
  // maxResults, use the nextPageToken as a value for the query parameter
  // pageToken in the next list request. Subsequent list requests will
  // have their own nextPageToken to continue paging through the results.
  string nextPageToken = 4;

  // [Output Only] Server-defined URL for this resource.
  string selfLink = 5;

  // [Output Only] Informational warning message.
  // [Output Only] Informational warning message.
  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute
    // Engine returns NO_RESULTS_ON_PAGE if there are no results in the
    // response.
    // Valid values:
    //     CLEANUP_FAILED
    //     DEPRECATED_RESOURCE_USED
    //     DEPRECATED_TYPE_USED
    //     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
    //     EXPERIMENTAL_TYPE_USED
    //     EXTERNAL_API_WARNING
    //     FIELD_VALUE_OVERRIDEN
    //     INJECTED_KERNELS_DEPRECATED
    //     MISSING_TYPE_DEPENDENCY
    //     NEXT_HOP_ADDRESS_NOT_ASSIGNED
    //     NEXT_HOP_CANNOT_IP_FORWARD
    //     NEXT_HOP_INSTANCE_NOT_FOUND
    //     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
    //     NEXT_HOP_NOT_RUNNING
    //     NOT_CRITICAL_ERROR
    //     NO_RESULTS_ON_PAGE
    //     REQUIRED_TOS_AGREEMENT
    //     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
    //     RESOURCE_NOT_DELETED
    //     SCHEMA_VALIDATION_IGNORED
    //     SINGLE_INSTANCE_PROPERTY_TEMPLATE
    //     UNDECLARED_PROPERTIES
    //     UNREACHABLE
    string code = 1;

    // [Output Only] Metadata about this warning in key: value format. For
    // example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the
      // key value might be the zone name. Other examples might be a key
      // indicating a deprecated resource and a suggested replacement, or a
      // warning about invalid network settings (for example, if an instance
      // attempts to perform IP forwarding but is not enabled for IP
      // forwarding).
      string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      string value = 2;
    }
    repeated Data data = 2;

    // [Output Only] A human-readable description of the warning code.
    string message = 3;
  }
  Warning warning = 6;
}

// Contains a list of TargetVpnGateway resources.
message TargetVpnGatewayList {
  // [Output Only] Unique identifier for the resource; defined by the
  // server.
  string id = 1;

  // A list of TargetVpnGateway resources.
  repeated TargetVpnGateway items = 2;

  // [Output Only] Type of resource. Always compute#targetVpnGateway for
  // target VPN gateways.
  string kind = 3;

  // [Output Only] This token allows you to get the next page of results
  // for list requests. If the number of results is larger than
  // maxResults, use the nextPageToken as a value for the query parameter
  // pageToken in the next list request. Subsequent list requests will
  // have their own nextPageToken to continue paging through the results.
  string nextPageToken = 4;

  // [Output Only] Server-defined URL for this resource.
  string selfLink = 5;

  // [Output Only] Informational warning message.
  // [Output Only] Informational warning message.
  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute
    // Engine returns NO_RESULTS_ON_PAGE if there are no results in the
    // response.
    // Valid values:
    //     CLEANUP_FAILED
    //     DEPRECATED_RESOURCE_USED
    //     DEPRECATED_TYPE_USED
    //     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
    //     EXPERIMENTAL_TYPE_USED
    //     EXTERNAL_API_WARNING
    //     FIELD_VALUE_OVERRIDEN
    //     INJECTED_KERNELS_DEPRECATED
    //     MISSING_TYPE_DEPENDENCY
    //     NEXT_HOP_ADDRESS_NOT_ASSIGNED
    //     NEXT_HOP_CANNOT_IP_FORWARD
    //     NEXT_HOP_INSTANCE_NOT_FOUND
    //     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
    //     NEXT_HOP_NOT_RUNNING
    //     NOT_CRITICAL_ERROR
    //     NO_RESULTS_ON_PAGE
    //     REQUIRED_TOS_AGREEMENT
    //     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
    //     RESOURCE_NOT_DELETED
    //     SCHEMA_VALIDATION_IGNORED
    //     SINGLE_INSTANCE_PROPERTY_TEMPLATE
    //     UNDECLARED_PROPERTIES
    //     UNREACHABLE
    string code = 1;

    // [Output Only] Metadata about this warning in key: value format. For
    // example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the
      // key value might be the zone name. Other examples might be a key
      // indicating a deprecated resource and a suggested replacement, or a
      // warning about invalid network settings (for example, if an instance
      // attempts to perform IP forwarding but is not enabled for IP
      // forwarding).
      string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      string value = 2;
    }
    repeated Data data = 2;

    // [Output Only] A human-readable description of the warning code.
    string message = 3;
  }
  Warning warning = 6;
}

message TargetVpnGatewaysScopedList {
  // [Output Only] List of target vpn gateways contained in this scope.
  repeated TargetVpnGateway targetVpnGateways = 1;

  // [Output Only] Informational warning which replaces the list of
  // addresses when the list is empty.
  // [Output Only] Informational warning which replaces the list of
  // addresses when the list is empty.
  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute
    // Engine returns NO_RESULTS_ON_PAGE if there are no results in the
    // response.
    // Valid values:
    //     CLEANUP_FAILED
    //     DEPRECATED_RESOURCE_USED
    //     DEPRECATED_TYPE_USED
    //     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
    //     EXPERIMENTAL_TYPE_USED
    //     EXTERNAL_API_WARNING
    //     FIELD_VALUE_OVERRIDEN
    //     INJECTED_KERNELS_DEPRECATED
    //     MISSING_TYPE_DEPENDENCY
    //     NEXT_HOP_ADDRESS_NOT_ASSIGNED
    //     NEXT_HOP_CANNOT_IP_FORWARD
    //     NEXT_HOP_INSTANCE_NOT_FOUND
    //     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
    //     NEXT_HOP_NOT_RUNNING
    //     NOT_CRITICAL_ERROR
    //     NO_RESULTS_ON_PAGE
    //     REQUIRED_TOS_AGREEMENT
    //     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
    //     RESOURCE_NOT_DELETED
    //     SCHEMA_VALIDATION_IGNORED
    //     SINGLE_INSTANCE_PROPERTY_TEMPLATE
    //     UNDECLARED_PROPERTIES
    //     UNREACHABLE
    string code = 1;

    // [Output Only] Metadata about this warning in key: value format. For
    // example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the
      // key value might be the zone name. Other examples might be a key
      // indicating a deprecated resource and a suggested replacement, or a
      // warning about invalid network settings (for example, if an instance
      // attempts to perform IP forwarding but is not enabled for IP
      // forwarding).
      string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      string value = 2;
    }
    repeated Data data = 2;

    // [Output Only] A human-readable description of the warning code.
    string message = 3;
  }
  Warning warning = 2;
}

message TestFailure {
  string actualService = 1;

  string expectedService = 2;

  string host = 3;

  string path = 4;
}

message TestPermissionsRequest {
  // The set of permissions to check for the 'resource'. Permissions with
  // wildcards (such as '*' or 'storage.*') are not allowed.
  repeated string permissions = 1;
}

message TestPermissionsResponse {
  // A subset of `TestPermissionsRequest.permissions` that the caller is
  // allowed.
  repeated string permissions = 1;
}

message UDPHealthCheck {
  // The UDP port number for the health check request. Valid values are 1
  // through 65535.
  int32 port = 1;

  // Port name as defined in InstanceGroup#NamedPort#name. If both port
  // and port_name are defined, port takes precedence.
  string portName = 2;

  // Raw data of request to send in payload of UDP packet. It is an error
  // if this is empty. The request data can only be ASCII.
  string request = 3;

  // The bytes to match against the beginning of the response data. It is
  // an error if this is empty. The response data can only be ASCII.
  string response = 4;
}

// A UrlMap resource. This resource defines the mapping from URL to the
// BackendService resource, based on the "longest-match" of the URL's
// host and path.
message UrlMap {
  // [Output Only] Creation timestamp in RFC3339 text format.
  string creationTimestamp = 1;

  // The URL of the BackendService resource if none of the hostRules
  // match.
  string defaultService = 2;

  // An optional description of this resource. Provide this property when
  // you create the resource.
  string description = 3;

  // Fingerprint of this resource. A hash of the contents stored in this
  // object. This field is used in optimistic locking. This field will be
  // ignored when inserting a UrlMap. An up-to-date fingerprint must be
  // provided in order to update the UrlMap.
  string fingerprint = 4;

  // The list of HostRules to use against the URL.
  repeated HostRule hostRules = 5;

  // [Output Only] The unique identifier for the resource. This identifier
  // is defined by the server.
  string id = 6;

  // [Output Only] Type of the resource. Always compute#urlMaps for url
  // maps.
  string kind = 7;

  // Name of the resource. Provided by the client when the resource is
  // created. The name must be 1-63 characters long, and comply with
  // RFC1035. Specifically, the name must be 1-63 characters long and
  // match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means
  // the first character must be a lowercase letter, and all following
  // characters must be a dash, lowercase letter, or digit, except the
  // last character, which cannot be a dash.
  string name = 8;

  // The list of named PathMatchers to use against the URL.
  repeated PathMatcher pathMatchers = 9;

  // [Output Only] Server-defined URL for the resource.
  string selfLink = 10;

  // The list of expected URL mappings. Request to update this UrlMap will
  // succeed only if all of the test cases pass.
  repeated UrlMapTest tests = 11;
}

// Contains a list of UrlMap resources.
message UrlMapList {
  // [Output Only] Unique identifier for the resource; defined by the
  // server.
  string id = 1;

  // A list of UrlMap resources.
  repeated UrlMap items = 2;

  // Type of resource.
  string kind = 3;

  // [Output Only] This token allows you to get the next page of results
  // for list requests. If the number of results is larger than
  // maxResults, use the nextPageToken as a value for the query parameter
  // pageToken in the next list request. Subsequent list requests will
  // have their own nextPageToken to continue paging through the results.
  string nextPageToken = 4;

  // [Output Only] Server-defined URL for this resource.
  string selfLink = 5;

  // [Output Only] Informational warning message.
  // [Output Only] Informational warning message.
  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute
    // Engine returns NO_RESULTS_ON_PAGE if there are no results in the
    // response.
    // Valid values:
    //     CLEANUP_FAILED
    //     DEPRECATED_RESOURCE_USED
    //     DEPRECATED_TYPE_USED
    //     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
    //     EXPERIMENTAL_TYPE_USED
    //     EXTERNAL_API_WARNING
    //     FIELD_VALUE_OVERRIDEN
    //     INJECTED_KERNELS_DEPRECATED
    //     MISSING_TYPE_DEPENDENCY
    //     NEXT_HOP_ADDRESS_NOT_ASSIGNED
    //     NEXT_HOP_CANNOT_IP_FORWARD
    //     NEXT_HOP_INSTANCE_NOT_FOUND
    //     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
    //     NEXT_HOP_NOT_RUNNING
    //     NOT_CRITICAL_ERROR
    //     NO_RESULTS_ON_PAGE
    //     REQUIRED_TOS_AGREEMENT
    //     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
    //     RESOURCE_NOT_DELETED
    //     SCHEMA_VALIDATION_IGNORED
    //     SINGLE_INSTANCE_PROPERTY_TEMPLATE
    //     UNDECLARED_PROPERTIES
    //     UNREACHABLE
    string code = 1;

    // [Output Only] Metadata about this warning in key: value format. For
    // example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the
      // key value might be the zone name. Other examples might be a key
      // indicating a deprecated resource and a suggested replacement, or a
      // warning about invalid network settings (for example, if an instance
      // attempts to perform IP forwarding but is not enabled for IP
      // forwarding).
      string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      string value = 2;
    }
    repeated Data data = 2;

    // [Output Only] A human-readable description of the warning code.
    string message = 3;
  }
  Warning warning = 6;
}

message UrlMapReference {
  string urlMap = 1;
}

// Message for the expected URL mappings.
message UrlMapTest {
  // Description of this test case.
  string description = 1;

  // Host portion of the URL.
  string host = 2;

  // Path portion of the URL.
  string path = 3;

  // Expected BackendService resource the given URL should be mapped to.
  string service = 4;
}

// Message representing the validation result for a UrlMap.
message UrlMapValidationResult {
  repeated string loadErrors = 1;

  // Whether the given UrlMap can be successfully loaded. If false,
  // 'loadErrors' indicates the reasons.
  bool loadSucceeded = 2;

  repeated TestFailure testFailures = 3;

  // If successfully loaded, this field indicates whether the test passed.
  // If false, 'testFailures's indicate the reason of failure.
  bool testPassed = 4;
}

message UrlMapsValidateRequest {
  // Content of the UrlMap to be validated.
  UrlMap resource = 1;
}

message UrlMapsValidateResponse {
  UrlMapValidationResult result = 1;
}

// The location in Cloud Storage and naming method of the daily usage
// report. Contains bucket_name and report_name prefix.
message UsageExportLocation {
  // The name of an existing bucket in Cloud Storage where the usage
  // report object is stored. The Google Service Account is granted write
  // access to this bucket. This can either be the bucket name by itself,
  // such as example-bucket, or the bucket name with gs:// or
  // https://storage.googleapis.com/ in front of it, such as
  // gs://example-bucket.
  string bucketName = 1;

  // An optional prefix for the name of the usage report object stored in
  // bucketName. If not supplied, defaults to usage. The report is stored
  // as a CSV file named report_name_prefix_gce_YYYYMMDD.csv where
  // YYYYMMDD is the day of the usage according to Pacific Time. If you
  // supply a prefix, it should conform to Cloud Storage object naming
  // conventions.
  string reportNamePrefix = 2;
}

message VpnTunnel {
  // [Output Only] Creation timestamp in RFC3339 text format.
  string creationTimestamp = 1;

  // An optional description of this resource. Provide this property when
  // you create the resource.
  string description = 2;

  // [Output Only] Detailed status message for the VPN tunnel.
  string detailedStatus = 3;

  // [Output Only] The unique identifier for the resource. This identifier
  // is defined by the server.
  string id = 4;

  // IKE protocol version to use when establishing the VPN tunnel with
  // peer VPN gateway. Acceptable IKE versions are 1 or 2. Default version
  // is 2.
  int32 ikeVersion = 5;

  // [Output Only] Type of resource. Always compute#vpnTunnel for VPN
  // tunnels.
  string kind = 6;

  // Local traffic selector to use when establishing the VPN tunnel with
  // peer VPN gateway. The value should be a CIDR formatted string, for
  // example: 192.168.0.0/16. The ranges should be disjoint. Only IPv4 is
  // supported.
  repeated string localTrafficSelector = 7;

  // Name of the resource. Provided by the client when the resource is
  // created. The name must be 1-63 characters long, and comply with
  // RFC1035. Specifically, the name must be 1-63 characters long and
  // match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means
  // the first character must be a lowercase letter, and all following
  // characters must be a dash, lowercase letter, or digit, except the
  // last character, which cannot be a dash.
  string name = 8;

  // IP address of the peer VPN gateway. Only IPv4 is supported.
  string peerIp = 9;

  // [Output Only] URL of the region where the VPN tunnel resides.
  string region = 10;

  // Remote traffic selectors to use when establishing the VPN tunnel with
  // peer VPN gateway. The value should be a CIDR formatted string, for
  // example: 192.168.0.0/16. The ranges should be disjoint. Only IPv4 is
  // supported.
  repeated string remoteTrafficSelector = 11;

  // URL of router resource to be used for dynamic routing.
  string router = 12;

  // [Output Only] Server-defined URL for the resource.
  string selfLink = 13;

  // Shared secret used to set the secure session between the Cloud VPN
  // gateway and the peer VPN gateway.
  string sharedSecret = 14;

  // Hash of the shared secret.
  string sharedSecretHash = 15;

  // [Output Only] The status of the VPN tunnel.
  // Valid values:
  //     ALLOCATING_RESOURCES
  //     AUTHORIZATION_ERROR
  //     DEPROVISIONING
  //     ESTABLISHED
  //     FAILED
  //     FIRST_HANDSHAKE
  //     NEGOTIATION_FAILURE
  //     NETWORK_ERROR
  //     NO_INCOMING_PACKETS
  //     PROVISIONING
  //     REJECTED
  //     WAITING_FOR_FULL_CONFIG
  string status = 16;

  // URL of the VPN gateway with which this VPN tunnel is associated.
  // Provided by the client when the VPN tunnel is created.
  string targetVpnGateway = 17;
}

message VpnTunnelAggregatedList {
  // [Output Only] Unique identifier for the resource; defined by the
  // server.
  string id = 1;

  // A list of VpnTunnelsScopedList resources.
  map<string, VpnTunnelsScopedList> items = 2;

  // [Output Only] Type of resource. Always compute#vpnTunnel for VPN
  // tunnels.
  string kind = 3;

  // [Output Only] This token allows you to get the next page of results
  // for list requests. If the number of results is larger than
  // maxResults, use the nextPageToken as a value for the query parameter
  // pageToken in the next list request. Subsequent list requests will
  // have their own nextPageToken to continue paging through the results.
  string nextPageToken = 4;

  // [Output Only] Server-defined URL for this resource.
  string selfLink = 5;

  // [Output Only] Informational warning message.
  // [Output Only] Informational warning message.
  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute
    // Engine returns NO_RESULTS_ON_PAGE if there are no results in the
    // response.
    // Valid values:
    //     CLEANUP_FAILED
    //     DEPRECATED_RESOURCE_USED
    //     DEPRECATED_TYPE_USED
    //     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
    //     EXPERIMENTAL_TYPE_USED
    //     EXTERNAL_API_WARNING
    //     FIELD_VALUE_OVERRIDEN
    //     INJECTED_KERNELS_DEPRECATED
    //     MISSING_TYPE_DEPENDENCY
    //     NEXT_HOP_ADDRESS_NOT_ASSIGNED
    //     NEXT_HOP_CANNOT_IP_FORWARD
    //     NEXT_HOP_INSTANCE_NOT_FOUND
    //     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
    //     NEXT_HOP_NOT_RUNNING
    //     NOT_CRITICAL_ERROR
    //     NO_RESULTS_ON_PAGE
    //     REQUIRED_TOS_AGREEMENT
    //     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
    //     RESOURCE_NOT_DELETED
    //     SCHEMA_VALIDATION_IGNORED
    //     SINGLE_INSTANCE_PROPERTY_TEMPLATE
    //     UNDECLARED_PROPERTIES
    //     UNREACHABLE
    string code = 1;

    // [Output Only] Metadata about this warning in key: value format. For
    // example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the
      // key value might be the zone name. Other examples might be a key
      // indicating a deprecated resource and a suggested replacement, or a
      // warning about invalid network settings (for example, if an instance
      // attempts to perform IP forwarding but is not enabled for IP
      // forwarding).
      string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      string value = 2;
    }
    repeated Data data = 2;

    // [Output Only] A human-readable description of the warning code.
    string message = 3;
  }
  Warning warning = 6;
}

// Contains a list of VpnTunnel resources.
message VpnTunnelList {
  // [Output Only] Unique identifier for the resource; defined by the
  // server.
  string id = 1;

  // A list of VpnTunnel resources.
  repeated VpnTunnel items = 2;

  // [Output Only] Type of resource. Always compute#vpnTunnel for VPN
  // tunnels.
  string kind = 3;

  // [Output Only] This token allows you to get the next page of results
  // for list requests. If the number of results is larger than
  // maxResults, use the nextPageToken as a value for the query parameter
  // pageToken in the next list request. Subsequent list requests will
  // have their own nextPageToken to continue paging through the results.
  string nextPageToken = 4;

  // [Output Only] Server-defined URL for this resource.
  string selfLink = 5;

  // [Output Only] Informational warning message.
  // [Output Only] Informational warning message.
  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute
    // Engine returns NO_RESULTS_ON_PAGE if there are no results in the
    // response.
    // Valid values:
    //     CLEANUP_FAILED
    //     DEPRECATED_RESOURCE_USED
    //     DEPRECATED_TYPE_USED
    //     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
    //     EXPERIMENTAL_TYPE_USED
    //     EXTERNAL_API_WARNING
    //     FIELD_VALUE_OVERRIDEN
    //     INJECTED_KERNELS_DEPRECATED
    //     MISSING_TYPE_DEPENDENCY
    //     NEXT_HOP_ADDRESS_NOT_ASSIGNED
    //     NEXT_HOP_CANNOT_IP_FORWARD
    //     NEXT_HOP_INSTANCE_NOT_FOUND
    //     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
    //     NEXT_HOP_NOT_RUNNING
    //     NOT_CRITICAL_ERROR
    //     NO_RESULTS_ON_PAGE
    //     REQUIRED_TOS_AGREEMENT
    //     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
    //     RESOURCE_NOT_DELETED
    //     SCHEMA_VALIDATION_IGNORED
    //     SINGLE_INSTANCE_PROPERTY_TEMPLATE
    //     UNDECLARED_PROPERTIES
    //     UNREACHABLE
    string code = 1;

    // [Output Only] Metadata about this warning in key: value format. For
    // example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the
      // key value might be the zone name. Other examples might be a key
      // indicating a deprecated resource and a suggested replacement, or a
      // warning about invalid network settings (for example, if an instance
      // attempts to perform IP forwarding but is not enabled for IP
      // forwarding).
      string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      string value = 2;
    }
    repeated Data data = 2;

    // [Output Only] A human-readable description of the warning code.
    string message = 3;
  }
  Warning warning = 6;
}

message VpnTunnelsScopedList {
  // List of vpn tunnels contained in this scope.
  repeated VpnTunnel vpnTunnels = 1;

  // Informational warning which replaces the list of addresses when the
  // list is empty.
  // Informational warning which replaces the list of addresses when the
  // list is empty.
  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute
    // Engine returns NO_RESULTS_ON_PAGE if there are no results in the
    // response.
    // Valid values:
    //     CLEANUP_FAILED
    //     DEPRECATED_RESOURCE_USED
    //     DEPRECATED_TYPE_USED
    //     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
    //     EXPERIMENTAL_TYPE_USED
    //     EXTERNAL_API_WARNING
    //     FIELD_VALUE_OVERRIDEN
    //     INJECTED_KERNELS_DEPRECATED
    //     MISSING_TYPE_DEPENDENCY
    //     NEXT_HOP_ADDRESS_NOT_ASSIGNED
    //     NEXT_HOP_CANNOT_IP_FORWARD
    //     NEXT_HOP_INSTANCE_NOT_FOUND
    //     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
    //     NEXT_HOP_NOT_RUNNING
    //     NOT_CRITICAL_ERROR
    //     NO_RESULTS_ON_PAGE
    //     REQUIRED_TOS_AGREEMENT
    //     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
    //     RESOURCE_NOT_DELETED
    //     SCHEMA_VALIDATION_IGNORED
    //     SINGLE_INSTANCE_PROPERTY_TEMPLATE
    //     UNDECLARED_PROPERTIES
    //     UNREACHABLE
    string code = 1;

    // [Output Only] Metadata about this warning in key: value format. For
    // example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the
      // key value might be the zone name. Other examples might be a key
      // indicating a deprecated resource and a suggested replacement, or a
      // warning about invalid network settings (for example, if an instance
      // attempts to perform IP forwarding but is not enabled for IP
      // forwarding).
      string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      string value = 2;
    }
    repeated Data data = 2;

    // [Output Only] A human-readable description of the warning code.
    string message = 3;
  }
  Warning warning = 2;
}

message XpnHostList {
  // [Output Only] Unique identifier for the resource; defined by the
  // server.
  string id = 1;

  // [Output Only] A list of shared VPC host project URLs.
  repeated Project items = 2;

  // [Output Only] Type of resource. Always compute#xpnHostList for lists
  // of shared VPC hosts.
  string kind = 3;

  // [Output Only] This token allows you to get the next page of results
  // for list requests. If the number of results is larger than
  // maxResults, use the nextPageToken as a value for the query parameter
  // pageToken in the next list request. Subsequent list requests will
  // have their own nextPageToken to continue paging through the results.
  string nextPageToken = 4;

  // [Output Only] Server-defined URL for this resource.
  string selfLink = 5;

  // [Output Only] Informational warning message.
  // [Output Only] Informational warning message.
  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute
    // Engine returns NO_RESULTS_ON_PAGE if there are no results in the
    // response.
    // Valid values:
    //     CLEANUP_FAILED
    //     DEPRECATED_RESOURCE_USED
    //     DEPRECATED_TYPE_USED
    //     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
    //     EXPERIMENTAL_TYPE_USED
    //     EXTERNAL_API_WARNING
    //     FIELD_VALUE_OVERRIDEN
    //     INJECTED_KERNELS_DEPRECATED
    //     MISSING_TYPE_DEPENDENCY
    //     NEXT_HOP_ADDRESS_NOT_ASSIGNED
    //     NEXT_HOP_CANNOT_IP_FORWARD
    //     NEXT_HOP_INSTANCE_NOT_FOUND
    //     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
    //     NEXT_HOP_NOT_RUNNING
    //     NOT_CRITICAL_ERROR
    //     NO_RESULTS_ON_PAGE
    //     REQUIRED_TOS_AGREEMENT
    //     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
    //     RESOURCE_NOT_DELETED
    //     SCHEMA_VALIDATION_IGNORED
    //     SINGLE_INSTANCE_PROPERTY_TEMPLATE
    //     UNDECLARED_PROPERTIES
    //     UNREACHABLE
    string code = 1;

    // [Output Only] Metadata about this warning in key: value format. For
    // example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the
      // key value might be the zone name. Other examples might be a key
      // indicating a deprecated resource and a suggested replacement, or a
      // warning about invalid network settings (for example, if an instance
      // attempts to perform IP forwarding but is not enabled for IP
      // forwarding).
      string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      string value = 2;
    }
    repeated Data data = 2;

    // [Output Only] A human-readable description of the warning code.
    string message = 3;
  }
  Warning warning = 6;
}

// Service resource (a.k.a service project) ID.
message XpnResourceId {
  // The ID of the service resource. In the case of projects, this field
  // matches the project ID (e.g., my-project), not the project number
  // (e.g., 12345678).
  string id = 1;

  // The type of the service resource.
  // Valid values:
  //     PROJECT
  //     XPN_RESOURCE_TYPE_UNSPECIFIED
  string type = 2;
}

// A Zone resource.
message Zone {
  // [Output Only] Available cpu/platform selections for the zone.
  repeated string availableCpuPlatforms = 1;

  // [Output Only] Creation timestamp in RFC3339 text format.
  string creationTimestamp = 2;

  // [Output Only] The deprecation status associated with this zone.
  DeprecationStatus deprecated = 3;

  // [Output Only] Textual description of the resource.
  string description = 4;

  // [Output Only] The unique identifier for the resource. This identifier
  // is defined by the server.
  string id = 5;

  // [Output Only] Type of the resource. Always compute#zone for zones.
  string kind = 6;

  // [Output Only] Name of the resource.
  string name = 7;

  // [Output Only] Full URL reference to the region which hosts the zone.
  string region = 8;

  // [Output Only] Server-defined URL for the resource.
  string selfLink = 9;

  // [Output Only] Status of the zone, either UP or DOWN.
  // Valid values:
  //     DOWN
  //     UP
  string status = 10;
}

// Contains a list of zone resources.
message ZoneList {
  // [Output Only] Unique identifier for the resource; defined by the
  // server.
  string id = 1;

  // A list of Zone resources.
  repeated Zone items = 2;

  // Type of resource.
  string kind = 3;

  // [Output Only] This token allows you to get the next page of results
  // for list requests. If the number of results is larger than
  // maxResults, use the nextPageToken as a value for the query parameter
  // pageToken in the next list request. Subsequent list requests will
  // have their own nextPageToken to continue paging through the results.
  string nextPageToken = 4;

  // [Output Only] Server-defined URL for this resource.
  string selfLink = 5;

  // [Output Only] Informational warning message.
  // [Output Only] Informational warning message.
  message Warning {
    // [Output Only] A warning code, if applicable. For example, Compute
    // Engine returns NO_RESULTS_ON_PAGE if there are no results in the
    // response.
    // Valid values:
    //     CLEANUP_FAILED
    //     DEPRECATED_RESOURCE_USED
    //     DEPRECATED_TYPE_USED
    //     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
    //     EXPERIMENTAL_TYPE_USED
    //     EXTERNAL_API_WARNING
    //     FIELD_VALUE_OVERRIDEN
    //     INJECTED_KERNELS_DEPRECATED
    //     MISSING_TYPE_DEPENDENCY
    //     NEXT_HOP_ADDRESS_NOT_ASSIGNED
    //     NEXT_HOP_CANNOT_IP_FORWARD
    //     NEXT_HOP_INSTANCE_NOT_FOUND
    //     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
    //     NEXT_HOP_NOT_RUNNING
    //     NOT_CRITICAL_ERROR
    //     NO_RESULTS_ON_PAGE
    //     REQUIRED_TOS_AGREEMENT
    //     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
    //     RESOURCE_NOT_DELETED
    //     SCHEMA_VALIDATION_IGNORED
    //     SINGLE_INSTANCE_PROPERTY_TEMPLATE
    //     UNDECLARED_PROPERTIES
    //     UNREACHABLE
    string code = 1;

    // [Output Only] Metadata about this warning in key: value format. For
    // example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
      // [Output Only] A key that provides more detail on the warning being
      // returned. For example, for warnings where there are no results in a
      // list request for a particular zone, this key might be scope and the
      // key value might be the zone name. Other examples might be a key
      // indicating a deprecated resource and a suggested replacement, or a
      // warning about invalid network settings (for example, if an instance
      // attempts to perform IP forwarding but is not enabled for IP
      // forwarding).
      string key = 1;

      // [Output Only] A warning data value corresponding to the key.
      string value = 2;
    }
    repeated Data data = 2;

    // [Output Only] A human-readable description of the warning code.
    string message = 3;
  }
  Warning warning = 6;
}

message ZoneSetLabelsRequest {
  // The fingerprint of the previous set of labels for this resource, used
  // to detect conflicts. The fingerprint is initially generated by
  // Compute Engine and changes after every request to modify or update
  // labels. You must always provide an up-to-date fingerprint hash in
  // order to update or change labels. Make a get() request to the
  // resource to get the latest fingerprint.
  string labelFingerprint = 1;

  // The labels to set for this resource.
  map<string, string> labels = 2;
}

