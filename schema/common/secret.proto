// Copyright 2018 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

syntax = "proto3";
package common;
option go_package = "chromium.googlesource.com/enterprise/cel/go/schema/common";

import "schema/common/validation.proto";

// A secret. Could be a password or a private key. The enclosing object is
// responsible for storing the secret as a string of octets in the `final`
// field.
//
// The Secret's message handlers will then store the contents in ObjectStorage
// and store the resulting reference in the `object_reference` field. The
// contents will be encrypted using a key that'll be available to the instance
// VMs in the lab.
message Secret {
  // The hardcoded secret as a string. This field is typically only used when
  // storing a hardcoded password. The `final` field will contain a UTF-8
  // encoding of the string.
  //
  // Use of this field is discouraged.
  //
  // If this field is not set or empty, the enclosing object is responsible for
  // generating a suitable secret and storing it in the `final` field during
  // the `ResolveGeneratedContent` phase.
  string hardcoded = 1;

  // The actual secret. In the case of a password, this field will contain a
  // UTF-8 encoded string. Otherwise it will contain whatever sequence of bytes
  // that was stored in here by the enclosing object.
  bytes final = 2 [(v).type = OUTPUT];

  // Once the secret is encoded and stored in object storage, the resulting
  // object reference is stored here.
  string object_reference = 3 [(v).type = OUTPUT];
}
