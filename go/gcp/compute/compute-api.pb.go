// Code generated by protoc-gen-go.
// source: schema/gcp/compute/compute-api.proto
// DO NOT EDIT!

/*
Package compute is a generated protocol buffer package.

It is generated from these files:
	schema/gcp/compute/compute-api.proto

It has these top-level messages:
	AcceleratorConfig
	AcceleratorType
	AcceleratorTypeAggregatedList
	AcceleratorTypeList
	AcceleratorTypesScopedList
	AccessConfig
	Address
	AddressAggregatedList
	AddressList
	AddressesScopedList
	AliasIpRange
	AttachedDisk
	AttachedDiskInitializeParams
	AuditConfig
	AuditLogConfig
	AuthorizationLoggingOptions
	Autoscaler
	AutoscalerAggregatedList
	AutoscalerList
	AutoscalerStatusDetails
	AutoscalersScopedList
	AutoscalingPolicy
	AutoscalingPolicyCpuUtilization
	AutoscalingPolicyCustomMetricUtilization
	AutoscalingPolicyLoadBalancingUtilization
	Backend
	BackendBucket
	BackendBucketList
	BackendService
	BackendServiceAggregatedList
	BackendServiceCdnPolicy
	BackendServiceGroupHealth
	BackendServiceIAP
	BackendServiceList
	BackendServicesScopedList
	Binding
	CacheInvalidationRule
	CacheKeyPolicy
	Commitment
	CommitmentAggregatedList
	CommitmentList
	CommitmentsScopedList
	Condition
	ConnectionDraining
	CustomerEncryptionKey
	CustomerEncryptionKeyProtectedDisk
	DeprecationStatus
	Disk
	DiskAggregatedList
	DiskList
	DiskMoveRequest
	DiskType
	DiskTypeAggregatedList
	DiskTypeList
	DiskTypesScopedList
	DisksResizeRequest
	DisksScopedList
	DistributionPolicy
	DistributionPolicyZoneConfiguration
	Expr
	Firewall
	FirewallList
	FixedOrPercent
	ForwardingRule
	ForwardingRuleAggregatedList
	ForwardingRuleList
	ForwardingRulesScopedList
	GlobalSetLabelsRequest
	GuestOsFeature
	HTTPHealthCheck
	HTTPSHealthCheck
	HealthCheck
	HealthCheckList
	HealthCheckReference
	HealthStatus
	HostRule
	HttpHealthCheck
	HttpHealthCheckList
	HttpsHealthCheck
	HttpsHealthCheckList
	Image
	ImageList
	Instance
	InstanceAggregatedList
	InstanceGroup
	InstanceGroupAggregatedList
	InstanceGroupList
	InstanceGroupManager
	InstanceGroupManagerActionsSummary
	InstanceGroupManagerAggregatedList
	InstanceGroupManagerAutoHealingPolicy
	InstanceGroupManagerList
	InstanceGroupManagerPendingActionsSummary
	InstanceGroupManagerUpdatePolicy
	InstanceGroupManagerVersion
	InstanceGroupManagersAbandonInstancesRequest
	InstanceGroupManagersDeleteInstancesRequest
	InstanceGroupManagersListManagedInstancesResponse
	InstanceGroupManagersRecreateInstancesRequest
	InstanceGroupManagersResizeAdvancedRequest
	InstanceGroupManagersScopedList
	InstanceGroupManagersSetAutoHealingRequest
	InstanceGroupManagersSetInstanceTemplateRequest
	InstanceGroupManagersSetTargetPoolsRequest
	InstanceGroupsAddInstancesRequest
	InstanceGroupsListInstances
	InstanceGroupsListInstancesRequest
	InstanceGroupsRemoveInstancesRequest
	InstanceGroupsScopedList
	InstanceGroupsSetNamedPortsRequest
	InstanceList
	InstanceListReferrers
	InstanceMoveRequest
	InstanceProperties
	InstanceReference
	InstanceTemplate
	InstanceTemplateList
	InstanceWithNamedPorts
	InstancesScopedList
	InstancesSetLabelsRequest
	InstancesSetMachineResourcesRequest
	InstancesSetMachineTypeRequest
	InstancesSetMinCpuPlatformRequest
	InstancesSetServiceAccountRequest
	InstancesStartWithEncryptionKeyRequest
	Interconnect
	InterconnectAttachment
	InterconnectAttachmentAggregatedList
	InterconnectAttachmentList
	InterconnectAttachmentPrivateInfo
	InterconnectAttachmentsScopedList
	InterconnectCircuitInfo
	InterconnectList
	InterconnectLocation
	InterconnectLocationList
	InterconnectLocationRegionInfo
	InterconnectOutageNotification
	License
	LogConfig
	LogConfigCloudAuditOptions
	LogConfigCounterOptions
	LogConfigDataAccessOptions
	MachineType
	MachineTypeAggregatedList
	MachineTypeList
	MachineTypesScopedList
	ManagedInstance
	ManagedInstanceLastAttempt
	ManagedInstanceVersion
	Metadata
	NamedPort
	Network
	NetworkInterface
	NetworkList
	NetworkPeering
	NetworkRoutingConfig
	NetworksAddPeeringRequest
	NetworksRemovePeeringRequest
	Operation
	OperationAggregatedList
	OperationList
	OperationsScopedList
	PathMatcher
	PathRule
	Policy
	Project
	ProjectsDisableXpnResourceRequest
	ProjectsEnableXpnResourceRequest
	ProjectsGetXpnResources
	ProjectsListXpnHostsRequest
	Quota
	Reference
	Region
	RegionAutoscalerList
	RegionInstanceGroupList
	RegionInstanceGroupManagerList
	RegionInstanceGroupManagersAbandonInstancesRequest
	RegionInstanceGroupManagersDeleteInstancesRequest
	RegionInstanceGroupManagersListInstancesResponse
	RegionInstanceGroupManagersRecreateRequest
	RegionInstanceGroupManagersSetAutoHealingRequest
	RegionInstanceGroupManagersSetTargetPoolsRequest
	RegionInstanceGroupManagersSetTemplateRequest
	RegionInstanceGroupsListInstances
	RegionInstanceGroupsListInstancesRequest
	RegionInstanceGroupsSetNamedPortsRequest
	RegionList
	RegionSetLabelsRequest
	ResourceCommitment
	ResourceGroupReference
	Route
	RouteList
	Router
	RouterAggregatedList
	RouterBgp
	RouterBgpPeer
	RouterInterface
	RouterList
	RouterStatus
	RouterStatusBgpPeerStatus
	RouterStatusResponse
	RoutersPreviewResponse
	RoutersScopedList
	Rule
	SSLHealthCheck
	Scheduling
	SecurityPolicy
	SecurityPolicyList
	SecurityPolicyReference
	SecurityPolicyRule
	SecurityPolicyRuleMatcher
	SerialPortOutput
	ServiceAccount
	Snapshot
	SnapshotList
	SslCertificate
	SslCertificateList
	Subnetwork
	SubnetworkAggregatedList
	SubnetworkList
	SubnetworkSecondaryRange
	SubnetworksExpandIpCidrRangeRequest
	SubnetworksScopedList
	SubnetworksSetPrivateIpGoogleAccessRequest
	TCPHealthCheck
	Tags
	TargetHttpProxy
	TargetHttpProxyList
	TargetHttpsProxiesSetSslCertificatesRequest
	TargetHttpsProxy
	TargetHttpsProxyList
	TargetInstance
	TargetInstanceAggregatedList
	TargetInstanceList
	TargetInstancesScopedList
	TargetPool
	TargetPoolAggregatedList
	TargetPoolInstanceHealth
	TargetPoolList
	TargetPoolsAddHealthCheckRequest
	TargetPoolsAddInstanceRequest
	TargetPoolsRemoveHealthCheckRequest
	TargetPoolsRemoveInstanceRequest
	TargetPoolsScopedList
	TargetReference
	TargetSslProxiesSetBackendServiceRequest
	TargetSslProxiesSetProxyHeaderRequest
	TargetSslProxiesSetSslCertificatesRequest
	TargetSslProxy
	TargetSslProxyList
	TargetTcpProxiesSetBackendServiceRequest
	TargetTcpProxiesSetProxyHeaderRequest
	TargetTcpProxy
	TargetTcpProxyList
	TargetVpnGateway
	TargetVpnGatewayAggregatedList
	TargetVpnGatewayList
	TargetVpnGatewaysScopedList
	TestFailure
	TestPermissionsRequest
	TestPermissionsResponse
	UDPHealthCheck
	UrlMap
	UrlMapList
	UrlMapReference
	UrlMapTest
	UrlMapValidationResult
	UrlMapsValidateRequest
	UrlMapsValidateResponse
	UsageExportLocation
	VpnTunnel
	VpnTunnelAggregatedList
	VpnTunnelList
	VpnTunnelsScopedList
	XpnHostList
	XpnResourceId
	Zone
	ZoneList
	ZoneSetLabelsRequest
*/
package compute

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// A specification of the type and number of accelerator cards attached
// to the instance.
type AcceleratorConfig struct {
	// The number of the guest accelerator cards exposed to this instance.
	AcceleratorCount int32 `protobuf:"varint,1,opt,name=acceleratorCount" json:"acceleratorCount,omitempty"`
	// Full or partial URL of the accelerator type resource to expose to
	// this instance.
	AcceleratorType string `protobuf:"bytes,2,opt,name=acceleratorType" json:"acceleratorType,omitempty"`
}

func (m *AcceleratorConfig) Reset()                    { *m = AcceleratorConfig{} }
func (m *AcceleratorConfig) String() string            { return proto.CompactTextString(m) }
func (*AcceleratorConfig) ProtoMessage()               {}
func (*AcceleratorConfig) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *AcceleratorConfig) GetAcceleratorCount() int32 {
	if m != nil {
		return m.AcceleratorCount
	}
	return 0
}

func (m *AcceleratorConfig) GetAcceleratorType() string {
	if m != nil {
		return m.AcceleratorType
	}
	return ""
}

// An Accelerator Type resource.
type AcceleratorType struct {
	// [Output Only] Creation timestamp in RFC3339 text format.
	CreationTimestamp string `protobuf:"bytes,1,opt,name=creationTimestamp" json:"creationTimestamp,omitempty"`
	// [Output Only] The deprecation status associated with this accelerator
	// type.
	Deprecated *DeprecationStatus `protobuf:"bytes,2,opt,name=deprecated" json:"deprecated,omitempty"`
	// [Output Only] An optional textual description of the resource.
	Description string `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	// [Output Only] The unique identifier for the resource. This identifier
	// is defined by the server.
	Id string `protobuf:"bytes,4,opt,name=id" json:"id,omitempty"`
	// [Output Only] The type of the resource. Always
	// compute#acceleratorType for accelerator types.
	Kind string `protobuf:"bytes,5,opt,name=kind" json:"kind,omitempty"`
	// [Output Only] Maximum accelerator cards allowed per instance.
	MaximumCardsPerInstance int32 `protobuf:"varint,6,opt,name=maximumCardsPerInstance" json:"maximumCardsPerInstance,omitempty"`
	// [Output Only] Name of the resource.
	Name string `protobuf:"bytes,7,opt,name=name" json:"name,omitempty"`
	// [Output Only] Server-defined fully-qualified URL for this resource.
	SelfLink string `protobuf:"bytes,8,opt,name=selfLink" json:"selfLink,omitempty"`
	// [Output Only] The name of the zone where the accelerator type
	// resides, such as us-central1-a.
	Zone string `protobuf:"bytes,9,opt,name=zone" json:"zone,omitempty"`
}

func (m *AcceleratorType) Reset()                    { *m = AcceleratorType{} }
func (m *AcceleratorType) String() string            { return proto.CompactTextString(m) }
func (*AcceleratorType) ProtoMessage()               {}
func (*AcceleratorType) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *AcceleratorType) GetCreationTimestamp() string {
	if m != nil {
		return m.CreationTimestamp
	}
	return ""
}

func (m *AcceleratorType) GetDeprecated() *DeprecationStatus {
	if m != nil {
		return m.Deprecated
	}
	return nil
}

func (m *AcceleratorType) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *AcceleratorType) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *AcceleratorType) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *AcceleratorType) GetMaximumCardsPerInstance() int32 {
	if m != nil {
		return m.MaximumCardsPerInstance
	}
	return 0
}

func (m *AcceleratorType) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AcceleratorType) GetSelfLink() string {
	if m != nil {
		return m.SelfLink
	}
	return ""
}

func (m *AcceleratorType) GetZone() string {
	if m != nil {
		return m.Zone
	}
	return ""
}

type AcceleratorTypeAggregatedList struct {
	// [Output Only] Unique identifier for the resource; defined by the
	// server.
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// A list of AcceleratorTypesScopedList resources.
	Items map[string]*AcceleratorTypesScopedList `protobuf:"bytes,2,rep,name=items" json:"items,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// [Output Only] Type of resource. Always
	// compute#acceleratorTypeAggregatedList for aggregated lists of
	// accelerator types.
	Kind string `protobuf:"bytes,3,opt,name=kind" json:"kind,omitempty"`
	// [Output Only] This token allows you to get the next page of results
	// for list requests. If the number of results is larger than
	// maxResults, use the nextPageToken as a value for the query parameter
	// pageToken in the next list request. Subsequent list requests will
	// have their own nextPageToken to continue paging through the results.
	NextPageToken string `protobuf:"bytes,4,opt,name=nextPageToken" json:"nextPageToken,omitempty"`
	// [Output Only] Server-defined URL for this resource.
	SelfLink string                                 `protobuf:"bytes,5,opt,name=selfLink" json:"selfLink,omitempty"`
	Warning  *AcceleratorTypeAggregatedList_Warning `protobuf:"bytes,6,opt,name=warning" json:"warning,omitempty"`
}

func (m *AcceleratorTypeAggregatedList) Reset()                    { *m = AcceleratorTypeAggregatedList{} }
func (m *AcceleratorTypeAggregatedList) String() string            { return proto.CompactTextString(m) }
func (*AcceleratorTypeAggregatedList) ProtoMessage()               {}
func (*AcceleratorTypeAggregatedList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *AcceleratorTypeAggregatedList) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *AcceleratorTypeAggregatedList) GetItems() map[string]*AcceleratorTypesScopedList {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *AcceleratorTypeAggregatedList) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *AcceleratorTypeAggregatedList) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

func (m *AcceleratorTypeAggregatedList) GetSelfLink() string {
	if m != nil {
		return m.SelfLink
	}
	return ""
}

func (m *AcceleratorTypeAggregatedList) GetWarning() *AcceleratorTypeAggregatedList_Warning {
	if m != nil {
		return m.Warning
	}
	return nil
}

// [Output Only] Informational warning message.
// [Output Only] Informational warning message.
type AcceleratorTypeAggregatedList_Warning struct {
	// [Output Only] A warning code, if applicable. For example, Compute
	// Engine returns NO_RESULTS_ON_PAGE if there are no results in the
	// response.
	// Valid values:
	//     CLEANUP_FAILED
	//     DEPRECATED_RESOURCE_USED
	//     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
	//     FIELD_VALUE_OVERRIDEN
	//     INJECTED_KERNELS_DEPRECATED
	//     NEXT_HOP_ADDRESS_NOT_ASSIGNED
	//     NEXT_HOP_CANNOT_IP_FORWARD
	//     NEXT_HOP_INSTANCE_NOT_FOUND
	//     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
	//     NEXT_HOP_NOT_RUNNING
	//     NOT_CRITICAL_ERROR
	//     NO_RESULTS_ON_PAGE
	//     REQUIRED_TOS_AGREEMENT
	//     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
	//     RESOURCE_NOT_DELETED
	//     SINGLE_INSTANCE_PROPERTY_TEMPLATE
	//     UNREACHABLE
	Code string                                        `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Data []*AcceleratorTypeAggregatedList_Warning_Data `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
	// [Output Only] A human-readable description of the warning code.
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *AcceleratorTypeAggregatedList_Warning) Reset()         { *m = AcceleratorTypeAggregatedList_Warning{} }
func (m *AcceleratorTypeAggregatedList_Warning) String() string { return proto.CompactTextString(m) }
func (*AcceleratorTypeAggregatedList_Warning) ProtoMessage()    {}
func (*AcceleratorTypeAggregatedList_Warning) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{2, 1}
}

func (m *AcceleratorTypeAggregatedList_Warning) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *AcceleratorTypeAggregatedList_Warning) GetData() []*AcceleratorTypeAggregatedList_Warning_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *AcceleratorTypeAggregatedList_Warning) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// [Output Only] Metadata about this warning in key: value format. For
// example:
// "data": [ { "key": "scope", "value": "zones/us-east1-d" }
type AcceleratorTypeAggregatedList_Warning_Data struct {
	// [Output Only] A key that provides more detail on the warning being
	// returned. For example, for warnings where there are no results in a
	// list request for a particular zone, this key might be scope and the
	// key value might be the zone name. Other examples might be a key
	// indicating a deprecated resource and a suggested replacement, or a
	// warning about invalid network settings (for example, if an instance
	// attempts to perform IP forwarding but is not enabled for IP
	// forwarding).
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	// [Output Only] A warning data value corresponding to the key.
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *AcceleratorTypeAggregatedList_Warning_Data) Reset() {
	*m = AcceleratorTypeAggregatedList_Warning_Data{}
}
func (m *AcceleratorTypeAggregatedList_Warning_Data) String() string {
	return proto.CompactTextString(m)
}
func (*AcceleratorTypeAggregatedList_Warning_Data) ProtoMessage() {}
func (*AcceleratorTypeAggregatedList_Warning_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{2, 1, 0}
}

func (m *AcceleratorTypeAggregatedList_Warning_Data) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *AcceleratorTypeAggregatedList_Warning_Data) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

// Contains a list of accelerator types.
type AcceleratorTypeList struct {
	// [Output Only] Unique identifier for the resource; defined by the
	// server.
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// A list of AcceleratorType resources.
	Items []*AcceleratorType `protobuf:"bytes,2,rep,name=items" json:"items,omitempty"`
	// [Output Only] Type of resource. Always compute#acceleratorTypeList
	// for lists of accelerator types.
	Kind string `protobuf:"bytes,3,opt,name=kind" json:"kind,omitempty"`
	// [Output Only] This token allows you to get the next page of results
	// for list requests. If the number of results is larger than
	// maxResults, use the nextPageToken as a value for the query parameter
	// pageToken in the next list request. Subsequent list requests will
	// have their own nextPageToken to continue paging through the results.
	NextPageToken string `protobuf:"bytes,4,opt,name=nextPageToken" json:"nextPageToken,omitempty"`
	// [Output Only] Server-defined URL for this resource.
	SelfLink string                       `protobuf:"bytes,5,opt,name=selfLink" json:"selfLink,omitempty"`
	Warning  *AcceleratorTypeList_Warning `protobuf:"bytes,6,opt,name=warning" json:"warning,omitempty"`
}

func (m *AcceleratorTypeList) Reset()                    { *m = AcceleratorTypeList{} }
func (m *AcceleratorTypeList) String() string            { return proto.CompactTextString(m) }
func (*AcceleratorTypeList) ProtoMessage()               {}
func (*AcceleratorTypeList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *AcceleratorTypeList) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *AcceleratorTypeList) GetItems() []*AcceleratorType {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *AcceleratorTypeList) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *AcceleratorTypeList) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

func (m *AcceleratorTypeList) GetSelfLink() string {
	if m != nil {
		return m.SelfLink
	}
	return ""
}

func (m *AcceleratorTypeList) GetWarning() *AcceleratorTypeList_Warning {
	if m != nil {
		return m.Warning
	}
	return nil
}

// [Output Only] Informational warning message.
// [Output Only] Informational warning message.
type AcceleratorTypeList_Warning struct {
	// [Output Only] A warning code, if applicable. For example, Compute
	// Engine returns NO_RESULTS_ON_PAGE if there are no results in the
	// response.
	// Valid values:
	//     CLEANUP_FAILED
	//     DEPRECATED_RESOURCE_USED
	//     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
	//     FIELD_VALUE_OVERRIDEN
	//     INJECTED_KERNELS_DEPRECATED
	//     NEXT_HOP_ADDRESS_NOT_ASSIGNED
	//     NEXT_HOP_CANNOT_IP_FORWARD
	//     NEXT_HOP_INSTANCE_NOT_FOUND
	//     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
	//     NEXT_HOP_NOT_RUNNING
	//     NOT_CRITICAL_ERROR
	//     NO_RESULTS_ON_PAGE
	//     REQUIRED_TOS_AGREEMENT
	//     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
	//     RESOURCE_NOT_DELETED
	//     SINGLE_INSTANCE_PROPERTY_TEMPLATE
	//     UNREACHABLE
	Code string                              `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Data []*AcceleratorTypeList_Warning_Data `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
	// [Output Only] A human-readable description of the warning code.
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *AcceleratorTypeList_Warning) Reset()                    { *m = AcceleratorTypeList_Warning{} }
func (m *AcceleratorTypeList_Warning) String() string            { return proto.CompactTextString(m) }
func (*AcceleratorTypeList_Warning) ProtoMessage()               {}
func (*AcceleratorTypeList_Warning) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3, 0} }

func (m *AcceleratorTypeList_Warning) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *AcceleratorTypeList_Warning) GetData() []*AcceleratorTypeList_Warning_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *AcceleratorTypeList_Warning) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// [Output Only] Metadata about this warning in key: value format. For
// example:
// "data": [ { "key": "scope", "value": "zones/us-east1-d" }
type AcceleratorTypeList_Warning_Data struct {
	// [Output Only] A key that provides more detail on the warning being
	// returned. For example, for warnings where there are no results in a
	// list request for a particular zone, this key might be scope and the
	// key value might be the zone name. Other examples might be a key
	// indicating a deprecated resource and a suggested replacement, or a
	// warning about invalid network settings (for example, if an instance
	// attempts to perform IP forwarding but is not enabled for IP
	// forwarding).
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	// [Output Only] A warning data value corresponding to the key.
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *AcceleratorTypeList_Warning_Data) Reset()         { *m = AcceleratorTypeList_Warning_Data{} }
func (m *AcceleratorTypeList_Warning_Data) String() string { return proto.CompactTextString(m) }
func (*AcceleratorTypeList_Warning_Data) ProtoMessage()    {}
func (*AcceleratorTypeList_Warning_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{3, 0, 0}
}

func (m *AcceleratorTypeList_Warning_Data) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *AcceleratorTypeList_Warning_Data) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type AcceleratorTypesScopedList struct {
	// [Output Only] List of accelerator types contained in this scope.
	AcceleratorTypes []*AcceleratorType                  `protobuf:"bytes,1,rep,name=acceleratorTypes" json:"acceleratorTypes,omitempty"`
	Warning          *AcceleratorTypesScopedList_Warning `protobuf:"bytes,2,opt,name=warning" json:"warning,omitempty"`
}

func (m *AcceleratorTypesScopedList) Reset()                    { *m = AcceleratorTypesScopedList{} }
func (m *AcceleratorTypesScopedList) String() string            { return proto.CompactTextString(m) }
func (*AcceleratorTypesScopedList) ProtoMessage()               {}
func (*AcceleratorTypesScopedList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *AcceleratorTypesScopedList) GetAcceleratorTypes() []*AcceleratorType {
	if m != nil {
		return m.AcceleratorTypes
	}
	return nil
}

func (m *AcceleratorTypesScopedList) GetWarning() *AcceleratorTypesScopedList_Warning {
	if m != nil {
		return m.Warning
	}
	return nil
}

// [Output Only] An informational warning that appears when the
// accelerator types list is empty.
// [Output Only] An informational warning that appears when the
// accelerator types list is empty.
type AcceleratorTypesScopedList_Warning struct {
	// [Output Only] A warning code, if applicable. For example, Compute
	// Engine returns NO_RESULTS_ON_PAGE if there are no results in the
	// response.
	// Valid values:
	//     CLEANUP_FAILED
	//     DEPRECATED_RESOURCE_USED
	//     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
	//     FIELD_VALUE_OVERRIDEN
	//     INJECTED_KERNELS_DEPRECATED
	//     NEXT_HOP_ADDRESS_NOT_ASSIGNED
	//     NEXT_HOP_CANNOT_IP_FORWARD
	//     NEXT_HOP_INSTANCE_NOT_FOUND
	//     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
	//     NEXT_HOP_NOT_RUNNING
	//     NOT_CRITICAL_ERROR
	//     NO_RESULTS_ON_PAGE
	//     REQUIRED_TOS_AGREEMENT
	//     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
	//     RESOURCE_NOT_DELETED
	//     SINGLE_INSTANCE_PROPERTY_TEMPLATE
	//     UNREACHABLE
	Code string                                     `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Data []*AcceleratorTypesScopedList_Warning_Data `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
	// [Output Only] A human-readable description of the warning code.
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *AcceleratorTypesScopedList_Warning) Reset()         { *m = AcceleratorTypesScopedList_Warning{} }
func (m *AcceleratorTypesScopedList_Warning) String() string { return proto.CompactTextString(m) }
func (*AcceleratorTypesScopedList_Warning) ProtoMessage()    {}
func (*AcceleratorTypesScopedList_Warning) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{4, 0}
}

func (m *AcceleratorTypesScopedList_Warning) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *AcceleratorTypesScopedList_Warning) GetData() []*AcceleratorTypesScopedList_Warning_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *AcceleratorTypesScopedList_Warning) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// [Output Only] Metadata about this warning in key: value format. For
// example:
// "data": [ { "key": "scope", "value": "zones/us-east1-d" }
type AcceleratorTypesScopedList_Warning_Data struct {
	// [Output Only] A key that provides more detail on the warning being
	// returned. For example, for warnings where there are no results in a
	// list request for a particular zone, this key might be scope and the
	// key value might be the zone name. Other examples might be a key
	// indicating a deprecated resource and a suggested replacement, or a
	// warning about invalid network settings (for example, if an instance
	// attempts to perform IP forwarding but is not enabled for IP
	// forwarding).
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	// [Output Only] A warning data value corresponding to the key.
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *AcceleratorTypesScopedList_Warning_Data) Reset() {
	*m = AcceleratorTypesScopedList_Warning_Data{}
}
func (m *AcceleratorTypesScopedList_Warning_Data) String() string { return proto.CompactTextString(m) }
func (*AcceleratorTypesScopedList_Warning_Data) ProtoMessage()    {}
func (*AcceleratorTypesScopedList_Warning_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{4, 0, 0}
}

func (m *AcceleratorTypesScopedList_Warning_Data) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *AcceleratorTypesScopedList_Warning_Data) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

// An access configuration attached to an instance's network interface.
// Only one access config per instance is supported.
type AccessConfig struct {
	// [Output Only] Type of the resource. Always compute#accessConfig for
	// access configs.
	Kind string `protobuf:"bytes,1,opt,name=kind" json:"kind,omitempty"`
	// The name of this access configuration. The default and recommended
	// name is External NAT but you can use any arbitrary string you would
	// like. For example, My external IP or Network Access.
	Name string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	// An external IP address associated with this instance. Specify an
	// unused static external IP address available to the project or leave
	// this field undefined to use an IP from a shared ephemeral IP address
	// pool. If you specify a static external IP address, it must live in
	// the same region as the zone of the instance.
	NatIP string `protobuf:"bytes,3,opt,name=natIP" json:"natIP,omitempty"`
	// The DNS domain name for the public PTR record. This field can only be
	// set when the set_public_ptr field is enabled.
	PublicPtrDomainName string `protobuf:"bytes,4,opt,name=publicPtrDomainName" json:"publicPtrDomainName,omitempty"`
	// Specifies whether a public DNS ?PTR? record should be created to map
	// the external IP address of the instance to a DNS domain name.
	SetPublicPtr bool `protobuf:"varint,5,opt,name=setPublicPtr" json:"setPublicPtr,omitempty"`
	// The type of configuration. The default and only option is
	// ONE_TO_ONE_NAT.
	// Valid values:
	//     ONE_TO_ONE_NAT
	Type string `protobuf:"bytes,6,opt,name=type" json:"type,omitempty"`
}

func (m *AccessConfig) Reset()                    { *m = AccessConfig{} }
func (m *AccessConfig) String() string            { return proto.CompactTextString(m) }
func (*AccessConfig) ProtoMessage()               {}
func (*AccessConfig) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *AccessConfig) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *AccessConfig) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AccessConfig) GetNatIP() string {
	if m != nil {
		return m.NatIP
	}
	return ""
}

func (m *AccessConfig) GetPublicPtrDomainName() string {
	if m != nil {
		return m.PublicPtrDomainName
	}
	return ""
}

func (m *AccessConfig) GetSetPublicPtr() bool {
	if m != nil {
		return m.SetPublicPtr
	}
	return false
}

func (m *AccessConfig) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

// A reserved address resource.
type Address struct {
	// The static IP address represented by this resource.
	Address string `protobuf:"bytes,1,opt,name=address" json:"address,omitempty"`
	// The type of address to reserve. If unspecified, defaults to EXTERNAL.
	// Valid values:
	//     EXTERNAL
	//     INTERNAL
	//     UNSPECIFIED_TYPE
	AddressType string `protobuf:"bytes,2,opt,name=addressType" json:"addressType,omitempty"`
	// [Output Only] Creation timestamp in RFC3339 text format.
	CreationTimestamp string `protobuf:"bytes,3,opt,name=creationTimestamp" json:"creationTimestamp,omitempty"`
	// An optional description of this resource. Provide this property when
	// you create the resource.
	Description string `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	// [Output Only] The unique identifier for the resource. This identifier
	// is defined by the server.
	Id string `protobuf:"bytes,5,opt,name=id" json:"id,omitempty"`
	// The IP Version that will be used by this address. Valid options are
	// IPV4 or IPV6. This can only be specified for a global address.
	// Valid values:
	//     IPV4
	//     IPV6
	//     UNSPECIFIED_VERSION
	IpVersion string `protobuf:"bytes,6,opt,name=ipVersion" json:"ipVersion,omitempty"`
	// [Output Only] Type of the resource. Always compute#address for
	// addresses.
	Kind string `protobuf:"bytes,7,opt,name=kind" json:"kind,omitempty"`
	// A fingerprint for the labels being applied to this Address, which is
	// essentially a hash of the labels set used for optimistic locking. The
	// fingerprint is initially generated by Compute Engine and changes
	// after every request to modify or update labels. You must always
	// provide an up-to-date fingerprint hash in order to update or change
	// labels.
	//
	// To see the latest fingerprint, make a get() request to retrieve an
	// Address.
	LabelFingerprint string `protobuf:"bytes,8,opt,name=labelFingerprint" json:"labelFingerprint,omitempty"`
	// Labels to apply to this Address resource. These can be later modified
	// by the setLabels method. Each label key/value must comply with
	// RFC1035. Label values may be empty.
	Labels map[string]string `protobuf:"bytes,9,rep,name=labels" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Name of the resource. Provided by the client when the resource is
	// created. The name must be 1-63 characters long, and comply with
	// RFC1035. Specifically, the name must be 1-63 characters long and
	// match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means
	// the first character must be a lowercase letter, and all following
	// characters must be a dash, lowercase letter, or digit, except the
	// last character, which cannot be a dash.
	Name string `protobuf:"bytes,10,opt,name=name" json:"name,omitempty"`
	// [Output Only] URL of the region where the regional address resides.
	// This field is not applicable to global addresses.
	Region string `protobuf:"bytes,11,opt,name=region" json:"region,omitempty"`
	// [Output Only] Server-defined URL for the resource.
	SelfLink string `protobuf:"bytes,12,opt,name=selfLink" json:"selfLink,omitempty"`
	// [Output Only] The status of the address, which can be either IN_USE
	// or RESERVED. An address that is RESERVED is currently reserved and
	// available to use. An IN_USE address is currently being used by
	// another resource and is not available.
	// Valid values:
	//     IN_USE
	//     RESERVED
	Status string `protobuf:"bytes,13,opt,name=status" json:"status,omitempty"`
	// For external addresses, this field should not be used.
	//
	// The URL of the subnetwork in which to reserve the address. If an IP
	// address is specified, it must be within the subnetwork's IP range.
	Subnetwork string `protobuf:"bytes,14,opt,name=subnetwork" json:"subnetwork,omitempty"`
	// [Output Only] The URLs of the resources that are using this address.
	Users []string `protobuf:"bytes,15,rep,name=users" json:"users,omitempty"`
}

func (m *Address) Reset()                    { *m = Address{} }
func (m *Address) String() string            { return proto.CompactTextString(m) }
func (*Address) ProtoMessage()               {}
func (*Address) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *Address) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *Address) GetAddressType() string {
	if m != nil {
		return m.AddressType
	}
	return ""
}

func (m *Address) GetCreationTimestamp() string {
	if m != nil {
		return m.CreationTimestamp
	}
	return ""
}

func (m *Address) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Address) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Address) GetIpVersion() string {
	if m != nil {
		return m.IpVersion
	}
	return ""
}

func (m *Address) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *Address) GetLabelFingerprint() string {
	if m != nil {
		return m.LabelFingerprint
	}
	return ""
}

func (m *Address) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *Address) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Address) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *Address) GetSelfLink() string {
	if m != nil {
		return m.SelfLink
	}
	return ""
}

func (m *Address) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Address) GetSubnetwork() string {
	if m != nil {
		return m.Subnetwork
	}
	return ""
}

func (m *Address) GetUsers() []string {
	if m != nil {
		return m.Users
	}
	return nil
}

type AddressAggregatedList struct {
	// [Output Only] Unique identifier for the resource; defined by the
	// server.
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// A list of AddressesScopedList resources.
	Items map[string]*AddressesScopedList `protobuf:"bytes,2,rep,name=items" json:"items,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// [Output Only] Type of resource. Always compute#addressAggregatedList
	// for aggregated lists of addresses.
	Kind string `protobuf:"bytes,3,opt,name=kind" json:"kind,omitempty"`
	// [Output Only] This token allows you to get the next page of results
	// for list requests. If the number of results is larger than
	// maxResults, use the nextPageToken as a value for the query parameter
	// pageToken in the next list request. Subsequent list requests will
	// have their own nextPageToken to continue paging through the results.
	NextPageToken string `protobuf:"bytes,4,opt,name=nextPageToken" json:"nextPageToken,omitempty"`
	// [Output Only] Server-defined URL for this resource.
	SelfLink string                         `protobuf:"bytes,5,opt,name=selfLink" json:"selfLink,omitempty"`
	Warning  *AddressAggregatedList_Warning `protobuf:"bytes,6,opt,name=warning" json:"warning,omitempty"`
}

func (m *AddressAggregatedList) Reset()                    { *m = AddressAggregatedList{} }
func (m *AddressAggregatedList) String() string            { return proto.CompactTextString(m) }
func (*AddressAggregatedList) ProtoMessage()               {}
func (*AddressAggregatedList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *AddressAggregatedList) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *AddressAggregatedList) GetItems() map[string]*AddressesScopedList {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *AddressAggregatedList) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *AddressAggregatedList) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

func (m *AddressAggregatedList) GetSelfLink() string {
	if m != nil {
		return m.SelfLink
	}
	return ""
}

func (m *AddressAggregatedList) GetWarning() *AddressAggregatedList_Warning {
	if m != nil {
		return m.Warning
	}
	return nil
}

// [Output Only] Informational warning message.
// [Output Only] Informational warning message.
type AddressAggregatedList_Warning struct {
	// [Output Only] A warning code, if applicable. For example, Compute
	// Engine returns NO_RESULTS_ON_PAGE if there are no results in the
	// response.
	// Valid values:
	//     CLEANUP_FAILED
	//     DEPRECATED_RESOURCE_USED
	//     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
	//     FIELD_VALUE_OVERRIDEN
	//     INJECTED_KERNELS_DEPRECATED
	//     NEXT_HOP_ADDRESS_NOT_ASSIGNED
	//     NEXT_HOP_CANNOT_IP_FORWARD
	//     NEXT_HOP_INSTANCE_NOT_FOUND
	//     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
	//     NEXT_HOP_NOT_RUNNING
	//     NOT_CRITICAL_ERROR
	//     NO_RESULTS_ON_PAGE
	//     REQUIRED_TOS_AGREEMENT
	//     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
	//     RESOURCE_NOT_DELETED
	//     SINGLE_INSTANCE_PROPERTY_TEMPLATE
	//     UNREACHABLE
	Code string                                `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Data []*AddressAggregatedList_Warning_Data `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
	// [Output Only] A human-readable description of the warning code.
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *AddressAggregatedList_Warning) Reset()         { *m = AddressAggregatedList_Warning{} }
func (m *AddressAggregatedList_Warning) String() string { return proto.CompactTextString(m) }
func (*AddressAggregatedList_Warning) ProtoMessage()    {}
func (*AddressAggregatedList_Warning) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{7, 1}
}

func (m *AddressAggregatedList_Warning) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *AddressAggregatedList_Warning) GetData() []*AddressAggregatedList_Warning_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *AddressAggregatedList_Warning) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// [Output Only] Metadata about this warning in key: value format. For
// example:
// "data": [ { "key": "scope", "value": "zones/us-east1-d" }
type AddressAggregatedList_Warning_Data struct {
	// [Output Only] A key that provides more detail on the warning being
	// returned. For example, for warnings where there are no results in a
	// list request for a particular zone, this key might be scope and the
	// key value might be the zone name. Other examples might be a key
	// indicating a deprecated resource and a suggested replacement, or a
	// warning about invalid network settings (for example, if an instance
	// attempts to perform IP forwarding but is not enabled for IP
	// forwarding).
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	// [Output Only] A warning data value corresponding to the key.
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *AddressAggregatedList_Warning_Data) Reset()         { *m = AddressAggregatedList_Warning_Data{} }
func (m *AddressAggregatedList_Warning_Data) String() string { return proto.CompactTextString(m) }
func (*AddressAggregatedList_Warning_Data) ProtoMessage()    {}
func (*AddressAggregatedList_Warning_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{7, 1, 0}
}

func (m *AddressAggregatedList_Warning_Data) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *AddressAggregatedList_Warning_Data) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

// Contains a list of addresses.
type AddressList struct {
	// [Output Only] Unique identifier for the resource; defined by the
	// server.
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// A list of Address resources.
	Items []*Address `protobuf:"bytes,2,rep,name=items" json:"items,omitempty"`
	// [Output Only] Type of resource. Always compute#addressList for lists
	// of addresses.
	Kind string `protobuf:"bytes,3,opt,name=kind" json:"kind,omitempty"`
	// [Output Only] This token allows you to get the next page of results
	// for list requests. If the number of results is larger than
	// maxResults, use the nextPageToken as a value for the query parameter
	// pageToken in the next list request. Subsequent list requests will
	// have their own nextPageToken to continue paging through the results.
	NextPageToken string `protobuf:"bytes,4,opt,name=nextPageToken" json:"nextPageToken,omitempty"`
	// [Output Only] Server-defined URL for this resource.
	SelfLink string               `protobuf:"bytes,5,opt,name=selfLink" json:"selfLink,omitempty"`
	Warning  *AddressList_Warning `protobuf:"bytes,6,opt,name=warning" json:"warning,omitempty"`
}

func (m *AddressList) Reset()                    { *m = AddressList{} }
func (m *AddressList) String() string            { return proto.CompactTextString(m) }
func (*AddressList) ProtoMessage()               {}
func (*AddressList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *AddressList) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *AddressList) GetItems() []*Address {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *AddressList) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *AddressList) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

func (m *AddressList) GetSelfLink() string {
	if m != nil {
		return m.SelfLink
	}
	return ""
}

func (m *AddressList) GetWarning() *AddressList_Warning {
	if m != nil {
		return m.Warning
	}
	return nil
}

// [Output Only] Informational warning message.
// [Output Only] Informational warning message.
type AddressList_Warning struct {
	// [Output Only] A warning code, if applicable. For example, Compute
	// Engine returns NO_RESULTS_ON_PAGE if there are no results in the
	// response.
	// Valid values:
	//     CLEANUP_FAILED
	//     DEPRECATED_RESOURCE_USED
	//     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
	//     FIELD_VALUE_OVERRIDEN
	//     INJECTED_KERNELS_DEPRECATED
	//     NEXT_HOP_ADDRESS_NOT_ASSIGNED
	//     NEXT_HOP_CANNOT_IP_FORWARD
	//     NEXT_HOP_INSTANCE_NOT_FOUND
	//     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
	//     NEXT_HOP_NOT_RUNNING
	//     NOT_CRITICAL_ERROR
	//     NO_RESULTS_ON_PAGE
	//     REQUIRED_TOS_AGREEMENT
	//     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
	//     RESOURCE_NOT_DELETED
	//     SINGLE_INSTANCE_PROPERTY_TEMPLATE
	//     UNREACHABLE
	Code string                      `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Data []*AddressList_Warning_Data `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
	// [Output Only] A human-readable description of the warning code.
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *AddressList_Warning) Reset()                    { *m = AddressList_Warning{} }
func (m *AddressList_Warning) String() string            { return proto.CompactTextString(m) }
func (*AddressList_Warning) ProtoMessage()               {}
func (*AddressList_Warning) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8, 0} }

func (m *AddressList_Warning) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *AddressList_Warning) GetData() []*AddressList_Warning_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *AddressList_Warning) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// [Output Only] Metadata about this warning in key: value format. For
// example:
// "data": [ { "key": "scope", "value": "zones/us-east1-d" }
type AddressList_Warning_Data struct {
	// [Output Only] A key that provides more detail on the warning being
	// returned. For example, for warnings where there are no results in a
	// list request for a particular zone, this key might be scope and the
	// key value might be the zone name. Other examples might be a key
	// indicating a deprecated resource and a suggested replacement, or a
	// warning about invalid network settings (for example, if an instance
	// attempts to perform IP forwarding but is not enabled for IP
	// forwarding).
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	// [Output Only] A warning data value corresponding to the key.
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *AddressList_Warning_Data) Reset()                    { *m = AddressList_Warning_Data{} }
func (m *AddressList_Warning_Data) String() string            { return proto.CompactTextString(m) }
func (*AddressList_Warning_Data) ProtoMessage()               {}
func (*AddressList_Warning_Data) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8, 0, 0} }

func (m *AddressList_Warning_Data) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *AddressList_Warning_Data) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type AddressesScopedList struct {
	// [Output Only] List of addresses contained in this scope.
	Addresses []*Address                   `protobuf:"bytes,1,rep,name=addresses" json:"addresses,omitempty"`
	Warning   *AddressesScopedList_Warning `protobuf:"bytes,2,opt,name=warning" json:"warning,omitempty"`
}

func (m *AddressesScopedList) Reset()                    { *m = AddressesScopedList{} }
func (m *AddressesScopedList) String() string            { return proto.CompactTextString(m) }
func (*AddressesScopedList) ProtoMessage()               {}
func (*AddressesScopedList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *AddressesScopedList) GetAddresses() []*Address {
	if m != nil {
		return m.Addresses
	}
	return nil
}

func (m *AddressesScopedList) GetWarning() *AddressesScopedList_Warning {
	if m != nil {
		return m.Warning
	}
	return nil
}

// [Output Only] Informational warning which replaces the list of
// addresses when the list is empty.
// [Output Only] Informational warning which replaces the list of
// addresses when the list is empty.
type AddressesScopedList_Warning struct {
	// [Output Only] A warning code, if applicable. For example, Compute
	// Engine returns NO_RESULTS_ON_PAGE if there are no results in the
	// response.
	// Valid values:
	//     CLEANUP_FAILED
	//     DEPRECATED_RESOURCE_USED
	//     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
	//     FIELD_VALUE_OVERRIDEN
	//     INJECTED_KERNELS_DEPRECATED
	//     NEXT_HOP_ADDRESS_NOT_ASSIGNED
	//     NEXT_HOP_CANNOT_IP_FORWARD
	//     NEXT_HOP_INSTANCE_NOT_FOUND
	//     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
	//     NEXT_HOP_NOT_RUNNING
	//     NOT_CRITICAL_ERROR
	//     NO_RESULTS_ON_PAGE
	//     REQUIRED_TOS_AGREEMENT
	//     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
	//     RESOURCE_NOT_DELETED
	//     SINGLE_INSTANCE_PROPERTY_TEMPLATE
	//     UNREACHABLE
	Code string                              `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Data []*AddressesScopedList_Warning_Data `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
	// [Output Only] A human-readable description of the warning code.
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *AddressesScopedList_Warning) Reset()                    { *m = AddressesScopedList_Warning{} }
func (m *AddressesScopedList_Warning) String() string            { return proto.CompactTextString(m) }
func (*AddressesScopedList_Warning) ProtoMessage()               {}
func (*AddressesScopedList_Warning) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9, 0} }

func (m *AddressesScopedList_Warning) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *AddressesScopedList_Warning) GetData() []*AddressesScopedList_Warning_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *AddressesScopedList_Warning) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// [Output Only] Metadata about this warning in key: value format. For
// example:
// "data": [ { "key": "scope", "value": "zones/us-east1-d" }
type AddressesScopedList_Warning_Data struct {
	// [Output Only] A key that provides more detail on the warning being
	// returned. For example, for warnings where there are no results in a
	// list request for a particular zone, this key might be scope and the
	// key value might be the zone name. Other examples might be a key
	// indicating a deprecated resource and a suggested replacement, or a
	// warning about invalid network settings (for example, if an instance
	// attempts to perform IP forwarding but is not enabled for IP
	// forwarding).
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	// [Output Only] A warning data value corresponding to the key.
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *AddressesScopedList_Warning_Data) Reset()         { *m = AddressesScopedList_Warning_Data{} }
func (m *AddressesScopedList_Warning_Data) String() string { return proto.CompactTextString(m) }
func (*AddressesScopedList_Warning_Data) ProtoMessage()    {}
func (*AddressesScopedList_Warning_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{9, 0, 0}
}

func (m *AddressesScopedList_Warning_Data) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *AddressesScopedList_Warning_Data) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

// An alias IP range attached to an instance's network interface.
type AliasIpRange struct {
	// The IP CIDR range represented by this alias IP range. This IP CIDR
	// range must belong to the specified subnetwork and cannot contain IP
	// addresses reserved by system or used by other network interfaces.
	// This range may be a single IP address (e.g. 10.2.3.4), a netmask
	// (e.g. /24) or a CIDR format string (e.g. 10.1.2.0/24).
	IpCidrRange string `protobuf:"bytes,1,opt,name=ipCidrRange" json:"ipCidrRange,omitempty"`
	// Optional subnetwork secondary range name specifying the secondary
	// range from which to allocate the IP CIDR range for this alias IP
	// range. If left unspecified, the primary range of the subnetwork will
	// be used.
	SubnetworkRangeName string `protobuf:"bytes,2,opt,name=subnetworkRangeName" json:"subnetworkRangeName,omitempty"`
}

func (m *AliasIpRange) Reset()                    { *m = AliasIpRange{} }
func (m *AliasIpRange) String() string            { return proto.CompactTextString(m) }
func (*AliasIpRange) ProtoMessage()               {}
func (*AliasIpRange) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *AliasIpRange) GetIpCidrRange() string {
	if m != nil {
		return m.IpCidrRange
	}
	return ""
}

func (m *AliasIpRange) GetSubnetworkRangeName() string {
	if m != nil {
		return m.SubnetworkRangeName
	}
	return ""
}

// An instance-attached disk resource.
type AttachedDisk struct {
	// Specifies whether the disk will be auto-deleted when the instance is
	// deleted (but not when the disk is detached from the instance).
	AutoDelete bool `protobuf:"varint,1,opt,name=autoDelete" json:"autoDelete,omitempty"`
	// Indicates that this is a boot disk. The virtual machine will use the
	// first partition of the disk for its root filesystem.
	Boot bool `protobuf:"varint,2,opt,name=boot" json:"boot,omitempty"`
	// Specifies a unique device name of your choice that is reflected into
	// the /dev/disk/by-id/google-* tree of a Linux operating system running
	// within the instance. This name can be used to reference the device
	// for mounting, resizing, and so on, from within the instance.
	//
	// If not specified, the server chooses a default device name to apply
	// to this disk, in the form persistent-disks-x, where x is a number
	// assigned by Google Compute Engine. This field is only applicable for
	// persistent disks.
	DeviceName string `protobuf:"bytes,3,opt,name=deviceName" json:"deviceName,omitempty"`
	// Encrypts or decrypts a disk using a customer-supplied encryption key.
	//
	// If you are creating a new disk, this field encrypts the new disk
	// using an encryption key that you provide. If you are attaching an
	// existing disk that is already encrypted, this field decrypts the disk
	// using the customer-supplied encryption key.
	//
	// If you encrypt a disk using a customer-supplied key, you must provide
	// the same key again when you attempt to use this resource at a later
	// time. For example, you must provide the key when you create a
	// snapshot or an image from the disk or when you attach the disk to a
	// virtual machine instance.
	//
	// If you do not provide an encryption key, then the disk will be
	// encrypted using an automatically generated key and you do not need to
	// provide a key to use the disk later.
	//
	// Instance templates do not store customer-supplied encryption keys, so
	// you cannot use your own keys to encrypt disks in a managed instance
	// group.
	DiskEncryptionKey *CustomerEncryptionKey `protobuf:"bytes,4,opt,name=diskEncryptionKey" json:"diskEncryptionKey,omitempty"`
	// [Output Only] A zero-based index to this disk, where 0 is reserved
	// for the boot disk. If you have many disks attached to an instance,
	// each disk would have a unique index number.
	Index int32 `protobuf:"varint,5,opt,name=index" json:"index,omitempty"`
	// [Input Only] Specifies the parameters for a new disk that will be
	// created alongside the new instance. Use initialization parameters to
	// create boot disks or local SSDs attached to the new instance.
	//
	// This property is mutually exclusive with the source property; you can
	// only define one or the other, but not both.
	InitializeParams *AttachedDiskInitializeParams `protobuf:"bytes,6,opt,name=initializeParams" json:"initializeParams,omitempty"`
	// Specifies the disk interface to use for attaching this disk, which is
	// either SCSI or NVME. The default is SCSI. Persistent disks must
	// always use SCSI and the request will fail if you attempt to attach a
	// persistent disk in any other format than SCSI. Local SSDs can use
	// either NVME or SCSI. For performance characteristics of SCSI over
	// NVMe, see Local SSD performance.
	// Valid values:
	//     NVME
	//     SCSI
	Interface string `protobuf:"bytes,7,opt,name=interface" json:"interface,omitempty"`
	// [Output Only] Type of the resource. Always compute#attachedDisk for
	// attached disks.
	Kind string `protobuf:"bytes,8,opt,name=kind" json:"kind,omitempty"`
	// [Output Only] Any valid publicly visible licenses.
	Licenses []string `protobuf:"bytes,9,rep,name=licenses" json:"licenses,omitempty"`
	// The mode in which to attach this disk, either READ_WRITE or
	// READ_ONLY. If not specified, the default is to attach the disk in
	// READ_WRITE mode.
	// Valid values:
	//     READ_ONLY
	//     READ_WRITE
	Mode string `protobuf:"bytes,10,opt,name=mode" json:"mode,omitempty"`
	// Specifies a valid partial or full URL to an existing Persistent Disk
	// resource. When creating a new instance, one of
	// initializeParams.sourceImage or disks.source is required.
	//
	// If desired, you can also attach existing non-root persistent disks
	// using this property. This field is only applicable for persistent
	// disks.
	//
	// Note that for InstanceTemplate, specify the disk name, not the URL
	// for the disk.
	Source string `protobuf:"bytes,11,opt,name=source" json:"source,omitempty"`
	// Specifies the type of the disk, either SCRATCH or PERSISTENT. If not
	// specified, the default is PERSISTENT.
	// Valid values:
	//     PERSISTENT
	//     SCRATCH
	Type string `protobuf:"bytes,12,opt,name=type" json:"type,omitempty"`
}

func (m *AttachedDisk) Reset()                    { *m = AttachedDisk{} }
func (m *AttachedDisk) String() string            { return proto.CompactTextString(m) }
func (*AttachedDisk) ProtoMessage()               {}
func (*AttachedDisk) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *AttachedDisk) GetAutoDelete() bool {
	if m != nil {
		return m.AutoDelete
	}
	return false
}

func (m *AttachedDisk) GetBoot() bool {
	if m != nil {
		return m.Boot
	}
	return false
}

func (m *AttachedDisk) GetDeviceName() string {
	if m != nil {
		return m.DeviceName
	}
	return ""
}

func (m *AttachedDisk) GetDiskEncryptionKey() *CustomerEncryptionKey {
	if m != nil {
		return m.DiskEncryptionKey
	}
	return nil
}

func (m *AttachedDisk) GetIndex() int32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *AttachedDisk) GetInitializeParams() *AttachedDiskInitializeParams {
	if m != nil {
		return m.InitializeParams
	}
	return nil
}

func (m *AttachedDisk) GetInterface() string {
	if m != nil {
		return m.Interface
	}
	return ""
}

func (m *AttachedDisk) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *AttachedDisk) GetLicenses() []string {
	if m != nil {
		return m.Licenses
	}
	return nil
}

func (m *AttachedDisk) GetMode() string {
	if m != nil {
		return m.Mode
	}
	return ""
}

func (m *AttachedDisk) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *AttachedDisk) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

// [Input Only] Specifies the parameters for a new disk that will be
// created alongside the new instance. Use initialization parameters to
// create boot disks or local SSDs attached to the new instance.
//
// This property is mutually exclusive with the source property; you can
// only define one or the other, but not both.
type AttachedDiskInitializeParams struct {
	// Specifies the disk name. If not specified, the default is to use the
	// name of the instance.
	DiskName string `protobuf:"bytes,1,opt,name=diskName" json:"diskName,omitempty"`
	// Specifies the size of the disk in base-2 GB.
	DiskSizeGb string `protobuf:"bytes,2,opt,name=diskSizeGb" json:"diskSizeGb,omitempty"`
	// [Deprecated] Storage type of the disk.
	// Valid values:
	//     HDD
	//     SSD
	DiskStorageType string `protobuf:"bytes,3,opt,name=diskStorageType" json:"diskStorageType,omitempty"`
	// Specifies the disk type to use to create the instance. If not
	// specified, the default is pd-standard, specified using the full URL.
	// For example:
	//
	// https://www.googleapis.com/compute/v1/projects/project/zones/zone/diskTypes/pd-standard
	//
	// Other values include pd-ssd and local-ssd. If you define this field,
	// you can provide either the full or partial URL. For example, the
	// following are valid values:
	// -
	// https://www.googleapis.com/compute/v1/projects/project/zones/zone/diskTypes/diskType
	// - projects/project/zones/zone/diskTypes/diskType
	// - zones/zone/diskTypes/diskType  Note that for InstanceTemplate, this
	// is the name of the disk type, not URL.
	DiskType string `protobuf:"bytes,4,opt,name=diskType" json:"diskType,omitempty"`
	// The source image to create this disk. When creating a new instance,
	// one of initializeParams.sourceImage or disks.source is required.
	//
	// To create a disk with one of the public operating system images,
	// specify the image by its family name. For example, specify
	// family/debian-8 to use the latest Debian 8 image:
	//
	// projects/debian-cloud/global/images/family/debian-8
	//
	// Alternatively, use a specific version of a public operating system
	// image:
	//
	// projects/debian-cloud/global/images/debian-8-jessie-vYYYYMMDD
	//
	// To create a disk with a private image that you created, specify the
	// image name in the following format:
	//
	// global/images/my-private-image
	//
	// You can also specify a private image by its image family, which
	// returns the latest version of the image in that family. Replace the
	// image name with family/family-name:
	//
	// global/images/family/my-private-family
	//
	// If the source image is deleted later, this field will not be set.
	SourceImage string `protobuf:"bytes,5,opt,name=sourceImage" json:"sourceImage,omitempty"`
	// The customer-supplied encryption key of the source image. Required if
	// the source image is protected by a customer-supplied encryption key.
	//
	// Instance templates do not store customer-supplied encryption keys, so
	// you cannot create disks for instances in a managed instance group if
	// the source images are encrypted with your own keys.
	SourceImageEncryptionKey *CustomerEncryptionKey `protobuf:"bytes,6,opt,name=sourceImageEncryptionKey" json:"sourceImageEncryptionKey,omitempty"`
}

func (m *AttachedDiskInitializeParams) Reset()                    { *m = AttachedDiskInitializeParams{} }
func (m *AttachedDiskInitializeParams) String() string            { return proto.CompactTextString(m) }
func (*AttachedDiskInitializeParams) ProtoMessage()               {}
func (*AttachedDiskInitializeParams) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *AttachedDiskInitializeParams) GetDiskName() string {
	if m != nil {
		return m.DiskName
	}
	return ""
}

func (m *AttachedDiskInitializeParams) GetDiskSizeGb() string {
	if m != nil {
		return m.DiskSizeGb
	}
	return ""
}

func (m *AttachedDiskInitializeParams) GetDiskStorageType() string {
	if m != nil {
		return m.DiskStorageType
	}
	return ""
}

func (m *AttachedDiskInitializeParams) GetDiskType() string {
	if m != nil {
		return m.DiskType
	}
	return ""
}

func (m *AttachedDiskInitializeParams) GetSourceImage() string {
	if m != nil {
		return m.SourceImage
	}
	return ""
}

func (m *AttachedDiskInitializeParams) GetSourceImageEncryptionKey() *CustomerEncryptionKey {
	if m != nil {
		return m.SourceImageEncryptionKey
	}
	return nil
}

// Specifies the audit configuration for a service. The configuration
// determines which permission types are logged, and what identities, if
// any, are exempted from logging. An AuditConfig must have one or more
// AuditLogConfigs.
//
// If there are AuditConfigs for both `allServices` and a specific
// service, the union of the two AuditConfigs is used for that service:
// the log_types specified in each AuditConfig are enabled, and the
// exempted_members in each AuditConfig are exempted.
//
// Example Policy with multiple AuditConfigs:
//
// { "audit_configs": [ { "service": "allServices" "audit_log_configs":
// [ { "log_type": "DATA_READ", "exempted_members": [
// "user:foo@gmail.com" ] }, { "log_type": "DATA_WRITE", }, {
// "log_type": "ADMIN_READ", } ] }, { "service":
// "fooservice.googleapis.com" "audit_log_configs": [ { "log_type":
// "DATA_READ", }, { "log_type": "DATA_WRITE", "exempted_members": [
// "user:bar@gmail.com" ] } ] } ] }
//
// For fooservice, this policy enables DATA_READ, DATA_WRITE and
// ADMIN_READ logging. It also exempts foo@gmail.com from DATA_READ
// logging, and bar@gmail.com from DATA_WRITE logging.
type AuditConfig struct {
	// The configuration for logging of each type of permission.
	AuditLogConfigs []*AuditLogConfig `protobuf:"bytes,1,rep,name=auditLogConfigs" json:"auditLogConfigs,omitempty"`
	ExemptedMembers []string          `protobuf:"bytes,2,rep,name=exemptedMembers" json:"exemptedMembers,omitempty"`
	// Specifies a service that will be enabled for audit logging. For
	// example, `storage.googleapis.com`, `cloudsql.googleapis.com`.
	// `allServices` is a special value that covers all services.
	Service string `protobuf:"bytes,3,opt,name=service" json:"service,omitempty"`
}

func (m *AuditConfig) Reset()                    { *m = AuditConfig{} }
func (m *AuditConfig) String() string            { return proto.CompactTextString(m) }
func (*AuditConfig) ProtoMessage()               {}
func (*AuditConfig) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *AuditConfig) GetAuditLogConfigs() []*AuditLogConfig {
	if m != nil {
		return m.AuditLogConfigs
	}
	return nil
}

func (m *AuditConfig) GetExemptedMembers() []string {
	if m != nil {
		return m.ExemptedMembers
	}
	return nil
}

func (m *AuditConfig) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

// Provides the configuration for logging a type of permissions.
// Example:
//
// { "audit_log_configs": [ { "log_type": "DATA_READ",
// "exempted_members": [ "user:foo@gmail.com" ] }, { "log_type":
// "DATA_WRITE", } ] }
//
// This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting
// foo@gmail.com from DATA_READ logging.
type AuditLogConfig struct {
	// Specifies the identities that do not cause logging for this type of
	// permission. Follows the same format of [Binding.members][].
	ExemptedMembers []string `protobuf:"bytes,1,rep,name=exemptedMembers" json:"exemptedMembers,omitempty"`
	// The log type that this config enables.
	// Valid values:
	//     ADMIN_READ
	//     DATA_READ
	//     DATA_WRITE
	//     LOG_TYPE_UNSPECIFIED
	LogType string `protobuf:"bytes,2,opt,name=logType" json:"logType,omitempty"`
}

func (m *AuditLogConfig) Reset()                    { *m = AuditLogConfig{} }
func (m *AuditLogConfig) String() string            { return proto.CompactTextString(m) }
func (*AuditLogConfig) ProtoMessage()               {}
func (*AuditLogConfig) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *AuditLogConfig) GetExemptedMembers() []string {
	if m != nil {
		return m.ExemptedMembers
	}
	return nil
}

func (m *AuditLogConfig) GetLogType() string {
	if m != nil {
		return m.LogType
	}
	return ""
}

// Authorization-related information used by Cloud Audit Logging.
type AuthorizationLoggingOptions struct {
	// The type of the permission that was checked.
	// Valid values:
	//     ADMIN_READ
	//     ADMIN_WRITE
	//     DATA_READ
	//     DATA_WRITE
	//     PERMISSION_TYPE_UNSPECIFIED
	PermissionType string `protobuf:"bytes,1,opt,name=permissionType" json:"permissionType,omitempty"`
}

func (m *AuthorizationLoggingOptions) Reset()                    { *m = AuthorizationLoggingOptions{} }
func (m *AuthorizationLoggingOptions) String() string            { return proto.CompactTextString(m) }
func (*AuthorizationLoggingOptions) ProtoMessage()               {}
func (*AuthorizationLoggingOptions) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *AuthorizationLoggingOptions) GetPermissionType() string {
	if m != nil {
		return m.PermissionType
	}
	return ""
}

// Represents an Autoscaler resource. Autoscalers allow you to
// automatically scale virtual machine instances in managed instance
// groups according to an autoscaling policy that you define. For more
// information, read Autoscaling Groups of Instances.
type Autoscaler struct {
	// The configuration parameters for the autoscaling algorithm. You can
	// define one or more of the policies for an autoscaler: cpuUtilization,
	// customMetricUtilizations, and loadBalancingUtilization.
	//
	// If none of these are specified, the default will be to autoscale
	// based on cpuUtilization to 0.6 or 60%.
	AutoscalingPolicy *AutoscalingPolicy `protobuf:"bytes,1,opt,name=autoscalingPolicy" json:"autoscalingPolicy,omitempty"`
	// [Output Only] Creation timestamp in RFC3339 text format.
	CreationTimestamp string `protobuf:"bytes,2,opt,name=creationTimestamp" json:"creationTimestamp,omitempty"`
	// An optional description of this resource. Provide this property when
	// you create the resource.
	Description string `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	// [Output Only] The unique identifier for the resource. This identifier
	// is defined by the server.
	Id string `protobuf:"bytes,4,opt,name=id" json:"id,omitempty"`
	// [Output Only] Type of the resource. Always compute#autoscaler for
	// autoscalers.
	Kind string `protobuf:"bytes,5,opt,name=kind" json:"kind,omitempty"`
	// Name of the resource. Provided by the client when the resource is
	// created. The name must be 1-63 characters long, and comply with
	// RFC1035. Specifically, the name must be 1-63 characters long and
	// match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means
	// the first character must be a lowercase letter, and all following
	// characters must be a dash, lowercase letter, or digit, except the
	// last character, which cannot be a dash.
	Name string `protobuf:"bytes,6,opt,name=name" json:"name,omitempty"`
	// [Output Only] URL of the region where the instance group resides (for
	// autoscalers living in regional scope).
	Region string `protobuf:"bytes,7,opt,name=region" json:"region,omitempty"`
	// [Output Only] Server-defined URL for the resource.
	SelfLink string `protobuf:"bytes,8,opt,name=selfLink" json:"selfLink,omitempty"`
	// [Output Only] The status of the autoscaler configuration.
	// Valid values:
	//     ACTIVE
	//     DELETING
	//     ERROR
	//     PENDING
	Status string `protobuf:"bytes,9,opt,name=status" json:"status,omitempty"`
	// [Output Only] Human-readable details about the current state of the
	// autoscaler. Read the documentation for Commonly returned status
	// messages for examples of status messages you might encounter.
	StatusDetails []*AutoscalerStatusDetails `protobuf:"bytes,10,rep,name=statusDetails" json:"statusDetails,omitempty"`
	// URL of the managed instance group that this autoscaler will scale.
	Target string `protobuf:"bytes,11,opt,name=target" json:"target,omitempty"`
	// [Output Only] URL of the zone where the instance group resides (for
	// autoscalers living in zonal scope).
	Zone string `protobuf:"bytes,12,opt,name=zone" json:"zone,omitempty"`
}

func (m *Autoscaler) Reset()                    { *m = Autoscaler{} }
func (m *Autoscaler) String() string            { return proto.CompactTextString(m) }
func (*Autoscaler) ProtoMessage()               {}
func (*Autoscaler) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *Autoscaler) GetAutoscalingPolicy() *AutoscalingPolicy {
	if m != nil {
		return m.AutoscalingPolicy
	}
	return nil
}

func (m *Autoscaler) GetCreationTimestamp() string {
	if m != nil {
		return m.CreationTimestamp
	}
	return ""
}

func (m *Autoscaler) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Autoscaler) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Autoscaler) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *Autoscaler) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Autoscaler) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *Autoscaler) GetSelfLink() string {
	if m != nil {
		return m.SelfLink
	}
	return ""
}

func (m *Autoscaler) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Autoscaler) GetStatusDetails() []*AutoscalerStatusDetails {
	if m != nil {
		return m.StatusDetails
	}
	return nil
}

func (m *Autoscaler) GetTarget() string {
	if m != nil {
		return m.Target
	}
	return ""
}

func (m *Autoscaler) GetZone() string {
	if m != nil {
		return m.Zone
	}
	return ""
}

type AutoscalerAggregatedList struct {
	// [Output Only] Unique identifier for the resource; defined by the
	// server.
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// A list of AutoscalersScopedList resources.
	Items map[string]*AutoscalersScopedList `protobuf:"bytes,2,rep,name=items" json:"items,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// [Output Only] Type of resource. Always
	// compute#autoscalerAggregatedList for aggregated lists of autoscalers.
	Kind string `protobuf:"bytes,3,opt,name=kind" json:"kind,omitempty"`
	// [Output Only] This token allows you to get the next page of results
	// for list requests. If the number of results is larger than
	// maxResults, use the nextPageToken as a value for the query parameter
	// pageToken in the next list request. Subsequent list requests will
	// have their own nextPageToken to continue paging through the results.
	NextPageToken string `protobuf:"bytes,4,opt,name=nextPageToken" json:"nextPageToken,omitempty"`
	// [Output Only] Server-defined URL for this resource.
	SelfLink string                            `protobuf:"bytes,5,opt,name=selfLink" json:"selfLink,omitempty"`
	Warning  *AutoscalerAggregatedList_Warning `protobuf:"bytes,6,opt,name=warning" json:"warning,omitempty"`
}

func (m *AutoscalerAggregatedList) Reset()                    { *m = AutoscalerAggregatedList{} }
func (m *AutoscalerAggregatedList) String() string            { return proto.CompactTextString(m) }
func (*AutoscalerAggregatedList) ProtoMessage()               {}
func (*AutoscalerAggregatedList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *AutoscalerAggregatedList) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *AutoscalerAggregatedList) GetItems() map[string]*AutoscalersScopedList {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *AutoscalerAggregatedList) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *AutoscalerAggregatedList) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

func (m *AutoscalerAggregatedList) GetSelfLink() string {
	if m != nil {
		return m.SelfLink
	}
	return ""
}

func (m *AutoscalerAggregatedList) GetWarning() *AutoscalerAggregatedList_Warning {
	if m != nil {
		return m.Warning
	}
	return nil
}

// [Output Only] Informational warning message.
// [Output Only] Informational warning message.
type AutoscalerAggregatedList_Warning struct {
	// [Output Only] A warning code, if applicable. For example, Compute
	// Engine returns NO_RESULTS_ON_PAGE if there are no results in the
	// response.
	// Valid values:
	//     CLEANUP_FAILED
	//     DEPRECATED_RESOURCE_USED
	//     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
	//     FIELD_VALUE_OVERRIDEN
	//     INJECTED_KERNELS_DEPRECATED
	//     NEXT_HOP_ADDRESS_NOT_ASSIGNED
	//     NEXT_HOP_CANNOT_IP_FORWARD
	//     NEXT_HOP_INSTANCE_NOT_FOUND
	//     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
	//     NEXT_HOP_NOT_RUNNING
	//     NOT_CRITICAL_ERROR
	//     NO_RESULTS_ON_PAGE
	//     REQUIRED_TOS_AGREEMENT
	//     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
	//     RESOURCE_NOT_DELETED
	//     SINGLE_INSTANCE_PROPERTY_TEMPLATE
	//     UNREACHABLE
	Code string                                   `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Data []*AutoscalerAggregatedList_Warning_Data `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
	// [Output Only] A human-readable description of the warning code.
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *AutoscalerAggregatedList_Warning) Reset()         { *m = AutoscalerAggregatedList_Warning{} }
func (m *AutoscalerAggregatedList_Warning) String() string { return proto.CompactTextString(m) }
func (*AutoscalerAggregatedList_Warning) ProtoMessage()    {}
func (*AutoscalerAggregatedList_Warning) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{17, 1}
}

func (m *AutoscalerAggregatedList_Warning) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *AutoscalerAggregatedList_Warning) GetData() []*AutoscalerAggregatedList_Warning_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *AutoscalerAggregatedList_Warning) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// [Output Only] Metadata about this warning in key: value format. For
// example:
// "data": [ { "key": "scope", "value": "zones/us-east1-d" }
type AutoscalerAggregatedList_Warning_Data struct {
	// [Output Only] A key that provides more detail on the warning being
	// returned. For example, for warnings where there are no results in a
	// list request for a particular zone, this key might be scope and the
	// key value might be the zone name. Other examples might be a key
	// indicating a deprecated resource and a suggested replacement, or a
	// warning about invalid network settings (for example, if an instance
	// attempts to perform IP forwarding but is not enabled for IP
	// forwarding).
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	// [Output Only] A warning data value corresponding to the key.
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *AutoscalerAggregatedList_Warning_Data) Reset()         { *m = AutoscalerAggregatedList_Warning_Data{} }
func (m *AutoscalerAggregatedList_Warning_Data) String() string { return proto.CompactTextString(m) }
func (*AutoscalerAggregatedList_Warning_Data) ProtoMessage()    {}
func (*AutoscalerAggregatedList_Warning_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{17, 1, 0}
}

func (m *AutoscalerAggregatedList_Warning_Data) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *AutoscalerAggregatedList_Warning_Data) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

// Contains a list of Autoscaler resources.
type AutoscalerList struct {
	// [Output Only] Unique identifier for the resource; defined by the
	// server.
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// A list of Autoscaler resources.
	Items []*Autoscaler `protobuf:"bytes,2,rep,name=items" json:"items,omitempty"`
	// [Output Only] Type of resource. Always compute#autoscalerList for
	// lists of autoscalers.
	Kind string `protobuf:"bytes,3,opt,name=kind" json:"kind,omitempty"`
	// [Output Only] This token allows you to get the next page of results
	// for list requests. If the number of results is larger than
	// maxResults, use the nextPageToken as a value for the query parameter
	// pageToken in the next list request. Subsequent list requests will
	// have their own nextPageToken to continue paging through the results.
	NextPageToken string `protobuf:"bytes,4,opt,name=nextPageToken" json:"nextPageToken,omitempty"`
	// [Output Only] Server-defined URL for this resource.
	SelfLink string                  `protobuf:"bytes,5,opt,name=selfLink" json:"selfLink,omitempty"`
	Warning  *AutoscalerList_Warning `protobuf:"bytes,6,opt,name=warning" json:"warning,omitempty"`
}

func (m *AutoscalerList) Reset()                    { *m = AutoscalerList{} }
func (m *AutoscalerList) String() string            { return proto.CompactTextString(m) }
func (*AutoscalerList) ProtoMessage()               {}
func (*AutoscalerList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *AutoscalerList) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *AutoscalerList) GetItems() []*Autoscaler {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *AutoscalerList) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *AutoscalerList) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

func (m *AutoscalerList) GetSelfLink() string {
	if m != nil {
		return m.SelfLink
	}
	return ""
}

func (m *AutoscalerList) GetWarning() *AutoscalerList_Warning {
	if m != nil {
		return m.Warning
	}
	return nil
}

// [Output Only] Informational warning message.
// [Output Only] Informational warning message.
type AutoscalerList_Warning struct {
	// [Output Only] A warning code, if applicable. For example, Compute
	// Engine returns NO_RESULTS_ON_PAGE if there are no results in the
	// response.
	// Valid values:
	//     CLEANUP_FAILED
	//     DEPRECATED_RESOURCE_USED
	//     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
	//     FIELD_VALUE_OVERRIDEN
	//     INJECTED_KERNELS_DEPRECATED
	//     NEXT_HOP_ADDRESS_NOT_ASSIGNED
	//     NEXT_HOP_CANNOT_IP_FORWARD
	//     NEXT_HOP_INSTANCE_NOT_FOUND
	//     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
	//     NEXT_HOP_NOT_RUNNING
	//     NOT_CRITICAL_ERROR
	//     NO_RESULTS_ON_PAGE
	//     REQUIRED_TOS_AGREEMENT
	//     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
	//     RESOURCE_NOT_DELETED
	//     SINGLE_INSTANCE_PROPERTY_TEMPLATE
	//     UNREACHABLE
	Code string                         `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Data []*AutoscalerList_Warning_Data `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
	// [Output Only] A human-readable description of the warning code.
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *AutoscalerList_Warning) Reset()                    { *m = AutoscalerList_Warning{} }
func (m *AutoscalerList_Warning) String() string            { return proto.CompactTextString(m) }
func (*AutoscalerList_Warning) ProtoMessage()               {}
func (*AutoscalerList_Warning) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18, 0} }

func (m *AutoscalerList_Warning) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *AutoscalerList_Warning) GetData() []*AutoscalerList_Warning_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *AutoscalerList_Warning) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// [Output Only] Metadata about this warning in key: value format. For
// example:
// "data": [ { "key": "scope", "value": "zones/us-east1-d" }
type AutoscalerList_Warning_Data struct {
	// [Output Only] A key that provides more detail on the warning being
	// returned. For example, for warnings where there are no results in a
	// list request for a particular zone, this key might be scope and the
	// key value might be the zone name. Other examples might be a key
	// indicating a deprecated resource and a suggested replacement, or a
	// warning about invalid network settings (for example, if an instance
	// attempts to perform IP forwarding but is not enabled for IP
	// forwarding).
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	// [Output Only] A warning data value corresponding to the key.
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *AutoscalerList_Warning_Data) Reset()         { *m = AutoscalerList_Warning_Data{} }
func (m *AutoscalerList_Warning_Data) String() string { return proto.CompactTextString(m) }
func (*AutoscalerList_Warning_Data) ProtoMessage()    {}
func (*AutoscalerList_Warning_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{18, 0, 0}
}

func (m *AutoscalerList_Warning_Data) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *AutoscalerList_Warning_Data) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type AutoscalerStatusDetails struct {
	// The status message.
	Message string `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
	// The type of error returned.
	// Valid values:
	//     ALL_INSTANCES_UNHEALTHY
	//     BACKEND_SERVICE_DOES_NOT_EXIST
	//     CAPPED_AT_MAX_NUM_REPLICAS
	//     CUSTOM_METRIC_DATA_POINTS_TOO_SPARSE
	//     CUSTOM_METRIC_INVALID
	//     MIN_EQUALS_MAX
	//     MISSING_CUSTOM_METRIC_DATA_POINTS
	//     MISSING_LOAD_BALANCING_DATA_POINTS
	//     MORE_THAN_ONE_BACKEND_SERVICE
	//     NOT_ENOUGH_QUOTA_AVAILABLE
	//     REGION_RESOURCE_STOCKOUT
	//     SCALING_TARGET_DOES_NOT_EXIST
	//     UNKNOWN
	//     UNSUPPORTED_MAX_RATE_LOAD_BALANCING_CONFIGURATION
	//     ZONE_RESOURCE_STOCKOUT
	Type string `protobuf:"bytes,2,opt,name=type" json:"type,omitempty"`
}

func (m *AutoscalerStatusDetails) Reset()                    { *m = AutoscalerStatusDetails{} }
func (m *AutoscalerStatusDetails) String() string            { return proto.CompactTextString(m) }
func (*AutoscalerStatusDetails) ProtoMessage()               {}
func (*AutoscalerStatusDetails) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *AutoscalerStatusDetails) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *AutoscalerStatusDetails) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

type AutoscalersScopedList struct {
	// [Output Only] List of autoscalers contained in this scope.
	Autoscalers []*Autoscaler                  `protobuf:"bytes,1,rep,name=autoscalers" json:"autoscalers,omitempty"`
	Warning     *AutoscalersScopedList_Warning `protobuf:"bytes,2,opt,name=warning" json:"warning,omitempty"`
}

func (m *AutoscalersScopedList) Reset()                    { *m = AutoscalersScopedList{} }
func (m *AutoscalersScopedList) String() string            { return proto.CompactTextString(m) }
func (*AutoscalersScopedList) ProtoMessage()               {}
func (*AutoscalersScopedList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *AutoscalersScopedList) GetAutoscalers() []*Autoscaler {
	if m != nil {
		return m.Autoscalers
	}
	return nil
}

func (m *AutoscalersScopedList) GetWarning() *AutoscalersScopedList_Warning {
	if m != nil {
		return m.Warning
	}
	return nil
}

// [Output Only] Informational warning which replaces the list of
// autoscalers when the list is empty.
// [Output Only] Informational warning which replaces the list of
// autoscalers when the list is empty.
type AutoscalersScopedList_Warning struct {
	// [Output Only] A warning code, if applicable. For example, Compute
	// Engine returns NO_RESULTS_ON_PAGE if there are no results in the
	// response.
	// Valid values:
	//     CLEANUP_FAILED
	//     DEPRECATED_RESOURCE_USED
	//     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
	//     FIELD_VALUE_OVERRIDEN
	//     INJECTED_KERNELS_DEPRECATED
	//     NEXT_HOP_ADDRESS_NOT_ASSIGNED
	//     NEXT_HOP_CANNOT_IP_FORWARD
	//     NEXT_HOP_INSTANCE_NOT_FOUND
	//     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
	//     NEXT_HOP_NOT_RUNNING
	//     NOT_CRITICAL_ERROR
	//     NO_RESULTS_ON_PAGE
	//     REQUIRED_TOS_AGREEMENT
	//     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
	//     RESOURCE_NOT_DELETED
	//     SINGLE_INSTANCE_PROPERTY_TEMPLATE
	//     UNREACHABLE
	Code string                                `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Data []*AutoscalersScopedList_Warning_Data `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
	// [Output Only] A human-readable description of the warning code.
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *AutoscalersScopedList_Warning) Reset()         { *m = AutoscalersScopedList_Warning{} }
func (m *AutoscalersScopedList_Warning) String() string { return proto.CompactTextString(m) }
func (*AutoscalersScopedList_Warning) ProtoMessage()    {}
func (*AutoscalersScopedList_Warning) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{20, 0}
}

func (m *AutoscalersScopedList_Warning) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *AutoscalersScopedList_Warning) GetData() []*AutoscalersScopedList_Warning_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *AutoscalersScopedList_Warning) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// [Output Only] Metadata about this warning in key: value format. For
// example:
// "data": [ { "key": "scope", "value": "zones/us-east1-d" }
type AutoscalersScopedList_Warning_Data struct {
	// [Output Only] A key that provides more detail on the warning being
	// returned. For example, for warnings where there are no results in a
	// list request for a particular zone, this key might be scope and the
	// key value might be the zone name. Other examples might be a key
	// indicating a deprecated resource and a suggested replacement, or a
	// warning about invalid network settings (for example, if an instance
	// attempts to perform IP forwarding but is not enabled for IP
	// forwarding).
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	// [Output Only] A warning data value corresponding to the key.
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *AutoscalersScopedList_Warning_Data) Reset()         { *m = AutoscalersScopedList_Warning_Data{} }
func (m *AutoscalersScopedList_Warning_Data) String() string { return proto.CompactTextString(m) }
func (*AutoscalersScopedList_Warning_Data) ProtoMessage()    {}
func (*AutoscalersScopedList_Warning_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{20, 0, 0}
}

func (m *AutoscalersScopedList_Warning_Data) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *AutoscalersScopedList_Warning_Data) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

// Cloud Autoscaler policy.
type AutoscalingPolicy struct {
	// The number of seconds that the autoscaler should wait before it
	// starts collecting information from a new instance. This prevents the
	// autoscaler from collecting information when the instance is
	// initializing, during which the collected usage would not be reliable.
	// The default time autoscaler waits is 60 seconds.
	//
	// Virtual machine initialization times might vary because of numerous
	// factors. We recommend that you test how long an instance may take to
	// initialize. To do this, create an instance and time the startup
	// process.
	CoolDownPeriodSec int32 `protobuf:"varint,1,opt,name=coolDownPeriodSec" json:"coolDownPeriodSec,omitempty"`
	// Defines the CPU utilization policy that allows the autoscaler to
	// scale based on the average CPU utilization of a managed instance
	// group.
	CpuUtilization *AutoscalingPolicyCpuUtilization `protobuf:"bytes,2,opt,name=cpuUtilization" json:"cpuUtilization,omitempty"`
	// Configuration parameters of autoscaling based on a custom metric.
	CustomMetricUtilizations []*AutoscalingPolicyCustomMetricUtilization `protobuf:"bytes,3,rep,name=customMetricUtilizations" json:"customMetricUtilizations,omitempty"`
	// Configuration parameters of autoscaling based on load balancer.
	LoadBalancingUtilization *AutoscalingPolicyLoadBalancingUtilization `protobuf:"bytes,4,opt,name=loadBalancingUtilization" json:"loadBalancingUtilization,omitempty"`
	// The maximum number of instances that the autoscaler can scale up to.
	// This is required when creating or updating an autoscaler. The maximum
	// number of replicas should not be lower than minimal number of
	// replicas.
	MaxNumReplicas int32 `protobuf:"varint,5,opt,name=maxNumReplicas" json:"maxNumReplicas,omitempty"`
	// The minimum number of replicas that the autoscaler can scale down to.
	// This cannot be less than 0. If not provided, autoscaler will choose a
	// default value depending on maximum number of instances allowed.
	MinNumReplicas int32 `protobuf:"varint,6,opt,name=minNumReplicas" json:"minNumReplicas,omitempty"`
}

func (m *AutoscalingPolicy) Reset()                    { *m = AutoscalingPolicy{} }
func (m *AutoscalingPolicy) String() string            { return proto.CompactTextString(m) }
func (*AutoscalingPolicy) ProtoMessage()               {}
func (*AutoscalingPolicy) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *AutoscalingPolicy) GetCoolDownPeriodSec() int32 {
	if m != nil {
		return m.CoolDownPeriodSec
	}
	return 0
}

func (m *AutoscalingPolicy) GetCpuUtilization() *AutoscalingPolicyCpuUtilization {
	if m != nil {
		return m.CpuUtilization
	}
	return nil
}

func (m *AutoscalingPolicy) GetCustomMetricUtilizations() []*AutoscalingPolicyCustomMetricUtilization {
	if m != nil {
		return m.CustomMetricUtilizations
	}
	return nil
}

func (m *AutoscalingPolicy) GetLoadBalancingUtilization() *AutoscalingPolicyLoadBalancingUtilization {
	if m != nil {
		return m.LoadBalancingUtilization
	}
	return nil
}

func (m *AutoscalingPolicy) GetMaxNumReplicas() int32 {
	if m != nil {
		return m.MaxNumReplicas
	}
	return 0
}

func (m *AutoscalingPolicy) GetMinNumReplicas() int32 {
	if m != nil {
		return m.MinNumReplicas
	}
	return 0
}

// CPU utilization policy.
type AutoscalingPolicyCpuUtilization struct {
	// The target CPU utilization that the autoscaler should maintain. Must
	// be a float value in the range (0, 1]. If not specified, the default
	// is 0.6.
	//
	// If the CPU level is below the target utilization, the autoscaler
	// scales down the number of instances until it reaches the minimum
	// number of instances you specified or until the average CPU of your
	// instances reaches the target utilization.
	//
	// If the average CPU is above the target utilization, the autoscaler
	// scales up until it reaches the maximum number of instances you
	// specified or until the average utilization reaches the target
	// utilization.
	UtilizationTarget float64 `protobuf:"fixed64,1,opt,name=utilizationTarget" json:"utilizationTarget,omitempty"`
}

func (m *AutoscalingPolicyCpuUtilization) Reset()         { *m = AutoscalingPolicyCpuUtilization{} }
func (m *AutoscalingPolicyCpuUtilization) String() string { return proto.CompactTextString(m) }
func (*AutoscalingPolicyCpuUtilization) ProtoMessage()    {}
func (*AutoscalingPolicyCpuUtilization) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{22}
}

func (m *AutoscalingPolicyCpuUtilization) GetUtilizationTarget() float64 {
	if m != nil {
		return m.UtilizationTarget
	}
	return 0
}

// Custom utilization metric policy.
type AutoscalingPolicyCustomMetricUtilization struct {
	// A filter string, compatible with a Stackdriver Monitoring filter
	// string for TimeSeries.list API call. This filter is used to select a
	// specific TimeSeries for the purpose of autoscaling and to determine
	// whether the metric is exporting per-instance or global data.
	//
	// For the filter to be valid for autoscaling purposes, the following
	// rules apply:
	// - You can only use the AND operator for joining selectors.
	// - You can only use direct equality comparison operator (=) without
	// any functions for each selector.
	// - You can specify the metric in both the filter string and in the
	// metric field. However, if specified in both places, the metric must
	// be identical.
	// - The monitored resource type determines what kind of values are
	// expected for the metric. If it is a gce_instance, the autoscaler
	// expects the metric to include a separate TimeSeries for each instance
	// in a group. In such a case, you cannot filter on resource labels.
	// If the resource type is any other value, the autoscaler expects this
	// metric to contain values that apply to the entire autoscaled instance
	// group and resource label filtering can be performed to point
	// autoscaler at the correct TimeSeries to scale upon. This is / called
	// a global metric for the purpose of autoscaling.
	//
	// If not specified, the type defaults to gce_instance.
	//
	// You should provide a filter that is selective enough to pick just one
	// TimeSeries for the autoscaled group or for each of the instances (if
	// you are using gce_instance resource type). If multiple TimeSeries are
	// returned upon the query execution, the autoscaler will sum their
	// respective values to obtain its scaling value.
	Filter string `protobuf:"bytes,1,opt,name=filter" json:"filter,omitempty"`
	// The identifier (type) of the Stackdriver Monitoring metric. The
	// metric cannot have negative values and should be a utilization
	// metric, which means that the number of virtual machines handling
	// requests should increase or decrease proportionally to the metric.
	//
	// The metric must have a value type of INT64 or DOUBLE.
	Metric string `protobuf:"bytes,2,opt,name=metric" json:"metric,omitempty"`
	// If scaling is based on a global metric value that represents the
	// total amount of work to be done or resource usage, set this value to
	// an amount assigned for a single instance of the scaled group.
	// Autoscaler will keep the number of instances proportional to the
	// value of this metric, the metric itself should not change value due
	// to group resizing.
	//
	// A good metric to use with the target is for example
	// pubsub.googleapis.com/subscription/num_undelivered_messages or a
	// custom metric exporting the total number of requests coming to your
	// instances.
	//
	// A bad example would be a metric exporting an average or median
	// latency, since this value can't include a chunk assignable to a
	// single instance, it could be better used with utilization_target
	// instead.
	SingleInstanceAssignment float64 `protobuf:"fixed64,3,opt,name=singleInstanceAssignment" json:"singleInstanceAssignment,omitempty"`
	// The target value of the metric that autoscaler should maintain. This
	// must be a positive value.
	//
	// For example, a good metric to use as a utilization_target is
	// compute.googleapis.com/instance/network/received_bytes_count. The
	// autoscaler will work to keep this value constant for each of the
	// instances.
	UtilizationTarget float64 `protobuf:"fixed64,4,opt,name=utilizationTarget" json:"utilizationTarget,omitempty"`
	// Defines how target utilization value is expressed for a Stackdriver
	// Monitoring metric. Either GAUGE, DELTA_PER_SECOND, or
	// DELTA_PER_MINUTE. If not specified, the default is GAUGE.
	// Valid values:
	//     DELTA_PER_MINUTE
	//     DELTA_PER_SECOND
	//     GAUGE
	UtilizationTargetType string `protobuf:"bytes,5,opt,name=utilizationTargetType" json:"utilizationTargetType,omitempty"`
}

func (m *AutoscalingPolicyCustomMetricUtilization) Reset() {
	*m = AutoscalingPolicyCustomMetricUtilization{}
}
func (m *AutoscalingPolicyCustomMetricUtilization) String() string { return proto.CompactTextString(m) }
func (*AutoscalingPolicyCustomMetricUtilization) ProtoMessage()    {}
func (*AutoscalingPolicyCustomMetricUtilization) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{23}
}

func (m *AutoscalingPolicyCustomMetricUtilization) GetFilter() string {
	if m != nil {
		return m.Filter
	}
	return ""
}

func (m *AutoscalingPolicyCustomMetricUtilization) GetMetric() string {
	if m != nil {
		return m.Metric
	}
	return ""
}

func (m *AutoscalingPolicyCustomMetricUtilization) GetSingleInstanceAssignment() float64 {
	if m != nil {
		return m.SingleInstanceAssignment
	}
	return 0
}

func (m *AutoscalingPolicyCustomMetricUtilization) GetUtilizationTarget() float64 {
	if m != nil {
		return m.UtilizationTarget
	}
	return 0
}

func (m *AutoscalingPolicyCustomMetricUtilization) GetUtilizationTargetType() string {
	if m != nil {
		return m.UtilizationTargetType
	}
	return ""
}

// Configuration parameters of autoscaling based on load balancing.
type AutoscalingPolicyLoadBalancingUtilization struct {
	// Fraction of backend capacity utilization (set in HTTP(s) load
	// balancing configuration) that autoscaler should maintain. Must be a
	// positive float value. If not defined, the default is 0.8.
	UtilizationTarget float64 `protobuf:"fixed64,1,opt,name=utilizationTarget" json:"utilizationTarget,omitempty"`
}

func (m *AutoscalingPolicyLoadBalancingUtilization) Reset() {
	*m = AutoscalingPolicyLoadBalancingUtilization{}
}
func (m *AutoscalingPolicyLoadBalancingUtilization) String() string { return proto.CompactTextString(m) }
func (*AutoscalingPolicyLoadBalancingUtilization) ProtoMessage()    {}
func (*AutoscalingPolicyLoadBalancingUtilization) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{24}
}

func (m *AutoscalingPolicyLoadBalancingUtilization) GetUtilizationTarget() float64 {
	if m != nil {
		return m.UtilizationTarget
	}
	return 0
}

// Message containing information of one individual backend.
type Backend struct {
	// Specifies the balancing mode for this backend. For global HTTP(S) or
	// TCP/SSL load balancing, the default is UTILIZATION. Valid values are
	// UTILIZATION, RATE (for HTTP(S)) and CONNECTION (for TCP/SSL).
	//
	// For Internal Load Balancing, the default and only supported mode is
	// CONNECTION.
	// Valid values:
	//     CONNECTION
	//     RATE
	//     UTILIZATION
	BalancingMode string `protobuf:"bytes,1,opt,name=balancingMode" json:"balancingMode,omitempty"`
	// A multiplier applied to the group's maximum servicing capacity (based
	// on UTILIZATION, RATE or CONNECTION). Default value is 1, which means
	// the group will serve up to 100% of its configured capacity (depending
	// on balancingMode). A setting of 0 means the group is completely
	// drained, offering 0% of its available Capacity. Valid range is
	// [0.0,1.0].
	//
	// This cannot be used for internal load balancing.
	CapacityScaler float32 `protobuf:"fixed32,2,opt,name=capacityScaler" json:"capacityScaler,omitempty"`
	// An optional description of this resource. Provide this property when
	// you create the resource.
	Description string `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	// The fully-qualified URL of a Instance Group resource. This instance
	// group defines the list of instances that serve traffic. Member
	// virtual machine instances from each instance group must live in the
	// same zone as the instance group itself. No two backends in a backend
	// service are allowed to use same Instance Group resource.
	//
	// Note that you must specify an Instance Group resource using the
	// fully-qualified URL, rather than a partial URL.
	//
	// When the BackendService has load balancing scheme INTERNAL, the
	// instance group must be within the same region as the BackendService.
	Group string `protobuf:"bytes,4,opt,name=group" json:"group,omitempty"`
	// The max number of simultaneous connections for the group. Can be used
	// with either CONNECTION or UTILIZATION balancing modes. For CONNECTION
	// mode, either maxConnections or maxConnectionsPerInstance must be set.
	//
	// This cannot be used for internal load balancing.
	MaxConnections int32 `protobuf:"varint,5,opt,name=maxConnections" json:"maxConnections,omitempty"`
	// The max number of simultaneous connections that a single backend
	// instance can handle. This is used to calculate the capacity of the
	// group. Can be used in either CONNECTION or UTILIZATION balancing
	// modes. For CONNECTION mode, either maxConnections or
	// maxConnectionsPerInstance must be set.
	//
	// This cannot be used for internal load balancing.
	MaxConnectionsPerInstance int32 `protobuf:"varint,6,opt,name=maxConnectionsPerInstance" json:"maxConnectionsPerInstance,omitempty"`
	// The max requests per second (RPS) of the group. Can be used with
	// either RATE or UTILIZATION balancing modes, but required if RATE
	// mode. For RATE mode, either maxRate or maxRatePerInstance must be
	// set.
	//
	// This cannot be used for internal load balancing.
	MaxRate int32 `protobuf:"varint,7,opt,name=maxRate" json:"maxRate,omitempty"`
	// The max requests per second (RPS) that a single backend instance can
	// handle. This is used to calculate the capacity of the group. Can be
	// used in either balancing mode. For RATE mode, either maxRate or
	// maxRatePerInstance must be set.
	//
	// This cannot be used for internal load balancing.
	MaxRatePerInstance float32 `protobuf:"fixed32,8,opt,name=maxRatePerInstance" json:"maxRatePerInstance,omitempty"`
	// Used when balancingMode is UTILIZATION. This ratio defines the CPU
	// utilization target for the group. The default is 0.8. Valid range is
	// [0.0, 1.0].
	//
	// This cannot be used for internal load balancing.
	MaxUtilization float32 `protobuf:"fixed32,9,opt,name=maxUtilization" json:"maxUtilization,omitempty"`
}

func (m *Backend) Reset()                    { *m = Backend{} }
func (m *Backend) String() string            { return proto.CompactTextString(m) }
func (*Backend) ProtoMessage()               {}
func (*Backend) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{25} }

func (m *Backend) GetBalancingMode() string {
	if m != nil {
		return m.BalancingMode
	}
	return ""
}

func (m *Backend) GetCapacityScaler() float32 {
	if m != nil {
		return m.CapacityScaler
	}
	return 0
}

func (m *Backend) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Backend) GetGroup() string {
	if m != nil {
		return m.Group
	}
	return ""
}

func (m *Backend) GetMaxConnections() int32 {
	if m != nil {
		return m.MaxConnections
	}
	return 0
}

func (m *Backend) GetMaxConnectionsPerInstance() int32 {
	if m != nil {
		return m.MaxConnectionsPerInstance
	}
	return 0
}

func (m *Backend) GetMaxRate() int32 {
	if m != nil {
		return m.MaxRate
	}
	return 0
}

func (m *Backend) GetMaxRatePerInstance() float32 {
	if m != nil {
		return m.MaxRatePerInstance
	}
	return 0
}

func (m *Backend) GetMaxUtilization() float32 {
	if m != nil {
		return m.MaxUtilization
	}
	return 0
}

// A BackendBucket resource. This resource defines a Cloud Storage
// bucket.
type BackendBucket struct {
	// Cloud Storage bucket name.
	BucketName string `protobuf:"bytes,1,opt,name=bucketName" json:"bucketName,omitempty"`
	// [Output Only] Creation timestamp in RFC3339 text format.
	CreationTimestamp string `protobuf:"bytes,2,opt,name=creationTimestamp" json:"creationTimestamp,omitempty"`
	// An optional textual description of the resource; provided by the
	// client when the resource is created.
	Description string `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	// If true, enable Cloud CDN for this BackendBucket.
	EnableCdn bool `protobuf:"varint,4,opt,name=enableCdn" json:"enableCdn,omitempty"`
	// [Output Only] Unique identifier for the resource; defined by the
	// server.
	Id string `protobuf:"bytes,5,opt,name=id" json:"id,omitempty"`
	// Type of the resource.
	Kind string `protobuf:"bytes,6,opt,name=kind" json:"kind,omitempty"`
	// Name of the resource. Provided by the client when the resource is
	// created. The name must be 1-63 characters long, and comply with
	// RFC1035. Specifically, the name must be 1-63 characters long and
	// match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means
	// the first character must be a lowercase letter, and all following
	// characters must be a dash, lowercase letter, or digit, except the
	// last character, which cannot be a dash.
	Name string `protobuf:"bytes,7,opt,name=name" json:"name,omitempty"`
	// [Output Only] Server-defined URL for the resource.
	SelfLink string `protobuf:"bytes,8,opt,name=selfLink" json:"selfLink,omitempty"`
}

func (m *BackendBucket) Reset()                    { *m = BackendBucket{} }
func (m *BackendBucket) String() string            { return proto.CompactTextString(m) }
func (*BackendBucket) ProtoMessage()               {}
func (*BackendBucket) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{26} }

func (m *BackendBucket) GetBucketName() string {
	if m != nil {
		return m.BucketName
	}
	return ""
}

func (m *BackendBucket) GetCreationTimestamp() string {
	if m != nil {
		return m.CreationTimestamp
	}
	return ""
}

func (m *BackendBucket) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *BackendBucket) GetEnableCdn() bool {
	if m != nil {
		return m.EnableCdn
	}
	return false
}

func (m *BackendBucket) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *BackendBucket) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *BackendBucket) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *BackendBucket) GetSelfLink() string {
	if m != nil {
		return m.SelfLink
	}
	return ""
}

// Contains a list of BackendBucket resources.
type BackendBucketList struct {
	// [Output Only] Unique identifier for the resource; defined by the
	// server.
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// A list of BackendBucket resources.
	Items []*BackendBucket `protobuf:"bytes,2,rep,name=items" json:"items,omitempty"`
	// Type of resource.
	Kind string `protobuf:"bytes,3,opt,name=kind" json:"kind,omitempty"`
	// [Output Only] This token allows you to get the next page of results
	// for list requests. If the number of results is larger than
	// maxResults, use the nextPageToken as a value for the query parameter
	// pageToken in the next list request. Subsequent list requests will
	// have their own nextPageToken to continue paging through the results.
	NextPageToken string `protobuf:"bytes,4,opt,name=nextPageToken" json:"nextPageToken,omitempty"`
	// [Output Only] Server-defined URL for this resource.
	SelfLink string                     `protobuf:"bytes,5,opt,name=selfLink" json:"selfLink,omitempty"`
	Warning  *BackendBucketList_Warning `protobuf:"bytes,6,opt,name=warning" json:"warning,omitempty"`
}

func (m *BackendBucketList) Reset()                    { *m = BackendBucketList{} }
func (m *BackendBucketList) String() string            { return proto.CompactTextString(m) }
func (*BackendBucketList) ProtoMessage()               {}
func (*BackendBucketList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{27} }

func (m *BackendBucketList) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *BackendBucketList) GetItems() []*BackendBucket {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *BackendBucketList) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *BackendBucketList) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

func (m *BackendBucketList) GetSelfLink() string {
	if m != nil {
		return m.SelfLink
	}
	return ""
}

func (m *BackendBucketList) GetWarning() *BackendBucketList_Warning {
	if m != nil {
		return m.Warning
	}
	return nil
}

// [Output Only] Informational warning message.
// [Output Only] Informational warning message.
type BackendBucketList_Warning struct {
	// [Output Only] A warning code, if applicable. For example, Compute
	// Engine returns NO_RESULTS_ON_PAGE if there are no results in the
	// response.
	// Valid values:
	//     CLEANUP_FAILED
	//     DEPRECATED_RESOURCE_USED
	//     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
	//     FIELD_VALUE_OVERRIDEN
	//     INJECTED_KERNELS_DEPRECATED
	//     NEXT_HOP_ADDRESS_NOT_ASSIGNED
	//     NEXT_HOP_CANNOT_IP_FORWARD
	//     NEXT_HOP_INSTANCE_NOT_FOUND
	//     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
	//     NEXT_HOP_NOT_RUNNING
	//     NOT_CRITICAL_ERROR
	//     NO_RESULTS_ON_PAGE
	//     REQUIRED_TOS_AGREEMENT
	//     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
	//     RESOURCE_NOT_DELETED
	//     SINGLE_INSTANCE_PROPERTY_TEMPLATE
	//     UNREACHABLE
	Code string                            `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Data []*BackendBucketList_Warning_Data `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
	// [Output Only] A human-readable description of the warning code.
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *BackendBucketList_Warning) Reset()                    { *m = BackendBucketList_Warning{} }
func (m *BackendBucketList_Warning) String() string            { return proto.CompactTextString(m) }
func (*BackendBucketList_Warning) ProtoMessage()               {}
func (*BackendBucketList_Warning) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{27, 0} }

func (m *BackendBucketList_Warning) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *BackendBucketList_Warning) GetData() []*BackendBucketList_Warning_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *BackendBucketList_Warning) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// [Output Only] Metadata about this warning in key: value format. For
// example:
// "data": [ { "key": "scope", "value": "zones/us-east1-d" }
type BackendBucketList_Warning_Data struct {
	// [Output Only] A key that provides more detail on the warning being
	// returned. For example, for warnings where there are no results in a
	// list request for a particular zone, this key might be scope and the
	// key value might be the zone name. Other examples might be a key
	// indicating a deprecated resource and a suggested replacement, or a
	// warning about invalid network settings (for example, if an instance
	// attempts to perform IP forwarding but is not enabled for IP
	// forwarding).
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	// [Output Only] A warning data value corresponding to the key.
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *BackendBucketList_Warning_Data) Reset()         { *m = BackendBucketList_Warning_Data{} }
func (m *BackendBucketList_Warning_Data) String() string { return proto.CompactTextString(m) }
func (*BackendBucketList_Warning_Data) ProtoMessage()    {}
func (*BackendBucketList_Warning_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{27, 0, 0}
}

func (m *BackendBucketList_Warning_Data) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *BackendBucketList_Warning_Data) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

// A BackendService resource. This resource defines a group of backend
// virtual machines and their serving capacity.
type BackendService struct {
	// Lifetime of cookies in seconds if session_affinity is
	// GENERATED_COOKIE. If set to 0, the cookie is non-persistent and lasts
	// only until the end of the browser session (or equivalent). The
	// maximum allowed value for TTL is one day.
	//
	// When the load balancing scheme is INTERNAL, this field is not used.
	AffinityCookieTtlSec int32 `protobuf:"varint,1,opt,name=affinityCookieTtlSec" json:"affinityCookieTtlSec,omitempty"`
	// The list of backends that serve this BackendService.
	Backends []*Backend `protobuf:"bytes,2,rep,name=backends" json:"backends,omitempty"`
	// Cloud CDN configuration for this BackendService.
	CdnPolicy          *BackendServiceCdnPolicy `protobuf:"bytes,3,opt,name=cdnPolicy" json:"cdnPolicy,omitempty"`
	ConnectionDraining *ConnectionDraining      `protobuf:"bytes,4,opt,name=connectionDraining" json:"connectionDraining,omitempty"`
	// [Output Only] Creation timestamp in RFC3339 text format.
	CreationTimestamp string `protobuf:"bytes,5,opt,name=creationTimestamp" json:"creationTimestamp,omitempty"`
	// An optional description of this resource. Provide this property when
	// you create the resource.
	Description string `protobuf:"bytes,6,opt,name=description" json:"description,omitempty"`
	// If true, enable Cloud CDN for this BackendService.
	//
	// When the load balancing scheme is INTERNAL, this field is not used.
	EnableCDN bool `protobuf:"varint,7,opt,name=enableCDN" json:"enableCDN,omitempty"`
	// Fingerprint of this resource. A hash of the contents stored in this
	// object. This field is used in optimistic locking. This field will be
	// ignored when inserting a BackendService. An up-to-date fingerprint
	// must be provided in order to update the BackendService.
	Fingerprint string `protobuf:"bytes,8,opt,name=fingerprint" json:"fingerprint,omitempty"`
	// The list of URLs to the HttpHealthCheck or HttpsHealthCheck resource
	// for health checking this BackendService. Currently at most one health
	// check can be specified, and a health check is required for Compute
	// Engine backend services. A health check must not be specified for App
	// Engine backend and Cloud Function backend.
	//
	// For internal load balancing, a URL to a HealthCheck resource must be
	// specified instead.
	HealthChecks []string           `protobuf:"bytes,9,rep,name=healthChecks" json:"healthChecks,omitempty"`
	Iap          *BackendServiceIAP `protobuf:"bytes,10,opt,name=iap" json:"iap,omitempty"`
	// [Output Only] The unique identifier for the resource. This identifier
	// is defined by the server.
	Id string `protobuf:"bytes,11,opt,name=id" json:"id,omitempty"`
	// [Output Only] Type of resource. Always compute#backendService for
	// backend services.
	Kind string `protobuf:"bytes,12,opt,name=kind" json:"kind,omitempty"`
	// Indicates whether the backend service will be used with internal or
	// external load balancing. A backend service created for one type of
	// load balancing cannot be used with the other. Possible values are
	// INTERNAL and EXTERNAL.
	// Valid values:
	//     EXTERNAL
	//     INTERNAL
	//     INVALID_LOAD_BALANCING_SCHEME
	LoadBalancingScheme string `protobuf:"bytes,13,opt,name=loadBalancingScheme" json:"loadBalancingScheme,omitempty"`
	// Name of the resource. Provided by the client when the resource is
	// created. The name must be 1-63 characters long, and comply with
	// RFC1035. Specifically, the name must be 1-63 characters long and
	// match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means
	// the first character must be a lowercase letter, and all following
	// characters must be a dash, lowercase letter, or digit, except the
	// last character, which cannot be a dash.
	Name string `protobuf:"bytes,14,opt,name=name" json:"name,omitempty"`
	// Deprecated in favor of portName. The TCP port to connect on the
	// backend. The default value is 80.
	//
	// This cannot be used for internal load balancing.
	Port int32 `protobuf:"varint,15,opt,name=port" json:"port,omitempty"`
	// Name of backend port. The same name should appear in the instance
	// groups referenced by this service. Required when the load balancing
	// scheme is EXTERNAL.
	//
	// When the load balancing scheme is INTERNAL, this field is not used.
	PortName string `protobuf:"bytes,16,opt,name=portName" json:"portName,omitempty"`
	// The protocol this BackendService uses to communicate with backends.
	//
	// Possible values are HTTP, HTTPS, TCP, and SSL. The default is HTTP.
	//
	// For internal load balancing, the possible values are TCP and UDP, and
	// the default is TCP.
	// Valid values:
	//     HTTP
	//     HTTPS
	//     SSL
	//     TCP
	//     UDP
	Protocol string `protobuf:"bytes,17,opt,name=protocol" json:"protocol,omitempty"`
	// [Output Only] URL of the region where the regional backend service
	// resides. This field is not applicable to global backend services.
	Region string `protobuf:"bytes,18,opt,name=region" json:"region,omitempty"`
	// [Output Only] The resource URL for the security policy associated
	// with this backend service.
	SecurityPolicy string `protobuf:"bytes,19,opt,name=securityPolicy" json:"securityPolicy,omitempty"`
	// [Output Only] Server-defined URL for the resource.
	SelfLink string `protobuf:"bytes,20,opt,name=selfLink" json:"selfLink,omitempty"`
	// Type of session affinity to use. The default is NONE.
	//
	// When the load balancing scheme is EXTERNAL, can be NONE, CLIENT_IP,
	// or GENERATED_COOKIE.
	//
	// When the load balancing scheme is INTERNAL, can be NONE, CLIENT_IP,
	// CLIENT_IP_PROTO, or CLIENT_IP_PORT_PROTO.
	//
	// When the protocol is UDP, this field is not used.
	// Valid values:
	//     CLIENT_IP
	//     CLIENT_IP_PORT_PROTO
	//     CLIENT_IP_PROTO
	//     GENERATED_COOKIE
	//     NONE
	SessionAffinity string `protobuf:"bytes,21,opt,name=sessionAffinity" json:"sessionAffinity,omitempty"`
	// How many seconds to wait for the backend before considering it a
	// failed request. Default is 30 seconds.
	TimeoutSec int32 `protobuf:"varint,22,opt,name=timeoutSec" json:"timeoutSec,omitempty"`
}

func (m *BackendService) Reset()                    { *m = BackendService{} }
func (m *BackendService) String() string            { return proto.CompactTextString(m) }
func (*BackendService) ProtoMessage()               {}
func (*BackendService) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{28} }

func (m *BackendService) GetAffinityCookieTtlSec() int32 {
	if m != nil {
		return m.AffinityCookieTtlSec
	}
	return 0
}

func (m *BackendService) GetBackends() []*Backend {
	if m != nil {
		return m.Backends
	}
	return nil
}

func (m *BackendService) GetCdnPolicy() *BackendServiceCdnPolicy {
	if m != nil {
		return m.CdnPolicy
	}
	return nil
}

func (m *BackendService) GetConnectionDraining() *ConnectionDraining {
	if m != nil {
		return m.ConnectionDraining
	}
	return nil
}

func (m *BackendService) GetCreationTimestamp() string {
	if m != nil {
		return m.CreationTimestamp
	}
	return ""
}

func (m *BackendService) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *BackendService) GetEnableCDN() bool {
	if m != nil {
		return m.EnableCDN
	}
	return false
}

func (m *BackendService) GetFingerprint() string {
	if m != nil {
		return m.Fingerprint
	}
	return ""
}

func (m *BackendService) GetHealthChecks() []string {
	if m != nil {
		return m.HealthChecks
	}
	return nil
}

func (m *BackendService) GetIap() *BackendServiceIAP {
	if m != nil {
		return m.Iap
	}
	return nil
}

func (m *BackendService) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *BackendService) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *BackendService) GetLoadBalancingScheme() string {
	if m != nil {
		return m.LoadBalancingScheme
	}
	return ""
}

func (m *BackendService) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *BackendService) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *BackendService) GetPortName() string {
	if m != nil {
		return m.PortName
	}
	return ""
}

func (m *BackendService) GetProtocol() string {
	if m != nil {
		return m.Protocol
	}
	return ""
}

func (m *BackendService) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *BackendService) GetSecurityPolicy() string {
	if m != nil {
		return m.SecurityPolicy
	}
	return ""
}

func (m *BackendService) GetSelfLink() string {
	if m != nil {
		return m.SelfLink
	}
	return ""
}

func (m *BackendService) GetSessionAffinity() string {
	if m != nil {
		return m.SessionAffinity
	}
	return ""
}

func (m *BackendService) GetTimeoutSec() int32 {
	if m != nil {
		return m.TimeoutSec
	}
	return 0
}

// Contains a list of BackendServicesScopedList.
type BackendServiceAggregatedList struct {
	// [Output Only] Unique identifier for the resource; defined by the
	// server.
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// A list of BackendServicesScopedList resources.
	Items map[string]*BackendServicesScopedList `protobuf:"bytes,2,rep,name=items" json:"items,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Type of resource.
	Kind string `protobuf:"bytes,3,opt,name=kind" json:"kind,omitempty"`
	// [Output Only] This token allows you to get the next page of results
	// for list requests. If the number of results is larger than
	// maxResults, use the nextPageToken as a value for the query parameter
	// pageToken in the next list request. Subsequent list requests will
	// have their own nextPageToken to continue paging through the results.
	NextPageToken string `protobuf:"bytes,4,opt,name=nextPageToken" json:"nextPageToken,omitempty"`
	// [Output Only] Server-defined URL for this resource.
	SelfLink string                                `protobuf:"bytes,5,opt,name=selfLink" json:"selfLink,omitempty"`
	Warning  *BackendServiceAggregatedList_Warning `protobuf:"bytes,6,opt,name=warning" json:"warning,omitempty"`
}

func (m *BackendServiceAggregatedList) Reset()                    { *m = BackendServiceAggregatedList{} }
func (m *BackendServiceAggregatedList) String() string            { return proto.CompactTextString(m) }
func (*BackendServiceAggregatedList) ProtoMessage()               {}
func (*BackendServiceAggregatedList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{29} }

func (m *BackendServiceAggregatedList) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *BackendServiceAggregatedList) GetItems() map[string]*BackendServicesScopedList {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *BackendServiceAggregatedList) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *BackendServiceAggregatedList) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

func (m *BackendServiceAggregatedList) GetSelfLink() string {
	if m != nil {
		return m.SelfLink
	}
	return ""
}

func (m *BackendServiceAggregatedList) GetWarning() *BackendServiceAggregatedList_Warning {
	if m != nil {
		return m.Warning
	}
	return nil
}

// [Output Only] Informational warning message.
// [Output Only] Informational warning message.
type BackendServiceAggregatedList_Warning struct {
	// [Output Only] A warning code, if applicable. For example, Compute
	// Engine returns NO_RESULTS_ON_PAGE if there are no results in the
	// response.
	// Valid values:
	//     CLEANUP_FAILED
	//     DEPRECATED_RESOURCE_USED
	//     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
	//     FIELD_VALUE_OVERRIDEN
	//     INJECTED_KERNELS_DEPRECATED
	//     NEXT_HOP_ADDRESS_NOT_ASSIGNED
	//     NEXT_HOP_CANNOT_IP_FORWARD
	//     NEXT_HOP_INSTANCE_NOT_FOUND
	//     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
	//     NEXT_HOP_NOT_RUNNING
	//     NOT_CRITICAL_ERROR
	//     NO_RESULTS_ON_PAGE
	//     REQUIRED_TOS_AGREEMENT
	//     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
	//     RESOURCE_NOT_DELETED
	//     SINGLE_INSTANCE_PROPERTY_TEMPLATE
	//     UNREACHABLE
	Code string                                       `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Data []*BackendServiceAggregatedList_Warning_Data `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
	// [Output Only] A human-readable description of the warning code.
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *BackendServiceAggregatedList_Warning) Reset()         { *m = BackendServiceAggregatedList_Warning{} }
func (m *BackendServiceAggregatedList_Warning) String() string { return proto.CompactTextString(m) }
func (*BackendServiceAggregatedList_Warning) ProtoMessage()    {}
func (*BackendServiceAggregatedList_Warning) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{29, 1}
}

func (m *BackendServiceAggregatedList_Warning) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *BackendServiceAggregatedList_Warning) GetData() []*BackendServiceAggregatedList_Warning_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *BackendServiceAggregatedList_Warning) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// [Output Only] Metadata about this warning in key: value format. For
// example:
// "data": [ { "key": "scope", "value": "zones/us-east1-d" }
type BackendServiceAggregatedList_Warning_Data struct {
	// [Output Only] A key that provides more detail on the warning being
	// returned. For example, for warnings where there are no results in a
	// list request for a particular zone, this key might be scope and the
	// key value might be the zone name. Other examples might be a key
	// indicating a deprecated resource and a suggested replacement, or a
	// warning about invalid network settings (for example, if an instance
	// attempts to perform IP forwarding but is not enabled for IP
	// forwarding).
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	// [Output Only] A warning data value corresponding to the key.
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *BackendServiceAggregatedList_Warning_Data) Reset() {
	*m = BackendServiceAggregatedList_Warning_Data{}
}
func (m *BackendServiceAggregatedList_Warning_Data) String() string { return proto.CompactTextString(m) }
func (*BackendServiceAggregatedList_Warning_Data) ProtoMessage()    {}
func (*BackendServiceAggregatedList_Warning_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{29, 1, 0}
}

func (m *BackendServiceAggregatedList_Warning_Data) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *BackendServiceAggregatedList_Warning_Data) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

// Message containing Cloud CDN configuration for a backend service.
type BackendServiceCdnPolicy struct {
	// The CacheKeyPolicy for this CdnPolicy.
	CacheKeyPolicy *CacheKeyPolicy `protobuf:"bytes,1,opt,name=cacheKeyPolicy" json:"cacheKeyPolicy,omitempty"`
}

func (m *BackendServiceCdnPolicy) Reset()                    { *m = BackendServiceCdnPolicy{} }
func (m *BackendServiceCdnPolicy) String() string            { return proto.CompactTextString(m) }
func (*BackendServiceCdnPolicy) ProtoMessage()               {}
func (*BackendServiceCdnPolicy) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{30} }

func (m *BackendServiceCdnPolicy) GetCacheKeyPolicy() *CacheKeyPolicy {
	if m != nil {
		return m.CacheKeyPolicy
	}
	return nil
}

type BackendServiceGroupHealth struct {
	HealthStatus []*HealthStatus `protobuf:"bytes,1,rep,name=healthStatus" json:"healthStatus,omitempty"`
	// [Output Only] Type of resource. Always
	// compute#backendServiceGroupHealth for the health of backend services.
	Kind string `protobuf:"bytes,2,opt,name=kind" json:"kind,omitempty"`
}

func (m *BackendServiceGroupHealth) Reset()                    { *m = BackendServiceGroupHealth{} }
func (m *BackendServiceGroupHealth) String() string            { return proto.CompactTextString(m) }
func (*BackendServiceGroupHealth) ProtoMessage()               {}
func (*BackendServiceGroupHealth) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{31} }

func (m *BackendServiceGroupHealth) GetHealthStatus() []*HealthStatus {
	if m != nil {
		return m.HealthStatus
	}
	return nil
}

func (m *BackendServiceGroupHealth) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

// Identity-Aware Proxy
type BackendServiceIAP struct {
	Enabled            bool   `protobuf:"varint,1,opt,name=enabled" json:"enabled,omitempty"`
	Oauth2ClientId     string `protobuf:"bytes,2,opt,name=oauth2ClientId" json:"oauth2ClientId,omitempty"`
	Oauth2ClientSecret string `protobuf:"bytes,3,opt,name=oauth2ClientSecret" json:"oauth2ClientSecret,omitempty"`
	// [Output Only] SHA256 hash value for the field oauth2_client_secret
	// above.
	Oauth2ClientSecretSha256 string `protobuf:"bytes,4,opt,name=oauth2ClientSecretSha256" json:"oauth2ClientSecretSha256,omitempty"`
}

func (m *BackendServiceIAP) Reset()                    { *m = BackendServiceIAP{} }
func (m *BackendServiceIAP) String() string            { return proto.CompactTextString(m) }
func (*BackendServiceIAP) ProtoMessage()               {}
func (*BackendServiceIAP) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{32} }

func (m *BackendServiceIAP) GetEnabled() bool {
	if m != nil {
		return m.Enabled
	}
	return false
}

func (m *BackendServiceIAP) GetOauth2ClientId() string {
	if m != nil {
		return m.Oauth2ClientId
	}
	return ""
}

func (m *BackendServiceIAP) GetOauth2ClientSecret() string {
	if m != nil {
		return m.Oauth2ClientSecret
	}
	return ""
}

func (m *BackendServiceIAP) GetOauth2ClientSecretSha256() string {
	if m != nil {
		return m.Oauth2ClientSecretSha256
	}
	return ""
}

// Contains a list of BackendService resources.
type BackendServiceList struct {
	// [Output Only] Unique identifier for the resource; defined by the
	// server.
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// A list of BackendService resources.
	Items []*BackendService `protobuf:"bytes,2,rep,name=items" json:"items,omitempty"`
	// [Output Only] Type of resource. Always compute#backendServiceList for
	// lists of backend services.
	Kind string `protobuf:"bytes,3,opt,name=kind" json:"kind,omitempty"`
	// [Output Only] This token allows you to get the next page of results
	// for list requests. If the number of results is larger than
	// maxResults, use the nextPageToken as a value for the query parameter
	// pageToken in the next list request. Subsequent list requests will
	// have their own nextPageToken to continue paging through the results.
	NextPageToken string `protobuf:"bytes,4,opt,name=nextPageToken" json:"nextPageToken,omitempty"`
	// [Output Only] Server-defined URL for this resource.
	SelfLink string                      `protobuf:"bytes,5,opt,name=selfLink" json:"selfLink,omitempty"`
	Warning  *BackendServiceList_Warning `protobuf:"bytes,6,opt,name=warning" json:"warning,omitempty"`
}

func (m *BackendServiceList) Reset()                    { *m = BackendServiceList{} }
func (m *BackendServiceList) String() string            { return proto.CompactTextString(m) }
func (*BackendServiceList) ProtoMessage()               {}
func (*BackendServiceList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{33} }

func (m *BackendServiceList) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *BackendServiceList) GetItems() []*BackendService {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *BackendServiceList) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *BackendServiceList) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

func (m *BackendServiceList) GetSelfLink() string {
	if m != nil {
		return m.SelfLink
	}
	return ""
}

func (m *BackendServiceList) GetWarning() *BackendServiceList_Warning {
	if m != nil {
		return m.Warning
	}
	return nil
}

// [Output Only] Informational warning message.
// [Output Only] Informational warning message.
type BackendServiceList_Warning struct {
	// [Output Only] A warning code, if applicable. For example, Compute
	// Engine returns NO_RESULTS_ON_PAGE if there are no results in the
	// response.
	// Valid values:
	//     CLEANUP_FAILED
	//     DEPRECATED_RESOURCE_USED
	//     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
	//     FIELD_VALUE_OVERRIDEN
	//     INJECTED_KERNELS_DEPRECATED
	//     NEXT_HOP_ADDRESS_NOT_ASSIGNED
	//     NEXT_HOP_CANNOT_IP_FORWARD
	//     NEXT_HOP_INSTANCE_NOT_FOUND
	//     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
	//     NEXT_HOP_NOT_RUNNING
	//     NOT_CRITICAL_ERROR
	//     NO_RESULTS_ON_PAGE
	//     REQUIRED_TOS_AGREEMENT
	//     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
	//     RESOURCE_NOT_DELETED
	//     SINGLE_INSTANCE_PROPERTY_TEMPLATE
	//     UNREACHABLE
	Code string                             `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Data []*BackendServiceList_Warning_Data `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
	// [Output Only] A human-readable description of the warning code.
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *BackendServiceList_Warning) Reset()                    { *m = BackendServiceList_Warning{} }
func (m *BackendServiceList_Warning) String() string            { return proto.CompactTextString(m) }
func (*BackendServiceList_Warning) ProtoMessage()               {}
func (*BackendServiceList_Warning) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{33, 0} }

func (m *BackendServiceList_Warning) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *BackendServiceList_Warning) GetData() []*BackendServiceList_Warning_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *BackendServiceList_Warning) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// [Output Only] Metadata about this warning in key: value format. For
// example:
// "data": [ { "key": "scope", "value": "zones/us-east1-d" }
type BackendServiceList_Warning_Data struct {
	// [Output Only] A key that provides more detail on the warning being
	// returned. For example, for warnings where there are no results in a
	// list request for a particular zone, this key might be scope and the
	// key value might be the zone name. Other examples might be a key
	// indicating a deprecated resource and a suggested replacement, or a
	// warning about invalid network settings (for example, if an instance
	// attempts to perform IP forwarding but is not enabled for IP
	// forwarding).
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	// [Output Only] A warning data value corresponding to the key.
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *BackendServiceList_Warning_Data) Reset()         { *m = BackendServiceList_Warning_Data{} }
func (m *BackendServiceList_Warning_Data) String() string { return proto.CompactTextString(m) }
func (*BackendServiceList_Warning_Data) ProtoMessage()    {}
func (*BackendServiceList_Warning_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{33, 0, 0}
}

func (m *BackendServiceList_Warning_Data) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *BackendServiceList_Warning_Data) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type BackendServicesScopedList struct {
	// List of BackendServices contained in this scope.
	BackendServices []*BackendService                  `protobuf:"bytes,1,rep,name=backendServices" json:"backendServices,omitempty"`
	Warning         *BackendServicesScopedList_Warning `protobuf:"bytes,2,opt,name=warning" json:"warning,omitempty"`
}

func (m *BackendServicesScopedList) Reset()                    { *m = BackendServicesScopedList{} }
func (m *BackendServicesScopedList) String() string            { return proto.CompactTextString(m) }
func (*BackendServicesScopedList) ProtoMessage()               {}
func (*BackendServicesScopedList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{34} }

func (m *BackendServicesScopedList) GetBackendServices() []*BackendService {
	if m != nil {
		return m.BackendServices
	}
	return nil
}

func (m *BackendServicesScopedList) GetWarning() *BackendServicesScopedList_Warning {
	if m != nil {
		return m.Warning
	}
	return nil
}

// Informational warning which replaces the list of backend services
// when the list is empty.
// Informational warning which replaces the list of backend services
// when the list is empty.
type BackendServicesScopedList_Warning struct {
	// [Output Only] A warning code, if applicable. For example, Compute
	// Engine returns NO_RESULTS_ON_PAGE if there are no results in the
	// response.
	// Valid values:
	//     CLEANUP_FAILED
	//     DEPRECATED_RESOURCE_USED
	//     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
	//     FIELD_VALUE_OVERRIDEN
	//     INJECTED_KERNELS_DEPRECATED
	//     NEXT_HOP_ADDRESS_NOT_ASSIGNED
	//     NEXT_HOP_CANNOT_IP_FORWARD
	//     NEXT_HOP_INSTANCE_NOT_FOUND
	//     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
	//     NEXT_HOP_NOT_RUNNING
	//     NOT_CRITICAL_ERROR
	//     NO_RESULTS_ON_PAGE
	//     REQUIRED_TOS_AGREEMENT
	//     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
	//     RESOURCE_NOT_DELETED
	//     SINGLE_INSTANCE_PROPERTY_TEMPLATE
	//     UNREACHABLE
	Code string                                    `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Data []*BackendServicesScopedList_Warning_Data `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
	// [Output Only] A human-readable description of the warning code.
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *BackendServicesScopedList_Warning) Reset()         { *m = BackendServicesScopedList_Warning{} }
func (m *BackendServicesScopedList_Warning) String() string { return proto.CompactTextString(m) }
func (*BackendServicesScopedList_Warning) ProtoMessage()    {}
func (*BackendServicesScopedList_Warning) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{34, 0}
}

func (m *BackendServicesScopedList_Warning) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *BackendServicesScopedList_Warning) GetData() []*BackendServicesScopedList_Warning_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *BackendServicesScopedList_Warning) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// [Output Only] Metadata about this warning in key: value format. For
// example:
// "data": [ { "key": "scope", "value": "zones/us-east1-d" }
type BackendServicesScopedList_Warning_Data struct {
	// [Output Only] A key that provides more detail on the warning being
	// returned. For example, for warnings where there are no results in a
	// list request for a particular zone, this key might be scope and the
	// key value might be the zone name. Other examples might be a key
	// indicating a deprecated resource and a suggested replacement, or a
	// warning about invalid network settings (for example, if an instance
	// attempts to perform IP forwarding but is not enabled for IP
	// forwarding).
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	// [Output Only] A warning data value corresponding to the key.
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *BackendServicesScopedList_Warning_Data) Reset() {
	*m = BackendServicesScopedList_Warning_Data{}
}
func (m *BackendServicesScopedList_Warning_Data) String() string { return proto.CompactTextString(m) }
func (*BackendServicesScopedList_Warning_Data) ProtoMessage()    {}
func (*BackendServicesScopedList_Warning_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{34, 0, 0}
}

func (m *BackendServicesScopedList_Warning_Data) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *BackendServicesScopedList_Warning_Data) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

// Associates `members` with a `role`.
type Binding struct {
	// The condition that is associated with this binding. NOTE: an
	// unsatisfied condition will not allow user access via current binding.
	// Different bindings, including their conditions, are examined
	// independently. This field is GOOGLE_INTERNAL.
	Condition *Expr `protobuf:"bytes,1,opt,name=condition" json:"condition,omitempty"`
	// Specifies the identities requesting access for a Cloud Platform
	// resource. `members` can have the following values:
	//
	// * `allUsers`: A special identifier that represents anyone who is on
	// the internet; with or without a Google account.
	//
	// * `allAuthenticatedUsers`: A special identifier that represents
	// anyone who is authenticated with a Google account or a service
	// account.
	//
	// * `user:{emailid}`: An email address that represents a specific
	// Google account. For example, `alice@gmail.com` or `joe@example.com`.
	//
	//
	//
	// * `serviceAccount:{emailid}`: An email address that represents a
	// service account. For example,
	// `my-other-app@appspot.gserviceaccount.com`.
	//
	// * `group:{emailid}`: An email address that represents a Google group.
	// For example, `admins@example.com`.
	//
	//
	//
	// * `domain:{domain}`: A Google Apps domain name that represents all
	// the users of that domain. For example, `google.com` or `example.com`.
	Members []string `protobuf:"bytes,2,rep,name=members" json:"members,omitempty"`
	// Role that is assigned to `members`. For example, `roles/viewer`,
	// `roles/editor`, or `roles/owner`.
	Role string `protobuf:"bytes,3,opt,name=role" json:"role,omitempty"`
}

func (m *Binding) Reset()                    { *m = Binding{} }
func (m *Binding) String() string            { return proto.CompactTextString(m) }
func (*Binding) ProtoMessage()               {}
func (*Binding) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{35} }

func (m *Binding) GetCondition() *Expr {
	if m != nil {
		return m.Condition
	}
	return nil
}

func (m *Binding) GetMembers() []string {
	if m != nil {
		return m.Members
	}
	return nil
}

func (m *Binding) GetRole() string {
	if m != nil {
		return m.Role
	}
	return ""
}

type CacheInvalidationRule struct {
	// If set, this invalidation rule will only apply to requests with a
	// Host header matching host.
	Host string `protobuf:"bytes,1,opt,name=host" json:"host,omitempty"`
	Path string `protobuf:"bytes,2,opt,name=path" json:"path,omitempty"`
}

func (m *CacheInvalidationRule) Reset()                    { *m = CacheInvalidationRule{} }
func (m *CacheInvalidationRule) String() string            { return proto.CompactTextString(m) }
func (*CacheInvalidationRule) ProtoMessage()               {}
func (*CacheInvalidationRule) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{36} }

func (m *CacheInvalidationRule) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *CacheInvalidationRule) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

// Message containing what to include in the cache key for a request for
// Cloud CDN.
type CacheKeyPolicy struct {
	// If true, requests to different hosts will be cached separately.
	IncludeHost bool `protobuf:"varint,1,opt,name=includeHost" json:"includeHost,omitempty"`
	// If true, http and https requests will be cached separately.
	IncludeProtocol bool `protobuf:"varint,2,opt,name=includeProtocol" json:"includeProtocol,omitempty"`
	// If true, include query string parameters in the cache key according
	// to query_string_whitelist and query_string_blacklist. If neither is
	// set, the entire query string will be included. If false, the query
	// string will be excluded from the cache key entirely.
	IncludeQueryString bool `protobuf:"varint,3,opt,name=includeQueryString" json:"includeQueryString,omitempty"`
	// Names of query string parameters to exclude in cache keys. All other
	// parameters will be included. Either specify query_string_whitelist or
	// query_string_blacklist, not both. '&' and '=' will be percent encoded
	// and not treated as delimiters.
	QueryStringBlacklist []string `protobuf:"bytes,4,rep,name=queryStringBlacklist" json:"queryStringBlacklist,omitempty"`
	// Names of query string parameters to include in cache keys. All other
	// parameters will be excluded. Either specify query_string_whitelist or
	// query_string_blacklist, not both. '&' and '=' will be percent encoded
	// and not treated as delimiters.
	QueryStringWhitelist []string `protobuf:"bytes,5,rep,name=queryStringWhitelist" json:"queryStringWhitelist,omitempty"`
}

func (m *CacheKeyPolicy) Reset()                    { *m = CacheKeyPolicy{} }
func (m *CacheKeyPolicy) String() string            { return proto.CompactTextString(m) }
func (*CacheKeyPolicy) ProtoMessage()               {}
func (*CacheKeyPolicy) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{37} }

func (m *CacheKeyPolicy) GetIncludeHost() bool {
	if m != nil {
		return m.IncludeHost
	}
	return false
}

func (m *CacheKeyPolicy) GetIncludeProtocol() bool {
	if m != nil {
		return m.IncludeProtocol
	}
	return false
}

func (m *CacheKeyPolicy) GetIncludeQueryString() bool {
	if m != nil {
		return m.IncludeQueryString
	}
	return false
}

func (m *CacheKeyPolicy) GetQueryStringBlacklist() []string {
	if m != nil {
		return m.QueryStringBlacklist
	}
	return nil
}

func (m *CacheKeyPolicy) GetQueryStringWhitelist() []string {
	if m != nil {
		return m.QueryStringWhitelist
	}
	return nil
}

// Represents a Commitment resource. Creating a Commitment resource
// means that you are purchasing a committed use contract with an
// explicit start and end time. You can create commitments based on
// vCPUs and memory usage and receive discounted rates. For full
// details, read Signing Up for Committed Use Discounts.
//
// Committed use discounts are subject to Google Cloud Platform's
// Service Specific Terms. By purchasing a committed use discount, you
// agree to these terms. Committed use discounts will not renew, so you
// must purchase a new commitment to continue receiving discounts.
type Commitment struct {
	// [Output Only] Creation timestamp in RFC3339 text format.
	CreationTimestamp string `protobuf:"bytes,1,opt,name=creationTimestamp" json:"creationTimestamp,omitempty"`
	// An optional description of this resource. Provide this property when
	// you create the resource.
	Description string `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	// [Output Only] Commitment end time in RFC3339 text format.
	EndTimestamp string `protobuf:"bytes,3,opt,name=endTimestamp" json:"endTimestamp,omitempty"`
	// [Output Only] The unique identifier for the resource. This identifier
	// is defined by the server.
	Id string `protobuf:"bytes,4,opt,name=id" json:"id,omitempty"`
	// [Output Only] Type of the resource. Always compute#commitment for
	// commitments.
	Kind string `protobuf:"bytes,5,opt,name=kind" json:"kind,omitempty"`
	// Name of the resource. Provided by the client when the resource is
	// created. The name must be 1-63 characters long, and comply with
	// RFC1035. Specifically, the name must be 1-63 characters long and
	// match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means
	// the first character must be a lowercase letter, and all following
	// characters must be a dash, lowercase letter, or digit, except the
	// last character, which cannot be a dash.
	Name string `protobuf:"bytes,6,opt,name=name" json:"name,omitempty"`
	// The plan for this commitment, which determines duration and discount
	// rate. The currently supported plans are TWELVE_MONTH (1 year), and
	// THIRTY_SIX_MONTH (3 years).
	// Valid values:
	//     INVALID
	//     THIRTY_SIX_MONTH
	//     TWELVE_MONTH
	Plan string `protobuf:"bytes,7,opt,name=plan" json:"plan,omitempty"`
	// [Output Only] URL of the region where this commitment may be used.
	Region string `protobuf:"bytes,8,opt,name=region" json:"region,omitempty"`
	// List of commitment amounts for particular resources. Note that VCPU
	// and MEMORY resource commitments must occur together.
	Resources []*ResourceCommitment `protobuf:"bytes,9,rep,name=resources" json:"resources,omitempty"`
	// [Output Only] Server-defined URL for the resource.
	SelfLink string `protobuf:"bytes,10,opt,name=selfLink" json:"selfLink,omitempty"`
	// [Output Only] Commitment start time in RFC3339 text format.
	StartTimestamp string `protobuf:"bytes,11,opt,name=startTimestamp" json:"startTimestamp,omitempty"`
	// [Output Only] Status of the commitment with regards to eventual
	// expiration (each commitment has an end date defined). One of the
	// following values: NOT_YET_ACTIVE, ACTIVE, EXPIRED.
	// Valid values:
	//     ACTIVE
	//     CREATING
	//     EXPIRED
	//     NOT_YET_ACTIVE
	Status string `protobuf:"bytes,12,opt,name=status" json:"status,omitempty"`
	// [Output Only] An optional, human-readable explanation of the status.
	StatusMessage string `protobuf:"bytes,13,opt,name=statusMessage" json:"statusMessage,omitempty"`
}

func (m *Commitment) Reset()                    { *m = Commitment{} }
func (m *Commitment) String() string            { return proto.CompactTextString(m) }
func (*Commitment) ProtoMessage()               {}
func (*Commitment) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{38} }

func (m *Commitment) GetCreationTimestamp() string {
	if m != nil {
		return m.CreationTimestamp
	}
	return ""
}

func (m *Commitment) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Commitment) GetEndTimestamp() string {
	if m != nil {
		return m.EndTimestamp
	}
	return ""
}

func (m *Commitment) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Commitment) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *Commitment) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Commitment) GetPlan() string {
	if m != nil {
		return m.Plan
	}
	return ""
}

func (m *Commitment) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *Commitment) GetResources() []*ResourceCommitment {
	if m != nil {
		return m.Resources
	}
	return nil
}

func (m *Commitment) GetSelfLink() string {
	if m != nil {
		return m.SelfLink
	}
	return ""
}

func (m *Commitment) GetStartTimestamp() string {
	if m != nil {
		return m.StartTimestamp
	}
	return ""
}

func (m *Commitment) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Commitment) GetStatusMessage() string {
	if m != nil {
		return m.StatusMessage
	}
	return ""
}

type CommitmentAggregatedList struct {
	// [Output Only] Unique identifier for the resource; defined by the
	// server.
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// A list of CommitmentsScopedList resources.
	Items map[string]*CommitmentsScopedList `protobuf:"bytes,2,rep,name=items" json:"items,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// [Output Only] Type of resource. Always
	// compute#commitmentAggregatedList for aggregated lists of commitments.
	Kind string `protobuf:"bytes,3,opt,name=kind" json:"kind,omitempty"`
	// [Output Only] This token allows you to get the next page of results
	// for list requests. If the number of results is larger than
	// maxResults, use the nextPageToken as a value for the query parameter
	// pageToken in the next list request. Subsequent list requests will
	// have their own nextPageToken to continue paging through the results.
	NextPageToken string `protobuf:"bytes,4,opt,name=nextPageToken" json:"nextPageToken,omitempty"`
	// [Output Only] Server-defined URL for this resource.
	SelfLink string                            `protobuf:"bytes,5,opt,name=selfLink" json:"selfLink,omitempty"`
	Warning  *CommitmentAggregatedList_Warning `protobuf:"bytes,6,opt,name=warning" json:"warning,omitempty"`
}

func (m *CommitmentAggregatedList) Reset()                    { *m = CommitmentAggregatedList{} }
func (m *CommitmentAggregatedList) String() string            { return proto.CompactTextString(m) }
func (*CommitmentAggregatedList) ProtoMessage()               {}
func (*CommitmentAggregatedList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{39} }

func (m *CommitmentAggregatedList) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *CommitmentAggregatedList) GetItems() map[string]*CommitmentsScopedList {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *CommitmentAggregatedList) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *CommitmentAggregatedList) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

func (m *CommitmentAggregatedList) GetSelfLink() string {
	if m != nil {
		return m.SelfLink
	}
	return ""
}

func (m *CommitmentAggregatedList) GetWarning() *CommitmentAggregatedList_Warning {
	if m != nil {
		return m.Warning
	}
	return nil
}

// [Output Only] Informational warning message.
// [Output Only] Informational warning message.
type CommitmentAggregatedList_Warning struct {
	// [Output Only] A warning code, if applicable. For example, Compute
	// Engine returns NO_RESULTS_ON_PAGE if there are no results in the
	// response.
	// Valid values:
	//     CLEANUP_FAILED
	//     DEPRECATED_RESOURCE_USED
	//     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
	//     FIELD_VALUE_OVERRIDEN
	//     INJECTED_KERNELS_DEPRECATED
	//     NEXT_HOP_ADDRESS_NOT_ASSIGNED
	//     NEXT_HOP_CANNOT_IP_FORWARD
	//     NEXT_HOP_INSTANCE_NOT_FOUND
	//     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
	//     NEXT_HOP_NOT_RUNNING
	//     NOT_CRITICAL_ERROR
	//     NO_RESULTS_ON_PAGE
	//     REQUIRED_TOS_AGREEMENT
	//     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
	//     RESOURCE_NOT_DELETED
	//     SINGLE_INSTANCE_PROPERTY_TEMPLATE
	//     UNREACHABLE
	Code string                                   `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Data []*CommitmentAggregatedList_Warning_Data `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
	// [Output Only] A human-readable description of the warning code.
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *CommitmentAggregatedList_Warning) Reset()         { *m = CommitmentAggregatedList_Warning{} }
func (m *CommitmentAggregatedList_Warning) String() string { return proto.CompactTextString(m) }
func (*CommitmentAggregatedList_Warning) ProtoMessage()    {}
func (*CommitmentAggregatedList_Warning) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{39, 1}
}

func (m *CommitmentAggregatedList_Warning) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *CommitmentAggregatedList_Warning) GetData() []*CommitmentAggregatedList_Warning_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *CommitmentAggregatedList_Warning) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// [Output Only] Metadata about this warning in key: value format. For
// example:
// "data": [ { "key": "scope", "value": "zones/us-east1-d" }
type CommitmentAggregatedList_Warning_Data struct {
	// [Output Only] A key that provides more detail on the warning being
	// returned. For example, for warnings where there are no results in a
	// list request for a particular zone, this key might be scope and the
	// key value might be the zone name. Other examples might be a key
	// indicating a deprecated resource and a suggested replacement, or a
	// warning about invalid network settings (for example, if an instance
	// attempts to perform IP forwarding but is not enabled for IP
	// forwarding).
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	// [Output Only] A warning data value corresponding to the key.
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *CommitmentAggregatedList_Warning_Data) Reset()         { *m = CommitmentAggregatedList_Warning_Data{} }
func (m *CommitmentAggregatedList_Warning_Data) String() string { return proto.CompactTextString(m) }
func (*CommitmentAggregatedList_Warning_Data) ProtoMessage()    {}
func (*CommitmentAggregatedList_Warning_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{39, 1, 0}
}

func (m *CommitmentAggregatedList_Warning_Data) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *CommitmentAggregatedList_Warning_Data) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

// Contains a list of Commitment resources.
type CommitmentList struct {
	// [Output Only] Unique identifier for the resource; defined by the
	// server.
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// A list of Commitment resources.
	Items []*Commitment `protobuf:"bytes,2,rep,name=items" json:"items,omitempty"`
	// [Output Only] Type of resource. Always compute#commitmentList for
	// lists of commitments.
	Kind string `protobuf:"bytes,3,opt,name=kind" json:"kind,omitempty"`
	// [Output Only] This token allows you to get the next page of results
	// for list requests. If the number of results is larger than
	// maxResults, use the nextPageToken as a value for the query parameter
	// pageToken in the next list request. Subsequent list requests will
	// have their own nextPageToken to continue paging through the results.
	NextPageToken string `protobuf:"bytes,4,opt,name=nextPageToken" json:"nextPageToken,omitempty"`
	// [Output Only] Server-defined URL for this resource.
	SelfLink string                  `protobuf:"bytes,5,opt,name=selfLink" json:"selfLink,omitempty"`
	Warning  *CommitmentList_Warning `protobuf:"bytes,6,opt,name=warning" json:"warning,omitempty"`
}

func (m *CommitmentList) Reset()                    { *m = CommitmentList{} }
func (m *CommitmentList) String() string            { return proto.CompactTextString(m) }
func (*CommitmentList) ProtoMessage()               {}
func (*CommitmentList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{40} }

func (m *CommitmentList) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *CommitmentList) GetItems() []*Commitment {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *CommitmentList) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *CommitmentList) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

func (m *CommitmentList) GetSelfLink() string {
	if m != nil {
		return m.SelfLink
	}
	return ""
}

func (m *CommitmentList) GetWarning() *CommitmentList_Warning {
	if m != nil {
		return m.Warning
	}
	return nil
}

// [Output Only] Informational warning message.
// [Output Only] Informational warning message.
type CommitmentList_Warning struct {
	// [Output Only] A warning code, if applicable. For example, Compute
	// Engine returns NO_RESULTS_ON_PAGE if there are no results in the
	// response.
	// Valid values:
	//     CLEANUP_FAILED
	//     DEPRECATED_RESOURCE_USED
	//     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
	//     FIELD_VALUE_OVERRIDEN
	//     INJECTED_KERNELS_DEPRECATED
	//     NEXT_HOP_ADDRESS_NOT_ASSIGNED
	//     NEXT_HOP_CANNOT_IP_FORWARD
	//     NEXT_HOP_INSTANCE_NOT_FOUND
	//     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
	//     NEXT_HOP_NOT_RUNNING
	//     NOT_CRITICAL_ERROR
	//     NO_RESULTS_ON_PAGE
	//     REQUIRED_TOS_AGREEMENT
	//     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
	//     RESOURCE_NOT_DELETED
	//     SINGLE_INSTANCE_PROPERTY_TEMPLATE
	//     UNREACHABLE
	Code string                         `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Data []*CommitmentList_Warning_Data `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
	// [Output Only] A human-readable description of the warning code.
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *CommitmentList_Warning) Reset()                    { *m = CommitmentList_Warning{} }
func (m *CommitmentList_Warning) String() string            { return proto.CompactTextString(m) }
func (*CommitmentList_Warning) ProtoMessage()               {}
func (*CommitmentList_Warning) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{40, 0} }

func (m *CommitmentList_Warning) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *CommitmentList_Warning) GetData() []*CommitmentList_Warning_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *CommitmentList_Warning) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// [Output Only] Metadata about this warning in key: value format. For
// example:
// "data": [ { "key": "scope", "value": "zones/us-east1-d" }
type CommitmentList_Warning_Data struct {
	// [Output Only] A key that provides more detail on the warning being
	// returned. For example, for warnings where there are no results in a
	// list request for a particular zone, this key might be scope and the
	// key value might be the zone name. Other examples might be a key
	// indicating a deprecated resource and a suggested replacement, or a
	// warning about invalid network settings (for example, if an instance
	// attempts to perform IP forwarding but is not enabled for IP
	// forwarding).
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	// [Output Only] A warning data value corresponding to the key.
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *CommitmentList_Warning_Data) Reset()         { *m = CommitmentList_Warning_Data{} }
func (m *CommitmentList_Warning_Data) String() string { return proto.CompactTextString(m) }
func (*CommitmentList_Warning_Data) ProtoMessage()    {}
func (*CommitmentList_Warning_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{40, 0, 0}
}

func (m *CommitmentList_Warning_Data) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *CommitmentList_Warning_Data) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type CommitmentsScopedList struct {
	// [Output Only] List of commitments contained in this scope.
	Commitments []*Commitment                  `protobuf:"bytes,1,rep,name=commitments" json:"commitments,omitempty"`
	Warning     *CommitmentsScopedList_Warning `protobuf:"bytes,2,opt,name=warning" json:"warning,omitempty"`
}

func (m *CommitmentsScopedList) Reset()                    { *m = CommitmentsScopedList{} }
func (m *CommitmentsScopedList) String() string            { return proto.CompactTextString(m) }
func (*CommitmentsScopedList) ProtoMessage()               {}
func (*CommitmentsScopedList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{41} }

func (m *CommitmentsScopedList) GetCommitments() []*Commitment {
	if m != nil {
		return m.Commitments
	}
	return nil
}

func (m *CommitmentsScopedList) GetWarning() *CommitmentsScopedList_Warning {
	if m != nil {
		return m.Warning
	}
	return nil
}

// [Output Only] Informational warning which replaces the list of
// commitments when the list is empty.
// [Output Only] Informational warning which replaces the list of
// commitments when the list is empty.
type CommitmentsScopedList_Warning struct {
	// [Output Only] A warning code, if applicable. For example, Compute
	// Engine returns NO_RESULTS_ON_PAGE if there are no results in the
	// response.
	// Valid values:
	//     CLEANUP_FAILED
	//     DEPRECATED_RESOURCE_USED
	//     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
	//     FIELD_VALUE_OVERRIDEN
	//     INJECTED_KERNELS_DEPRECATED
	//     NEXT_HOP_ADDRESS_NOT_ASSIGNED
	//     NEXT_HOP_CANNOT_IP_FORWARD
	//     NEXT_HOP_INSTANCE_NOT_FOUND
	//     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
	//     NEXT_HOP_NOT_RUNNING
	//     NOT_CRITICAL_ERROR
	//     NO_RESULTS_ON_PAGE
	//     REQUIRED_TOS_AGREEMENT
	//     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
	//     RESOURCE_NOT_DELETED
	//     SINGLE_INSTANCE_PROPERTY_TEMPLATE
	//     UNREACHABLE
	Code string                                `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Data []*CommitmentsScopedList_Warning_Data `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
	// [Output Only] A human-readable description of the warning code.
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *CommitmentsScopedList_Warning) Reset()         { *m = CommitmentsScopedList_Warning{} }
func (m *CommitmentsScopedList_Warning) String() string { return proto.CompactTextString(m) }
func (*CommitmentsScopedList_Warning) ProtoMessage()    {}
func (*CommitmentsScopedList_Warning) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{41, 0}
}

func (m *CommitmentsScopedList_Warning) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *CommitmentsScopedList_Warning) GetData() []*CommitmentsScopedList_Warning_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *CommitmentsScopedList_Warning) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// [Output Only] Metadata about this warning in key: value format. For
// example:
// "data": [ { "key": "scope", "value": "zones/us-east1-d" }
type CommitmentsScopedList_Warning_Data struct {
	// [Output Only] A key that provides more detail on the warning being
	// returned. For example, for warnings where there are no results in a
	// list request for a particular zone, this key might be scope and the
	// key value might be the zone name. Other examples might be a key
	// indicating a deprecated resource and a suggested replacement, or a
	// warning about invalid network settings (for example, if an instance
	// attempts to perform IP forwarding but is not enabled for IP
	// forwarding).
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	// [Output Only] A warning data value corresponding to the key.
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *CommitmentsScopedList_Warning_Data) Reset()         { *m = CommitmentsScopedList_Warning_Data{} }
func (m *CommitmentsScopedList_Warning_Data) String() string { return proto.CompactTextString(m) }
func (*CommitmentsScopedList_Warning_Data) ProtoMessage()    {}
func (*CommitmentsScopedList_Warning_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{41, 0, 0}
}

func (m *CommitmentsScopedList_Warning_Data) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *CommitmentsScopedList_Warning_Data) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

// A condition to be met.
type Condition struct {
	// Trusted attributes supplied by the IAM system.
	// Valid values:
	//     APPROVER
	//     ATTRIBUTION
	//     AUTHORITY
	//     JUSTIFICATION_TYPE
	//     NO_ATTR
	//     SECURITY_REALM
	Iam string `protobuf:"bytes,1,opt,name=iam" json:"iam,omitempty"`
	// An operator to apply the subject with.
	// Valid values:
	//     DISCHARGED
	//     EQUALS
	//     IN
	//     NOT_EQUALS
	//     NOT_IN
	//     NO_OP
	Op string `protobuf:"bytes,2,opt,name=op" json:"op,omitempty"`
	// Trusted attributes discharged by the service.
	Svc string `protobuf:"bytes,3,opt,name=svc" json:"svc,omitempty"`
	// Trusted attributes supplied by any service that owns resources and
	// uses the IAM system for access control.
	// Valid values:
	//     IP
	//     NAME
	//     NO_ATTR
	//     REGION
	//     SERVICE
	Sys string `protobuf:"bytes,4,opt,name=sys" json:"sys,omitempty"`
	// DEPRECATED. Use 'values' instead.
	Value string `protobuf:"bytes,5,opt,name=value" json:"value,omitempty"`
	// The objects of the condition. This is mutually exclusive with
	// 'value'.
	Values []string `protobuf:"bytes,6,rep,name=values" json:"values,omitempty"`
}

func (m *Condition) Reset()                    { *m = Condition{} }
func (m *Condition) String() string            { return proto.CompactTextString(m) }
func (*Condition) ProtoMessage()               {}
func (*Condition) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{42} }

func (m *Condition) GetIam() string {
	if m != nil {
		return m.Iam
	}
	return ""
}

func (m *Condition) GetOp() string {
	if m != nil {
		return m.Op
	}
	return ""
}

func (m *Condition) GetSvc() string {
	if m != nil {
		return m.Svc
	}
	return ""
}

func (m *Condition) GetSys() string {
	if m != nil {
		return m.Sys
	}
	return ""
}

func (m *Condition) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *Condition) GetValues() []string {
	if m != nil {
		return m.Values
	}
	return nil
}

// Message containing connection draining configuration.
type ConnectionDraining struct {
	// Time for which instance will be drained (not accept new connections,
	// but still work to finish started).
	DrainingTimeoutSec int32 `protobuf:"varint,1,opt,name=drainingTimeoutSec" json:"drainingTimeoutSec,omitempty"`
}

func (m *ConnectionDraining) Reset()                    { *m = ConnectionDraining{} }
func (m *ConnectionDraining) String() string            { return proto.CompactTextString(m) }
func (*ConnectionDraining) ProtoMessage()               {}
func (*ConnectionDraining) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{43} }

func (m *ConnectionDraining) GetDrainingTimeoutSec() int32 {
	if m != nil {
		return m.DrainingTimeoutSec
	}
	return 0
}

// Represents a customer-supplied encryption key
type CustomerEncryptionKey struct {
	// Specifies a 256-bit customer-supplied encryption key, encoded in RFC
	// 4648 base64 to either encrypt or decrypt this resource.
	RawKey string `protobuf:"bytes,1,opt,name=rawKey" json:"rawKey,omitempty"`
	// Specifies an RFC 4648 base64 encoded, RSA-wrapped 2048-bit
	// customer-supplied encryption key to either encrypt or decrypt this
	// resource.
	//
	// The key must meet the following requirements before you can provide
	// it to Compute Engine:
	// - The key is wrapped using a RSA public key certificate provided by
	// Google.
	// - After being wrapped, the key must be encoded in RFC 4648 base64
	// encoding.  Get the RSA public key certificate provided by Google at:
	// https://cloud-certs.storage.googleapis.com/google-cloud-csek-ingress.pem
	RsaEncryptedKey string `protobuf:"bytes,2,opt,name=rsaEncryptedKey" json:"rsaEncryptedKey,omitempty"`
	// [Output only] The RFC 4648 base64 encoded SHA-256 hash of the
	// customer-supplied encryption key that protects this resource.
	Sha256 string `protobuf:"bytes,3,opt,name=sha256" json:"sha256,omitempty"`
}

func (m *CustomerEncryptionKey) Reset()                    { *m = CustomerEncryptionKey{} }
func (m *CustomerEncryptionKey) String() string            { return proto.CompactTextString(m) }
func (*CustomerEncryptionKey) ProtoMessage()               {}
func (*CustomerEncryptionKey) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{44} }

func (m *CustomerEncryptionKey) GetRawKey() string {
	if m != nil {
		return m.RawKey
	}
	return ""
}

func (m *CustomerEncryptionKey) GetRsaEncryptedKey() string {
	if m != nil {
		return m.RsaEncryptedKey
	}
	return ""
}

func (m *CustomerEncryptionKey) GetSha256() string {
	if m != nil {
		return m.Sha256
	}
	return ""
}

type CustomerEncryptionKeyProtectedDisk struct {
	// Decrypts data associated with the disk with a customer-supplied
	// encryption key.
	DiskEncryptionKey *CustomerEncryptionKey `protobuf:"bytes,1,opt,name=diskEncryptionKey" json:"diskEncryptionKey,omitempty"`
	// Specifies a valid partial or full URL to an existing Persistent Disk
	// resource. This field is only applicable for persistent disks.
	Source string `protobuf:"bytes,2,opt,name=source" json:"source,omitempty"`
}

func (m *CustomerEncryptionKeyProtectedDisk) Reset()         { *m = CustomerEncryptionKeyProtectedDisk{} }
func (m *CustomerEncryptionKeyProtectedDisk) String() string { return proto.CompactTextString(m) }
func (*CustomerEncryptionKeyProtectedDisk) ProtoMessage()    {}
func (*CustomerEncryptionKeyProtectedDisk) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{45}
}

func (m *CustomerEncryptionKeyProtectedDisk) GetDiskEncryptionKey() *CustomerEncryptionKey {
	if m != nil {
		return m.DiskEncryptionKey
	}
	return nil
}

func (m *CustomerEncryptionKeyProtectedDisk) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

// Deprecation status for a public resource.
type DeprecationStatus struct {
	// An optional RFC3339 timestamp on or after which the state of this
	// resource is intended to change to DELETED. This is only informational
	// and the status will not change unless the client explicitly changes
	// it.
	Deleted string `protobuf:"bytes,1,opt,name=deleted" json:"deleted,omitempty"`
	// An optional RFC3339 timestamp on or after which the state of this
	// resource is intended to change to DEPRECATED. This is only
	// informational and the status will not change unless the client
	// explicitly changes it.
	Deprecated string `protobuf:"bytes,2,opt,name=deprecated" json:"deprecated,omitempty"`
	// An optional RFC3339 timestamp on or after which the state of this
	// resource is intended to change to OBSOLETE. This is only
	// informational and the status will not change unless the client
	// explicitly changes it.
	Obsolete string `protobuf:"bytes,3,opt,name=obsolete" json:"obsolete,omitempty"`
	// The URL of the suggested replacement for a deprecated resource. The
	// suggested replacement resource must be the same kind of resource as
	// the deprecated resource.
	Replacement string `protobuf:"bytes,4,opt,name=replacement" json:"replacement,omitempty"`
	// The deprecation state of this resource. This can be DEPRECATED,
	// OBSOLETE, or DELETED. Operations which create a new resource using a
	// DEPRECATED resource will return successfully, but with a warning
	// indicating the deprecated resource and recommending its replacement.
	// Operations which use OBSOLETE or DELETED resources will be rejected
	// and result in an error.
	// Valid values:
	//     DELETED
	//     DEPRECATED
	//     OBSOLETE
	State string `protobuf:"bytes,5,opt,name=state" json:"state,omitempty"`
}

func (m *DeprecationStatus) Reset()                    { *m = DeprecationStatus{} }
func (m *DeprecationStatus) String() string            { return proto.CompactTextString(m) }
func (*DeprecationStatus) ProtoMessage()               {}
func (*DeprecationStatus) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{46} }

func (m *DeprecationStatus) GetDeleted() string {
	if m != nil {
		return m.Deleted
	}
	return ""
}

func (m *DeprecationStatus) GetDeprecated() string {
	if m != nil {
		return m.Deprecated
	}
	return ""
}

func (m *DeprecationStatus) GetObsolete() string {
	if m != nil {
		return m.Obsolete
	}
	return ""
}

func (m *DeprecationStatus) GetReplacement() string {
	if m != nil {
		return m.Replacement
	}
	return ""
}

func (m *DeprecationStatus) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

// A Disk resource.
type Disk struct {
	// [Output Only] Creation timestamp in RFC3339 text format.
	CreationTimestamp string `protobuf:"bytes,1,opt,name=creationTimestamp" json:"creationTimestamp,omitempty"`
	// An optional description of this resource. Provide this property when
	// you create the resource.
	Description string `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	// Encrypts the disk using a customer-supplied encryption key.
	//
	// After you encrypt a disk with a customer-supplied key, you must
	// provide the same key if you use the disk later (e.g. to create a disk
	// snapshot or an image, or to attach the disk to a virtual machine).
	//
	// Customer-supplied encryption keys do not protect access to metadata
	// of the disk.
	//
	// If you do not provide an encryption key when creating the disk, then
	// the disk will be encrypted using an automatically generated key and
	// you do not need to provide a key to use the disk later.
	DiskEncryptionKey *CustomerEncryptionKey `protobuf:"bytes,3,opt,name=diskEncryptionKey" json:"diskEncryptionKey,omitempty"`
	// [Output Only] The unique identifier for the resource. This identifier
	// is defined by the server.
	Id string `protobuf:"bytes,4,opt,name=id" json:"id,omitempty"`
	// [Output Only] Type of the resource. Always compute#disk for disks.
	Kind string `protobuf:"bytes,5,opt,name=kind" json:"kind,omitempty"`
	// A fingerprint for the labels being applied to this disk, which is
	// essentially a hash of the labels set used for optimistic locking. The
	// fingerprint is initially generated by Compute Engine and changes
	// after every request to modify or update labels. You must always
	// provide an up-to-date fingerprint hash in order to update or change
	// labels.
	//
	// To see the latest fingerprint, make a get() request to retrieve a
	// disk.
	LabelFingerprint string `protobuf:"bytes,6,opt,name=labelFingerprint" json:"labelFingerprint,omitempty"`
	// Labels to apply to this disk. These can be later modified by the
	// setLabels method.
	Labels map[string]string `protobuf:"bytes,7,rep,name=labels" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// [Output Only] Last attach timestamp in RFC3339 text format.
	LastAttachTimestamp string `protobuf:"bytes,8,opt,name=lastAttachTimestamp" json:"lastAttachTimestamp,omitempty"`
	// [Output Only] Last detach timestamp in RFC3339 text format.
	LastDetachTimestamp string `protobuf:"bytes,9,opt,name=lastDetachTimestamp" json:"lastDetachTimestamp,omitempty"`
	// Any applicable publicly visible licenses.
	Licenses []string `protobuf:"bytes,10,rep,name=licenses" json:"licenses,omitempty"`
	// Name of the resource. Provided by the client when the resource is
	// created. The name must be 1-63 characters long, and comply with
	// RFC1035. Specifically, the name must be 1-63 characters long and
	// match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means
	// the first character must be a lowercase letter, and all following
	// characters must be a dash, lowercase letter, or digit, except the
	// last character, which cannot be a dash.
	Name string `protobuf:"bytes,11,opt,name=name" json:"name,omitempty"`
	// Internal use only.
	Options string `protobuf:"bytes,12,opt,name=options" json:"options,omitempty"`
	// [Output Only] Server-defined fully-qualified URL for this resource.
	SelfLink string `protobuf:"bytes,13,opt,name=selfLink" json:"selfLink,omitempty"`
	// Size of the persistent disk, specified in GB. You can specify this
	// field when creating a persistent disk using the sourceImage or
	// sourceSnapshot parameter, or specify it alone to create an empty
	// persistent disk.
	//
	// If you specify this field along with sourceImage or sourceSnapshot,
	// the value of sizeGb must not be less than the size of the sourceImage
	// or the size of the snapshot. Acceptable values are 1 to 65536,
	// inclusive.
	SizeGb string `protobuf:"bytes,14,opt,name=sizeGb" json:"sizeGb,omitempty"`
	// The source image used to create this disk. If the source image is
	// deleted, this field will not be set.
	//
	// To create a disk with one of the public operating system images,
	// specify the image by its family name. For example, specify
	// family/debian-8 to use the latest Debian 8 image:
	//
	// projects/debian-cloud/global/images/family/debian-8
	//
	// Alternatively, use a specific version of a public operating system
	// image:
	//
	// projects/debian-cloud/global/images/debian-8-jessie-vYYYYMMDD
	//
	// To create a disk with a private image that you created, specify the
	// image name in the following format:
	//
	// global/images/my-private-image
	//
	// You can also specify a private image by its image family, which
	// returns the latest version of the image in that family. Replace the
	// image name with family/family-name:
	//
	// global/images/family/my-private-family
	SourceImage string `protobuf:"bytes,15,opt,name=sourceImage" json:"sourceImage,omitempty"`
	// The customer-supplied encryption key of the source image. Required if
	// the source image is protected by a customer-supplied encryption key.
	SourceImageEncryptionKey *CustomerEncryptionKey `protobuf:"bytes,16,opt,name=sourceImageEncryptionKey" json:"sourceImageEncryptionKey,omitempty"`
	// [Output Only] The ID value of the image used to create this disk.
	// This value identifies the exact image that was used to create this
	// persistent disk. For example, if you created the persistent disk from
	// an image that was later deleted and recreated under the same name,
	// the source image ID would identify the exact version of the image
	// that was used.
	SourceImageId string `protobuf:"bytes,17,opt,name=sourceImageId" json:"sourceImageId,omitempty"`
	// The source snapshot used to create this disk. You can provide this as
	// a partial or full URL to the resource. For example, the following are
	// valid values:
	// -
	// https://www.googleapis.com/compute/v1/projects/project/global/snapshots/snapshot
	// - projects/project/global/snapshots/snapshot
	// - global/snapshots/snapshot
	SourceSnapshot string `protobuf:"bytes,18,opt,name=sourceSnapshot" json:"sourceSnapshot,omitempty"`
	// The customer-supplied encryption key of the source snapshot. Required
	// if the source snapshot is protected by a customer-supplied encryption
	// key.
	SourceSnapshotEncryptionKey *CustomerEncryptionKey `protobuf:"bytes,19,opt,name=sourceSnapshotEncryptionKey" json:"sourceSnapshotEncryptionKey,omitempty"`
	// [Output Only] The unique ID of the snapshot used to create this disk.
	// This value identifies the exact snapshot that was used to create this
	// persistent disk. For example, if you created the persistent disk from
	// a snapshot that was later deleted and recreated under the same name,
	// the source snapshot ID would identify the exact version of the
	// snapshot that was used.
	SourceSnapshotId string `protobuf:"bytes,20,opt,name=sourceSnapshotId" json:"sourceSnapshotId,omitempty"`
	// [Output Only] The status of disk creation.
	// Valid values:
	//     CREATING
	//     FAILED
	//     READY
	//     RESTORING
	Status string `protobuf:"bytes,21,opt,name=status" json:"status,omitempty"`
	// [Deprecated] Storage type of the persistent disk.
	// Valid values:
	//     HDD
	//     SSD
	StorageType string `protobuf:"bytes,22,opt,name=storageType" json:"storageType,omitempty"`
	// URL of the disk type resource describing which disk type to use to
	// create the disk. Provide this when creating the disk.
	Type string `protobuf:"bytes,23,opt,name=type" json:"type,omitempty"`
	// [Output Only] Links to the users of the disk (attached instances) in
	// form: project/zones/zone/instances/instance
	Users []string `protobuf:"bytes,24,rep,name=users" json:"users,omitempty"`
	// [Output Only] URL of the zone where the disk resides.
	Zone string `protobuf:"bytes,25,opt,name=zone" json:"zone,omitempty"`
}

func (m *Disk) Reset()                    { *m = Disk{} }
func (m *Disk) String() string            { return proto.CompactTextString(m) }
func (*Disk) ProtoMessage()               {}
func (*Disk) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{47} }

func (m *Disk) GetCreationTimestamp() string {
	if m != nil {
		return m.CreationTimestamp
	}
	return ""
}

func (m *Disk) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Disk) GetDiskEncryptionKey() *CustomerEncryptionKey {
	if m != nil {
		return m.DiskEncryptionKey
	}
	return nil
}

func (m *Disk) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Disk) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *Disk) GetLabelFingerprint() string {
	if m != nil {
		return m.LabelFingerprint
	}
	return ""
}

func (m *Disk) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *Disk) GetLastAttachTimestamp() string {
	if m != nil {
		return m.LastAttachTimestamp
	}
	return ""
}

func (m *Disk) GetLastDetachTimestamp() string {
	if m != nil {
		return m.LastDetachTimestamp
	}
	return ""
}

func (m *Disk) GetLicenses() []string {
	if m != nil {
		return m.Licenses
	}
	return nil
}

func (m *Disk) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Disk) GetOptions() string {
	if m != nil {
		return m.Options
	}
	return ""
}

func (m *Disk) GetSelfLink() string {
	if m != nil {
		return m.SelfLink
	}
	return ""
}

func (m *Disk) GetSizeGb() string {
	if m != nil {
		return m.SizeGb
	}
	return ""
}

func (m *Disk) GetSourceImage() string {
	if m != nil {
		return m.SourceImage
	}
	return ""
}

func (m *Disk) GetSourceImageEncryptionKey() *CustomerEncryptionKey {
	if m != nil {
		return m.SourceImageEncryptionKey
	}
	return nil
}

func (m *Disk) GetSourceImageId() string {
	if m != nil {
		return m.SourceImageId
	}
	return ""
}

func (m *Disk) GetSourceSnapshot() string {
	if m != nil {
		return m.SourceSnapshot
	}
	return ""
}

func (m *Disk) GetSourceSnapshotEncryptionKey() *CustomerEncryptionKey {
	if m != nil {
		return m.SourceSnapshotEncryptionKey
	}
	return nil
}

func (m *Disk) GetSourceSnapshotId() string {
	if m != nil {
		return m.SourceSnapshotId
	}
	return ""
}

func (m *Disk) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Disk) GetStorageType() string {
	if m != nil {
		return m.StorageType
	}
	return ""
}

func (m *Disk) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Disk) GetUsers() []string {
	if m != nil {
		return m.Users
	}
	return nil
}

func (m *Disk) GetZone() string {
	if m != nil {
		return m.Zone
	}
	return ""
}

type DiskAggregatedList struct {
	// [Output Only] Unique identifier for the resource; defined by the
	// server.
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// A list of DisksScopedList resources.
	Items map[string]*DisksScopedList `protobuf:"bytes,2,rep,name=items" json:"items,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// [Output Only] Type of resource. Always compute#diskAggregatedList for
	// aggregated lists of persistent disks.
	Kind string `protobuf:"bytes,3,opt,name=kind" json:"kind,omitempty"`
	// [Output Only] This token allows you to get the next page of results
	// for list requests. If the number of results is larger than
	// maxResults, use the nextPageToken as a value for the query parameter
	// pageToken in the next list request. Subsequent list requests will
	// have their own nextPageToken to continue paging through the results.
	NextPageToken string `protobuf:"bytes,4,opt,name=nextPageToken" json:"nextPageToken,omitempty"`
	// [Output Only] Server-defined URL for this resource.
	SelfLink string                      `protobuf:"bytes,5,opt,name=selfLink" json:"selfLink,omitempty"`
	Warning  *DiskAggregatedList_Warning `protobuf:"bytes,6,opt,name=warning" json:"warning,omitempty"`
}

func (m *DiskAggregatedList) Reset()                    { *m = DiskAggregatedList{} }
func (m *DiskAggregatedList) String() string            { return proto.CompactTextString(m) }
func (*DiskAggregatedList) ProtoMessage()               {}
func (*DiskAggregatedList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{48} }

func (m *DiskAggregatedList) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *DiskAggregatedList) GetItems() map[string]*DisksScopedList {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *DiskAggregatedList) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *DiskAggregatedList) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

func (m *DiskAggregatedList) GetSelfLink() string {
	if m != nil {
		return m.SelfLink
	}
	return ""
}

func (m *DiskAggregatedList) GetWarning() *DiskAggregatedList_Warning {
	if m != nil {
		return m.Warning
	}
	return nil
}

// [Output Only] Informational warning message.
// [Output Only] Informational warning message.
type DiskAggregatedList_Warning struct {
	// [Output Only] A warning code, if applicable. For example, Compute
	// Engine returns NO_RESULTS_ON_PAGE if there are no results in the
	// response.
	// Valid values:
	//     CLEANUP_FAILED
	//     DEPRECATED_RESOURCE_USED
	//     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
	//     FIELD_VALUE_OVERRIDEN
	//     INJECTED_KERNELS_DEPRECATED
	//     NEXT_HOP_ADDRESS_NOT_ASSIGNED
	//     NEXT_HOP_CANNOT_IP_FORWARD
	//     NEXT_HOP_INSTANCE_NOT_FOUND
	//     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
	//     NEXT_HOP_NOT_RUNNING
	//     NOT_CRITICAL_ERROR
	//     NO_RESULTS_ON_PAGE
	//     REQUIRED_TOS_AGREEMENT
	//     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
	//     RESOURCE_NOT_DELETED
	//     SINGLE_INSTANCE_PROPERTY_TEMPLATE
	//     UNREACHABLE
	Code string                             `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Data []*DiskAggregatedList_Warning_Data `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
	// [Output Only] A human-readable description of the warning code.
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *DiskAggregatedList_Warning) Reset()                    { *m = DiskAggregatedList_Warning{} }
func (m *DiskAggregatedList_Warning) String() string            { return proto.CompactTextString(m) }
func (*DiskAggregatedList_Warning) ProtoMessage()               {}
func (*DiskAggregatedList_Warning) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{48, 1} }

func (m *DiskAggregatedList_Warning) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *DiskAggregatedList_Warning) GetData() []*DiskAggregatedList_Warning_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *DiskAggregatedList_Warning) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// [Output Only] Metadata about this warning in key: value format. For
// example:
// "data": [ { "key": "scope", "value": "zones/us-east1-d" }
type DiskAggregatedList_Warning_Data struct {
	// [Output Only] A key that provides more detail on the warning being
	// returned. For example, for warnings where there are no results in a
	// list request for a particular zone, this key might be scope and the
	// key value might be the zone name. Other examples might be a key
	// indicating a deprecated resource and a suggested replacement, or a
	// warning about invalid network settings (for example, if an instance
	// attempts to perform IP forwarding but is not enabled for IP
	// forwarding).
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	// [Output Only] A warning data value corresponding to the key.
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *DiskAggregatedList_Warning_Data) Reset()         { *m = DiskAggregatedList_Warning_Data{} }
func (m *DiskAggregatedList_Warning_Data) String() string { return proto.CompactTextString(m) }
func (*DiskAggregatedList_Warning_Data) ProtoMessage()    {}
func (*DiskAggregatedList_Warning_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{48, 1, 0}
}

func (m *DiskAggregatedList_Warning_Data) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *DiskAggregatedList_Warning_Data) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

// A list of Disk resources.
type DiskList struct {
	// [Output Only] Unique identifier for the resource; defined by the
	// server.
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// A list of Disk resources.
	Items []*Disk `protobuf:"bytes,2,rep,name=items" json:"items,omitempty"`
	// [Output Only] Type of resource. Always compute#diskList for lists of
	// disks.
	Kind string `protobuf:"bytes,3,opt,name=kind" json:"kind,omitempty"`
	// [Output Only] This token allows you to get the next page of results
	// for list requests. If the number of results is larger than
	// maxResults, use the nextPageToken as a value for the query parameter
	// pageToken in the next list request. Subsequent list requests will
	// have their own nextPageToken to continue paging through the results.
	NextPageToken string `protobuf:"bytes,4,opt,name=nextPageToken" json:"nextPageToken,omitempty"`
	// [Output Only] Server-defined URL for this resource.
	SelfLink string            `protobuf:"bytes,5,opt,name=selfLink" json:"selfLink,omitempty"`
	Warning  *DiskList_Warning `protobuf:"bytes,6,opt,name=warning" json:"warning,omitempty"`
}

func (m *DiskList) Reset()                    { *m = DiskList{} }
func (m *DiskList) String() string            { return proto.CompactTextString(m) }
func (*DiskList) ProtoMessage()               {}
func (*DiskList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{49} }

func (m *DiskList) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *DiskList) GetItems() []*Disk {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *DiskList) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *DiskList) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

func (m *DiskList) GetSelfLink() string {
	if m != nil {
		return m.SelfLink
	}
	return ""
}

func (m *DiskList) GetWarning() *DiskList_Warning {
	if m != nil {
		return m.Warning
	}
	return nil
}

// [Output Only] Informational warning message.
// [Output Only] Informational warning message.
type DiskList_Warning struct {
	// [Output Only] A warning code, if applicable. For example, Compute
	// Engine returns NO_RESULTS_ON_PAGE if there are no results in the
	// response.
	// Valid values:
	//     CLEANUP_FAILED
	//     DEPRECATED_RESOURCE_USED
	//     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
	//     FIELD_VALUE_OVERRIDEN
	//     INJECTED_KERNELS_DEPRECATED
	//     NEXT_HOP_ADDRESS_NOT_ASSIGNED
	//     NEXT_HOP_CANNOT_IP_FORWARD
	//     NEXT_HOP_INSTANCE_NOT_FOUND
	//     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
	//     NEXT_HOP_NOT_RUNNING
	//     NOT_CRITICAL_ERROR
	//     NO_RESULTS_ON_PAGE
	//     REQUIRED_TOS_AGREEMENT
	//     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
	//     RESOURCE_NOT_DELETED
	//     SINGLE_INSTANCE_PROPERTY_TEMPLATE
	//     UNREACHABLE
	Code string                   `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Data []*DiskList_Warning_Data `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
	// [Output Only] A human-readable description of the warning code.
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *DiskList_Warning) Reset()                    { *m = DiskList_Warning{} }
func (m *DiskList_Warning) String() string            { return proto.CompactTextString(m) }
func (*DiskList_Warning) ProtoMessage()               {}
func (*DiskList_Warning) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{49, 0} }

func (m *DiskList_Warning) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *DiskList_Warning) GetData() []*DiskList_Warning_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *DiskList_Warning) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// [Output Only] Metadata about this warning in key: value format. For
// example:
// "data": [ { "key": "scope", "value": "zones/us-east1-d" }
type DiskList_Warning_Data struct {
	// [Output Only] A key that provides more detail on the warning being
	// returned. For example, for warnings where there are no results in a
	// list request for a particular zone, this key might be scope and the
	// key value might be the zone name. Other examples might be a key
	// indicating a deprecated resource and a suggested replacement, or a
	// warning about invalid network settings (for example, if an instance
	// attempts to perform IP forwarding but is not enabled for IP
	// forwarding).
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	// [Output Only] A warning data value corresponding to the key.
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *DiskList_Warning_Data) Reset()                    { *m = DiskList_Warning_Data{} }
func (m *DiskList_Warning_Data) String() string            { return proto.CompactTextString(m) }
func (*DiskList_Warning_Data) ProtoMessage()               {}
func (*DiskList_Warning_Data) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{49, 0, 0} }

func (m *DiskList_Warning_Data) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *DiskList_Warning_Data) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type DiskMoveRequest struct {
	// The URL of the destination zone to move the disk. This can be a full
	// or partial URL. For example, the following are all valid URLs to a
	// zone:
	// - https://www.googleapis.com/compute/v1/projects/project/zones/zone
	// - projects/project/zones/zone
	// - zones/zone
	DestinationZone string `protobuf:"bytes,1,opt,name=destinationZone" json:"destinationZone,omitempty"`
	// The URL of the target disk to move. This can be a full or partial
	// URL. For example, the following are all valid URLs to a disk:
	// -
	// https://www.googleapis.com/compute/v1/projects/project/zones/zone/disks/disk
	// - projects/project/zones/zone/disks/disk
	// - zones/zone/disks/disk
	TargetDisk string `protobuf:"bytes,2,opt,name=targetDisk" json:"targetDisk,omitempty"`
}

func (m *DiskMoveRequest) Reset()                    { *m = DiskMoveRequest{} }
func (m *DiskMoveRequest) String() string            { return proto.CompactTextString(m) }
func (*DiskMoveRequest) ProtoMessage()               {}
func (*DiskMoveRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{50} }

func (m *DiskMoveRequest) GetDestinationZone() string {
	if m != nil {
		return m.DestinationZone
	}
	return ""
}

func (m *DiskMoveRequest) GetTargetDisk() string {
	if m != nil {
		return m.TargetDisk
	}
	return ""
}

// A DiskType resource.
type DiskType struct {
	// [Output Only] Creation timestamp in RFC3339 text format.
	CreationTimestamp string `protobuf:"bytes,1,opt,name=creationTimestamp" json:"creationTimestamp,omitempty"`
	// [Output Only] Server-defined default disk size in GB.
	DefaultDiskSizeGb string `protobuf:"bytes,2,opt,name=defaultDiskSizeGb" json:"defaultDiskSizeGb,omitempty"`
	// [Output Only] The deprecation status associated with this disk type.
	Deprecated *DeprecationStatus `protobuf:"bytes,3,opt,name=deprecated" json:"deprecated,omitempty"`
	// [Output Only] An optional description of this resource.
	Description string `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	// [Output Only] The unique identifier for the resource. This identifier
	// is defined by the server.
	Id string `protobuf:"bytes,5,opt,name=id" json:"id,omitempty"`
	// [Output Only] Type of the resource. Always compute#diskType for disk
	// types.
	Kind string `protobuf:"bytes,6,opt,name=kind" json:"kind,omitempty"`
	// [Output Only] Name of the resource.
	Name string `protobuf:"bytes,7,opt,name=name" json:"name,omitempty"`
	// [Output Only] Server-defined URL for the resource.
	SelfLink string `protobuf:"bytes,8,opt,name=selfLink" json:"selfLink,omitempty"`
	// [Output Only] An optional textual description of the valid disk size,
	// such as "10GB-10TB".
	ValidDiskSize string `protobuf:"bytes,9,opt,name=validDiskSize" json:"validDiskSize,omitempty"`
	// [Output Only] URL of the zone where the disk type resides.
	Zone string `protobuf:"bytes,10,opt,name=zone" json:"zone,omitempty"`
}

func (m *DiskType) Reset()                    { *m = DiskType{} }
func (m *DiskType) String() string            { return proto.CompactTextString(m) }
func (*DiskType) ProtoMessage()               {}
func (*DiskType) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{51} }

func (m *DiskType) GetCreationTimestamp() string {
	if m != nil {
		return m.CreationTimestamp
	}
	return ""
}

func (m *DiskType) GetDefaultDiskSizeGb() string {
	if m != nil {
		return m.DefaultDiskSizeGb
	}
	return ""
}

func (m *DiskType) GetDeprecated() *DeprecationStatus {
	if m != nil {
		return m.Deprecated
	}
	return nil
}

func (m *DiskType) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *DiskType) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *DiskType) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *DiskType) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DiskType) GetSelfLink() string {
	if m != nil {
		return m.SelfLink
	}
	return ""
}

func (m *DiskType) GetValidDiskSize() string {
	if m != nil {
		return m.ValidDiskSize
	}
	return ""
}

func (m *DiskType) GetZone() string {
	if m != nil {
		return m.Zone
	}
	return ""
}

type DiskTypeAggregatedList struct {
	// [Output Only] Unique identifier for the resource; defined by the
	// server.
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// A list of DiskTypesScopedList resources.
	Items map[string]*DiskTypesScopedList `protobuf:"bytes,2,rep,name=items" json:"items,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// [Output Only] Type of resource. Always
	// compute#diskTypeAggregatedList.
	Kind string `protobuf:"bytes,3,opt,name=kind" json:"kind,omitempty"`
	// [Output Only] This token allows you to get the next page of results
	// for list requests. If the number of results is larger than
	// maxResults, use the nextPageToken as a value for the query parameter
	// pageToken in the next list request. Subsequent list requests will
	// have their own nextPageToken to continue paging through the results.
	NextPageToken string `protobuf:"bytes,4,opt,name=nextPageToken" json:"nextPageToken,omitempty"`
	// [Output Only] Server-defined URL for this resource.
	SelfLink string                          `protobuf:"bytes,5,opt,name=selfLink" json:"selfLink,omitempty"`
	Warning  *DiskTypeAggregatedList_Warning `protobuf:"bytes,6,opt,name=warning" json:"warning,omitempty"`
}

func (m *DiskTypeAggregatedList) Reset()                    { *m = DiskTypeAggregatedList{} }
func (m *DiskTypeAggregatedList) String() string            { return proto.CompactTextString(m) }
func (*DiskTypeAggregatedList) ProtoMessage()               {}
func (*DiskTypeAggregatedList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{52} }

func (m *DiskTypeAggregatedList) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *DiskTypeAggregatedList) GetItems() map[string]*DiskTypesScopedList {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *DiskTypeAggregatedList) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *DiskTypeAggregatedList) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

func (m *DiskTypeAggregatedList) GetSelfLink() string {
	if m != nil {
		return m.SelfLink
	}
	return ""
}

func (m *DiskTypeAggregatedList) GetWarning() *DiskTypeAggregatedList_Warning {
	if m != nil {
		return m.Warning
	}
	return nil
}

// [Output Only] Informational warning message.
// [Output Only] Informational warning message.
type DiskTypeAggregatedList_Warning struct {
	// [Output Only] A warning code, if applicable. For example, Compute
	// Engine returns NO_RESULTS_ON_PAGE if there are no results in the
	// response.
	// Valid values:
	//     CLEANUP_FAILED
	//     DEPRECATED_RESOURCE_USED
	//     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
	//     FIELD_VALUE_OVERRIDEN
	//     INJECTED_KERNELS_DEPRECATED
	//     NEXT_HOP_ADDRESS_NOT_ASSIGNED
	//     NEXT_HOP_CANNOT_IP_FORWARD
	//     NEXT_HOP_INSTANCE_NOT_FOUND
	//     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
	//     NEXT_HOP_NOT_RUNNING
	//     NOT_CRITICAL_ERROR
	//     NO_RESULTS_ON_PAGE
	//     REQUIRED_TOS_AGREEMENT
	//     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
	//     RESOURCE_NOT_DELETED
	//     SINGLE_INSTANCE_PROPERTY_TEMPLATE
	//     UNREACHABLE
	Code string                                 `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Data []*DiskTypeAggregatedList_Warning_Data `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
	// [Output Only] A human-readable description of the warning code.
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *DiskTypeAggregatedList_Warning) Reset()         { *m = DiskTypeAggregatedList_Warning{} }
func (m *DiskTypeAggregatedList_Warning) String() string { return proto.CompactTextString(m) }
func (*DiskTypeAggregatedList_Warning) ProtoMessage()    {}
func (*DiskTypeAggregatedList_Warning) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{52, 1}
}

func (m *DiskTypeAggregatedList_Warning) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *DiskTypeAggregatedList_Warning) GetData() []*DiskTypeAggregatedList_Warning_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *DiskTypeAggregatedList_Warning) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// [Output Only] Metadata about this warning in key: value format. For
// example:
// "data": [ { "key": "scope", "value": "zones/us-east1-d" }
type DiskTypeAggregatedList_Warning_Data struct {
	// [Output Only] A key that provides more detail on the warning being
	// returned. For example, for warnings where there are no results in a
	// list request for a particular zone, this key might be scope and the
	// key value might be the zone name. Other examples might be a key
	// indicating a deprecated resource and a suggested replacement, or a
	// warning about invalid network settings (for example, if an instance
	// attempts to perform IP forwarding but is not enabled for IP
	// forwarding).
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	// [Output Only] A warning data value corresponding to the key.
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *DiskTypeAggregatedList_Warning_Data) Reset()         { *m = DiskTypeAggregatedList_Warning_Data{} }
func (m *DiskTypeAggregatedList_Warning_Data) String() string { return proto.CompactTextString(m) }
func (*DiskTypeAggregatedList_Warning_Data) ProtoMessage()    {}
func (*DiskTypeAggregatedList_Warning_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{52, 1, 0}
}

func (m *DiskTypeAggregatedList_Warning_Data) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *DiskTypeAggregatedList_Warning_Data) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

// Contains a list of disk types.
type DiskTypeList struct {
	// [Output Only] Unique identifier for the resource; defined by the
	// server.
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// A list of DiskType resources.
	Items []*DiskType `protobuf:"bytes,2,rep,name=items" json:"items,omitempty"`
	// [Output Only] Type of resource. Always compute#diskTypeList for disk
	// types.
	Kind string `protobuf:"bytes,3,opt,name=kind" json:"kind,omitempty"`
	// [Output Only] This token allows you to get the next page of results
	// for list requests. If the number of results is larger than
	// maxResults, use the nextPageToken as a value for the query parameter
	// pageToken in the next list request. Subsequent list requests will
	// have their own nextPageToken to continue paging through the results.
	NextPageToken string `protobuf:"bytes,4,opt,name=nextPageToken" json:"nextPageToken,omitempty"`
	// [Output Only] Server-defined URL for this resource.
	SelfLink string                `protobuf:"bytes,5,opt,name=selfLink" json:"selfLink,omitempty"`
	Warning  *DiskTypeList_Warning `protobuf:"bytes,6,opt,name=warning" json:"warning,omitempty"`
}

func (m *DiskTypeList) Reset()                    { *m = DiskTypeList{} }
func (m *DiskTypeList) String() string            { return proto.CompactTextString(m) }
func (*DiskTypeList) ProtoMessage()               {}
func (*DiskTypeList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{53} }

func (m *DiskTypeList) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *DiskTypeList) GetItems() []*DiskType {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *DiskTypeList) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *DiskTypeList) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

func (m *DiskTypeList) GetSelfLink() string {
	if m != nil {
		return m.SelfLink
	}
	return ""
}

func (m *DiskTypeList) GetWarning() *DiskTypeList_Warning {
	if m != nil {
		return m.Warning
	}
	return nil
}

// [Output Only] Informational warning message.
// [Output Only] Informational warning message.
type DiskTypeList_Warning struct {
	// [Output Only] A warning code, if applicable. For example, Compute
	// Engine returns NO_RESULTS_ON_PAGE if there are no results in the
	// response.
	// Valid values:
	//     CLEANUP_FAILED
	//     DEPRECATED_RESOURCE_USED
	//     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
	//     FIELD_VALUE_OVERRIDEN
	//     INJECTED_KERNELS_DEPRECATED
	//     NEXT_HOP_ADDRESS_NOT_ASSIGNED
	//     NEXT_HOP_CANNOT_IP_FORWARD
	//     NEXT_HOP_INSTANCE_NOT_FOUND
	//     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
	//     NEXT_HOP_NOT_RUNNING
	//     NOT_CRITICAL_ERROR
	//     NO_RESULTS_ON_PAGE
	//     REQUIRED_TOS_AGREEMENT
	//     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
	//     RESOURCE_NOT_DELETED
	//     SINGLE_INSTANCE_PROPERTY_TEMPLATE
	//     UNREACHABLE
	Code string                       `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Data []*DiskTypeList_Warning_Data `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
	// [Output Only] A human-readable description of the warning code.
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *DiskTypeList_Warning) Reset()                    { *m = DiskTypeList_Warning{} }
func (m *DiskTypeList_Warning) String() string            { return proto.CompactTextString(m) }
func (*DiskTypeList_Warning) ProtoMessage()               {}
func (*DiskTypeList_Warning) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{53, 0} }

func (m *DiskTypeList_Warning) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *DiskTypeList_Warning) GetData() []*DiskTypeList_Warning_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *DiskTypeList_Warning) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// [Output Only] Metadata about this warning in key: value format. For
// example:
// "data": [ { "key": "scope", "value": "zones/us-east1-d" }
type DiskTypeList_Warning_Data struct {
	// [Output Only] A key that provides more detail on the warning being
	// returned. For example, for warnings where there are no results in a
	// list request for a particular zone, this key might be scope and the
	// key value might be the zone name. Other examples might be a key
	// indicating a deprecated resource and a suggested replacement, or a
	// warning about invalid network settings (for example, if an instance
	// attempts to perform IP forwarding but is not enabled for IP
	// forwarding).
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	// [Output Only] A warning data value corresponding to the key.
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *DiskTypeList_Warning_Data) Reset()         { *m = DiskTypeList_Warning_Data{} }
func (m *DiskTypeList_Warning_Data) String() string { return proto.CompactTextString(m) }
func (*DiskTypeList_Warning_Data) ProtoMessage()    {}
func (*DiskTypeList_Warning_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{53, 0, 0}
}

func (m *DiskTypeList_Warning_Data) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *DiskTypeList_Warning_Data) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type DiskTypesScopedList struct {
	// [Output Only] List of disk types contained in this scope.
	DiskTypes []*DiskType                  `protobuf:"bytes,1,rep,name=diskTypes" json:"diskTypes,omitempty"`
	Warning   *DiskTypesScopedList_Warning `protobuf:"bytes,2,opt,name=warning" json:"warning,omitempty"`
}

func (m *DiskTypesScopedList) Reset()                    { *m = DiskTypesScopedList{} }
func (m *DiskTypesScopedList) String() string            { return proto.CompactTextString(m) }
func (*DiskTypesScopedList) ProtoMessage()               {}
func (*DiskTypesScopedList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{54} }

func (m *DiskTypesScopedList) GetDiskTypes() []*DiskType {
	if m != nil {
		return m.DiskTypes
	}
	return nil
}

func (m *DiskTypesScopedList) GetWarning() *DiskTypesScopedList_Warning {
	if m != nil {
		return m.Warning
	}
	return nil
}

// [Output Only] Informational warning which replaces the list of disk
// types when the list is empty.
// [Output Only] Informational warning which replaces the list of disk
// types when the list is empty.
type DiskTypesScopedList_Warning struct {
	// [Output Only] A warning code, if applicable. For example, Compute
	// Engine returns NO_RESULTS_ON_PAGE if there are no results in the
	// response.
	// Valid values:
	//     CLEANUP_FAILED
	//     DEPRECATED_RESOURCE_USED
	//     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
	//     FIELD_VALUE_OVERRIDEN
	//     INJECTED_KERNELS_DEPRECATED
	//     NEXT_HOP_ADDRESS_NOT_ASSIGNED
	//     NEXT_HOP_CANNOT_IP_FORWARD
	//     NEXT_HOP_INSTANCE_NOT_FOUND
	//     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
	//     NEXT_HOP_NOT_RUNNING
	//     NOT_CRITICAL_ERROR
	//     NO_RESULTS_ON_PAGE
	//     REQUIRED_TOS_AGREEMENT
	//     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
	//     RESOURCE_NOT_DELETED
	//     SINGLE_INSTANCE_PROPERTY_TEMPLATE
	//     UNREACHABLE
	Code string                              `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Data []*DiskTypesScopedList_Warning_Data `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
	// [Output Only] A human-readable description of the warning code.
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *DiskTypesScopedList_Warning) Reset()                    { *m = DiskTypesScopedList_Warning{} }
func (m *DiskTypesScopedList_Warning) String() string            { return proto.CompactTextString(m) }
func (*DiskTypesScopedList_Warning) ProtoMessage()               {}
func (*DiskTypesScopedList_Warning) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{54, 0} }

func (m *DiskTypesScopedList_Warning) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *DiskTypesScopedList_Warning) GetData() []*DiskTypesScopedList_Warning_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *DiskTypesScopedList_Warning) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// [Output Only] Metadata about this warning in key: value format. For
// example:
// "data": [ { "key": "scope", "value": "zones/us-east1-d" }
type DiskTypesScopedList_Warning_Data struct {
	// [Output Only] A key that provides more detail on the warning being
	// returned. For example, for warnings where there are no results in a
	// list request for a particular zone, this key might be scope and the
	// key value might be the zone name. Other examples might be a key
	// indicating a deprecated resource and a suggested replacement, or a
	// warning about invalid network settings (for example, if an instance
	// attempts to perform IP forwarding but is not enabled for IP
	// forwarding).
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	// [Output Only] A warning data value corresponding to the key.
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *DiskTypesScopedList_Warning_Data) Reset()         { *m = DiskTypesScopedList_Warning_Data{} }
func (m *DiskTypesScopedList_Warning_Data) String() string { return proto.CompactTextString(m) }
func (*DiskTypesScopedList_Warning_Data) ProtoMessage()    {}
func (*DiskTypesScopedList_Warning_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{54, 0, 0}
}

func (m *DiskTypesScopedList_Warning_Data) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *DiskTypesScopedList_Warning_Data) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type DisksResizeRequest struct {
	// The new size of the persistent disk, which is specified in GB.
	SizeGb string `protobuf:"bytes,1,opt,name=sizeGb" json:"sizeGb,omitempty"`
}

func (m *DisksResizeRequest) Reset()                    { *m = DisksResizeRequest{} }
func (m *DisksResizeRequest) String() string            { return proto.CompactTextString(m) }
func (*DisksResizeRequest) ProtoMessage()               {}
func (*DisksResizeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{55} }

func (m *DisksResizeRequest) GetSizeGb() string {
	if m != nil {
		return m.SizeGb
	}
	return ""
}

type DisksScopedList struct {
	// [Output Only] List of disks contained in this scope.
	Disks   []*Disk                  `protobuf:"bytes,1,rep,name=disks" json:"disks,omitempty"`
	Warning *DisksScopedList_Warning `protobuf:"bytes,2,opt,name=warning" json:"warning,omitempty"`
}

func (m *DisksScopedList) Reset()                    { *m = DisksScopedList{} }
func (m *DisksScopedList) String() string            { return proto.CompactTextString(m) }
func (*DisksScopedList) ProtoMessage()               {}
func (*DisksScopedList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{56} }

func (m *DisksScopedList) GetDisks() []*Disk {
	if m != nil {
		return m.Disks
	}
	return nil
}

func (m *DisksScopedList) GetWarning() *DisksScopedList_Warning {
	if m != nil {
		return m.Warning
	}
	return nil
}

// [Output Only] Informational warning which replaces the list of disks
// when the list is empty.
// [Output Only] Informational warning which replaces the list of disks
// when the list is empty.
type DisksScopedList_Warning struct {
	// [Output Only] A warning code, if applicable. For example, Compute
	// Engine returns NO_RESULTS_ON_PAGE if there are no results in the
	// response.
	// Valid values:
	//     CLEANUP_FAILED
	//     DEPRECATED_RESOURCE_USED
	//     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
	//     FIELD_VALUE_OVERRIDEN
	//     INJECTED_KERNELS_DEPRECATED
	//     NEXT_HOP_ADDRESS_NOT_ASSIGNED
	//     NEXT_HOP_CANNOT_IP_FORWARD
	//     NEXT_HOP_INSTANCE_NOT_FOUND
	//     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
	//     NEXT_HOP_NOT_RUNNING
	//     NOT_CRITICAL_ERROR
	//     NO_RESULTS_ON_PAGE
	//     REQUIRED_TOS_AGREEMENT
	//     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
	//     RESOURCE_NOT_DELETED
	//     SINGLE_INSTANCE_PROPERTY_TEMPLATE
	//     UNREACHABLE
	Code string                          `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Data []*DisksScopedList_Warning_Data `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
	// [Output Only] A human-readable description of the warning code.
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *DisksScopedList_Warning) Reset()                    { *m = DisksScopedList_Warning{} }
func (m *DisksScopedList_Warning) String() string            { return proto.CompactTextString(m) }
func (*DisksScopedList_Warning) ProtoMessage()               {}
func (*DisksScopedList_Warning) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{56, 0} }

func (m *DisksScopedList_Warning) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *DisksScopedList_Warning) GetData() []*DisksScopedList_Warning_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *DisksScopedList_Warning) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// [Output Only] Metadata about this warning in key: value format. For
// example:
// "data": [ { "key": "scope", "value": "zones/us-east1-d" }
type DisksScopedList_Warning_Data struct {
	// [Output Only] A key that provides more detail on the warning being
	// returned. For example, for warnings where there are no results in a
	// list request for a particular zone, this key might be scope and the
	// key value might be the zone name. Other examples might be a key
	// indicating a deprecated resource and a suggested replacement, or a
	// warning about invalid network settings (for example, if an instance
	// attempts to perform IP forwarding but is not enabled for IP
	// forwarding).
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	// [Output Only] A warning data value corresponding to the key.
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *DisksScopedList_Warning_Data) Reset()         { *m = DisksScopedList_Warning_Data{} }
func (m *DisksScopedList_Warning_Data) String() string { return proto.CompactTextString(m) }
func (*DisksScopedList_Warning_Data) ProtoMessage()    {}
func (*DisksScopedList_Warning_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{56, 0, 0}
}

func (m *DisksScopedList_Warning_Data) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *DisksScopedList_Warning_Data) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type DistributionPolicy struct {
	Zones []*DistributionPolicyZoneConfiguration `protobuf:"bytes,1,rep,name=zones" json:"zones,omitempty"`
}

func (m *DistributionPolicy) Reset()                    { *m = DistributionPolicy{} }
func (m *DistributionPolicy) String() string            { return proto.CompactTextString(m) }
func (*DistributionPolicy) ProtoMessage()               {}
func (*DistributionPolicy) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{57} }

func (m *DistributionPolicy) GetZones() []*DistributionPolicyZoneConfiguration {
	if m != nil {
		return m.Zones
	}
	return nil
}

type DistributionPolicyZoneConfiguration struct {
	// URL of the zone where managed instance group is spawning instances
	// (for regional resources). Zone has to belong to the region where
	// managed instance group is located.
	Zone string `protobuf:"bytes,1,opt,name=zone" json:"zone,omitempty"`
}

func (m *DistributionPolicyZoneConfiguration) Reset()         { *m = DistributionPolicyZoneConfiguration{} }
func (m *DistributionPolicyZoneConfiguration) String() string { return proto.CompactTextString(m) }
func (*DistributionPolicyZoneConfiguration) ProtoMessage()    {}
func (*DistributionPolicyZoneConfiguration) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{58}
}

func (m *DistributionPolicyZoneConfiguration) GetZone() string {
	if m != nil {
		return m.Zone
	}
	return ""
}

// Represents an expression text. Example:
//
// title: "User account presence" description: "Determines whether the
// request has a user account" expression: "size(request.user) > 0"
type Expr struct {
	// An optional description of the expression. This is a longer text
	// which describes the expression, e.g. when hovered over it in a UI.
	Description string `protobuf:"bytes,1,opt,name=description" json:"description,omitempty"`
	// Textual representation of an expression in Common Expression Language
	// syntax.
	//
	// The application context of the containing message determines which
	// well-known feature set of CEL is supported.
	Expression string `protobuf:"bytes,2,opt,name=expression" json:"expression,omitempty"`
	// An optional string indicating the location of the expression for
	// error reporting, e.g. a file name and a position in the file.
	Location string `protobuf:"bytes,3,opt,name=location" json:"location,omitempty"`
	// An optional title for the expression, i.e. a short string describing
	// its purpose. This can be used e.g. in UIs which allow to enter the
	// expression.
	Title string `protobuf:"bytes,4,opt,name=title" json:"title,omitempty"`
}

func (m *Expr) Reset()                    { *m = Expr{} }
func (m *Expr) String() string            { return proto.CompactTextString(m) }
func (*Expr) ProtoMessage()               {}
func (*Expr) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{59} }

func (m *Expr) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Expr) GetExpression() string {
	if m != nil {
		return m.Expression
	}
	return ""
}

func (m *Expr) GetLocation() string {
	if m != nil {
		return m.Location
	}
	return ""
}

func (m *Expr) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

// Represents a Firewall resource.
type Firewall struct {
	Allowed []*Firewall_Allowed `protobuf:"bytes,1,rep,name=allowed" json:"allowed,omitempty"`
	// [Output Only] Creation timestamp in RFC3339 text format.
	CreationTimestamp string             `protobuf:"bytes,2,opt,name=creationTimestamp" json:"creationTimestamp,omitempty"`
	Denied            []*Firewall_Denied `protobuf:"bytes,3,rep,name=denied" json:"denied,omitempty"`
	// An optional description of this resource. Provide this property when
	// you create the resource.
	Description string `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	// If destination ranges are specified, the firewall will apply only to
	// traffic that has destination IP address in these ranges. These ranges
	// must be expressed in CIDR format. Only IPv4 is supported.
	DestinationRanges []string `protobuf:"bytes,5,rep,name=destinationRanges" json:"destinationRanges,omitempty"`
	// Direction of traffic to which this firewall applies; default is
	// INGRESS. Note: For INGRESS traffic, it is NOT supported to specify
	// destinationRanges; For EGRESS traffic, it is NOT supported to specify
	// sourceRanges OR sourceTags.
	// Valid values:
	//     EGRESS
	//     INGRESS
	Direction string `protobuf:"bytes,6,opt,name=direction" json:"direction,omitempty"`
	// [Output Only] The unique identifier for the resource. This identifier
	// is defined by the server.
	Id string `protobuf:"bytes,7,opt,name=id" json:"id,omitempty"`
	// [Output Only] Type of the resource. Always compute#firewall for
	// firewall rules.
	Kind string `protobuf:"bytes,8,opt,name=kind" json:"kind,omitempty"`
	// Name of the resource; provided by the client when the resource is
	// created. The name must be 1-63 characters long, and comply with
	// RFC1035. Specifically, the name must be 1-63 characters long and
	// match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means
	// the first character must be a lowercase letter, and all following
	// characters must be a dash, lowercase letter, or digit, except the
	// last character, which cannot be a dash.
	Name string `protobuf:"bytes,9,opt,name=name" json:"name,omitempty"`
	// URL of the network resource for this firewall rule. If not specified
	// when creating a firewall rule, the default network is used:
	// global/networks/default
	// If you choose to specify this property, you can specify the network
	// as a full or partial URL. For example, the following are all valid
	// URLs:
	// -
	// https://www.googleapis.com/compute/v1/projects/myproject/global/networks/my-network
	// - projects/myproject/global/networks/my-network
	// - global/networks/default
	Network string `protobuf:"bytes,10,opt,name=network" json:"network,omitempty"`
	// Priority for this rule. This is an integer between 0 and 65535, both
	// inclusive. When not specified, the value assumed is 1000. Relative
	// priorities determine precedence of conflicting rules. Lower value of
	// priority implies higher precedence (eg, a rule with priority 0 has
	// higher precedence than a rule with priority 1). DENY rules take
	// precedence over ALLOW rules having equal priority.
	Priority int32 `protobuf:"varint,11,opt,name=priority" json:"priority,omitempty"`
	// [Output Only] Server-defined URL for the resource.
	SelfLink string `protobuf:"bytes,12,opt,name=selfLink" json:"selfLink,omitempty"`
	// If source ranges are specified, the firewall will apply only to
	// traffic that has source IP address in these ranges. These ranges must
	// be expressed in CIDR format. One or both of sourceRanges and
	// sourceTags may be set. If both properties are set, the firewall will
	// apply to traffic that has source IP address within sourceRanges OR
	// the source IP that belongs to a tag listed in the sourceTags
	// property. The connection does not need to match both properties for
	// the firewall to apply. Only IPv4 is supported.
	SourceRanges []string `protobuf:"bytes,13,rep,name=sourceRanges" json:"sourceRanges,omitempty"`
	// If source service accounts are specified, the firewall will apply
	// only to traffic originating from an instance with a service account
	// in this list. Source service accounts cannot be used to control
	// traffic to an instance's external IP address because service accounts
	// are associated with an instance, not an IP address. sourceRanges can
	// be set at the same time as sourceServiceAccounts. If both are set,
	// the firewall will apply to traffic that has source IP address within
	// sourceRanges OR the source IP belongs to an instance with service
	// account listed in sourceServiceAccount. The connection does not need
	// to match both properties for the firewall to apply.
	// sourceServiceAccounts cannot be used at the same time as sourceTags
	// or targetTags.
	SourceServiceAccounts []string `protobuf:"bytes,14,rep,name=sourceServiceAccounts" json:"sourceServiceAccounts,omitempty"`
	// If source tags are specified, the firewall rule applies only to
	// traffic with source IPs that match the primary network interfaces of
	// VM instances that have the tag and are in the same VPC network.
	// Source tags cannot be used to control traffic to an instance's
	// external IP address, it only applies to traffic between instances in
	// the same virtual network. Because tags are associated with instances,
	// not IP addresses. One or both of sourceRanges and sourceTags may be
	// set. If both properties are set, the firewall will apply to traffic
	// that has source IP address within sourceRanges OR the source IP that
	// belongs to a tag listed in the sourceTags property. The connection
	// does not need to match both properties for the firewall to apply.
	SourceTags []string `protobuf:"bytes,15,rep,name=sourceTags" json:"sourceTags,omitempty"`
	// A list of service accounts indicating sets of instances located in
	// the network that may make network connections as specified in
	// allowed[]. targetServiceAccounts cannot be used at the same time as
	// targetTags or sourceTags. If neither targetServiceAccounts nor
	// targetTags are specified, the firewall rule applies to all instances
	// on the specified network.
	TargetServiceAccounts []string `protobuf:"bytes,16,rep,name=targetServiceAccounts" json:"targetServiceAccounts,omitempty"`
	// A list of instance tags indicating sets of instances located in the
	// network that may make network connections as specified in allowed[].
	// If no targetTags are specified, the firewall rule applies to all
	// instances on the specified network.
	TargetTags []string `protobuf:"bytes,17,rep,name=targetTags" json:"targetTags,omitempty"`
}

func (m *Firewall) Reset()                    { *m = Firewall{} }
func (m *Firewall) String() string            { return proto.CompactTextString(m) }
func (*Firewall) ProtoMessage()               {}
func (*Firewall) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{60} }

func (m *Firewall) GetAllowed() []*Firewall_Allowed {
	if m != nil {
		return m.Allowed
	}
	return nil
}

func (m *Firewall) GetCreationTimestamp() string {
	if m != nil {
		return m.CreationTimestamp
	}
	return ""
}

func (m *Firewall) GetDenied() []*Firewall_Denied {
	if m != nil {
		return m.Denied
	}
	return nil
}

func (m *Firewall) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Firewall) GetDestinationRanges() []string {
	if m != nil {
		return m.DestinationRanges
	}
	return nil
}

func (m *Firewall) GetDirection() string {
	if m != nil {
		return m.Direction
	}
	return ""
}

func (m *Firewall) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Firewall) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *Firewall) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Firewall) GetNetwork() string {
	if m != nil {
		return m.Network
	}
	return ""
}

func (m *Firewall) GetPriority() int32 {
	if m != nil {
		return m.Priority
	}
	return 0
}

func (m *Firewall) GetSelfLink() string {
	if m != nil {
		return m.SelfLink
	}
	return ""
}

func (m *Firewall) GetSourceRanges() []string {
	if m != nil {
		return m.SourceRanges
	}
	return nil
}

func (m *Firewall) GetSourceServiceAccounts() []string {
	if m != nil {
		return m.SourceServiceAccounts
	}
	return nil
}

func (m *Firewall) GetSourceTags() []string {
	if m != nil {
		return m.SourceTags
	}
	return nil
}

func (m *Firewall) GetTargetServiceAccounts() []string {
	if m != nil {
		return m.TargetServiceAccounts
	}
	return nil
}

func (m *Firewall) GetTargetTags() []string {
	if m != nil {
		return m.TargetTags
	}
	return nil
}

// The list of ALLOW rules specified by this firewall. Each rule
// specifies a protocol and port-range tuple that describes a permitted
// connection.
type Firewall_Allowed struct {
	// The IP protocol to which this rule applies. The protocol type is
	// required when creating a firewall rule. This value can either be one
	// of the following well known protocol strings (tcp, udp, icmp, esp,
	// ah, ipip, sctp), or the IP protocol number.
	IPProtocol string `protobuf:"bytes,1,opt,name=IPProtocol" json:"IPProtocol,omitempty"`
	// An optional list of ports to which this rule applies. This field is
	// only applicable for UDP or TCP protocol. Each entry must be either an
	// integer or a range. If not specified, this rule applies to
	// connections through any port.
	//
	// Example inputs include: ["22"], ["80","443"], and ["12345-12349"].
	Ports []string `protobuf:"bytes,2,rep,name=ports" json:"ports,omitempty"`
}

func (m *Firewall_Allowed) Reset()                    { *m = Firewall_Allowed{} }
func (m *Firewall_Allowed) String() string            { return proto.CompactTextString(m) }
func (*Firewall_Allowed) ProtoMessage()               {}
func (*Firewall_Allowed) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{60, 0} }

func (m *Firewall_Allowed) GetIPProtocol() string {
	if m != nil {
		return m.IPProtocol
	}
	return ""
}

func (m *Firewall_Allowed) GetPorts() []string {
	if m != nil {
		return m.Ports
	}
	return nil
}

// The list of DENY rules specified by this firewall. Each rule
// specifies a protocol and port-range tuple that describes a permitted
// connection.
type Firewall_Denied struct {
	// The IP protocol to which this rule applies. The protocol type is
	// required when creating a firewall rule. This value can either be one
	// of the following well known protocol strings (tcp, udp, icmp, esp,
	// ah, ipip, sctp), or the IP protocol number.
	IPProtocol string `protobuf:"bytes,1,opt,name=IPProtocol" json:"IPProtocol,omitempty"`
	// An optional list of ports to which this rule applies. This field is
	// only applicable for UDP or TCP protocol. Each entry must be either an
	// integer or a range. If not specified, this rule applies to
	// connections through any port.
	//
	// Example inputs include: ["22"], ["80","443"], and ["12345-12349"].
	Ports []string `protobuf:"bytes,2,rep,name=ports" json:"ports,omitempty"`
}

func (m *Firewall_Denied) Reset()                    { *m = Firewall_Denied{} }
func (m *Firewall_Denied) String() string            { return proto.CompactTextString(m) }
func (*Firewall_Denied) ProtoMessage()               {}
func (*Firewall_Denied) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{60, 1} }

func (m *Firewall_Denied) GetIPProtocol() string {
	if m != nil {
		return m.IPProtocol
	}
	return ""
}

func (m *Firewall_Denied) GetPorts() []string {
	if m != nil {
		return m.Ports
	}
	return nil
}

// Contains a list of firewalls.
type FirewallList struct {
	// [Output Only] Unique identifier for the resource; defined by the
	// server.
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// A list of Firewall resources.
	Items []*Firewall `protobuf:"bytes,2,rep,name=items" json:"items,omitempty"`
	// [Output Only] Type of resource. Always compute#firewallList for lists
	// of firewalls.
	Kind string `protobuf:"bytes,3,opt,name=kind" json:"kind,omitempty"`
	// [Output Only] This token allows you to get the next page of results
	// for list requests. If the number of results is larger than
	// maxResults, use the nextPageToken as a value for the query parameter
	// pageToken in the next list request. Subsequent list requests will
	// have their own nextPageToken to continue paging through the results.
	NextPageToken string `protobuf:"bytes,4,opt,name=nextPageToken" json:"nextPageToken,omitempty"`
	// [Output Only] Server-defined URL for this resource.
	SelfLink string                `protobuf:"bytes,5,opt,name=selfLink" json:"selfLink,omitempty"`
	Warning  *FirewallList_Warning `protobuf:"bytes,6,opt,name=warning" json:"warning,omitempty"`
}

func (m *FirewallList) Reset()                    { *m = FirewallList{} }
func (m *FirewallList) String() string            { return proto.CompactTextString(m) }
func (*FirewallList) ProtoMessage()               {}
func (*FirewallList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{61} }

func (m *FirewallList) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *FirewallList) GetItems() []*Firewall {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *FirewallList) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *FirewallList) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

func (m *FirewallList) GetSelfLink() string {
	if m != nil {
		return m.SelfLink
	}
	return ""
}

func (m *FirewallList) GetWarning() *FirewallList_Warning {
	if m != nil {
		return m.Warning
	}
	return nil
}

// [Output Only] Informational warning message.
// [Output Only] Informational warning message.
type FirewallList_Warning struct {
	// [Output Only] A warning code, if applicable. For example, Compute
	// Engine returns NO_RESULTS_ON_PAGE if there are no results in the
	// response.
	// Valid values:
	//     CLEANUP_FAILED
	//     DEPRECATED_RESOURCE_USED
	//     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
	//     FIELD_VALUE_OVERRIDEN
	//     INJECTED_KERNELS_DEPRECATED
	//     NEXT_HOP_ADDRESS_NOT_ASSIGNED
	//     NEXT_HOP_CANNOT_IP_FORWARD
	//     NEXT_HOP_INSTANCE_NOT_FOUND
	//     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
	//     NEXT_HOP_NOT_RUNNING
	//     NOT_CRITICAL_ERROR
	//     NO_RESULTS_ON_PAGE
	//     REQUIRED_TOS_AGREEMENT
	//     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
	//     RESOURCE_NOT_DELETED
	//     SINGLE_INSTANCE_PROPERTY_TEMPLATE
	//     UNREACHABLE
	Code string                       `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Data []*FirewallList_Warning_Data `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
	// [Output Only] A human-readable description of the warning code.
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *FirewallList_Warning) Reset()                    { *m = FirewallList_Warning{} }
func (m *FirewallList_Warning) String() string            { return proto.CompactTextString(m) }
func (*FirewallList_Warning) ProtoMessage()               {}
func (*FirewallList_Warning) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{61, 0} }

func (m *FirewallList_Warning) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *FirewallList_Warning) GetData() []*FirewallList_Warning_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *FirewallList_Warning) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// [Output Only] Metadata about this warning in key: value format. For
// example:
// "data": [ { "key": "scope", "value": "zones/us-east1-d" }
type FirewallList_Warning_Data struct {
	// [Output Only] A key that provides more detail on the warning being
	// returned. For example, for warnings where there are no results in a
	// list request for a particular zone, this key might be scope and the
	// key value might be the zone name. Other examples might be a key
	// indicating a deprecated resource and a suggested replacement, or a
	// warning about invalid network settings (for example, if an instance
	// attempts to perform IP forwarding but is not enabled for IP
	// forwarding).
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	// [Output Only] A warning data value corresponding to the key.
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *FirewallList_Warning_Data) Reset()         { *m = FirewallList_Warning_Data{} }
func (m *FirewallList_Warning_Data) String() string { return proto.CompactTextString(m) }
func (*FirewallList_Warning_Data) ProtoMessage()    {}
func (*FirewallList_Warning_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{61, 0, 0}
}

func (m *FirewallList_Warning_Data) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *FirewallList_Warning_Data) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

// Encapsulates numeric value that can be either absolute or relative.
type FixedOrPercent struct {
	// [Output Only] Absolute value calculated based on mode: mode = fixed
	// -> calculated = fixed = percent -> calculated = ceiling(percent/100 *
	// base_value)
	Calculated int32 `protobuf:"varint,1,opt,name=calculated" json:"calculated,omitempty"`
	// fixed must be non-negative.
	Fixed int32 `protobuf:"varint,2,opt,name=fixed" json:"fixed,omitempty"`
	// percent must belong to [0, 100].
	Percent int32 `protobuf:"varint,3,opt,name=percent" json:"percent,omitempty"`
}

func (m *FixedOrPercent) Reset()                    { *m = FixedOrPercent{} }
func (m *FixedOrPercent) String() string            { return proto.CompactTextString(m) }
func (*FixedOrPercent) ProtoMessage()               {}
func (*FixedOrPercent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{62} }

func (m *FixedOrPercent) GetCalculated() int32 {
	if m != nil {
		return m.Calculated
	}
	return 0
}

func (m *FixedOrPercent) GetFixed() int32 {
	if m != nil {
		return m.Fixed
	}
	return 0
}

func (m *FixedOrPercent) GetPercent() int32 {
	if m != nil {
		return m.Percent
	}
	return 0
}

// A ForwardingRule resource. A ForwardingRule resource specifies which
// pool of target virtual machines to forward a packet to if it matches
// the given [IPAddress, IPProtocol, ports] tuple.
type ForwardingRule struct {
	// The IP address that this forwarding rule is serving on behalf of.
	//
	// For global forwarding rules, the address must be a global IP. For
	// regional forwarding rules, the address must live in the same region
	// as the forwarding rule. By default, this field is empty and an
	// ephemeral IPv4 address from the same scope (global or regional) will
	// be assigned. A regional forwarding rule supports IPv4 only. A global
	// forwarding rule supports either IPv4 or IPv6.
	//
	// When the load balancing scheme is INTERNAL, this can only be an RFC
	// 1918 IP address belonging to the network/subnetwork configured for
	// the forwarding rule. A reserved address cannot be used. If the field
	// is empty, the IP address will be automatically allocated from the
	// internal IP range of the subnetwork or network configured for this
	// forwarding rule.
	IPAddress string `protobuf:"bytes,1,opt,name=IPAddress" json:"IPAddress,omitempty"`
	// The IP protocol to which this rule applies. Valid options are TCP,
	// UDP, ESP, AH, SCTP or ICMP.
	//
	// When the load balancing scheme is INTERNAL, only TCP and UDP are
	// valid.
	// Valid values:
	//     AH
	//     ESP
	//     ICMP
	//     SCTP
	//     TCP
	//     UDP
	IPProtocol string `protobuf:"bytes,2,opt,name=IPProtocol" json:"IPProtocol,omitempty"`
	// This field is not used for external load balancing.
	//
	// For internal load balancing, this field identifies the BackendService
	// resource to receive the matched traffic.
	BackendService string `protobuf:"bytes,3,opt,name=backendService" json:"backendService,omitempty"`
	// [Output Only] Creation timestamp in RFC3339 text format.
	CreationTimestamp string `protobuf:"bytes,4,opt,name=creationTimestamp" json:"creationTimestamp,omitempty"`
	// An optional description of this resource. Provide this property when
	// you create the resource.
	Description string `protobuf:"bytes,5,opt,name=description" json:"description,omitempty"`
	// [Output Only] The unique identifier for the resource. This identifier
	// is defined by the server.
	Id string `protobuf:"bytes,6,opt,name=id" json:"id,omitempty"`
	// The IP Version that will be used by this forwarding rule. Valid
	// options are IPV4 or IPV6. This can only be specified for a global
	// forwarding rule.
	// Valid values:
	//     IPV4
	//     IPV6
	//     UNSPECIFIED_VERSION
	IpVersion string `protobuf:"bytes,7,opt,name=ipVersion" json:"ipVersion,omitempty"`
	// [Output Only] Type of the resource. Always compute#forwardingRule for
	// Forwarding Rule resources.
	Kind string `protobuf:"bytes,8,opt,name=kind" json:"kind,omitempty"`
	// A fingerprint for the labels being applied to this resource, which is
	// essentially a hash of the labels set used for optimistic locking. The
	// fingerprint is initially generated by Compute Engine and changes
	// after every request to modify or update labels. You must always
	// provide an up-to-date fingerprint hash in order to update or change
	// labels.
	//
	// To see the latest fingerprint, make a get() request to retrieve a
	// ForwardingRule.
	LabelFingerprint string `protobuf:"bytes,9,opt,name=labelFingerprint" json:"labelFingerprint,omitempty"`
	// Labels to apply to this resource. These can be later modified by the
	// setLabels method. Each label key/value pair must comply with RFC1035.
	// Label values may be empty.
	Labels map[string]string `protobuf:"bytes,10,rep,name=labels" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// This signifies what the ForwardingRule will be used for and can only
	// take the following values: INTERNAL, EXTERNAL The value of INTERNAL
	// means that this will be used for Internal Network Load Balancing
	// (TCP, UDP). The value of EXTERNAL means that this will be used for
	// External Load Balancing (HTTP(S) LB, External TCP/UDP LB, SSL Proxy)
	// Valid values:
	//     EXTERNAL
	//     INTERNAL
	//     INVALID
	LoadBalancingScheme string `protobuf:"bytes,11,opt,name=loadBalancingScheme" json:"loadBalancingScheme,omitempty"`
	// Name of the resource; provided by the client when the resource is
	// created. The name must be 1-63 characters long, and comply with
	// RFC1035. Specifically, the name must be 1-63 characters long and
	// match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means
	// the first character must be a lowercase letter, and all following
	// characters must be a dash, lowercase letter, or digit, except the
	// last character, which cannot be a dash.
	Name string `protobuf:"bytes,12,opt,name=name" json:"name,omitempty"`
	// This field is not used for external load balancing.
	//
	// For internal load balancing, this field identifies the network that
	// the load balanced IP should belong to for this Forwarding Rule. If
	// this field is not specified, the default network will be used.
	Network string `protobuf:"bytes,13,opt,name=network" json:"network,omitempty"`
	// This field is used along with the target field for TargetHttpProxy,
	// TargetHttpsProxy, TargetSslProxy, TargetTcpProxy, TargetVpnGateway,
	// TargetPool, TargetInstance.
	//
	// Applicable only when IPProtocol is TCP, UDP, or SCTP, only packets
	// addressed to ports in the specified range will be forwarded to
	// target. Forwarding rules with the same [IPAddress, IPProtocol] pair
	// must have disjoint port ranges.
	//
	// Some types of forwarding target have constraints on the acceptable
	// ports:
	// - TargetHttpProxy: 80, 8080
	// - TargetHttpsProxy: 443
	// - TargetTcpProxy: 25, 43, 110, 143, 195, 443, 465, 587, 700, 993,
	// 995, 1883, 5222
	// - TargetSslProxy: 25, 43, 110, 143, 195, 443, 465, 587, 700, 993,
	// 995, 1883, 5222
	// - TargetVpnGateway: 500, 4500
	// -
	PortRange string `protobuf:"bytes,14,opt,name=portRange" json:"portRange,omitempty"`
	// This field is used along with the backend_service field for internal
	// load balancing.
	//
	// When the load balancing scheme is INTERNAL, a single port or a comma
	// separated list of ports can be configured. Only packets addressed to
	// these ports will be forwarded to the backends configured with this
	// forwarding rule.
	//
	// You may specify a maximum of up to 5 ports.
	Ports []string `protobuf:"bytes,15,rep,name=ports" json:"ports,omitempty"`
	// [Output Only] URL of the region where the regional forwarding rule
	// resides. This field is not applicable to global forwarding rules.
	Region string `protobuf:"bytes,16,opt,name=region" json:"region,omitempty"`
	// [Output Only] Server-defined URL for the resource.
	SelfLink string `protobuf:"bytes,17,opt,name=selfLink" json:"selfLink,omitempty"`
	// An optional prefix to the service name for this Forwarding Rule. If
	// specified, will be the first label of the fully qualified service
	// name.
	//
	// The label must be 1-63 characters long, and comply with RFC1035.
	// Specifically, the label must be 1-63 characters long and match the
	// regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first
	// character must be a lowercase letter, and all following characters
	// must be a dash, lowercase letter, or digit, except the last
	// character, which cannot be a dash.
	//
	// This field is only used for internal load balancing.
	ServiceLabel string `protobuf:"bytes,18,opt,name=serviceLabel" json:"serviceLabel,omitempty"`
	// [Output Only] The internal fully qualified service name for this
	// Forwarding Rule.
	//
	// This field is only used for internal load balancing.
	ServiceName string `protobuf:"bytes,19,opt,name=serviceName" json:"serviceName,omitempty"`
	// This field is not used for external load balancing.
	//
	// For internal load balancing, this field identifies the subnetwork
	// that the load balanced IP should belong to for this Forwarding Rule.
	//
	// If the network specified is in auto subnet mode, this field is
	// optional. However, if the network is in custom subnet mode, a
	// subnetwork must be specified.
	Subnetwork string `protobuf:"bytes,20,opt,name=subnetwork" json:"subnetwork,omitempty"`
	// The URL of the target resource to receive the matched traffic. For
	// regional forwarding rules, this target must live in the same region
	// as the forwarding rule. For global forwarding rules, this target must
	// be a global load balancing resource. The forwarded traffic must be of
	// a type appropriate to the target object.
	//
	// This field is not used for internal load balancing.
	Target string `protobuf:"bytes,21,opt,name=target" json:"target,omitempty"`
}

func (m *ForwardingRule) Reset()                    { *m = ForwardingRule{} }
func (m *ForwardingRule) String() string            { return proto.CompactTextString(m) }
func (*ForwardingRule) ProtoMessage()               {}
func (*ForwardingRule) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{63} }

func (m *ForwardingRule) GetIPAddress() string {
	if m != nil {
		return m.IPAddress
	}
	return ""
}

func (m *ForwardingRule) GetIPProtocol() string {
	if m != nil {
		return m.IPProtocol
	}
	return ""
}

func (m *ForwardingRule) GetBackendService() string {
	if m != nil {
		return m.BackendService
	}
	return ""
}

func (m *ForwardingRule) GetCreationTimestamp() string {
	if m != nil {
		return m.CreationTimestamp
	}
	return ""
}

func (m *ForwardingRule) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *ForwardingRule) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ForwardingRule) GetIpVersion() string {
	if m != nil {
		return m.IpVersion
	}
	return ""
}

func (m *ForwardingRule) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *ForwardingRule) GetLabelFingerprint() string {
	if m != nil {
		return m.LabelFingerprint
	}
	return ""
}

func (m *ForwardingRule) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *ForwardingRule) GetLoadBalancingScheme() string {
	if m != nil {
		return m.LoadBalancingScheme
	}
	return ""
}

func (m *ForwardingRule) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ForwardingRule) GetNetwork() string {
	if m != nil {
		return m.Network
	}
	return ""
}

func (m *ForwardingRule) GetPortRange() string {
	if m != nil {
		return m.PortRange
	}
	return ""
}

func (m *ForwardingRule) GetPorts() []string {
	if m != nil {
		return m.Ports
	}
	return nil
}

func (m *ForwardingRule) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *ForwardingRule) GetSelfLink() string {
	if m != nil {
		return m.SelfLink
	}
	return ""
}

func (m *ForwardingRule) GetServiceLabel() string {
	if m != nil {
		return m.ServiceLabel
	}
	return ""
}

func (m *ForwardingRule) GetServiceName() string {
	if m != nil {
		return m.ServiceName
	}
	return ""
}

func (m *ForwardingRule) GetSubnetwork() string {
	if m != nil {
		return m.Subnetwork
	}
	return ""
}

func (m *ForwardingRule) GetTarget() string {
	if m != nil {
		return m.Target
	}
	return ""
}

type ForwardingRuleAggregatedList struct {
	// [Output Only] Unique identifier for the resource; defined by the
	// server.
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// A list of ForwardingRulesScopedList resources.
	Items map[string]*ForwardingRulesScopedList `protobuf:"bytes,2,rep,name=items" json:"items,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// [Output Only] Type of resource. Always
	// compute#forwardingRuleAggregatedList for lists of forwarding rules.
	Kind string `protobuf:"bytes,3,opt,name=kind" json:"kind,omitempty"`
	// [Output Only] This token allows you to get the next page of results
	// for list requests. If the number of results is larger than
	// maxResults, use the nextPageToken as a value for the query parameter
	// pageToken in the next list request. Subsequent list requests will
	// have their own nextPageToken to continue paging through the results.
	NextPageToken string `protobuf:"bytes,4,opt,name=nextPageToken" json:"nextPageToken,omitempty"`
	// [Output Only] Server-defined URL for this resource.
	SelfLink string                                `protobuf:"bytes,5,opt,name=selfLink" json:"selfLink,omitempty"`
	Warning  *ForwardingRuleAggregatedList_Warning `protobuf:"bytes,6,opt,name=warning" json:"warning,omitempty"`
}

func (m *ForwardingRuleAggregatedList) Reset()                    { *m = ForwardingRuleAggregatedList{} }
func (m *ForwardingRuleAggregatedList) String() string            { return proto.CompactTextString(m) }
func (*ForwardingRuleAggregatedList) ProtoMessage()               {}
func (*ForwardingRuleAggregatedList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{64} }

func (m *ForwardingRuleAggregatedList) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ForwardingRuleAggregatedList) GetItems() map[string]*ForwardingRulesScopedList {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *ForwardingRuleAggregatedList) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *ForwardingRuleAggregatedList) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

func (m *ForwardingRuleAggregatedList) GetSelfLink() string {
	if m != nil {
		return m.SelfLink
	}
	return ""
}

func (m *ForwardingRuleAggregatedList) GetWarning() *ForwardingRuleAggregatedList_Warning {
	if m != nil {
		return m.Warning
	}
	return nil
}

// [Output Only] Informational warning message.
// [Output Only] Informational warning message.
type ForwardingRuleAggregatedList_Warning struct {
	// [Output Only] A warning code, if applicable. For example, Compute
	// Engine returns NO_RESULTS_ON_PAGE if there are no results in the
	// response.
	// Valid values:
	//     CLEANUP_FAILED
	//     DEPRECATED_RESOURCE_USED
	//     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
	//     FIELD_VALUE_OVERRIDEN
	//     INJECTED_KERNELS_DEPRECATED
	//     NEXT_HOP_ADDRESS_NOT_ASSIGNED
	//     NEXT_HOP_CANNOT_IP_FORWARD
	//     NEXT_HOP_INSTANCE_NOT_FOUND
	//     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
	//     NEXT_HOP_NOT_RUNNING
	//     NOT_CRITICAL_ERROR
	//     NO_RESULTS_ON_PAGE
	//     REQUIRED_TOS_AGREEMENT
	//     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
	//     RESOURCE_NOT_DELETED
	//     SINGLE_INSTANCE_PROPERTY_TEMPLATE
	//     UNREACHABLE
	Code string                                       `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Data []*ForwardingRuleAggregatedList_Warning_Data `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
	// [Output Only] A human-readable description of the warning code.
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *ForwardingRuleAggregatedList_Warning) Reset()         { *m = ForwardingRuleAggregatedList_Warning{} }
func (m *ForwardingRuleAggregatedList_Warning) String() string { return proto.CompactTextString(m) }
func (*ForwardingRuleAggregatedList_Warning) ProtoMessage()    {}
func (*ForwardingRuleAggregatedList_Warning) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{64, 1}
}

func (m *ForwardingRuleAggregatedList_Warning) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *ForwardingRuleAggregatedList_Warning) GetData() []*ForwardingRuleAggregatedList_Warning_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ForwardingRuleAggregatedList_Warning) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// [Output Only] Metadata about this warning in key: value format. For
// example:
// "data": [ { "key": "scope", "value": "zones/us-east1-d" }
type ForwardingRuleAggregatedList_Warning_Data struct {
	// [Output Only] A key that provides more detail on the warning being
	// returned. For example, for warnings where there are no results in a
	// list request for a particular zone, this key might be scope and the
	// key value might be the zone name. Other examples might be a key
	// indicating a deprecated resource and a suggested replacement, or a
	// warning about invalid network settings (for example, if an instance
	// attempts to perform IP forwarding but is not enabled for IP
	// forwarding).
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	// [Output Only] A warning data value corresponding to the key.
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *ForwardingRuleAggregatedList_Warning_Data) Reset() {
	*m = ForwardingRuleAggregatedList_Warning_Data{}
}
func (m *ForwardingRuleAggregatedList_Warning_Data) String() string { return proto.CompactTextString(m) }
func (*ForwardingRuleAggregatedList_Warning_Data) ProtoMessage()    {}
func (*ForwardingRuleAggregatedList_Warning_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{64, 1, 0}
}

func (m *ForwardingRuleAggregatedList_Warning_Data) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *ForwardingRuleAggregatedList_Warning_Data) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

// Contains a list of ForwardingRule resources.
type ForwardingRuleList struct {
	// [Output Only] Unique identifier for the resource; defined by the
	// server.
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// A list of ForwardingRule resources.
	Items []*ForwardingRule `protobuf:"bytes,2,rep,name=items" json:"items,omitempty"`
	// Type of resource.
	Kind string `protobuf:"bytes,3,opt,name=kind" json:"kind,omitempty"`
	// [Output Only] This token allows you to get the next page of results
	// for list requests. If the number of results is larger than
	// maxResults, use the nextPageToken as a value for the query parameter
	// pageToken in the next list request. Subsequent list requests will
	// have their own nextPageToken to continue paging through the results.
	NextPageToken string `protobuf:"bytes,4,opt,name=nextPageToken" json:"nextPageToken,omitempty"`
	// [Output Only] Server-defined URL for this resource.
	SelfLink string                      `protobuf:"bytes,5,opt,name=selfLink" json:"selfLink,omitempty"`
	Warning  *ForwardingRuleList_Warning `protobuf:"bytes,6,opt,name=warning" json:"warning,omitempty"`
}

func (m *ForwardingRuleList) Reset()                    { *m = ForwardingRuleList{} }
func (m *ForwardingRuleList) String() string            { return proto.CompactTextString(m) }
func (*ForwardingRuleList) ProtoMessage()               {}
func (*ForwardingRuleList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{65} }

func (m *ForwardingRuleList) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ForwardingRuleList) GetItems() []*ForwardingRule {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *ForwardingRuleList) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *ForwardingRuleList) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

func (m *ForwardingRuleList) GetSelfLink() string {
	if m != nil {
		return m.SelfLink
	}
	return ""
}

func (m *ForwardingRuleList) GetWarning() *ForwardingRuleList_Warning {
	if m != nil {
		return m.Warning
	}
	return nil
}

// [Output Only] Informational warning message.
// [Output Only] Informational warning message.
type ForwardingRuleList_Warning struct {
	// [Output Only] A warning code, if applicable. For example, Compute
	// Engine returns NO_RESULTS_ON_PAGE if there are no results in the
	// response.
	// Valid values:
	//     CLEANUP_FAILED
	//     DEPRECATED_RESOURCE_USED
	//     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
	//     FIELD_VALUE_OVERRIDEN
	//     INJECTED_KERNELS_DEPRECATED
	//     NEXT_HOP_ADDRESS_NOT_ASSIGNED
	//     NEXT_HOP_CANNOT_IP_FORWARD
	//     NEXT_HOP_INSTANCE_NOT_FOUND
	//     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
	//     NEXT_HOP_NOT_RUNNING
	//     NOT_CRITICAL_ERROR
	//     NO_RESULTS_ON_PAGE
	//     REQUIRED_TOS_AGREEMENT
	//     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
	//     RESOURCE_NOT_DELETED
	//     SINGLE_INSTANCE_PROPERTY_TEMPLATE
	//     UNREACHABLE
	Code string                             `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Data []*ForwardingRuleList_Warning_Data `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
	// [Output Only] A human-readable description of the warning code.
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *ForwardingRuleList_Warning) Reset()                    { *m = ForwardingRuleList_Warning{} }
func (m *ForwardingRuleList_Warning) String() string            { return proto.CompactTextString(m) }
func (*ForwardingRuleList_Warning) ProtoMessage()               {}
func (*ForwardingRuleList_Warning) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{65, 0} }

func (m *ForwardingRuleList_Warning) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *ForwardingRuleList_Warning) GetData() []*ForwardingRuleList_Warning_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ForwardingRuleList_Warning) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// [Output Only] Metadata about this warning in key: value format. For
// example:
// "data": [ { "key": "scope", "value": "zones/us-east1-d" }
type ForwardingRuleList_Warning_Data struct {
	// [Output Only] A key that provides more detail on the warning being
	// returned. For example, for warnings where there are no results in a
	// list request for a particular zone, this key might be scope and the
	// key value might be the zone name. Other examples might be a key
	// indicating a deprecated resource and a suggested replacement, or a
	// warning about invalid network settings (for example, if an instance
	// attempts to perform IP forwarding but is not enabled for IP
	// forwarding).
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	// [Output Only] A warning data value corresponding to the key.
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *ForwardingRuleList_Warning_Data) Reset()         { *m = ForwardingRuleList_Warning_Data{} }
func (m *ForwardingRuleList_Warning_Data) String() string { return proto.CompactTextString(m) }
func (*ForwardingRuleList_Warning_Data) ProtoMessage()    {}
func (*ForwardingRuleList_Warning_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{65, 0, 0}
}

func (m *ForwardingRuleList_Warning_Data) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *ForwardingRuleList_Warning_Data) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type ForwardingRulesScopedList struct {
	// List of forwarding rules contained in this scope.
	ForwardingRules []*ForwardingRule                  `protobuf:"bytes,1,rep,name=forwardingRules" json:"forwardingRules,omitempty"`
	Warning         *ForwardingRulesScopedList_Warning `protobuf:"bytes,2,opt,name=warning" json:"warning,omitempty"`
}

func (m *ForwardingRulesScopedList) Reset()                    { *m = ForwardingRulesScopedList{} }
func (m *ForwardingRulesScopedList) String() string            { return proto.CompactTextString(m) }
func (*ForwardingRulesScopedList) ProtoMessage()               {}
func (*ForwardingRulesScopedList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{66} }

func (m *ForwardingRulesScopedList) GetForwardingRules() []*ForwardingRule {
	if m != nil {
		return m.ForwardingRules
	}
	return nil
}

func (m *ForwardingRulesScopedList) GetWarning() *ForwardingRulesScopedList_Warning {
	if m != nil {
		return m.Warning
	}
	return nil
}

// Informational warning which replaces the list of forwarding rules
// when the list is empty.
// Informational warning which replaces the list of forwarding rules
// when the list is empty.
type ForwardingRulesScopedList_Warning struct {
	// [Output Only] A warning code, if applicable. For example, Compute
	// Engine returns NO_RESULTS_ON_PAGE if there are no results in the
	// response.
	// Valid values:
	//     CLEANUP_FAILED
	//     DEPRECATED_RESOURCE_USED
	//     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
	//     FIELD_VALUE_OVERRIDEN
	//     INJECTED_KERNELS_DEPRECATED
	//     NEXT_HOP_ADDRESS_NOT_ASSIGNED
	//     NEXT_HOP_CANNOT_IP_FORWARD
	//     NEXT_HOP_INSTANCE_NOT_FOUND
	//     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
	//     NEXT_HOP_NOT_RUNNING
	//     NOT_CRITICAL_ERROR
	//     NO_RESULTS_ON_PAGE
	//     REQUIRED_TOS_AGREEMENT
	//     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
	//     RESOURCE_NOT_DELETED
	//     SINGLE_INSTANCE_PROPERTY_TEMPLATE
	//     UNREACHABLE
	Code string                                    `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Data []*ForwardingRulesScopedList_Warning_Data `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
	// [Output Only] A human-readable description of the warning code.
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *ForwardingRulesScopedList_Warning) Reset()         { *m = ForwardingRulesScopedList_Warning{} }
func (m *ForwardingRulesScopedList_Warning) String() string { return proto.CompactTextString(m) }
func (*ForwardingRulesScopedList_Warning) ProtoMessage()    {}
func (*ForwardingRulesScopedList_Warning) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{66, 0}
}

func (m *ForwardingRulesScopedList_Warning) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *ForwardingRulesScopedList_Warning) GetData() []*ForwardingRulesScopedList_Warning_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ForwardingRulesScopedList_Warning) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// [Output Only] Metadata about this warning in key: value format. For
// example:
// "data": [ { "key": "scope", "value": "zones/us-east1-d" }
type ForwardingRulesScopedList_Warning_Data struct {
	// [Output Only] A key that provides more detail on the warning being
	// returned. For example, for warnings where there are no results in a
	// list request for a particular zone, this key might be scope and the
	// key value might be the zone name. Other examples might be a key
	// indicating a deprecated resource and a suggested replacement, or a
	// warning about invalid network settings (for example, if an instance
	// attempts to perform IP forwarding but is not enabled for IP
	// forwarding).
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	// [Output Only] A warning data value corresponding to the key.
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *ForwardingRulesScopedList_Warning_Data) Reset() {
	*m = ForwardingRulesScopedList_Warning_Data{}
}
func (m *ForwardingRulesScopedList_Warning_Data) String() string { return proto.CompactTextString(m) }
func (*ForwardingRulesScopedList_Warning_Data) ProtoMessage()    {}
func (*ForwardingRulesScopedList_Warning_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{66, 0, 0}
}

func (m *ForwardingRulesScopedList_Warning_Data) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *ForwardingRulesScopedList_Warning_Data) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type GlobalSetLabelsRequest struct {
	// The fingerprint of the previous set of labels for this resource, used
	// to detect conflicts. The fingerprint is initially generated by
	// Compute Engine and changes after every request to modify or update
	// labels. You must always provide an up-to-date fingerprint hash when
	// updating or changing labels. Make a get() request to the resource to
	// get the latest fingerprint.
	LabelFingerprint string `protobuf:"bytes,1,opt,name=labelFingerprint" json:"labelFingerprint,omitempty"`
	// A list of labels to apply for this resource. Each label key & value
	// must comply with RFC1035. Specifically, the name must be 1-63
	// characters long and match the regular expression
	// [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a
	// lowercase letter, and all following characters must be a dash,
	// lowercase letter, or digit, except the last character, which cannot
	// be a dash. For example, "webserver-frontend": "images". A label value
	// can also be empty (e.g. "my-label": "").
	Labels map[string]string `protobuf:"bytes,2,rep,name=labels" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *GlobalSetLabelsRequest) Reset()                    { *m = GlobalSetLabelsRequest{} }
func (m *GlobalSetLabelsRequest) String() string            { return proto.CompactTextString(m) }
func (*GlobalSetLabelsRequest) ProtoMessage()               {}
func (*GlobalSetLabelsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{67} }

func (m *GlobalSetLabelsRequest) GetLabelFingerprint() string {
	if m != nil {
		return m.LabelFingerprint
	}
	return ""
}

func (m *GlobalSetLabelsRequest) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

// Guest OS features.
type GuestOsFeature struct {
	// The type of supported feature. Currently only VIRTIO_SCSI_MULTIQUEUE
	// is supported. For newer Windows images, the server might also
	// populate this property with the value WINDOWS to indicate that this
	// is a Windows image.
	// Valid values:
	//     FEATURE_TYPE_UNSPECIFIED
	//     MULTI_IP_SUBNET
	//     VIRTIO_SCSI_MULTIQUEUE
	//     WINDOWS
	Type string `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
}

func (m *GuestOsFeature) Reset()                    { *m = GuestOsFeature{} }
func (m *GuestOsFeature) String() string            { return proto.CompactTextString(m) }
func (*GuestOsFeature) ProtoMessage()               {}
func (*GuestOsFeature) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{68} }

func (m *GuestOsFeature) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

type HTTPHealthCheck struct {
	// The value of the host header in the HTTP health check request. If
	// left empty (default value), the IP on behalf of which this health
	// check is performed will be used.
	Host string `protobuf:"bytes,1,opt,name=host" json:"host,omitempty"`
	// The TCP port number for the health check request. The default value
	// is 80. Valid values are 1 through 65535.
	Port int32 `protobuf:"varint,2,opt,name=port" json:"port,omitempty"`
	// Port name as defined in InstanceGroup#NamedPort#name. If both port
	// and port_name are defined, port takes precedence.
	PortName string `protobuf:"bytes,3,opt,name=portName" json:"portName,omitempty"`
	// Specifies the type of proxy header to append before sending data to
	// the backend, either NONE or PROXY_V1. The default is NONE.
	// Valid values:
	//     NONE
	//     PROXY_V1
	ProxyHeader string `protobuf:"bytes,4,opt,name=proxyHeader" json:"proxyHeader,omitempty"`
	// The request path of the HTTP health check request. The default value
	// is /.
	RequestPath string `protobuf:"bytes,5,opt,name=requestPath" json:"requestPath,omitempty"`
}

func (m *HTTPHealthCheck) Reset()                    { *m = HTTPHealthCheck{} }
func (m *HTTPHealthCheck) String() string            { return proto.CompactTextString(m) }
func (*HTTPHealthCheck) ProtoMessage()               {}
func (*HTTPHealthCheck) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{69} }

func (m *HTTPHealthCheck) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *HTTPHealthCheck) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *HTTPHealthCheck) GetPortName() string {
	if m != nil {
		return m.PortName
	}
	return ""
}

func (m *HTTPHealthCheck) GetProxyHeader() string {
	if m != nil {
		return m.ProxyHeader
	}
	return ""
}

func (m *HTTPHealthCheck) GetRequestPath() string {
	if m != nil {
		return m.RequestPath
	}
	return ""
}

type HTTPSHealthCheck struct {
	// The value of the host header in the HTTPS health check request. If
	// left empty (default value), the IP on behalf of which this health
	// check is performed will be used.
	Host string `protobuf:"bytes,1,opt,name=host" json:"host,omitempty"`
	// The TCP port number for the health check request. The default value
	// is 443. Valid values are 1 through 65535.
	Port int32 `protobuf:"varint,2,opt,name=port" json:"port,omitempty"`
	// Port name as defined in InstanceGroup#NamedPort#name. If both port
	// and port_name are defined, port takes precedence.
	PortName string `protobuf:"bytes,3,opt,name=portName" json:"portName,omitempty"`
	// Specifies the type of proxy header to append before sending data to
	// the backend, either NONE or PROXY_V1. The default is NONE.
	// Valid values:
	//     NONE
	//     PROXY_V1
	ProxyHeader string `protobuf:"bytes,4,opt,name=proxyHeader" json:"proxyHeader,omitempty"`
	// The request path of the HTTPS health check request. The default value
	// is /.
	RequestPath string `protobuf:"bytes,5,opt,name=requestPath" json:"requestPath,omitempty"`
}

func (m *HTTPSHealthCheck) Reset()                    { *m = HTTPSHealthCheck{} }
func (m *HTTPSHealthCheck) String() string            { return proto.CompactTextString(m) }
func (*HTTPSHealthCheck) ProtoMessage()               {}
func (*HTTPSHealthCheck) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{70} }

func (m *HTTPSHealthCheck) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *HTTPSHealthCheck) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *HTTPSHealthCheck) GetPortName() string {
	if m != nil {
		return m.PortName
	}
	return ""
}

func (m *HTTPSHealthCheck) GetProxyHeader() string {
	if m != nil {
		return m.ProxyHeader
	}
	return ""
}

func (m *HTTPSHealthCheck) GetRequestPath() string {
	if m != nil {
		return m.RequestPath
	}
	return ""
}

// An HealthCheck resource. This resource defines a template for how
// individual virtual machines should be checked for health, via one of
// the supported protocols.
type HealthCheck struct {
	// How often (in seconds) to send a health check. The default value is 5
	// seconds.
	CheckIntervalSec int32 `protobuf:"varint,1,opt,name=checkIntervalSec" json:"checkIntervalSec,omitempty"`
	// [Output Only] Creation timestamp in 3339 text format.
	CreationTimestamp string `protobuf:"bytes,2,opt,name=creationTimestamp" json:"creationTimestamp,omitempty"`
	// An optional description of this resource. Provide this property when
	// you create the resource.
	Description string `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	// A so-far unhealthy instance will be marked healthy after this many
	// consecutive successes. The default value is 2.
	HealthyThreshold int32             `protobuf:"varint,4,opt,name=healthyThreshold" json:"healthyThreshold,omitempty"`
	HttpHealthCheck  *HTTPHealthCheck  `protobuf:"bytes,5,opt,name=httpHealthCheck" json:"httpHealthCheck,omitempty"`
	HttpsHealthCheck *HTTPSHealthCheck `protobuf:"bytes,6,opt,name=httpsHealthCheck" json:"httpsHealthCheck,omitempty"`
	// [Output Only] The unique identifier for the resource. This identifier
	// is defined by the server.
	Id string `protobuf:"bytes,7,opt,name=id" json:"id,omitempty"`
	// Type of the resource.
	Kind string `protobuf:"bytes,8,opt,name=kind" json:"kind,omitempty"`
	// Name of the resource. Provided by the client when the resource is
	// created. The name must be 1-63 characters long, and comply with
	// RFC1035. Specifically, the name must be 1-63 characters long and
	// match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means
	// the first character must be a lowercase letter, and all following
	// characters must be a dash, lowercase letter, or digit, except the
	// last character, which cannot be a dash.
	Name string `protobuf:"bytes,9,opt,name=name" json:"name,omitempty"`
	// [Output Only] Server-defined URL for the resource.
	SelfLink       string          `protobuf:"bytes,10,opt,name=selfLink" json:"selfLink,omitempty"`
	SslHealthCheck *SSLHealthCheck `protobuf:"bytes,11,opt,name=sslHealthCheck" json:"sslHealthCheck,omitempty"`
	TcpHealthCheck *TCPHealthCheck `protobuf:"bytes,12,opt,name=tcpHealthCheck" json:"tcpHealthCheck,omitempty"`
	// How long (in seconds) to wait before claiming failure. The default
	// value is 5 seconds. It is invalid for timeoutSec to have greater
	// value than checkIntervalSec.
	TimeoutSec int32 `protobuf:"varint,13,opt,name=timeoutSec" json:"timeoutSec,omitempty"`
	// Specifies the type of the healthCheck, either TCP, SSL, HTTP or
	// HTTPS. If not specified, the default is TCP. Exactly one of the
	// protocol-specific health check field must be specified, which must
	// match type field.
	// Valid values:
	//     HTTP
	//     HTTPS
	//     INVALID
	//     SSL
	//     TCP
	//     UDP
	Type           string          `protobuf:"bytes,14,opt,name=type" json:"type,omitempty"`
	UdpHealthCheck *UDPHealthCheck `protobuf:"bytes,15,opt,name=udpHealthCheck" json:"udpHealthCheck,omitempty"`
	// A so-far healthy instance will be marked unhealthy after this many
	// consecutive failures. The default value is 2.
	UnhealthyThreshold int32 `protobuf:"varint,16,opt,name=unhealthyThreshold" json:"unhealthyThreshold,omitempty"`
}

func (m *HealthCheck) Reset()                    { *m = HealthCheck{} }
func (m *HealthCheck) String() string            { return proto.CompactTextString(m) }
func (*HealthCheck) ProtoMessage()               {}
func (*HealthCheck) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{71} }

func (m *HealthCheck) GetCheckIntervalSec() int32 {
	if m != nil {
		return m.CheckIntervalSec
	}
	return 0
}

func (m *HealthCheck) GetCreationTimestamp() string {
	if m != nil {
		return m.CreationTimestamp
	}
	return ""
}

func (m *HealthCheck) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *HealthCheck) GetHealthyThreshold() int32 {
	if m != nil {
		return m.HealthyThreshold
	}
	return 0
}

func (m *HealthCheck) GetHttpHealthCheck() *HTTPHealthCheck {
	if m != nil {
		return m.HttpHealthCheck
	}
	return nil
}

func (m *HealthCheck) GetHttpsHealthCheck() *HTTPSHealthCheck {
	if m != nil {
		return m.HttpsHealthCheck
	}
	return nil
}

func (m *HealthCheck) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *HealthCheck) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *HealthCheck) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *HealthCheck) GetSelfLink() string {
	if m != nil {
		return m.SelfLink
	}
	return ""
}

func (m *HealthCheck) GetSslHealthCheck() *SSLHealthCheck {
	if m != nil {
		return m.SslHealthCheck
	}
	return nil
}

func (m *HealthCheck) GetTcpHealthCheck() *TCPHealthCheck {
	if m != nil {
		return m.TcpHealthCheck
	}
	return nil
}

func (m *HealthCheck) GetTimeoutSec() int32 {
	if m != nil {
		return m.TimeoutSec
	}
	return 0
}

func (m *HealthCheck) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *HealthCheck) GetUdpHealthCheck() *UDPHealthCheck {
	if m != nil {
		return m.UdpHealthCheck
	}
	return nil
}

func (m *HealthCheck) GetUnhealthyThreshold() int32 {
	if m != nil {
		return m.UnhealthyThreshold
	}
	return 0
}

// Contains a list of HealthCheck resources.
type HealthCheckList struct {
	// [Output Only] Unique identifier for the resource; defined by the
	// server.
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// A list of HealthCheck resources.
	Items []*HealthCheck `protobuf:"bytes,2,rep,name=items" json:"items,omitempty"`
	// Type of resource.
	Kind string `protobuf:"bytes,3,opt,name=kind" json:"kind,omitempty"`
	// [Output Only] This token allows you to get the next page of results
	// for list requests. If the number of results is larger than
	// maxResults, use the nextPageToken as a value for the query parameter
	// pageToken in the next list request. Subsequent list requests will
	// have their own nextPageToken to continue paging through the results.
	NextPageToken string `protobuf:"bytes,4,opt,name=nextPageToken" json:"nextPageToken,omitempty"`
	// [Output Only] Server-defined URL for this resource.
	SelfLink string                   `protobuf:"bytes,5,opt,name=selfLink" json:"selfLink,omitempty"`
	Warning  *HealthCheckList_Warning `protobuf:"bytes,6,opt,name=warning" json:"warning,omitempty"`
}

func (m *HealthCheckList) Reset()                    { *m = HealthCheckList{} }
func (m *HealthCheckList) String() string            { return proto.CompactTextString(m) }
func (*HealthCheckList) ProtoMessage()               {}
func (*HealthCheckList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{72} }

func (m *HealthCheckList) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *HealthCheckList) GetItems() []*HealthCheck {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *HealthCheckList) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *HealthCheckList) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

func (m *HealthCheckList) GetSelfLink() string {
	if m != nil {
		return m.SelfLink
	}
	return ""
}

func (m *HealthCheckList) GetWarning() *HealthCheckList_Warning {
	if m != nil {
		return m.Warning
	}
	return nil
}

// [Output Only] Informational warning message.
// [Output Only] Informational warning message.
type HealthCheckList_Warning struct {
	// [Output Only] A warning code, if applicable. For example, Compute
	// Engine returns NO_RESULTS_ON_PAGE if there are no results in the
	// response.
	// Valid values:
	//     CLEANUP_FAILED
	//     DEPRECATED_RESOURCE_USED
	//     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
	//     FIELD_VALUE_OVERRIDEN
	//     INJECTED_KERNELS_DEPRECATED
	//     NEXT_HOP_ADDRESS_NOT_ASSIGNED
	//     NEXT_HOP_CANNOT_IP_FORWARD
	//     NEXT_HOP_INSTANCE_NOT_FOUND
	//     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
	//     NEXT_HOP_NOT_RUNNING
	//     NOT_CRITICAL_ERROR
	//     NO_RESULTS_ON_PAGE
	//     REQUIRED_TOS_AGREEMENT
	//     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
	//     RESOURCE_NOT_DELETED
	//     SINGLE_INSTANCE_PROPERTY_TEMPLATE
	//     UNREACHABLE
	Code string                          `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Data []*HealthCheckList_Warning_Data `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
	// [Output Only] A human-readable description of the warning code.
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *HealthCheckList_Warning) Reset()                    { *m = HealthCheckList_Warning{} }
func (m *HealthCheckList_Warning) String() string            { return proto.CompactTextString(m) }
func (*HealthCheckList_Warning) ProtoMessage()               {}
func (*HealthCheckList_Warning) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{72, 0} }

func (m *HealthCheckList_Warning) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *HealthCheckList_Warning) GetData() []*HealthCheckList_Warning_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *HealthCheckList_Warning) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// [Output Only] Metadata about this warning in key: value format. For
// example:
// "data": [ { "key": "scope", "value": "zones/us-east1-d" }
type HealthCheckList_Warning_Data struct {
	// [Output Only] A key that provides more detail on the warning being
	// returned. For example, for warnings where there are no results in a
	// list request for a particular zone, this key might be scope and the
	// key value might be the zone name. Other examples might be a key
	// indicating a deprecated resource and a suggested replacement, or a
	// warning about invalid network settings (for example, if an instance
	// attempts to perform IP forwarding but is not enabled for IP
	// forwarding).
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	// [Output Only] A warning data value corresponding to the key.
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *HealthCheckList_Warning_Data) Reset()         { *m = HealthCheckList_Warning_Data{} }
func (m *HealthCheckList_Warning_Data) String() string { return proto.CompactTextString(m) }
func (*HealthCheckList_Warning_Data) ProtoMessage()    {}
func (*HealthCheckList_Warning_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{72, 0, 0}
}

func (m *HealthCheckList_Warning_Data) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *HealthCheckList_Warning_Data) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

// A full or valid partial URL to a health check. For example, the
// following are valid URLs:
// -
// https://www.googleapis.com/compute/beta/projects/project-id/global/httpHealthChecks/health-check
// - projects/project-id/global/httpHealthChecks/health-check
// - global/httpHealthChecks/health-check
type HealthCheckReference struct {
	HealthCheck string `protobuf:"bytes,1,opt,name=healthCheck" json:"healthCheck,omitempty"`
}

func (m *HealthCheckReference) Reset()                    { *m = HealthCheckReference{} }
func (m *HealthCheckReference) String() string            { return proto.CompactTextString(m) }
func (*HealthCheckReference) ProtoMessage()               {}
func (*HealthCheckReference) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{73} }

func (m *HealthCheckReference) GetHealthCheck() string {
	if m != nil {
		return m.HealthCheck
	}
	return ""
}

type HealthStatus struct {
	// Health state of the instance.
	// Valid values:
	//     HEALTHY
	//     UNHEALTHY
	HealthState string `protobuf:"bytes,1,opt,name=healthState" json:"healthState,omitempty"`
	// URL of the instance resource.
	Instance string `protobuf:"bytes,2,opt,name=instance" json:"instance,omitempty"`
	// The IP address represented by this resource.
	IpAddress string `protobuf:"bytes,3,opt,name=ipAddress" json:"ipAddress,omitempty"`
	// The port on the instance.
	Port int32 `protobuf:"varint,4,opt,name=port" json:"port,omitempty"`
}

func (m *HealthStatus) Reset()                    { *m = HealthStatus{} }
func (m *HealthStatus) String() string            { return proto.CompactTextString(m) }
func (*HealthStatus) ProtoMessage()               {}
func (*HealthStatus) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{74} }

func (m *HealthStatus) GetHealthState() string {
	if m != nil {
		return m.HealthState
	}
	return ""
}

func (m *HealthStatus) GetInstance() string {
	if m != nil {
		return m.Instance
	}
	return ""
}

func (m *HealthStatus) GetIpAddress() string {
	if m != nil {
		return m.IpAddress
	}
	return ""
}

func (m *HealthStatus) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

// UrlMaps A host-matching rule for a URL. If matched, will use the
// named PathMatcher to select the BackendService.
type HostRule struct {
	// An optional description of this resource. Provide this property when
	// you create the resource.
	Description string `protobuf:"bytes,1,opt,name=description" json:"description,omitempty"`
	// The list of host patterns to match. They must be valid hostnames,
	// except * will match any string of ([a-z0-9-.]*). In that case, * must
	// be the first character and must be followed in the pattern by either
	// - or ..
	Hosts []string `protobuf:"bytes,2,rep,name=hosts" json:"hosts,omitempty"`
	// The name of the PathMatcher to use to match the path portion of the
	// URL if the hostRule matches the URL's host portion.
	PathMatcher string `protobuf:"bytes,3,opt,name=pathMatcher" json:"pathMatcher,omitempty"`
}

func (m *HostRule) Reset()                    { *m = HostRule{} }
func (m *HostRule) String() string            { return proto.CompactTextString(m) }
func (*HostRule) ProtoMessage()               {}
func (*HostRule) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{75} }

func (m *HostRule) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *HostRule) GetHosts() []string {
	if m != nil {
		return m.Hosts
	}
	return nil
}

func (m *HostRule) GetPathMatcher() string {
	if m != nil {
		return m.PathMatcher
	}
	return ""
}

// An HttpHealthCheck resource. This resource defines a template for how
// individual instances should be checked for health, via HTTP.
type HttpHealthCheck struct {
	// How often (in seconds) to send a health check. The default value is 5
	// seconds.
	CheckIntervalSec int32 `protobuf:"varint,1,opt,name=checkIntervalSec" json:"checkIntervalSec,omitempty"`
	// [Output Only] Creation timestamp in RFC3339 text format.
	CreationTimestamp string `protobuf:"bytes,2,opt,name=creationTimestamp" json:"creationTimestamp,omitempty"`
	// An optional description of this resource. Provide this property when
	// you create the resource.
	Description string `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	// A so-far unhealthy instance will be marked healthy after this many
	// consecutive successes. The default value is 2.
	HealthyThreshold int32 `protobuf:"varint,4,opt,name=healthyThreshold" json:"healthyThreshold,omitempty"`
	// The value of the host header in the HTTP health check request. If
	// left empty (default value), the public IP on behalf of which this
	// health check is performed will be used.
	Host string `protobuf:"bytes,5,opt,name=host" json:"host,omitempty"`
	// [Output Only] The unique identifier for the resource. This identifier
	// is defined by the server.
	Id string `protobuf:"bytes,6,opt,name=id" json:"id,omitempty"`
	// [Output Only] Type of the resource. Always compute#httpHealthCheck
	// for HTTP health checks.
	Kind string `protobuf:"bytes,7,opt,name=kind" json:"kind,omitempty"`
	// Name of the resource. Provided by the client when the resource is
	// created. The name must be 1-63 characters long, and comply with
	// RFC1035. Specifically, the name must be 1-63 characters long and
	// match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means
	// the first character must be a lowercase letter, and all following
	// characters must be a dash, lowercase letter, or digit, except the
	// last character, which cannot be a dash.
	Name string `protobuf:"bytes,8,opt,name=name" json:"name,omitempty"`
	// The TCP port number for the HTTP health check request. The default
	// value is 80.
	Port int32 `protobuf:"varint,9,opt,name=port" json:"port,omitempty"`
	// The request path of the HTTP health check request. The default value
	// is /.
	RequestPath string `protobuf:"bytes,10,opt,name=requestPath" json:"requestPath,omitempty"`
	// [Output Only] Server-defined URL for the resource.
	SelfLink string `protobuf:"bytes,11,opt,name=selfLink" json:"selfLink,omitempty"`
	// How long (in seconds) to wait before claiming failure. The default
	// value is 5 seconds. It is invalid for timeoutSec to have greater
	// value than checkIntervalSec.
	TimeoutSec int32 `protobuf:"varint,12,opt,name=timeoutSec" json:"timeoutSec,omitempty"`
	// A so-far healthy instance will be marked unhealthy after this many
	// consecutive failures. The default value is 2.
	UnhealthyThreshold int32 `protobuf:"varint,13,opt,name=unhealthyThreshold" json:"unhealthyThreshold,omitempty"`
}

func (m *HttpHealthCheck) Reset()                    { *m = HttpHealthCheck{} }
func (m *HttpHealthCheck) String() string            { return proto.CompactTextString(m) }
func (*HttpHealthCheck) ProtoMessage()               {}
func (*HttpHealthCheck) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{76} }

func (m *HttpHealthCheck) GetCheckIntervalSec() int32 {
	if m != nil {
		return m.CheckIntervalSec
	}
	return 0
}

func (m *HttpHealthCheck) GetCreationTimestamp() string {
	if m != nil {
		return m.CreationTimestamp
	}
	return ""
}

func (m *HttpHealthCheck) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *HttpHealthCheck) GetHealthyThreshold() int32 {
	if m != nil {
		return m.HealthyThreshold
	}
	return 0
}

func (m *HttpHealthCheck) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *HttpHealthCheck) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *HttpHealthCheck) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *HttpHealthCheck) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *HttpHealthCheck) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *HttpHealthCheck) GetRequestPath() string {
	if m != nil {
		return m.RequestPath
	}
	return ""
}

func (m *HttpHealthCheck) GetSelfLink() string {
	if m != nil {
		return m.SelfLink
	}
	return ""
}

func (m *HttpHealthCheck) GetTimeoutSec() int32 {
	if m != nil {
		return m.TimeoutSec
	}
	return 0
}

func (m *HttpHealthCheck) GetUnhealthyThreshold() int32 {
	if m != nil {
		return m.UnhealthyThreshold
	}
	return 0
}

// Contains a list of HttpHealthCheck resources.
type HttpHealthCheckList struct {
	// [Output Only] Unique identifier for the resource; defined by the
	// server.
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// A list of HttpHealthCheck resources.
	Items []*HttpHealthCheck `protobuf:"bytes,2,rep,name=items" json:"items,omitempty"`
	// Type of resource.
	Kind string `protobuf:"bytes,3,opt,name=kind" json:"kind,omitempty"`
	// [Output Only] This token allows you to get the next page of results
	// for list requests. If the number of results is larger than
	// maxResults, use the nextPageToken as a value for the query parameter
	// pageToken in the next list request. Subsequent list requests will
	// have their own nextPageToken to continue paging through the results.
	NextPageToken string `protobuf:"bytes,4,opt,name=nextPageToken" json:"nextPageToken,omitempty"`
	// [Output Only] Server-defined URL for this resource.
	SelfLink string                       `protobuf:"bytes,5,opt,name=selfLink" json:"selfLink,omitempty"`
	Warning  *HttpHealthCheckList_Warning `protobuf:"bytes,6,opt,name=warning" json:"warning,omitempty"`
}

func (m *HttpHealthCheckList) Reset()                    { *m = HttpHealthCheckList{} }
func (m *HttpHealthCheckList) String() string            { return proto.CompactTextString(m) }
func (*HttpHealthCheckList) ProtoMessage()               {}
func (*HttpHealthCheckList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{77} }

func (m *HttpHealthCheckList) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *HttpHealthCheckList) GetItems() []*HttpHealthCheck {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *HttpHealthCheckList) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *HttpHealthCheckList) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

func (m *HttpHealthCheckList) GetSelfLink() string {
	if m != nil {
		return m.SelfLink
	}
	return ""
}

func (m *HttpHealthCheckList) GetWarning() *HttpHealthCheckList_Warning {
	if m != nil {
		return m.Warning
	}
	return nil
}

// [Output Only] Informational warning message.
// [Output Only] Informational warning message.
type HttpHealthCheckList_Warning struct {
	// [Output Only] A warning code, if applicable. For example, Compute
	// Engine returns NO_RESULTS_ON_PAGE if there are no results in the
	// response.
	// Valid values:
	//     CLEANUP_FAILED
	//     DEPRECATED_RESOURCE_USED
	//     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
	//     FIELD_VALUE_OVERRIDEN
	//     INJECTED_KERNELS_DEPRECATED
	//     NEXT_HOP_ADDRESS_NOT_ASSIGNED
	//     NEXT_HOP_CANNOT_IP_FORWARD
	//     NEXT_HOP_INSTANCE_NOT_FOUND
	//     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
	//     NEXT_HOP_NOT_RUNNING
	//     NOT_CRITICAL_ERROR
	//     NO_RESULTS_ON_PAGE
	//     REQUIRED_TOS_AGREEMENT
	//     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
	//     RESOURCE_NOT_DELETED
	//     SINGLE_INSTANCE_PROPERTY_TEMPLATE
	//     UNREACHABLE
	Code string                              `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Data []*HttpHealthCheckList_Warning_Data `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
	// [Output Only] A human-readable description of the warning code.
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *HttpHealthCheckList_Warning) Reset()                    { *m = HttpHealthCheckList_Warning{} }
func (m *HttpHealthCheckList_Warning) String() string            { return proto.CompactTextString(m) }
func (*HttpHealthCheckList_Warning) ProtoMessage()               {}
func (*HttpHealthCheckList_Warning) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{77, 0} }

func (m *HttpHealthCheckList_Warning) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *HttpHealthCheckList_Warning) GetData() []*HttpHealthCheckList_Warning_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *HttpHealthCheckList_Warning) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// [Output Only] Metadata about this warning in key: value format. For
// example:
// "data": [ { "key": "scope", "value": "zones/us-east1-d" }
type HttpHealthCheckList_Warning_Data struct {
	// [Output Only] A key that provides more detail on the warning being
	// returned. For example, for warnings where there are no results in a
	// list request for a particular zone, this key might be scope and the
	// key value might be the zone name. Other examples might be a key
	// indicating a deprecated resource and a suggested replacement, or a
	// warning about invalid network settings (for example, if an instance
	// attempts to perform IP forwarding but is not enabled for IP
	// forwarding).
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	// [Output Only] A warning data value corresponding to the key.
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *HttpHealthCheckList_Warning_Data) Reset()         { *m = HttpHealthCheckList_Warning_Data{} }
func (m *HttpHealthCheckList_Warning_Data) String() string { return proto.CompactTextString(m) }
func (*HttpHealthCheckList_Warning_Data) ProtoMessage()    {}
func (*HttpHealthCheckList_Warning_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{77, 0, 0}
}

func (m *HttpHealthCheckList_Warning_Data) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *HttpHealthCheckList_Warning_Data) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

// An HttpsHealthCheck resource. This resource defines a template for
// how individual instances should be checked for health, via HTTPS.
type HttpsHealthCheck struct {
	// How often (in seconds) to send a health check. The default value is 5
	// seconds.
	CheckIntervalSec int32 `protobuf:"varint,1,opt,name=checkIntervalSec" json:"checkIntervalSec,omitempty"`
	// [Output Only] Creation timestamp in RFC3339 text format.
	CreationTimestamp string `protobuf:"bytes,2,opt,name=creationTimestamp" json:"creationTimestamp,omitempty"`
	// An optional description of this resource. Provide this property when
	// you create the resource.
	Description string `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	// A so-far unhealthy instance will be marked healthy after this many
	// consecutive successes. The default value is 2.
	HealthyThreshold int32 `protobuf:"varint,4,opt,name=healthyThreshold" json:"healthyThreshold,omitempty"`
	// The value of the host header in the HTTPS health check request. If
	// left empty (default value), the public IP on behalf of which this
	// health check is performed will be used.
	Host string `protobuf:"bytes,5,opt,name=host" json:"host,omitempty"`
	// [Output Only] The unique identifier for the resource. This identifier
	// is defined by the server.
	Id string `protobuf:"bytes,6,opt,name=id" json:"id,omitempty"`
	// Type of the resource.
	Kind string `protobuf:"bytes,7,opt,name=kind" json:"kind,omitempty"`
	// Name of the resource. Provided by the client when the resource is
	// created. The name must be 1-63 characters long, and comply with
	// RFC1035. Specifically, the name must be 1-63 characters long and
	// match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means
	// the first character must be a lowercase letter, and all following
	// characters must be a dash, lowercase letter, or digit, except the
	// last character, which cannot be a dash.
	Name string `protobuf:"bytes,8,opt,name=name" json:"name,omitempty"`
	// The TCP port number for the HTTPS health check request. The default
	// value is 443.
	Port int32 `protobuf:"varint,9,opt,name=port" json:"port,omitempty"`
	// The request path of the HTTPS health check request. The default value
	// is "/".
	RequestPath string `protobuf:"bytes,10,opt,name=requestPath" json:"requestPath,omitempty"`
	// [Output Only] Server-defined URL for the resource.
	SelfLink string `protobuf:"bytes,11,opt,name=selfLink" json:"selfLink,omitempty"`
	// How long (in seconds) to wait before claiming failure. The default
	// value is 5 seconds. It is invalid for timeoutSec to have a greater
	// value than checkIntervalSec.
	TimeoutSec int32 `protobuf:"varint,12,opt,name=timeoutSec" json:"timeoutSec,omitempty"`
	// A so-far healthy instance will be marked unhealthy after this many
	// consecutive failures. The default value is 2.
	UnhealthyThreshold int32 `protobuf:"varint,13,opt,name=unhealthyThreshold" json:"unhealthyThreshold,omitempty"`
}

func (m *HttpsHealthCheck) Reset()                    { *m = HttpsHealthCheck{} }
func (m *HttpsHealthCheck) String() string            { return proto.CompactTextString(m) }
func (*HttpsHealthCheck) ProtoMessage()               {}
func (*HttpsHealthCheck) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{78} }

func (m *HttpsHealthCheck) GetCheckIntervalSec() int32 {
	if m != nil {
		return m.CheckIntervalSec
	}
	return 0
}

func (m *HttpsHealthCheck) GetCreationTimestamp() string {
	if m != nil {
		return m.CreationTimestamp
	}
	return ""
}

func (m *HttpsHealthCheck) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *HttpsHealthCheck) GetHealthyThreshold() int32 {
	if m != nil {
		return m.HealthyThreshold
	}
	return 0
}

func (m *HttpsHealthCheck) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *HttpsHealthCheck) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *HttpsHealthCheck) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *HttpsHealthCheck) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *HttpsHealthCheck) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *HttpsHealthCheck) GetRequestPath() string {
	if m != nil {
		return m.RequestPath
	}
	return ""
}

func (m *HttpsHealthCheck) GetSelfLink() string {
	if m != nil {
		return m.SelfLink
	}
	return ""
}

func (m *HttpsHealthCheck) GetTimeoutSec() int32 {
	if m != nil {
		return m.TimeoutSec
	}
	return 0
}

func (m *HttpsHealthCheck) GetUnhealthyThreshold() int32 {
	if m != nil {
		return m.UnhealthyThreshold
	}
	return 0
}

// Contains a list of HttpsHealthCheck resources.
type HttpsHealthCheckList struct {
	// [Output Only] Unique identifier for the resource; defined by the
	// server.
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// A list of HttpsHealthCheck resources.
	Items []*HttpsHealthCheck `protobuf:"bytes,2,rep,name=items" json:"items,omitempty"`
	// Type of resource.
	Kind string `protobuf:"bytes,3,opt,name=kind" json:"kind,omitempty"`
	// [Output Only] This token allows you to get the next page of results
	// for list requests. If the number of results is larger than
	// maxResults, use the nextPageToken as a value for the query parameter
	// pageToken in the next list request. Subsequent list requests will
	// have their own nextPageToken to continue paging through the results.
	NextPageToken string `protobuf:"bytes,4,opt,name=nextPageToken" json:"nextPageToken,omitempty"`
	// [Output Only] Server-defined URL for this resource.
	SelfLink string                        `protobuf:"bytes,5,opt,name=selfLink" json:"selfLink,omitempty"`
	Warning  *HttpsHealthCheckList_Warning `protobuf:"bytes,6,opt,name=warning" json:"warning,omitempty"`
}

func (m *HttpsHealthCheckList) Reset()                    { *m = HttpsHealthCheckList{} }
func (m *HttpsHealthCheckList) String() string            { return proto.CompactTextString(m) }
func (*HttpsHealthCheckList) ProtoMessage()               {}
func (*HttpsHealthCheckList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{79} }

func (m *HttpsHealthCheckList) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *HttpsHealthCheckList) GetItems() []*HttpsHealthCheck {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *HttpsHealthCheckList) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *HttpsHealthCheckList) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

func (m *HttpsHealthCheckList) GetSelfLink() string {
	if m != nil {
		return m.SelfLink
	}
	return ""
}

func (m *HttpsHealthCheckList) GetWarning() *HttpsHealthCheckList_Warning {
	if m != nil {
		return m.Warning
	}
	return nil
}

// [Output Only] Informational warning message.
// [Output Only] Informational warning message.
type HttpsHealthCheckList_Warning struct {
	// [Output Only] A warning code, if applicable. For example, Compute
	// Engine returns NO_RESULTS_ON_PAGE if there are no results in the
	// response.
	// Valid values:
	//     CLEANUP_FAILED
	//     DEPRECATED_RESOURCE_USED
	//     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
	//     FIELD_VALUE_OVERRIDEN
	//     INJECTED_KERNELS_DEPRECATED
	//     NEXT_HOP_ADDRESS_NOT_ASSIGNED
	//     NEXT_HOP_CANNOT_IP_FORWARD
	//     NEXT_HOP_INSTANCE_NOT_FOUND
	//     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
	//     NEXT_HOP_NOT_RUNNING
	//     NOT_CRITICAL_ERROR
	//     NO_RESULTS_ON_PAGE
	//     REQUIRED_TOS_AGREEMENT
	//     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
	//     RESOURCE_NOT_DELETED
	//     SINGLE_INSTANCE_PROPERTY_TEMPLATE
	//     UNREACHABLE
	Code string                               `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Data []*HttpsHealthCheckList_Warning_Data `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
	// [Output Only] A human-readable description of the warning code.
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *HttpsHealthCheckList_Warning) Reset()         { *m = HttpsHealthCheckList_Warning{} }
func (m *HttpsHealthCheckList_Warning) String() string { return proto.CompactTextString(m) }
func (*HttpsHealthCheckList_Warning) ProtoMessage()    {}
func (*HttpsHealthCheckList_Warning) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{79, 0}
}

func (m *HttpsHealthCheckList_Warning) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *HttpsHealthCheckList_Warning) GetData() []*HttpsHealthCheckList_Warning_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *HttpsHealthCheckList_Warning) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// [Output Only] Metadata about this warning in key: value format. For
// example:
// "data": [ { "key": "scope", "value": "zones/us-east1-d" }
type HttpsHealthCheckList_Warning_Data struct {
	// [Output Only] A key that provides more detail on the warning being
	// returned. For example, for warnings where there are no results in a
	// list request for a particular zone, this key might be scope and the
	// key value might be the zone name. Other examples might be a key
	// indicating a deprecated resource and a suggested replacement, or a
	// warning about invalid network settings (for example, if an instance
	// attempts to perform IP forwarding but is not enabled for IP
	// forwarding).
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	// [Output Only] A warning data value corresponding to the key.
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *HttpsHealthCheckList_Warning_Data) Reset()         { *m = HttpsHealthCheckList_Warning_Data{} }
func (m *HttpsHealthCheckList_Warning_Data) String() string { return proto.CompactTextString(m) }
func (*HttpsHealthCheckList_Warning_Data) ProtoMessage()    {}
func (*HttpsHealthCheckList_Warning_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{79, 0, 0}
}

func (m *HttpsHealthCheckList_Warning_Data) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *HttpsHealthCheckList_Warning_Data) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

// An Image resource.
type Image struct {
	// Size of the image tar.gz archive stored in Google Cloud Storage (in
	// bytes).
	ArchiveSizeBytes string `protobuf:"bytes,1,opt,name=archiveSizeBytes" json:"archiveSizeBytes,omitempty"`
	// [Output Only] Creation timestamp in RFC3339 text format.
	CreationTimestamp string `protobuf:"bytes,2,opt,name=creationTimestamp" json:"creationTimestamp,omitempty"`
	// The deprecation status associated with this image.
	Deprecated *DeprecationStatus `protobuf:"bytes,3,opt,name=deprecated" json:"deprecated,omitempty"`
	// An optional description of this resource. Provide this property when
	// you create the resource.
	Description string `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	// Size of the image when restored onto a persistent disk (in GB).
	DiskSizeGb string `protobuf:"bytes,5,opt,name=diskSizeGb" json:"diskSizeGb,omitempty"`
	// The name of the image family to which this image belongs. You can
	// create disks by specifying an image family instead of a specific
	// image name. The image family always returns its latest image that is
	// not deprecated. The name of the image family must comply with
	// RFC1035.
	Family string `protobuf:"bytes,6,opt,name=family" json:"family,omitempty"`
	// A list of features to enable on the guest OS. Applicable for bootable
	// images only. Currently, only one feature can be enabled,
	// VIRTIO_SCSI_MULTIQUEUE, which allows each virtual CPU to have its own
	// queue. For Windows images, you can only enable VIRTIO_SCSI_MULTIQUEUE
	// on images with driver version 1.2.0.1621 or higher. Linux images with
	// kernel versions 3.17 and higher will support VIRTIO_SCSI_MULTIQUEUE.
	//
	// For newer Windows images, the server might also populate this
	// property with the value WINDOWS to indicate that this is a Windows
	// image.
	GuestOsFeatures []*GuestOsFeature `protobuf:"bytes,7,rep,name=guestOsFeatures" json:"guestOsFeatures,omitempty"`
	// [Output Only] The unique identifier for the resource. This identifier
	// is defined by the server.
	Id string `protobuf:"bytes,8,opt,name=id" json:"id,omitempty"`
	// Encrypts the image using a customer-supplied encryption key.
	//
	// After you encrypt an image with a customer-supplied key, you must
	// provide the same key if you use the image later (e.g. to create a
	// disk from the image).
	//
	// Customer-supplied encryption keys do not protect access to metadata
	// of the disk.
	//
	// If you do not provide an encryption key when creating the image, then
	// the disk will be encrypted using an automatically generated key and
	// you do not need to provide a key to use the image later.
	ImageEncryptionKey *CustomerEncryptionKey `protobuf:"bytes,9,opt,name=imageEncryptionKey" json:"imageEncryptionKey,omitempty"`
	// [Output Only] Type of the resource. Always compute#image for images.
	Kind string `protobuf:"bytes,10,opt,name=kind" json:"kind,omitempty"`
	// A fingerprint for the labels being applied to this image, which is
	// essentially a hash of the labels used for optimistic locking. The
	// fingerprint is initially generated by Compute Engine and changes
	// after every request to modify or update labels. You must always
	// provide an up-to-date fingerprint hash in order to update or change
	// labels.
	//
	// To see the latest fingerprint, make a get() request to retrieve an
	// image.
	LabelFingerprint string `protobuf:"bytes,11,opt,name=labelFingerprint" json:"labelFingerprint,omitempty"`
	// Labels to apply to this image. These can be later modified by the
	// setLabels method.
	Labels map[string]string `protobuf:"bytes,12,rep,name=labels" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Any applicable license URI.
	Licenses []string `protobuf:"bytes,13,rep,name=licenses" json:"licenses,omitempty"`
	// Name of the resource; provided by the client when the resource is
	// created. The name must be 1-63 characters long, and comply with
	// RFC1035. Specifically, the name must be 1-63 characters long and
	// match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means
	// the first character must be a lowercase letter, and all following
	// characters must be a dash, lowercase letter, or digit, except the
	// last character, which cannot be a dash.
	Name    string         `protobuf:"bytes,14,opt,name=name" json:"name,omitempty"`
	RawDisk *Image_RawDisk `protobuf:"bytes,15,opt,name=rawDisk" json:"rawDisk,omitempty"`
	// [Output Only] Server-defined URL for the resource.
	SelfLink string `protobuf:"bytes,16,opt,name=selfLink" json:"selfLink,omitempty"`
	// URL of the source disk used to create this image. This can be a full
	// or valid partial URL. You must provide either this property or the
	// rawDisk.source property but not both to create an image. For example,
	// the following are valid values:
	// -
	// https://www.googleapis.com/compute/v1/projects/project/zones/zone/disks/disk
	// - projects/project/zones/zone/disks/disk
	// - zones/zone/disks/disk
	SourceDisk string `protobuf:"bytes,17,opt,name=sourceDisk" json:"sourceDisk,omitempty"`
	// The customer-supplied encryption key of the source disk. Required if
	// the source disk is protected by a customer-supplied encryption key.
	SourceDiskEncryptionKey *CustomerEncryptionKey `protobuf:"bytes,18,opt,name=sourceDiskEncryptionKey" json:"sourceDiskEncryptionKey,omitempty"`
	// The ID value of the disk used to create this image. This value may be
	// used to determine whether the image was taken from the current or a
	// previous instance of a given disk name.
	SourceDiskId string `protobuf:"bytes,19,opt,name=sourceDiskId" json:"sourceDiskId,omitempty"`
	// URL of the source image used to create this image. This can be a full
	// or valid partial URL. You must provide exactly one of:
	// - this property, or
	// - the rawDisk.source property, or
	// - the sourceDisk property   in order to create an image.
	SourceImage string `protobuf:"bytes,20,opt,name=sourceImage" json:"sourceImage,omitempty"`
	// The customer-supplied encryption key of the source image. Required if
	// the source image is protected by a customer-supplied encryption key.
	SourceImageEncryptionKey *CustomerEncryptionKey `protobuf:"bytes,21,opt,name=sourceImageEncryptionKey" json:"sourceImageEncryptionKey,omitempty"`
	// [Output Only] The ID value of the image used to create this image.
	// This value may be used to determine whether the image was taken from
	// the current or a previous instance of a given image name.
	SourceImageId string `protobuf:"bytes,22,opt,name=sourceImageId" json:"sourceImageId,omitempty"`
	// The type of the image used to create this disk. The default and only
	// value is RAW
	// Valid values:
	//     RAW
	SourceType string `protobuf:"bytes,23,opt,name=sourceType" json:"sourceType,omitempty"`
	// [Output Only] The status of the image. An image can be used to create
	// other resources, such as instances, only after the image has been
	// successfully created and the status is set to READY. Possible values
	// are FAILED, PENDING, or READY.
	// Valid values:
	//     FAILED
	//     PENDING
	//     READY
	Status string `protobuf:"bytes,24,opt,name=status" json:"status,omitempty"`
}

func (m *Image) Reset()                    { *m = Image{} }
func (m *Image) String() string            { return proto.CompactTextString(m) }
func (*Image) ProtoMessage()               {}
func (*Image) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{80} }

func (m *Image) GetArchiveSizeBytes() string {
	if m != nil {
		return m.ArchiveSizeBytes
	}
	return ""
}

func (m *Image) GetCreationTimestamp() string {
	if m != nil {
		return m.CreationTimestamp
	}
	return ""
}

func (m *Image) GetDeprecated() *DeprecationStatus {
	if m != nil {
		return m.Deprecated
	}
	return nil
}

func (m *Image) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Image) GetDiskSizeGb() string {
	if m != nil {
		return m.DiskSizeGb
	}
	return ""
}

func (m *Image) GetFamily() string {
	if m != nil {
		return m.Family
	}
	return ""
}

func (m *Image) GetGuestOsFeatures() []*GuestOsFeature {
	if m != nil {
		return m.GuestOsFeatures
	}
	return nil
}

func (m *Image) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Image) GetImageEncryptionKey() *CustomerEncryptionKey {
	if m != nil {
		return m.ImageEncryptionKey
	}
	return nil
}

func (m *Image) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *Image) GetLabelFingerprint() string {
	if m != nil {
		return m.LabelFingerprint
	}
	return ""
}

func (m *Image) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *Image) GetLicenses() []string {
	if m != nil {
		return m.Licenses
	}
	return nil
}

func (m *Image) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Image) GetRawDisk() *Image_RawDisk {
	if m != nil {
		return m.RawDisk
	}
	return nil
}

func (m *Image) GetSelfLink() string {
	if m != nil {
		return m.SelfLink
	}
	return ""
}

func (m *Image) GetSourceDisk() string {
	if m != nil {
		return m.SourceDisk
	}
	return ""
}

func (m *Image) GetSourceDiskEncryptionKey() *CustomerEncryptionKey {
	if m != nil {
		return m.SourceDiskEncryptionKey
	}
	return nil
}

func (m *Image) GetSourceDiskId() string {
	if m != nil {
		return m.SourceDiskId
	}
	return ""
}

func (m *Image) GetSourceImage() string {
	if m != nil {
		return m.SourceImage
	}
	return ""
}

func (m *Image) GetSourceImageEncryptionKey() *CustomerEncryptionKey {
	if m != nil {
		return m.SourceImageEncryptionKey
	}
	return nil
}

func (m *Image) GetSourceImageId() string {
	if m != nil {
		return m.SourceImageId
	}
	return ""
}

func (m *Image) GetSourceType() string {
	if m != nil {
		return m.SourceType
	}
	return ""
}

func (m *Image) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

// The parameters of the raw disk image.
// The parameters of the raw disk image.
type Image_RawDisk struct {
	// The format used to encode and transmit the block device, which should
	// be TAR. This is just a container and transmission format and not a
	// runtime format. Provided by the client when the disk image is
	// created.
	// Valid values:
	//     TAR
	ContainerType string `protobuf:"bytes,1,opt,name=containerType" json:"containerType,omitempty"`
	// An optional SHA1 checksum of the disk image before unpackaging;
	// provided by the client when the disk image is created.
	Sha1Checksum string `protobuf:"bytes,2,opt,name=sha1Checksum" json:"sha1Checksum,omitempty"`
	// The full Google Cloud Storage URL where the disk image is stored. You
	// must provide either this property or the sourceDisk property but not
	// both.
	Source string `protobuf:"bytes,3,opt,name=source" json:"source,omitempty"`
}

func (m *Image_RawDisk) Reset()                    { *m = Image_RawDisk{} }
func (m *Image_RawDisk) String() string            { return proto.CompactTextString(m) }
func (*Image_RawDisk) ProtoMessage()               {}
func (*Image_RawDisk) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{80, 1} }

func (m *Image_RawDisk) GetContainerType() string {
	if m != nil {
		return m.ContainerType
	}
	return ""
}

func (m *Image_RawDisk) GetSha1Checksum() string {
	if m != nil {
		return m.Sha1Checksum
	}
	return ""
}

func (m *Image_RawDisk) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

// Contains a list of images.
type ImageList struct {
	// [Output Only] Unique identifier for the resource; defined by the
	// server.
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// A list of Image resources.
	Items []*Image `protobuf:"bytes,2,rep,name=items" json:"items,omitempty"`
	// Type of resource.
	Kind string `protobuf:"bytes,3,opt,name=kind" json:"kind,omitempty"`
	// [Output Only] This token allows you to get the next page of results
	// for list requests. If the number of results is larger than
	// maxResults, use the nextPageToken as a value for the query parameter
	// pageToken in the next list request. Subsequent list requests will
	// have their own nextPageToken to continue paging through the results.
	NextPageToken string `protobuf:"bytes,4,opt,name=nextPageToken" json:"nextPageToken,omitempty"`
	// [Output Only] Server-defined URL for this resource.
	SelfLink string             `protobuf:"bytes,5,opt,name=selfLink" json:"selfLink,omitempty"`
	Warning  *ImageList_Warning `protobuf:"bytes,6,opt,name=warning" json:"warning,omitempty"`
}

func (m *ImageList) Reset()                    { *m = ImageList{} }
func (m *ImageList) String() string            { return proto.CompactTextString(m) }
func (*ImageList) ProtoMessage()               {}
func (*ImageList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{81} }

func (m *ImageList) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ImageList) GetItems() []*Image {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *ImageList) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *ImageList) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

func (m *ImageList) GetSelfLink() string {
	if m != nil {
		return m.SelfLink
	}
	return ""
}

func (m *ImageList) GetWarning() *ImageList_Warning {
	if m != nil {
		return m.Warning
	}
	return nil
}

// [Output Only] Informational warning message.
// [Output Only] Informational warning message.
type ImageList_Warning struct {
	// [Output Only] A warning code, if applicable. For example, Compute
	// Engine returns NO_RESULTS_ON_PAGE if there are no results in the
	// response.
	// Valid values:
	//     CLEANUP_FAILED
	//     DEPRECATED_RESOURCE_USED
	//     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
	//     FIELD_VALUE_OVERRIDEN
	//     INJECTED_KERNELS_DEPRECATED
	//     NEXT_HOP_ADDRESS_NOT_ASSIGNED
	//     NEXT_HOP_CANNOT_IP_FORWARD
	//     NEXT_HOP_INSTANCE_NOT_FOUND
	//     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
	//     NEXT_HOP_NOT_RUNNING
	//     NOT_CRITICAL_ERROR
	//     NO_RESULTS_ON_PAGE
	//     REQUIRED_TOS_AGREEMENT
	//     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
	//     RESOURCE_NOT_DELETED
	//     SINGLE_INSTANCE_PROPERTY_TEMPLATE
	//     UNREACHABLE
	Code string                    `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Data []*ImageList_Warning_Data `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
	// [Output Only] A human-readable description of the warning code.
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *ImageList_Warning) Reset()                    { *m = ImageList_Warning{} }
func (m *ImageList_Warning) String() string            { return proto.CompactTextString(m) }
func (*ImageList_Warning) ProtoMessage()               {}
func (*ImageList_Warning) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{81, 0} }

func (m *ImageList_Warning) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *ImageList_Warning) GetData() []*ImageList_Warning_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ImageList_Warning) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// [Output Only] Metadata about this warning in key: value format. For
// example:
// "data": [ { "key": "scope", "value": "zones/us-east1-d" }
type ImageList_Warning_Data struct {
	// [Output Only] A key that provides more detail on the warning being
	// returned. For example, for warnings where there are no results in a
	// list request for a particular zone, this key might be scope and the
	// key value might be the zone name. Other examples might be a key
	// indicating a deprecated resource and a suggested replacement, or a
	// warning about invalid network settings (for example, if an instance
	// attempts to perform IP forwarding but is not enabled for IP
	// forwarding).
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	// [Output Only] A warning data value corresponding to the key.
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *ImageList_Warning_Data) Reset()                    { *m = ImageList_Warning_Data{} }
func (m *ImageList_Warning_Data) String() string            { return proto.CompactTextString(m) }
func (*ImageList_Warning_Data) ProtoMessage()               {}
func (*ImageList_Warning_Data) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{81, 0, 0} }

func (m *ImageList_Warning_Data) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *ImageList_Warning_Data) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

// An Instance resource.
type Instance struct {
	// Allows this instance to send and receive packets with non-matching
	// destination or source IPs. This is required if you plan to use this
	// instance to forward routes. For more information, see Enabling IP
	// Forwarding.
	CanIpForward bool `protobuf:"varint,1,opt,name=canIpForward" json:"canIpForward,omitempty"`
	// [Output Only] The CPU platform used by this instance.
	CpuPlatform string `protobuf:"bytes,2,opt,name=cpuPlatform" json:"cpuPlatform,omitempty"`
	// [Output Only] Creation timestamp in RFC3339 text format.
	CreationTimestamp string `protobuf:"bytes,3,opt,name=creationTimestamp" json:"creationTimestamp,omitempty"`
	// An optional description of this resource. Provide this property when
	// you create the resource.
	Description string `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	// Array of disks associated with this instance. Persistent disks must
	// be created before you can assign them.
	Disks []*AttachedDisk `protobuf:"bytes,5,rep,name=disks" json:"disks,omitempty"`
	// List of the type and count of accelerator cards attached to the
	// instance.
	GuestAccelerators []*AcceleratorConfig `protobuf:"bytes,6,rep,name=guestAccelerators" json:"guestAccelerators,omitempty"`
	// [Output Only] The unique identifier for the resource. This identifier
	// is defined by the server.
	Id string `protobuf:"bytes,7,opt,name=id" json:"id,omitempty"`
	// [Output Only] Type of the resource. Always compute#instance for
	// instances.
	Kind string `protobuf:"bytes,8,opt,name=kind" json:"kind,omitempty"`
	// A fingerprint for this request, which is essentially a hash of the
	// metadata's contents and used for optimistic locking. The fingerprint
	// is initially generated by Compute Engine and changes after every
	// request to modify or update metadata. You must always provide an
	// up-to-date fingerprint hash in order to update or change metadata.
	//
	// To see the latest fingerprint, make get() request to the instance.
	LabelFingerprint string `protobuf:"bytes,9,opt,name=labelFingerprint" json:"labelFingerprint,omitempty"`
	// Labels to apply to this instance. These can be later modified by the
	// setLabels method.
	Labels map[string]string `protobuf:"bytes,10,rep,name=labels" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Full or partial URL of the machine type resource to use for this
	// instance, in the format: zones/zone/machineTypes/machine-type. This
	// is provided by the client when the instance is created. For example,
	// the following is a valid partial url to a predefined machine type:
	//
	// zones/us-central1-f/machineTypes/n1-standard-1
	//
	// To create a custom machine type, provide a URL to a machine type in
	// the following format, where CPUS is 1 or an even number up to 32 (2,
	// 4, 6, ... 24, etc), and MEMORY is the total memory for this instance.
	// Memory must be a multiple of 256 MB and must be supplied in MB (e.g.
	// 5 GB of memory is 5120 MB):
	//
	// zones/zone/machineTypes/custom-CPUS-MEMORY
	//
	// For example: zones/us-central1-f/machineTypes/custom-4-5120
	//
	// For a full list of restrictions, read the Specifications for custom
	// machine types.
	MachineType string `protobuf:"bytes,11,opt,name=machineType" json:"machineType,omitempty"`
	// The metadata key/value pairs assigned to this instance. This includes
	// custom metadata and predefined keys.
	Metadata *Metadata `protobuf:"bytes,12,opt,name=metadata" json:"metadata,omitempty"`
	// Specifies a minimum CPU platform for the VM instance. Applicable
	// values are the friendly names of CPU platforms, such as
	// minCpuPlatform: "Intel Haswell" or minCpuPlatform: "Intel Sandy
	// Bridge".
	MinCpuPlatform string `protobuf:"bytes,13,opt,name=minCpuPlatform" json:"minCpuPlatform,omitempty"`
	// The name of the resource, provided by the client when initially
	// creating the resource. The resource name must be 1-63 characters
	// long, and comply with RFC1035. Specifically, the name must be 1-63
	// characters long and match the regular expression
	// [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a
	// lowercase letter, and all following characters must be a dash,
	// lowercase letter, or digit, except the last character, which cannot
	// be a dash.
	Name string `protobuf:"bytes,14,opt,name=name" json:"name,omitempty"`
	// An array of network configurations for this instance. These specify
	// how interfaces are configured to interact with other network
	// services, such as connecting to the internet. Multiple interfaces are
	// supported per instance.
	NetworkInterfaces []*NetworkInterface `protobuf:"bytes,15,rep,name=networkInterfaces" json:"networkInterfaces,omitempty"`
	// Sets the scheduling options for this instance.
	Scheduling *Scheduling `protobuf:"bytes,16,opt,name=scheduling" json:"scheduling,omitempty"`
	// [Output Only] Server-defined URL for this resource.
	SelfLink string `protobuf:"bytes,17,opt,name=selfLink" json:"selfLink,omitempty"`
	// A list of service accounts, with their specified scopes, authorized
	// for this instance. Only one service account per VM instance is
	// supported.
	//
	// Service accounts generate access tokens that can be accessed through
	// the metadata server and used to authenticate applications on the
	// instance. See Service Accounts for more information.
	ServiceAccounts []*ServiceAccount `protobuf:"bytes,18,rep,name=serviceAccounts" json:"serviceAccounts,omitempty"`
	// [Output Only] Whether a VM has been restricted for start because
	// Compute Engine has detected suspicious activity.
	StartRestricted bool `protobuf:"varint,19,opt,name=startRestricted" json:"startRestricted,omitempty"`
	// [Output Only] The status of the instance. One of the following
	// values: PROVISIONING, STAGING, RUNNING, STOPPING, STOPPED,
	// SUSPENDING, SUSPENDED, and TERMINATED.
	// Valid values:
	//     PROVISIONING
	//     RUNNING
	//     STAGING
	//     STOPPED
	//     STOPPING
	//     SUSPENDED
	//     SUSPENDING
	//     TERMINATED
	Status string `protobuf:"bytes,20,opt,name=status" json:"status,omitempty"`
	// [Output Only] An optional, human-readable explanation of the status.
	StatusMessage string `protobuf:"bytes,21,opt,name=statusMessage" json:"statusMessage,omitempty"`
	// A list of tags to apply to this instance. Tags are used to identify
	// valid sources or targets for network firewalls and are specified by
	// the client during instance creation. The tags can be later modified
	// by the setTags method. Each tag within the list must comply with
	// RFC1035.
	Tags *Tags `protobuf:"bytes,22,opt,name=tags" json:"tags,omitempty"`
	// [Output Only] URL of the zone where the instance resides.
	Zone string `protobuf:"bytes,23,opt,name=zone" json:"zone,omitempty"`
}

func (m *Instance) Reset()                    { *m = Instance{} }
func (m *Instance) String() string            { return proto.CompactTextString(m) }
func (*Instance) ProtoMessage()               {}
func (*Instance) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{82} }

func (m *Instance) GetCanIpForward() bool {
	if m != nil {
		return m.CanIpForward
	}
	return false
}

func (m *Instance) GetCpuPlatform() string {
	if m != nil {
		return m.CpuPlatform
	}
	return ""
}

func (m *Instance) GetCreationTimestamp() string {
	if m != nil {
		return m.CreationTimestamp
	}
	return ""
}

func (m *Instance) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Instance) GetDisks() []*AttachedDisk {
	if m != nil {
		return m.Disks
	}
	return nil
}

func (m *Instance) GetGuestAccelerators() []*AcceleratorConfig {
	if m != nil {
		return m.GuestAccelerators
	}
	return nil
}

func (m *Instance) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Instance) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *Instance) GetLabelFingerprint() string {
	if m != nil {
		return m.LabelFingerprint
	}
	return ""
}

func (m *Instance) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *Instance) GetMachineType() string {
	if m != nil {
		return m.MachineType
	}
	return ""
}

func (m *Instance) GetMetadata() *Metadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *Instance) GetMinCpuPlatform() string {
	if m != nil {
		return m.MinCpuPlatform
	}
	return ""
}

func (m *Instance) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Instance) GetNetworkInterfaces() []*NetworkInterface {
	if m != nil {
		return m.NetworkInterfaces
	}
	return nil
}

func (m *Instance) GetScheduling() *Scheduling {
	if m != nil {
		return m.Scheduling
	}
	return nil
}

func (m *Instance) GetSelfLink() string {
	if m != nil {
		return m.SelfLink
	}
	return ""
}

func (m *Instance) GetServiceAccounts() []*ServiceAccount {
	if m != nil {
		return m.ServiceAccounts
	}
	return nil
}

func (m *Instance) GetStartRestricted() bool {
	if m != nil {
		return m.StartRestricted
	}
	return false
}

func (m *Instance) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Instance) GetStatusMessage() string {
	if m != nil {
		return m.StatusMessage
	}
	return ""
}

func (m *Instance) GetTags() *Tags {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Instance) GetZone() string {
	if m != nil {
		return m.Zone
	}
	return ""
}

type InstanceAggregatedList struct {
	// [Output Only] Unique identifier for the resource; defined by the
	// server.
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// A list of InstancesScopedList resources.
	Items map[string]*InstancesScopedList `protobuf:"bytes,2,rep,name=items" json:"items,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// [Output Only] Type of resource. Always compute#instanceAggregatedList
	// for aggregated lists of Instance resources.
	Kind string `protobuf:"bytes,3,opt,name=kind" json:"kind,omitempty"`
	// [Output Only] This token allows you to get the next page of results
	// for list requests. If the number of results is larger than
	// maxResults, use the nextPageToken as a value for the query parameter
	// pageToken in the next list request. Subsequent list requests will
	// have their own nextPageToken to continue paging through the results.
	NextPageToken string `protobuf:"bytes,4,opt,name=nextPageToken" json:"nextPageToken,omitempty"`
	// [Output Only] Server-defined URL for this resource.
	SelfLink string                          `protobuf:"bytes,5,opt,name=selfLink" json:"selfLink,omitempty"`
	Warning  *InstanceAggregatedList_Warning `protobuf:"bytes,6,opt,name=warning" json:"warning,omitempty"`
}

func (m *InstanceAggregatedList) Reset()                    { *m = InstanceAggregatedList{} }
func (m *InstanceAggregatedList) String() string            { return proto.CompactTextString(m) }
func (*InstanceAggregatedList) ProtoMessage()               {}
func (*InstanceAggregatedList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{83} }

func (m *InstanceAggregatedList) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *InstanceAggregatedList) GetItems() map[string]*InstancesScopedList {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *InstanceAggregatedList) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *InstanceAggregatedList) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

func (m *InstanceAggregatedList) GetSelfLink() string {
	if m != nil {
		return m.SelfLink
	}
	return ""
}

func (m *InstanceAggregatedList) GetWarning() *InstanceAggregatedList_Warning {
	if m != nil {
		return m.Warning
	}
	return nil
}

// [Output Only] Informational warning message.
// [Output Only] Informational warning message.
type InstanceAggregatedList_Warning struct {
	// [Output Only] A warning code, if applicable. For example, Compute
	// Engine returns NO_RESULTS_ON_PAGE if there are no results in the
	// response.
	// Valid values:
	//     CLEANUP_FAILED
	//     DEPRECATED_RESOURCE_USED
	//     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
	//     FIELD_VALUE_OVERRIDEN
	//     INJECTED_KERNELS_DEPRECATED
	//     NEXT_HOP_ADDRESS_NOT_ASSIGNED
	//     NEXT_HOP_CANNOT_IP_FORWARD
	//     NEXT_HOP_INSTANCE_NOT_FOUND
	//     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
	//     NEXT_HOP_NOT_RUNNING
	//     NOT_CRITICAL_ERROR
	//     NO_RESULTS_ON_PAGE
	//     REQUIRED_TOS_AGREEMENT
	//     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
	//     RESOURCE_NOT_DELETED
	//     SINGLE_INSTANCE_PROPERTY_TEMPLATE
	//     UNREACHABLE
	Code string                                 `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Data []*InstanceAggregatedList_Warning_Data `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
	// [Output Only] A human-readable description of the warning code.
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *InstanceAggregatedList_Warning) Reset()         { *m = InstanceAggregatedList_Warning{} }
func (m *InstanceAggregatedList_Warning) String() string { return proto.CompactTextString(m) }
func (*InstanceAggregatedList_Warning) ProtoMessage()    {}
func (*InstanceAggregatedList_Warning) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{83, 1}
}

func (m *InstanceAggregatedList_Warning) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *InstanceAggregatedList_Warning) GetData() []*InstanceAggregatedList_Warning_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *InstanceAggregatedList_Warning) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// [Output Only] Metadata about this warning in key: value format. For
// example:
// "data": [ { "key": "scope", "value": "zones/us-east1-d" }
type InstanceAggregatedList_Warning_Data struct {
	// [Output Only] A key that provides more detail on the warning being
	// returned. For example, for warnings where there are no results in a
	// list request for a particular zone, this key might be scope and the
	// key value might be the zone name. Other examples might be a key
	// indicating a deprecated resource and a suggested replacement, or a
	// warning about invalid network settings (for example, if an instance
	// attempts to perform IP forwarding but is not enabled for IP
	// forwarding).
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	// [Output Only] A warning data value corresponding to the key.
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *InstanceAggregatedList_Warning_Data) Reset()         { *m = InstanceAggregatedList_Warning_Data{} }
func (m *InstanceAggregatedList_Warning_Data) String() string { return proto.CompactTextString(m) }
func (*InstanceAggregatedList_Warning_Data) ProtoMessage()    {}
func (*InstanceAggregatedList_Warning_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{83, 1, 0}
}

func (m *InstanceAggregatedList_Warning_Data) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *InstanceAggregatedList_Warning_Data) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type InstanceGroup struct {
	// [Output Only] The creation timestamp for this instance group in
	// RFC3339 text format.
	CreationTimestamp string `protobuf:"bytes,1,opt,name=creationTimestamp" json:"creationTimestamp,omitempty"`
	// An optional description of this resource. Provide this property when
	// you create the resource.
	Description string `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	// [Output Only] The fingerprint of the named ports. The system uses
	// this fingerprint to detect conflicts when multiple users change the
	// named ports concurrently.
	Fingerprint string `protobuf:"bytes,3,opt,name=fingerprint" json:"fingerprint,omitempty"`
	// [Output Only] A unique identifier for this instance group, generated
	// by the server.
	Id string `protobuf:"bytes,4,opt,name=id" json:"id,omitempty"`
	// [Output Only] The resource type, which is always
	// compute#instanceGroup for instance groups.
	Kind string `protobuf:"bytes,5,opt,name=kind" json:"kind,omitempty"`
	// The name of the instance group. The name must be 1-63 characters
	// long, and comply with RFC1035.
	Name string `protobuf:"bytes,6,opt,name=name" json:"name,omitempty"`
	// Assigns a name to a port number. For example: {name: "http", port:
	// 80}
	//
	// This allows the system to reference ports by the assigned name
	// instead of a port number. Named ports can also contain multiple
	// ports. For example: [{name: "http", port: 80},{name: "http", port:
	// 8080}]
	//
	// Named ports apply to all instances in this instance group.
	NamedPorts []*NamedPort `protobuf:"bytes,7,rep,name=namedPorts" json:"namedPorts,omitempty"`
	// The URL of the network to which all instances in the instance group
	// belong.
	Network string `protobuf:"bytes,8,opt,name=network" json:"network,omitempty"`
	// The URL of the region where the instance group is located (for
	// regional resources).
	Region string `protobuf:"bytes,9,opt,name=region" json:"region,omitempty"`
	// [Output Only] The URL for this instance group. The server generates
	// this URL.
	SelfLink string `protobuf:"bytes,10,opt,name=selfLink" json:"selfLink,omitempty"`
	// [Output Only] The total number of instances in the instance group.
	Size int32 `protobuf:"varint,11,opt,name=size" json:"size,omitempty"`
	// The URL of the subnetwork to which all instances in the instance
	// group belong.
	Subnetwork string `protobuf:"bytes,12,opt,name=subnetwork" json:"subnetwork,omitempty"`
	// [Output Only] The URL of the zone where the instance group is located
	// (for zonal resources).
	Zone string `protobuf:"bytes,13,opt,name=zone" json:"zone,omitempty"`
}

func (m *InstanceGroup) Reset()                    { *m = InstanceGroup{} }
func (m *InstanceGroup) String() string            { return proto.CompactTextString(m) }
func (*InstanceGroup) ProtoMessage()               {}
func (*InstanceGroup) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{84} }

func (m *InstanceGroup) GetCreationTimestamp() string {
	if m != nil {
		return m.CreationTimestamp
	}
	return ""
}

func (m *InstanceGroup) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *InstanceGroup) GetFingerprint() string {
	if m != nil {
		return m.Fingerprint
	}
	return ""
}

func (m *InstanceGroup) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *InstanceGroup) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *InstanceGroup) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *InstanceGroup) GetNamedPorts() []*NamedPort {
	if m != nil {
		return m.NamedPorts
	}
	return nil
}

func (m *InstanceGroup) GetNetwork() string {
	if m != nil {
		return m.Network
	}
	return ""
}

func (m *InstanceGroup) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *InstanceGroup) GetSelfLink() string {
	if m != nil {
		return m.SelfLink
	}
	return ""
}

func (m *InstanceGroup) GetSize() int32 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *InstanceGroup) GetSubnetwork() string {
	if m != nil {
		return m.Subnetwork
	}
	return ""
}

func (m *InstanceGroup) GetZone() string {
	if m != nil {
		return m.Zone
	}
	return ""
}

type InstanceGroupAggregatedList struct {
	// [Output Only] Unique identifier for the resource; defined by the
	// server.
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// A list of InstanceGroupsScopedList resources.
	Items map[string]*InstanceGroupsScopedList `protobuf:"bytes,2,rep,name=items" json:"items,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// [Output Only] The resource type, which is always
	// compute#instanceGroupAggregatedList for aggregated lists of instance
	// groups.
	Kind string `protobuf:"bytes,3,opt,name=kind" json:"kind,omitempty"`
	// [Output Only] This token allows you to get the next page of results
	// for list requests. If the number of results is larger than
	// maxResults, use the nextPageToken as a value for the query parameter
	// pageToken in the next list request. Subsequent list requests will
	// have their own nextPageToken to continue paging through the results.
	NextPageToken string `protobuf:"bytes,4,opt,name=nextPageToken" json:"nextPageToken,omitempty"`
	// [Output Only] Server-defined URL for this resource.
	SelfLink string                               `protobuf:"bytes,5,opt,name=selfLink" json:"selfLink,omitempty"`
	Warning  *InstanceGroupAggregatedList_Warning `protobuf:"bytes,6,opt,name=warning" json:"warning,omitempty"`
}

func (m *InstanceGroupAggregatedList) Reset()                    { *m = InstanceGroupAggregatedList{} }
func (m *InstanceGroupAggregatedList) String() string            { return proto.CompactTextString(m) }
func (*InstanceGroupAggregatedList) ProtoMessage()               {}
func (*InstanceGroupAggregatedList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{85} }

func (m *InstanceGroupAggregatedList) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *InstanceGroupAggregatedList) GetItems() map[string]*InstanceGroupsScopedList {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *InstanceGroupAggregatedList) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *InstanceGroupAggregatedList) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

func (m *InstanceGroupAggregatedList) GetSelfLink() string {
	if m != nil {
		return m.SelfLink
	}
	return ""
}

func (m *InstanceGroupAggregatedList) GetWarning() *InstanceGroupAggregatedList_Warning {
	if m != nil {
		return m.Warning
	}
	return nil
}

// [Output Only] Informational warning message.
// [Output Only] Informational warning message.
type InstanceGroupAggregatedList_Warning struct {
	// [Output Only] A warning code, if applicable. For example, Compute
	// Engine returns NO_RESULTS_ON_PAGE if there are no results in the
	// response.
	// Valid values:
	//     CLEANUP_FAILED
	//     DEPRECATED_RESOURCE_USED
	//     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
	//     FIELD_VALUE_OVERRIDEN
	//     INJECTED_KERNELS_DEPRECATED
	//     NEXT_HOP_ADDRESS_NOT_ASSIGNED
	//     NEXT_HOP_CANNOT_IP_FORWARD
	//     NEXT_HOP_INSTANCE_NOT_FOUND
	//     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
	//     NEXT_HOP_NOT_RUNNING
	//     NOT_CRITICAL_ERROR
	//     NO_RESULTS_ON_PAGE
	//     REQUIRED_TOS_AGREEMENT
	//     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
	//     RESOURCE_NOT_DELETED
	//     SINGLE_INSTANCE_PROPERTY_TEMPLATE
	//     UNREACHABLE
	Code string                                      `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Data []*InstanceGroupAggregatedList_Warning_Data `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
	// [Output Only] A human-readable description of the warning code.
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *InstanceGroupAggregatedList_Warning) Reset()         { *m = InstanceGroupAggregatedList_Warning{} }
func (m *InstanceGroupAggregatedList_Warning) String() string { return proto.CompactTextString(m) }
func (*InstanceGroupAggregatedList_Warning) ProtoMessage()    {}
func (*InstanceGroupAggregatedList_Warning) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{85, 1}
}

func (m *InstanceGroupAggregatedList_Warning) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *InstanceGroupAggregatedList_Warning) GetData() []*InstanceGroupAggregatedList_Warning_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *InstanceGroupAggregatedList_Warning) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// [Output Only] Metadata about this warning in key: value format. For
// example:
// "data": [ { "key": "scope", "value": "zones/us-east1-d" }
type InstanceGroupAggregatedList_Warning_Data struct {
	// [Output Only] A key that provides more detail on the warning being
	// returned. For example, for warnings where there are no results in a
	// list request for a particular zone, this key might be scope and the
	// key value might be the zone name. Other examples might be a key
	// indicating a deprecated resource and a suggested replacement, or a
	// warning about invalid network settings (for example, if an instance
	// attempts to perform IP forwarding but is not enabled for IP
	// forwarding).
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	// [Output Only] A warning data value corresponding to the key.
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *InstanceGroupAggregatedList_Warning_Data) Reset() {
	*m = InstanceGroupAggregatedList_Warning_Data{}
}
func (m *InstanceGroupAggregatedList_Warning_Data) String() string { return proto.CompactTextString(m) }
func (*InstanceGroupAggregatedList_Warning_Data) ProtoMessage()    {}
func (*InstanceGroupAggregatedList_Warning_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{85, 1, 0}
}

func (m *InstanceGroupAggregatedList_Warning_Data) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *InstanceGroupAggregatedList_Warning_Data) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

// A list of InstanceGroup resources.
type InstanceGroupList struct {
	// [Output Only] Unique identifier for the resource; defined by the
	// server.
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// A list of InstanceGroup resources.
	Items []*InstanceGroup `protobuf:"bytes,2,rep,name=items" json:"items,omitempty"`
	// [Output Only] The resource type, which is always
	// compute#instanceGroupList for instance group lists.
	Kind string `protobuf:"bytes,3,opt,name=kind" json:"kind,omitempty"`
	// [Output Only] This token allows you to get the next page of results
	// for list requests. If the number of results is larger than
	// maxResults, use the nextPageToken as a value for the query parameter
	// pageToken in the next list request. Subsequent list requests will
	// have their own nextPageToken to continue paging through the results.
	NextPageToken string `protobuf:"bytes,4,opt,name=nextPageToken" json:"nextPageToken,omitempty"`
	// [Output Only] Server-defined URL for this resource.
	SelfLink string                     `protobuf:"bytes,5,opt,name=selfLink" json:"selfLink,omitempty"`
	Warning  *InstanceGroupList_Warning `protobuf:"bytes,6,opt,name=warning" json:"warning,omitempty"`
}

func (m *InstanceGroupList) Reset()                    { *m = InstanceGroupList{} }
func (m *InstanceGroupList) String() string            { return proto.CompactTextString(m) }
func (*InstanceGroupList) ProtoMessage()               {}
func (*InstanceGroupList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{86} }

func (m *InstanceGroupList) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *InstanceGroupList) GetItems() []*InstanceGroup {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *InstanceGroupList) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *InstanceGroupList) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

func (m *InstanceGroupList) GetSelfLink() string {
	if m != nil {
		return m.SelfLink
	}
	return ""
}

func (m *InstanceGroupList) GetWarning() *InstanceGroupList_Warning {
	if m != nil {
		return m.Warning
	}
	return nil
}

// [Output Only] Informational warning message.
// [Output Only] Informational warning message.
type InstanceGroupList_Warning struct {
	// [Output Only] A warning code, if applicable. For example, Compute
	// Engine returns NO_RESULTS_ON_PAGE if there are no results in the
	// response.
	// Valid values:
	//     CLEANUP_FAILED
	//     DEPRECATED_RESOURCE_USED
	//     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
	//     FIELD_VALUE_OVERRIDEN
	//     INJECTED_KERNELS_DEPRECATED
	//     NEXT_HOP_ADDRESS_NOT_ASSIGNED
	//     NEXT_HOP_CANNOT_IP_FORWARD
	//     NEXT_HOP_INSTANCE_NOT_FOUND
	//     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
	//     NEXT_HOP_NOT_RUNNING
	//     NOT_CRITICAL_ERROR
	//     NO_RESULTS_ON_PAGE
	//     REQUIRED_TOS_AGREEMENT
	//     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
	//     RESOURCE_NOT_DELETED
	//     SINGLE_INSTANCE_PROPERTY_TEMPLATE
	//     UNREACHABLE
	Code string                            `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Data []*InstanceGroupList_Warning_Data `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
	// [Output Only] A human-readable description of the warning code.
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *InstanceGroupList_Warning) Reset()                    { *m = InstanceGroupList_Warning{} }
func (m *InstanceGroupList_Warning) String() string            { return proto.CompactTextString(m) }
func (*InstanceGroupList_Warning) ProtoMessage()               {}
func (*InstanceGroupList_Warning) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{86, 0} }

func (m *InstanceGroupList_Warning) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *InstanceGroupList_Warning) GetData() []*InstanceGroupList_Warning_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *InstanceGroupList_Warning) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// [Output Only] Metadata about this warning in key: value format. For
// example:
// "data": [ { "key": "scope", "value": "zones/us-east1-d" }
type InstanceGroupList_Warning_Data struct {
	// [Output Only] A key that provides more detail on the warning being
	// returned. For example, for warnings where there are no results in a
	// list request for a particular zone, this key might be scope and the
	// key value might be the zone name. Other examples might be a key
	// indicating a deprecated resource and a suggested replacement, or a
	// warning about invalid network settings (for example, if an instance
	// attempts to perform IP forwarding but is not enabled for IP
	// forwarding).
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	// [Output Only] A warning data value corresponding to the key.
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *InstanceGroupList_Warning_Data) Reset()         { *m = InstanceGroupList_Warning_Data{} }
func (m *InstanceGroupList_Warning_Data) String() string { return proto.CompactTextString(m) }
func (*InstanceGroupList_Warning_Data) ProtoMessage()    {}
func (*InstanceGroupList_Warning_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{86, 0, 0}
}

func (m *InstanceGroupList_Warning_Data) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *InstanceGroupList_Warning_Data) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

// An Instance Group Manager resource.
type InstanceGroupManager struct {
	// The autohealing policy for this managed instance group. You can
	// specify only one value.
	AutoHealingPolicies []*InstanceGroupManagerAutoHealingPolicy `protobuf:"bytes,1,rep,name=autoHealingPolicies" json:"autoHealingPolicies,omitempty"`
	// The base instance name to use for instances in this group. The value
	// must be 1-58 characters long. Instances are named by appending a
	// hyphen and a random four-character string to the base instance name.
	// The base instance name must comply with RFC1035.
	BaseInstanceName string `protobuf:"bytes,2,opt,name=baseInstanceName" json:"baseInstanceName,omitempty"`
	// [Output Only] The creation timestamp for this managed instance group
	// in RFC3339 text format.
	CreationTimestamp string `protobuf:"bytes,3,opt,name=creationTimestamp" json:"creationTimestamp,omitempty"`
	// [Output Only] The list of instance actions and the number of
	// instances in this managed instance group that are scheduled for each
	// of those actions.
	CurrentActions *InstanceGroupManagerActionsSummary `protobuf:"bytes,4,opt,name=currentActions" json:"currentActions,omitempty"`
	// An optional description of this resource. Provide this property when
	// you create the resource.
	Description string `protobuf:"bytes,5,opt,name=description" json:"description,omitempty"`
	// Policy valid only for regional managed instance groups.
	DistributionPolicy *DistributionPolicy `protobuf:"bytes,6,opt,name=distributionPolicy" json:"distributionPolicy,omitempty"`
	// The action to perform in case of zone failure. Only one value is
	// supported, NO_FAILOVER. The default is NO_FAILOVER.
	// Valid values:
	//     NO_FAILOVER
	//     UNKNOWN
	FailoverAction string `protobuf:"bytes,7,opt,name=failoverAction" json:"failoverAction,omitempty"`
	// [Output Only] The fingerprint of the resource data. You can use this
	// optional field for optimistic locking when you update the resource.
	Fingerprint string `protobuf:"bytes,8,opt,name=fingerprint" json:"fingerprint,omitempty"`
	// [Output Only] A unique identifier for this resource type. The server
	// generates this identifier.
	Id string `protobuf:"bytes,9,opt,name=id" json:"id,omitempty"`
	// [Output Only] The URL of the Instance Group resource.
	InstanceGroup string `protobuf:"bytes,10,opt,name=instanceGroup" json:"instanceGroup,omitempty"`
	// The URL of the instance template that is specified for this managed
	// instance group. The group uses this template to create all new
	// instances in the managed instance group.
	InstanceTemplate string `protobuf:"bytes,11,opt,name=instanceTemplate" json:"instanceTemplate,omitempty"`
	// [Output Only] The resource type, which is always
	// compute#instanceGroupManager for managed instance groups.
	Kind string `protobuf:"bytes,12,opt,name=kind" json:"kind,omitempty"`
	// The name of the managed instance group. The name must be 1-63
	// characters long, and comply with RFC1035.
	Name string `protobuf:"bytes,13,opt,name=name" json:"name,omitempty"`
	// Named ports configured for the Instance Groups complementary to this
	// Instance Group Manager.
	NamedPorts []*NamedPort `protobuf:"bytes,14,rep,name=namedPorts" json:"namedPorts,omitempty"`
	// [Output Only] The list of instance actions and the number of
	// instances in this managed instance group that are pending for each of
	// those actions.
	PendingActions *InstanceGroupManagerPendingActionsSummary `protobuf:"bytes,15,opt,name=pendingActions" json:"pendingActions,omitempty"`
	// [Output Only] The URL of the region where the managed instance group
	// resides (for regional resources).
	Region string `protobuf:"bytes,16,opt,name=region" json:"region,omitempty"`
	// [Output Only] The URL for this managed instance group. The server
	// defines this URL.
	SelfLink string `protobuf:"bytes,17,opt,name=selfLink" json:"selfLink,omitempty"`
	// [Output Only] The service account to be used as credentials for all
	// operations performed by the managed instance group on instances. The
	// service accounts needs all permissions required to create and delete
	// instances. By default, the service account
	// {projectNumber}@cloudservices.gserviceaccount.com is used.
	ServiceAccount string `protobuf:"bytes,18,opt,name=serviceAccount" json:"serviceAccount,omitempty"`
	// The URLs for all TargetPool resources to which instances in the
	// instanceGroup field are added. The target pools automatically apply
	// to all of the instances in the managed instance group.
	TargetPools []string `protobuf:"bytes,19,rep,name=targetPools" json:"targetPools,omitempty"`
	// The target number of running instances for this managed instance
	// group. Deleting or abandoning instances reduces this number. Resizing
	// the group changes this number.
	TargetSize int32 `protobuf:"varint,20,opt,name=targetSize" json:"targetSize,omitempty"`
	// The update policy for this managed instance group.
	UpdatePolicy *InstanceGroupManagerUpdatePolicy `protobuf:"bytes,21,opt,name=updatePolicy" json:"updatePolicy,omitempty"`
	// Versions supported by this IGM. User should set this field if they
	// need fine-grained control over how many instances in each version are
	// run by this IGM. Versions are keyed by instanceTemplate. Every
	// instanceTemplate can appear at most once. This field overrides
	// instanceTemplate field. If both instanceTemplate and versions are
	// set, the user receives a warning. "instanceTemplate: X" is
	// semantically equivalent to "versions [ { instanceTemplate: X } ]".
	// Exactly one version must have targetSize field left unset. Size of
	// such a version will be calculated automatically.
	Versions []*InstanceGroupManagerVersion `protobuf:"bytes,22,rep,name=versions" json:"versions,omitempty"`
	// [Output Only] The URL of the zone where the managed instance group is
	// located (for zonal resources).
	Zone string `protobuf:"bytes,23,opt,name=zone" json:"zone,omitempty"`
}

func (m *InstanceGroupManager) Reset()                    { *m = InstanceGroupManager{} }
func (m *InstanceGroupManager) String() string            { return proto.CompactTextString(m) }
func (*InstanceGroupManager) ProtoMessage()               {}
func (*InstanceGroupManager) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{87} }

func (m *InstanceGroupManager) GetAutoHealingPolicies() []*InstanceGroupManagerAutoHealingPolicy {
	if m != nil {
		return m.AutoHealingPolicies
	}
	return nil
}

func (m *InstanceGroupManager) GetBaseInstanceName() string {
	if m != nil {
		return m.BaseInstanceName
	}
	return ""
}

func (m *InstanceGroupManager) GetCreationTimestamp() string {
	if m != nil {
		return m.CreationTimestamp
	}
	return ""
}

func (m *InstanceGroupManager) GetCurrentActions() *InstanceGroupManagerActionsSummary {
	if m != nil {
		return m.CurrentActions
	}
	return nil
}

func (m *InstanceGroupManager) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *InstanceGroupManager) GetDistributionPolicy() *DistributionPolicy {
	if m != nil {
		return m.DistributionPolicy
	}
	return nil
}

func (m *InstanceGroupManager) GetFailoverAction() string {
	if m != nil {
		return m.FailoverAction
	}
	return ""
}

func (m *InstanceGroupManager) GetFingerprint() string {
	if m != nil {
		return m.Fingerprint
	}
	return ""
}

func (m *InstanceGroupManager) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *InstanceGroupManager) GetInstanceGroup() string {
	if m != nil {
		return m.InstanceGroup
	}
	return ""
}

func (m *InstanceGroupManager) GetInstanceTemplate() string {
	if m != nil {
		return m.InstanceTemplate
	}
	return ""
}

func (m *InstanceGroupManager) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *InstanceGroupManager) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *InstanceGroupManager) GetNamedPorts() []*NamedPort {
	if m != nil {
		return m.NamedPorts
	}
	return nil
}

func (m *InstanceGroupManager) GetPendingActions() *InstanceGroupManagerPendingActionsSummary {
	if m != nil {
		return m.PendingActions
	}
	return nil
}

func (m *InstanceGroupManager) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *InstanceGroupManager) GetSelfLink() string {
	if m != nil {
		return m.SelfLink
	}
	return ""
}

func (m *InstanceGroupManager) GetServiceAccount() string {
	if m != nil {
		return m.ServiceAccount
	}
	return ""
}

func (m *InstanceGroupManager) GetTargetPools() []string {
	if m != nil {
		return m.TargetPools
	}
	return nil
}

func (m *InstanceGroupManager) GetTargetSize() int32 {
	if m != nil {
		return m.TargetSize
	}
	return 0
}

func (m *InstanceGroupManager) GetUpdatePolicy() *InstanceGroupManagerUpdatePolicy {
	if m != nil {
		return m.UpdatePolicy
	}
	return nil
}

func (m *InstanceGroupManager) GetVersions() []*InstanceGroupManagerVersion {
	if m != nil {
		return m.Versions
	}
	return nil
}

func (m *InstanceGroupManager) GetZone() string {
	if m != nil {
		return m.Zone
	}
	return ""
}

type InstanceGroupManagerActionsSummary struct {
	// [Output Only] The total number of instances in the managed instance
	// group that are scheduled to be abandoned. Abandoning an instance
	// removes it from the managed instance group without deleting it.
	Abandoning int32 `protobuf:"varint,1,opt,name=abandoning" json:"abandoning,omitempty"`
	// [Output Only] The number of instances in the managed instance group
	// that are scheduled to be created or are currently being created. If
	// the group fails to create any of these instances, it tries again
	// until it creates the instance successfully.
	//
	// If you have disabled creation retries, this field will not be
	// populated; instead, the creatingWithoutRetries field will be
	// populated.
	Creating int32 `protobuf:"varint,2,opt,name=creating" json:"creating,omitempty"`
	// [Output Only] The number of instances that the managed instance group
	// will attempt to create. The group attempts to create each instance
	// only once. If the group fails to create any of these instances, it
	// decreases the group's targetSize value accordingly.
	CreatingWithoutRetries int32 `protobuf:"varint,3,opt,name=creatingWithoutRetries" json:"creatingWithoutRetries,omitempty"`
	// [Output Only] The number of instances in the managed instance group
	// that are scheduled to be deleted or are currently being deleted.
	Deleting int32 `protobuf:"varint,4,opt,name=deleting" json:"deleting,omitempty"`
	// [Output Only] The number of instances in the managed instance group
	// that are running and have no scheduled actions.
	None int32 `protobuf:"varint,5,opt,name=none" json:"none,omitempty"`
	// [Output Only] The number of instances in the managed instance group
	// that are scheduled to be recreated or are currently being being
	// recreated. Recreating an instance deletes the existing root
	// persistent disk and creates a new disk from the image that is defined
	// in the instance template.
	Recreating int32 `protobuf:"varint,6,opt,name=recreating" json:"recreating,omitempty"`
	// [Output Only] The number of instances in the managed instance group
	// that are being reconfigured with properties that do not require a
	// restart or a recreate action. For example, setting or removing target
	// pools for the instance.
	Refreshing int32 `protobuf:"varint,7,opt,name=refreshing" json:"refreshing,omitempty"`
	// [Output Only] The number of instances in the managed instance group
	// that are scheduled to be restarted or are currently being restarted.
	Restarting int32 `protobuf:"varint,8,opt,name=restarting" json:"restarting,omitempty"`
	// [Output Only] The number of instances in the managed instance group
	// that are being verified. More details regarding verification process
	// are covered in the documentation of
	// ManagedInstance.InstanceAction.VERIFYING enum field.
	Verifying int32 `protobuf:"varint,9,opt,name=verifying" json:"verifying,omitempty"`
}

func (m *InstanceGroupManagerActionsSummary) Reset()         { *m = InstanceGroupManagerActionsSummary{} }
func (m *InstanceGroupManagerActionsSummary) String() string { return proto.CompactTextString(m) }
func (*InstanceGroupManagerActionsSummary) ProtoMessage()    {}
func (*InstanceGroupManagerActionsSummary) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{88}
}

func (m *InstanceGroupManagerActionsSummary) GetAbandoning() int32 {
	if m != nil {
		return m.Abandoning
	}
	return 0
}

func (m *InstanceGroupManagerActionsSummary) GetCreating() int32 {
	if m != nil {
		return m.Creating
	}
	return 0
}

func (m *InstanceGroupManagerActionsSummary) GetCreatingWithoutRetries() int32 {
	if m != nil {
		return m.CreatingWithoutRetries
	}
	return 0
}

func (m *InstanceGroupManagerActionsSummary) GetDeleting() int32 {
	if m != nil {
		return m.Deleting
	}
	return 0
}

func (m *InstanceGroupManagerActionsSummary) GetNone() int32 {
	if m != nil {
		return m.None
	}
	return 0
}

func (m *InstanceGroupManagerActionsSummary) GetRecreating() int32 {
	if m != nil {
		return m.Recreating
	}
	return 0
}

func (m *InstanceGroupManagerActionsSummary) GetRefreshing() int32 {
	if m != nil {
		return m.Refreshing
	}
	return 0
}

func (m *InstanceGroupManagerActionsSummary) GetRestarting() int32 {
	if m != nil {
		return m.Restarting
	}
	return 0
}

func (m *InstanceGroupManagerActionsSummary) GetVerifying() int32 {
	if m != nil {
		return m.Verifying
	}
	return 0
}

type InstanceGroupManagerAggregatedList struct {
	// [Output Only] Unique identifier for the resource; defined by the
	// server.
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// A list of InstanceGroupManagersScopedList resources.
	Items map[string]*InstanceGroupManagersScopedList `protobuf:"bytes,2,rep,name=items" json:"items,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// [Output Only] The resource type, which is always
	// compute#instanceGroupManagerAggregatedList for an aggregated list of
	// managed instance groups.
	Kind string `protobuf:"bytes,3,opt,name=kind" json:"kind,omitempty"`
	// [Output Only] This token allows you to get the next page of results
	// for list requests. If the number of results is larger than
	// maxResults, use the nextPageToken as a value for the query parameter
	// pageToken in the next list request. Subsequent list requests will
	// have their own nextPageToken to continue paging through the results.
	NextPageToken string `protobuf:"bytes,4,opt,name=nextPageToken" json:"nextPageToken,omitempty"`
	// [Output Only] Server-defined URL for this resource.
	SelfLink string                                      `protobuf:"bytes,5,opt,name=selfLink" json:"selfLink,omitempty"`
	Warning  *InstanceGroupManagerAggregatedList_Warning `protobuf:"bytes,6,opt,name=warning" json:"warning,omitempty"`
}

func (m *InstanceGroupManagerAggregatedList) Reset()         { *m = InstanceGroupManagerAggregatedList{} }
func (m *InstanceGroupManagerAggregatedList) String() string { return proto.CompactTextString(m) }
func (*InstanceGroupManagerAggregatedList) ProtoMessage()    {}
func (*InstanceGroupManagerAggregatedList) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{89}
}

func (m *InstanceGroupManagerAggregatedList) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *InstanceGroupManagerAggregatedList) GetItems() map[string]*InstanceGroupManagersScopedList {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *InstanceGroupManagerAggregatedList) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *InstanceGroupManagerAggregatedList) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

func (m *InstanceGroupManagerAggregatedList) GetSelfLink() string {
	if m != nil {
		return m.SelfLink
	}
	return ""
}

func (m *InstanceGroupManagerAggregatedList) GetWarning() *InstanceGroupManagerAggregatedList_Warning {
	if m != nil {
		return m.Warning
	}
	return nil
}

// [Output Only] Informational warning message.
// [Output Only] Informational warning message.
type InstanceGroupManagerAggregatedList_Warning struct {
	// [Output Only] A warning code, if applicable. For example, Compute
	// Engine returns NO_RESULTS_ON_PAGE if there are no results in the
	// response.
	// Valid values:
	//     CLEANUP_FAILED
	//     DEPRECATED_RESOURCE_USED
	//     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
	//     FIELD_VALUE_OVERRIDEN
	//     INJECTED_KERNELS_DEPRECATED
	//     NEXT_HOP_ADDRESS_NOT_ASSIGNED
	//     NEXT_HOP_CANNOT_IP_FORWARD
	//     NEXT_HOP_INSTANCE_NOT_FOUND
	//     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
	//     NEXT_HOP_NOT_RUNNING
	//     NOT_CRITICAL_ERROR
	//     NO_RESULTS_ON_PAGE
	//     REQUIRED_TOS_AGREEMENT
	//     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
	//     RESOURCE_NOT_DELETED
	//     SINGLE_INSTANCE_PROPERTY_TEMPLATE
	//     UNREACHABLE
	Code string                                             `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Data []*InstanceGroupManagerAggregatedList_Warning_Data `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
	// [Output Only] A human-readable description of the warning code.
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *InstanceGroupManagerAggregatedList_Warning) Reset() {
	*m = InstanceGroupManagerAggregatedList_Warning{}
}
func (m *InstanceGroupManagerAggregatedList_Warning) String() string {
	return proto.CompactTextString(m)
}
func (*InstanceGroupManagerAggregatedList_Warning) ProtoMessage() {}
func (*InstanceGroupManagerAggregatedList_Warning) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{89, 1}
}

func (m *InstanceGroupManagerAggregatedList_Warning) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *InstanceGroupManagerAggregatedList_Warning) GetData() []*InstanceGroupManagerAggregatedList_Warning_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *InstanceGroupManagerAggregatedList_Warning) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// [Output Only] Metadata about this warning in key: value format. For
// example:
// "data": [ { "key": "scope", "value": "zones/us-east1-d" }
type InstanceGroupManagerAggregatedList_Warning_Data struct {
	// [Output Only] A key that provides more detail on the warning being
	// returned. For example, for warnings where there are no results in a
	// list request for a particular zone, this key might be scope and the
	// key value might be the zone name. Other examples might be a key
	// indicating a deprecated resource and a suggested replacement, or a
	// warning about invalid network settings (for example, if an instance
	// attempts to perform IP forwarding but is not enabled for IP
	// forwarding).
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	// [Output Only] A warning data value corresponding to the key.
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *InstanceGroupManagerAggregatedList_Warning_Data) Reset() {
	*m = InstanceGroupManagerAggregatedList_Warning_Data{}
}
func (m *InstanceGroupManagerAggregatedList_Warning_Data) String() string {
	return proto.CompactTextString(m)
}
func (*InstanceGroupManagerAggregatedList_Warning_Data) ProtoMessage() {}
func (*InstanceGroupManagerAggregatedList_Warning_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{89, 1, 0}
}

func (m *InstanceGroupManagerAggregatedList_Warning_Data) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *InstanceGroupManagerAggregatedList_Warning_Data) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type InstanceGroupManagerAutoHealingPolicy struct {
	// The URL for the health check that signals autohealing.
	HealthCheck string `protobuf:"bytes,1,opt,name=healthCheck" json:"healthCheck,omitempty"`
	// The number of seconds that the managed instance group waits before it
	// applies autohealing policies to new instances or recently recreated
	// instances. This initial delay allows instances to initialize and run
	// their startup scripts before the instance group determines that they
	// are UNHEALTHY. This prevents the managed instance group from
	// recreating its instances prematurely. This value must be from range
	// [0, 3600].
	InitialDelaySec int32 `protobuf:"varint,2,opt,name=initialDelaySec" json:"initialDelaySec,omitempty"`
}

func (m *InstanceGroupManagerAutoHealingPolicy) Reset()         { *m = InstanceGroupManagerAutoHealingPolicy{} }
func (m *InstanceGroupManagerAutoHealingPolicy) String() string { return proto.CompactTextString(m) }
func (*InstanceGroupManagerAutoHealingPolicy) ProtoMessage()    {}
func (*InstanceGroupManagerAutoHealingPolicy) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{90}
}

func (m *InstanceGroupManagerAutoHealingPolicy) GetHealthCheck() string {
	if m != nil {
		return m.HealthCheck
	}
	return ""
}

func (m *InstanceGroupManagerAutoHealingPolicy) GetInitialDelaySec() int32 {
	if m != nil {
		return m.InitialDelaySec
	}
	return 0
}

// [Output Only] A list of managed instance groups.
type InstanceGroupManagerList struct {
	// [Output Only] Unique identifier for the resource; defined by the
	// server.
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// A list of InstanceGroupManager resources.
	Items []*InstanceGroupManager `protobuf:"bytes,2,rep,name=items" json:"items,omitempty"`
	// [Output Only] The resource type, which is always
	// compute#instanceGroupManagerList for a list of managed instance
	// groups.
	Kind string `protobuf:"bytes,3,opt,name=kind" json:"kind,omitempty"`
	// [Output Only] This token allows you to get the next page of results
	// for list requests. If the number of results is larger than
	// maxResults, use the nextPageToken as a value for the query parameter
	// pageToken in the next list request. Subsequent list requests will
	// have their own nextPageToken to continue paging through the results.
	NextPageToken string `protobuf:"bytes,4,opt,name=nextPageToken" json:"nextPageToken,omitempty"`
	// [Output Only] Server-defined URL for this resource.
	SelfLink string                            `protobuf:"bytes,5,opt,name=selfLink" json:"selfLink,omitempty"`
	Warning  *InstanceGroupManagerList_Warning `protobuf:"bytes,6,opt,name=warning" json:"warning,omitempty"`
}

func (m *InstanceGroupManagerList) Reset()                    { *m = InstanceGroupManagerList{} }
func (m *InstanceGroupManagerList) String() string            { return proto.CompactTextString(m) }
func (*InstanceGroupManagerList) ProtoMessage()               {}
func (*InstanceGroupManagerList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{91} }

func (m *InstanceGroupManagerList) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *InstanceGroupManagerList) GetItems() []*InstanceGroupManager {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *InstanceGroupManagerList) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *InstanceGroupManagerList) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

func (m *InstanceGroupManagerList) GetSelfLink() string {
	if m != nil {
		return m.SelfLink
	}
	return ""
}

func (m *InstanceGroupManagerList) GetWarning() *InstanceGroupManagerList_Warning {
	if m != nil {
		return m.Warning
	}
	return nil
}

// [Output Only] Informational warning message.
// [Output Only] Informational warning message.
type InstanceGroupManagerList_Warning struct {
	// [Output Only] A warning code, if applicable. For example, Compute
	// Engine returns NO_RESULTS_ON_PAGE if there are no results in the
	// response.
	// Valid values:
	//     CLEANUP_FAILED
	//     DEPRECATED_RESOURCE_USED
	//     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
	//     FIELD_VALUE_OVERRIDEN
	//     INJECTED_KERNELS_DEPRECATED
	//     NEXT_HOP_ADDRESS_NOT_ASSIGNED
	//     NEXT_HOP_CANNOT_IP_FORWARD
	//     NEXT_HOP_INSTANCE_NOT_FOUND
	//     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
	//     NEXT_HOP_NOT_RUNNING
	//     NOT_CRITICAL_ERROR
	//     NO_RESULTS_ON_PAGE
	//     REQUIRED_TOS_AGREEMENT
	//     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
	//     RESOURCE_NOT_DELETED
	//     SINGLE_INSTANCE_PROPERTY_TEMPLATE
	//     UNREACHABLE
	Code string                                   `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Data []*InstanceGroupManagerList_Warning_Data `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
	// [Output Only] A human-readable description of the warning code.
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *InstanceGroupManagerList_Warning) Reset()         { *m = InstanceGroupManagerList_Warning{} }
func (m *InstanceGroupManagerList_Warning) String() string { return proto.CompactTextString(m) }
func (*InstanceGroupManagerList_Warning) ProtoMessage()    {}
func (*InstanceGroupManagerList_Warning) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{91, 0}
}

func (m *InstanceGroupManagerList_Warning) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *InstanceGroupManagerList_Warning) GetData() []*InstanceGroupManagerList_Warning_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *InstanceGroupManagerList_Warning) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// [Output Only] Metadata about this warning in key: value format. For
// example:
// "data": [ { "key": "scope", "value": "zones/us-east1-d" }
type InstanceGroupManagerList_Warning_Data struct {
	// [Output Only] A key that provides more detail on the warning being
	// returned. For example, for warnings where there are no results in a
	// list request for a particular zone, this key might be scope and the
	// key value might be the zone name. Other examples might be a key
	// indicating a deprecated resource and a suggested replacement, or a
	// warning about invalid network settings (for example, if an instance
	// attempts to perform IP forwarding but is not enabled for IP
	// forwarding).
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	// [Output Only] A warning data value corresponding to the key.
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *InstanceGroupManagerList_Warning_Data) Reset()         { *m = InstanceGroupManagerList_Warning_Data{} }
func (m *InstanceGroupManagerList_Warning_Data) String() string { return proto.CompactTextString(m) }
func (*InstanceGroupManagerList_Warning_Data) ProtoMessage()    {}
func (*InstanceGroupManagerList_Warning_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{91, 0, 0}
}

func (m *InstanceGroupManagerList_Warning_Data) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *InstanceGroupManagerList_Warning_Data) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type InstanceGroupManagerPendingActionsSummary struct {
	// [Output Only] The number of instances in the managed instance group
	// that are pending to be created.
	Creating int32 `protobuf:"varint,1,opt,name=creating" json:"creating,omitempty"`
	// [Output Only] The number of instances in the managed instance group
	// that are pending to be deleted.
	Deleting int32 `protobuf:"varint,2,opt,name=deleting" json:"deleting,omitempty"`
	// [Output Only] The number of instances in the managed instance group
	// that are pending to be recreated.
	Recreating int32 `protobuf:"varint,3,opt,name=recreating" json:"recreating,omitempty"`
	// [Output Only] The number of instances in the managed instance group
	// that are pending to be restarted.
	Restarting int32 `protobuf:"varint,4,opt,name=restarting" json:"restarting,omitempty"`
}

func (m *InstanceGroupManagerPendingActionsSummary) Reset() {
	*m = InstanceGroupManagerPendingActionsSummary{}
}
func (m *InstanceGroupManagerPendingActionsSummary) String() string { return proto.CompactTextString(m) }
func (*InstanceGroupManagerPendingActionsSummary) ProtoMessage()    {}
func (*InstanceGroupManagerPendingActionsSummary) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{92}
}

func (m *InstanceGroupManagerPendingActionsSummary) GetCreating() int32 {
	if m != nil {
		return m.Creating
	}
	return 0
}

func (m *InstanceGroupManagerPendingActionsSummary) GetDeleting() int32 {
	if m != nil {
		return m.Deleting
	}
	return 0
}

func (m *InstanceGroupManagerPendingActionsSummary) GetRecreating() int32 {
	if m != nil {
		return m.Recreating
	}
	return 0
}

func (m *InstanceGroupManagerPendingActionsSummary) GetRestarting() int32 {
	if m != nil {
		return m.Restarting
	}
	return 0
}

type InstanceGroupManagerUpdatePolicy struct {
	// Maximum number of instances that can be created above the
	// InstanceGroupManager.targetSize during the update process. By
	// default, a fixed value of 1 is used. Using maxSurge > 0 will cause
	// instance names to change during the update process. At least one of {
	// maxSurge, maxUnavailable } must be greater than 0.
	MaxSurge *FixedOrPercent `protobuf:"bytes,1,opt,name=maxSurge" json:"maxSurge,omitempty"`
	// Maximum number of instances that can be unavailable during the update
	// process. The instance is considered available if all of the following
	// conditions are satisfied: 1. Instance's status is RUNNING. 2.
	// Instance's liveness health check result was observed to be HEALTHY at
	// least once. By default, a fixed value of 1 is used. At least one of {
	// maxSurge, maxUnavailable } must be greater than 0.
	MaxUnavailable *FixedOrPercent `protobuf:"bytes,2,opt,name=maxUnavailable" json:"maxUnavailable,omitempty"`
	// Minimum number of seconds to wait for after a newly created instance
	// becomes available. This value must be from range [0, 3600].
	MinReadySec int32 `protobuf:"varint,3,opt,name=minReadySec" json:"minReadySec,omitempty"`
	// Minimal action to be taken on an instance. The order of action types
	// is: RESTART < REPLACE.
	// Valid values:
	//     REPLACE
	//     RESTART
	MinimalAction string `protobuf:"bytes,4,opt,name=minimalAction" json:"minimalAction,omitempty"`
	// Valid values:
	//     OPPORTUNISTIC
	//     PROACTIVE
	Type string `protobuf:"bytes,5,opt,name=type" json:"type,omitempty"`
}

func (m *InstanceGroupManagerUpdatePolicy) Reset()         { *m = InstanceGroupManagerUpdatePolicy{} }
func (m *InstanceGroupManagerUpdatePolicy) String() string { return proto.CompactTextString(m) }
func (*InstanceGroupManagerUpdatePolicy) ProtoMessage()    {}
func (*InstanceGroupManagerUpdatePolicy) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{93}
}

func (m *InstanceGroupManagerUpdatePolicy) GetMaxSurge() *FixedOrPercent {
	if m != nil {
		return m.MaxSurge
	}
	return nil
}

func (m *InstanceGroupManagerUpdatePolicy) GetMaxUnavailable() *FixedOrPercent {
	if m != nil {
		return m.MaxUnavailable
	}
	return nil
}

func (m *InstanceGroupManagerUpdatePolicy) GetMinReadySec() int32 {
	if m != nil {
		return m.MinReadySec
	}
	return 0
}

func (m *InstanceGroupManagerUpdatePolicy) GetMinimalAction() string {
	if m != nil {
		return m.MinimalAction
	}
	return ""
}

func (m *InstanceGroupManagerUpdatePolicy) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

type InstanceGroupManagerVersion struct {
	InstanceTemplate string `protobuf:"bytes,1,opt,name=instanceTemplate" json:"instanceTemplate,omitempty"`
	// Name of the version. Unique among all versions in the scope of this
	// managed instance group.
	Name string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	// Intended number of instances that are created from instanceTemplate.
	// The final number of instances created from instanceTemplate will be
	// equal to: * if expressed as fixed number: min(targetSize.fixed,
	// instanceGroupManager.targetSize), * if expressed as percent:
	// ceiling(targetSize.percent * InstanceGroupManager.targetSize). If
	// unset, this version will handle all the remaining instances.
	TargetSize *FixedOrPercent `protobuf:"bytes,3,opt,name=targetSize" json:"targetSize,omitempty"`
}

func (m *InstanceGroupManagerVersion) Reset()                    { *m = InstanceGroupManagerVersion{} }
func (m *InstanceGroupManagerVersion) String() string            { return proto.CompactTextString(m) }
func (*InstanceGroupManagerVersion) ProtoMessage()               {}
func (*InstanceGroupManagerVersion) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{94} }

func (m *InstanceGroupManagerVersion) GetInstanceTemplate() string {
	if m != nil {
		return m.InstanceTemplate
	}
	return ""
}

func (m *InstanceGroupManagerVersion) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *InstanceGroupManagerVersion) GetTargetSize() *FixedOrPercent {
	if m != nil {
		return m.TargetSize
	}
	return nil
}

type InstanceGroupManagersAbandonInstancesRequest struct {
	// The URLs of one or more instances to abandon. This can be a full URL
	// or a partial URL, such as zones/[ZONE]/instances/[INSTANCE_NAME].
	Instances []string `protobuf:"bytes,1,rep,name=instances" json:"instances,omitempty"`
}

func (m *InstanceGroupManagersAbandonInstancesRequest) Reset() {
	*m = InstanceGroupManagersAbandonInstancesRequest{}
}
func (m *InstanceGroupManagersAbandonInstancesRequest) String() string {
	return proto.CompactTextString(m)
}
func (*InstanceGroupManagersAbandonInstancesRequest) ProtoMessage() {}
func (*InstanceGroupManagersAbandonInstancesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{95}
}

func (m *InstanceGroupManagersAbandonInstancesRequest) GetInstances() []string {
	if m != nil {
		return m.Instances
	}
	return nil
}

type InstanceGroupManagersDeleteInstancesRequest struct {
	// The URLs of one or more instances to delete. This can be a full URL
	// or a partial URL, such as zones/[ZONE]/instances/[INSTANCE_NAME].
	Instances []string `protobuf:"bytes,1,rep,name=instances" json:"instances,omitempty"`
}

func (m *InstanceGroupManagersDeleteInstancesRequest) Reset() {
	*m = InstanceGroupManagersDeleteInstancesRequest{}
}
func (m *InstanceGroupManagersDeleteInstancesRequest) String() string {
	return proto.CompactTextString(m)
}
func (*InstanceGroupManagersDeleteInstancesRequest) ProtoMessage() {}
func (*InstanceGroupManagersDeleteInstancesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{96}
}

func (m *InstanceGroupManagersDeleteInstancesRequest) GetInstances() []string {
	if m != nil {
		return m.Instances
	}
	return nil
}

type InstanceGroupManagersListManagedInstancesResponse struct {
	// [Output Only] The list of instances in the managed instance group.
	ManagedInstances []*ManagedInstance `protobuf:"bytes,1,rep,name=managedInstances" json:"managedInstances,omitempty"`
	// [Output Only] This token allows you to get the next page of results
	// for list requests. If the number of results is larger than
	// maxResults, use the nextPageToken as a value for the query parameter
	// pageToken in the next list request. Subsequent list requests will
	// have their own nextPageToken to continue paging through the results.
	NextPageToken string `protobuf:"bytes,2,opt,name=nextPageToken" json:"nextPageToken,omitempty"`
}

func (m *InstanceGroupManagersListManagedInstancesResponse) Reset() {
	*m = InstanceGroupManagersListManagedInstancesResponse{}
}
func (m *InstanceGroupManagersListManagedInstancesResponse) String() string {
	return proto.CompactTextString(m)
}
func (*InstanceGroupManagersListManagedInstancesResponse) ProtoMessage() {}
func (*InstanceGroupManagersListManagedInstancesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{97}
}

func (m *InstanceGroupManagersListManagedInstancesResponse) GetManagedInstances() []*ManagedInstance {
	if m != nil {
		return m.ManagedInstances
	}
	return nil
}

func (m *InstanceGroupManagersListManagedInstancesResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

type InstanceGroupManagersRecreateInstancesRequest struct {
	// The URLs of one or more instances to recreate. This can be a full URL
	// or a partial URL, such as zones/[ZONE]/instances/[INSTANCE_NAME].
	Instances []string `protobuf:"bytes,1,rep,name=instances" json:"instances,omitempty"`
}

func (m *InstanceGroupManagersRecreateInstancesRequest) Reset() {
	*m = InstanceGroupManagersRecreateInstancesRequest{}
}
func (m *InstanceGroupManagersRecreateInstancesRequest) String() string {
	return proto.CompactTextString(m)
}
func (*InstanceGroupManagersRecreateInstancesRequest) ProtoMessage() {}
func (*InstanceGroupManagersRecreateInstancesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{98}
}

func (m *InstanceGroupManagersRecreateInstancesRequest) GetInstances() []string {
	if m != nil {
		return m.Instances
	}
	return nil
}

type InstanceGroupManagersResizeAdvancedRequest struct {
	// If this flag is true, the managed instance group attempts to create
	// all instances initiated by this resize request only once. If there is
	// an error during creation, the managed instance group does not retry
	// create this instance, and we will decrease the targetSize of the
	// request instead. If the flag is false, the group attemps to recreate
	// each instance continuously until it succeeds.
	//
	// This flag matters only in the first attempt of creation of an
	// instance. After an instance is successfully created while this flag
	// is enabled, the instance behaves the same way as all the other
	// instances created with a regular resize request. In particular, if a
	// running instance dies unexpectedly at a later time and needs to be
	// recreated, this mode does not affect the recreation behavior in that
	// scenario.
	//
	// This flag is applicable only to the current resize request. It does
	// not influence other resize requests in any way.
	//
	// You can see which instances is being creating in which mode by
	// calling the get or listManagedInstances API.
	NoCreationRetries bool `protobuf:"varint,1,opt,name=noCreationRetries" json:"noCreationRetries,omitempty"`
	// The number of running instances that the managed instance group
	// should maintain at any given time. The group automatically adds or
	// removes instances to maintain the number of instances specified by
	// this parameter.
	TargetSize int32 `protobuf:"varint,2,opt,name=targetSize" json:"targetSize,omitempty"`
}

func (m *InstanceGroupManagersResizeAdvancedRequest) Reset() {
	*m = InstanceGroupManagersResizeAdvancedRequest{}
}
func (m *InstanceGroupManagersResizeAdvancedRequest) String() string {
	return proto.CompactTextString(m)
}
func (*InstanceGroupManagersResizeAdvancedRequest) ProtoMessage() {}
func (*InstanceGroupManagersResizeAdvancedRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{99}
}

func (m *InstanceGroupManagersResizeAdvancedRequest) GetNoCreationRetries() bool {
	if m != nil {
		return m.NoCreationRetries
	}
	return false
}

func (m *InstanceGroupManagersResizeAdvancedRequest) GetTargetSize() int32 {
	if m != nil {
		return m.TargetSize
	}
	return 0
}

type InstanceGroupManagersScopedList struct {
	// [Output Only] The list of managed instance groups that are contained
	// in the specified project and zone.
	InstanceGroupManagers []*InstanceGroupManager                  `protobuf:"bytes,1,rep,name=instanceGroupManagers" json:"instanceGroupManagers,omitempty"`
	Warning               *InstanceGroupManagersScopedList_Warning `protobuf:"bytes,2,opt,name=warning" json:"warning,omitempty"`
}

func (m *InstanceGroupManagersScopedList) Reset()         { *m = InstanceGroupManagersScopedList{} }
func (m *InstanceGroupManagersScopedList) String() string { return proto.CompactTextString(m) }
func (*InstanceGroupManagersScopedList) ProtoMessage()    {}
func (*InstanceGroupManagersScopedList) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{100}
}

func (m *InstanceGroupManagersScopedList) GetInstanceGroupManagers() []*InstanceGroupManager {
	if m != nil {
		return m.InstanceGroupManagers
	}
	return nil
}

func (m *InstanceGroupManagersScopedList) GetWarning() *InstanceGroupManagersScopedList_Warning {
	if m != nil {
		return m.Warning
	}
	return nil
}

// [Output Only] The warning that replaces the list of managed instance
// groups when the list is empty.
// [Output Only] The warning that replaces the list of managed instance
// groups when the list is empty.
type InstanceGroupManagersScopedList_Warning struct {
	// [Output Only] A warning code, if applicable. For example, Compute
	// Engine returns NO_RESULTS_ON_PAGE if there are no results in the
	// response.
	// Valid values:
	//     CLEANUP_FAILED
	//     DEPRECATED_RESOURCE_USED
	//     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
	//     FIELD_VALUE_OVERRIDEN
	//     INJECTED_KERNELS_DEPRECATED
	//     NEXT_HOP_ADDRESS_NOT_ASSIGNED
	//     NEXT_HOP_CANNOT_IP_FORWARD
	//     NEXT_HOP_INSTANCE_NOT_FOUND
	//     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
	//     NEXT_HOP_NOT_RUNNING
	//     NOT_CRITICAL_ERROR
	//     NO_RESULTS_ON_PAGE
	//     REQUIRED_TOS_AGREEMENT
	//     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
	//     RESOURCE_NOT_DELETED
	//     SINGLE_INSTANCE_PROPERTY_TEMPLATE
	//     UNREACHABLE
	Code string                                          `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Data []*InstanceGroupManagersScopedList_Warning_Data `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
	// [Output Only] A human-readable description of the warning code.
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *InstanceGroupManagersScopedList_Warning) Reset() {
	*m = InstanceGroupManagersScopedList_Warning{}
}
func (m *InstanceGroupManagersScopedList_Warning) String() string { return proto.CompactTextString(m) }
func (*InstanceGroupManagersScopedList_Warning) ProtoMessage()    {}
func (*InstanceGroupManagersScopedList_Warning) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{100, 0}
}

func (m *InstanceGroupManagersScopedList_Warning) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *InstanceGroupManagersScopedList_Warning) GetData() []*InstanceGroupManagersScopedList_Warning_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *InstanceGroupManagersScopedList_Warning) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// [Output Only] Metadata about this warning in key: value format. For
// example:
// "data": [ { "key": "scope", "value": "zones/us-east1-d" }
type InstanceGroupManagersScopedList_Warning_Data struct {
	// [Output Only] A key that provides more detail on the warning being
	// returned. For example, for warnings where there are no results in a
	// list request for a particular zone, this key might be scope and the
	// key value might be the zone name. Other examples might be a key
	// indicating a deprecated resource and a suggested replacement, or a
	// warning about invalid network settings (for example, if an instance
	// attempts to perform IP forwarding but is not enabled for IP
	// forwarding).
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	// [Output Only] A warning data value corresponding to the key.
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *InstanceGroupManagersScopedList_Warning_Data) Reset() {
	*m = InstanceGroupManagersScopedList_Warning_Data{}
}
func (m *InstanceGroupManagersScopedList_Warning_Data) String() string {
	return proto.CompactTextString(m)
}
func (*InstanceGroupManagersScopedList_Warning_Data) ProtoMessage() {}
func (*InstanceGroupManagersScopedList_Warning_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{100, 0, 0}
}

func (m *InstanceGroupManagersScopedList_Warning_Data) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *InstanceGroupManagersScopedList_Warning_Data) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type InstanceGroupManagersSetAutoHealingRequest struct {
	AutoHealingPolicies []*InstanceGroupManagerAutoHealingPolicy `protobuf:"bytes,1,rep,name=autoHealingPolicies" json:"autoHealingPolicies,omitempty"`
}

func (m *InstanceGroupManagersSetAutoHealingRequest) Reset() {
	*m = InstanceGroupManagersSetAutoHealingRequest{}
}
func (m *InstanceGroupManagersSetAutoHealingRequest) String() string {
	return proto.CompactTextString(m)
}
func (*InstanceGroupManagersSetAutoHealingRequest) ProtoMessage() {}
func (*InstanceGroupManagersSetAutoHealingRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{101}
}

func (m *InstanceGroupManagersSetAutoHealingRequest) GetAutoHealingPolicies() []*InstanceGroupManagerAutoHealingPolicy {
	if m != nil {
		return m.AutoHealingPolicies
	}
	return nil
}

type InstanceGroupManagersSetInstanceTemplateRequest struct {
	// The URL of the instance template that is specified for this managed
	// instance group. The group uses this template to create all new
	// instances in the managed instance group.
	InstanceTemplate string `protobuf:"bytes,1,opt,name=instanceTemplate" json:"instanceTemplate,omitempty"`
}

func (m *InstanceGroupManagersSetInstanceTemplateRequest) Reset() {
	*m = InstanceGroupManagersSetInstanceTemplateRequest{}
}
func (m *InstanceGroupManagersSetInstanceTemplateRequest) String() string {
	return proto.CompactTextString(m)
}
func (*InstanceGroupManagersSetInstanceTemplateRequest) ProtoMessage() {}
func (*InstanceGroupManagersSetInstanceTemplateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{102}
}

func (m *InstanceGroupManagersSetInstanceTemplateRequest) GetInstanceTemplate() string {
	if m != nil {
		return m.InstanceTemplate
	}
	return ""
}

type InstanceGroupManagersSetTargetPoolsRequest struct {
	// The fingerprint of the target pools information. Use this optional
	// property to prevent conflicts when multiple users change the target
	// pools settings concurrently. Obtain the fingerprint with the
	// instanceGroupManagers.get method. Then, include the fingerprint in
	// your request to ensure that you do not overwrite changes that were
	// applied from another concurrent request.
	Fingerprint string `protobuf:"bytes,1,opt,name=fingerprint" json:"fingerprint,omitempty"`
	// The list of target pool URLs that instances in this managed instance
	// group belong to. The managed instance group applies these target
	// pools to all of the instances in the group. Existing instances and
	// new instances in the group all receive these target pool settings.
	TargetPools []string `protobuf:"bytes,2,rep,name=targetPools" json:"targetPools,omitempty"`
}

func (m *InstanceGroupManagersSetTargetPoolsRequest) Reset() {
	*m = InstanceGroupManagersSetTargetPoolsRequest{}
}
func (m *InstanceGroupManagersSetTargetPoolsRequest) String() string {
	return proto.CompactTextString(m)
}
func (*InstanceGroupManagersSetTargetPoolsRequest) ProtoMessage() {}
func (*InstanceGroupManagersSetTargetPoolsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{103}
}

func (m *InstanceGroupManagersSetTargetPoolsRequest) GetFingerprint() string {
	if m != nil {
		return m.Fingerprint
	}
	return ""
}

func (m *InstanceGroupManagersSetTargetPoolsRequest) GetTargetPools() []string {
	if m != nil {
		return m.TargetPools
	}
	return nil
}

type InstanceGroupsAddInstancesRequest struct {
	// The list of instances to add to the instance group.
	Instances []*InstanceReference `protobuf:"bytes,1,rep,name=instances" json:"instances,omitempty"`
}

func (m *InstanceGroupsAddInstancesRequest) Reset()         { *m = InstanceGroupsAddInstancesRequest{} }
func (m *InstanceGroupsAddInstancesRequest) String() string { return proto.CompactTextString(m) }
func (*InstanceGroupsAddInstancesRequest) ProtoMessage()    {}
func (*InstanceGroupsAddInstancesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{104}
}

func (m *InstanceGroupsAddInstancesRequest) GetInstances() []*InstanceReference {
	if m != nil {
		return m.Instances
	}
	return nil
}

type InstanceGroupsListInstances struct {
	// [Output Only] Unique identifier for the resource; defined by the
	// server.
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// A list of InstanceWithNamedPorts resources.
	Items []*InstanceWithNamedPorts `protobuf:"bytes,2,rep,name=items" json:"items,omitempty"`
	// [Output Only] The resource type, which is always
	// compute#instanceGroupsListInstances for the list of instances in the
	// specified instance group.
	Kind string `protobuf:"bytes,3,opt,name=kind" json:"kind,omitempty"`
	// [Output Only] This token allows you to get the next page of results
	// for list requests. If the number of results is larger than
	// maxResults, use the nextPageToken as a value for the query parameter
	// pageToken in the next list request. Subsequent list requests will
	// have their own nextPageToken to continue paging through the results.
	NextPageToken string `protobuf:"bytes,4,opt,name=nextPageToken" json:"nextPageToken,omitempty"`
	// [Output Only] Server-defined URL for this resource.
	SelfLink string                               `protobuf:"bytes,5,opt,name=selfLink" json:"selfLink,omitempty"`
	Warning  *InstanceGroupsListInstances_Warning `protobuf:"bytes,6,opt,name=warning" json:"warning,omitempty"`
}

func (m *InstanceGroupsListInstances) Reset()                    { *m = InstanceGroupsListInstances{} }
func (m *InstanceGroupsListInstances) String() string            { return proto.CompactTextString(m) }
func (*InstanceGroupsListInstances) ProtoMessage()               {}
func (*InstanceGroupsListInstances) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{105} }

func (m *InstanceGroupsListInstances) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *InstanceGroupsListInstances) GetItems() []*InstanceWithNamedPorts {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *InstanceGroupsListInstances) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *InstanceGroupsListInstances) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

func (m *InstanceGroupsListInstances) GetSelfLink() string {
	if m != nil {
		return m.SelfLink
	}
	return ""
}

func (m *InstanceGroupsListInstances) GetWarning() *InstanceGroupsListInstances_Warning {
	if m != nil {
		return m.Warning
	}
	return nil
}

// [Output Only] Informational warning message.
// [Output Only] Informational warning message.
type InstanceGroupsListInstances_Warning struct {
	// [Output Only] A warning code, if applicable. For example, Compute
	// Engine returns NO_RESULTS_ON_PAGE if there are no results in the
	// response.
	// Valid values:
	//     CLEANUP_FAILED
	//     DEPRECATED_RESOURCE_USED
	//     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
	//     FIELD_VALUE_OVERRIDEN
	//     INJECTED_KERNELS_DEPRECATED
	//     NEXT_HOP_ADDRESS_NOT_ASSIGNED
	//     NEXT_HOP_CANNOT_IP_FORWARD
	//     NEXT_HOP_INSTANCE_NOT_FOUND
	//     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
	//     NEXT_HOP_NOT_RUNNING
	//     NOT_CRITICAL_ERROR
	//     NO_RESULTS_ON_PAGE
	//     REQUIRED_TOS_AGREEMENT
	//     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
	//     RESOURCE_NOT_DELETED
	//     SINGLE_INSTANCE_PROPERTY_TEMPLATE
	//     UNREACHABLE
	Code string                                      `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Data []*InstanceGroupsListInstances_Warning_Data `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
	// [Output Only] A human-readable description of the warning code.
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *InstanceGroupsListInstances_Warning) Reset()         { *m = InstanceGroupsListInstances_Warning{} }
func (m *InstanceGroupsListInstances_Warning) String() string { return proto.CompactTextString(m) }
func (*InstanceGroupsListInstances_Warning) ProtoMessage()    {}
func (*InstanceGroupsListInstances_Warning) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{105, 0}
}

func (m *InstanceGroupsListInstances_Warning) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *InstanceGroupsListInstances_Warning) GetData() []*InstanceGroupsListInstances_Warning_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *InstanceGroupsListInstances_Warning) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// [Output Only] Metadata about this warning in key: value format. For
// example:
// "data": [ { "key": "scope", "value": "zones/us-east1-d" }
type InstanceGroupsListInstances_Warning_Data struct {
	// [Output Only] A key that provides more detail on the warning being
	// returned. For example, for warnings where there are no results in a
	// list request for a particular zone, this key might be scope and the
	// key value might be the zone name. Other examples might be a key
	// indicating a deprecated resource and a suggested replacement, or a
	// warning about invalid network settings (for example, if an instance
	// attempts to perform IP forwarding but is not enabled for IP
	// forwarding).
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	// [Output Only] A warning data value corresponding to the key.
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *InstanceGroupsListInstances_Warning_Data) Reset() {
	*m = InstanceGroupsListInstances_Warning_Data{}
}
func (m *InstanceGroupsListInstances_Warning_Data) String() string { return proto.CompactTextString(m) }
func (*InstanceGroupsListInstances_Warning_Data) ProtoMessage()    {}
func (*InstanceGroupsListInstances_Warning_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{105, 0, 0}
}

func (m *InstanceGroupsListInstances_Warning_Data) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *InstanceGroupsListInstances_Warning_Data) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type InstanceGroupsListInstancesRequest struct {
	// A filter for the state of the instances in the instance group. Valid
	// options are ALL or RUNNING. If you do not specify this parameter the
	// list includes all instances regardless of their state.
	// Valid values:
	//     ALL
	//     RUNNING
	InstanceState string `protobuf:"bytes,1,opt,name=instanceState" json:"instanceState,omitempty"`
}

func (m *InstanceGroupsListInstancesRequest) Reset()         { *m = InstanceGroupsListInstancesRequest{} }
func (m *InstanceGroupsListInstancesRequest) String() string { return proto.CompactTextString(m) }
func (*InstanceGroupsListInstancesRequest) ProtoMessage()    {}
func (*InstanceGroupsListInstancesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{106}
}

func (m *InstanceGroupsListInstancesRequest) GetInstanceState() string {
	if m != nil {
		return m.InstanceState
	}
	return ""
}

type InstanceGroupsRemoveInstancesRequest struct {
	// The list of instances to remove from the instance group.
	Instances []*InstanceReference `protobuf:"bytes,1,rep,name=instances" json:"instances,omitempty"`
}

func (m *InstanceGroupsRemoveInstancesRequest) Reset()         { *m = InstanceGroupsRemoveInstancesRequest{} }
func (m *InstanceGroupsRemoveInstancesRequest) String() string { return proto.CompactTextString(m) }
func (*InstanceGroupsRemoveInstancesRequest) ProtoMessage()    {}
func (*InstanceGroupsRemoveInstancesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{107}
}

func (m *InstanceGroupsRemoveInstancesRequest) GetInstances() []*InstanceReference {
	if m != nil {
		return m.Instances
	}
	return nil
}

type InstanceGroupsScopedList struct {
	// [Output Only] The list of instance groups that are contained in this
	// scope.
	InstanceGroups []*InstanceGroup                  `protobuf:"bytes,1,rep,name=instanceGroups" json:"instanceGroups,omitempty"`
	Warning        *InstanceGroupsScopedList_Warning `protobuf:"bytes,2,opt,name=warning" json:"warning,omitempty"`
}

func (m *InstanceGroupsScopedList) Reset()                    { *m = InstanceGroupsScopedList{} }
func (m *InstanceGroupsScopedList) String() string            { return proto.CompactTextString(m) }
func (*InstanceGroupsScopedList) ProtoMessage()               {}
func (*InstanceGroupsScopedList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{108} }

func (m *InstanceGroupsScopedList) GetInstanceGroups() []*InstanceGroup {
	if m != nil {
		return m.InstanceGroups
	}
	return nil
}

func (m *InstanceGroupsScopedList) GetWarning() *InstanceGroupsScopedList_Warning {
	if m != nil {
		return m.Warning
	}
	return nil
}

// [Output Only] An informational warning that replaces the list of
// instance groups when the list is empty.
// [Output Only] An informational warning that replaces the list of
// instance groups when the list is empty.
type InstanceGroupsScopedList_Warning struct {
	// [Output Only] A warning code, if applicable. For example, Compute
	// Engine returns NO_RESULTS_ON_PAGE if there are no results in the
	// response.
	// Valid values:
	//     CLEANUP_FAILED
	//     DEPRECATED_RESOURCE_USED
	//     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
	//     FIELD_VALUE_OVERRIDEN
	//     INJECTED_KERNELS_DEPRECATED
	//     NEXT_HOP_ADDRESS_NOT_ASSIGNED
	//     NEXT_HOP_CANNOT_IP_FORWARD
	//     NEXT_HOP_INSTANCE_NOT_FOUND
	//     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
	//     NEXT_HOP_NOT_RUNNING
	//     NOT_CRITICAL_ERROR
	//     NO_RESULTS_ON_PAGE
	//     REQUIRED_TOS_AGREEMENT
	//     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
	//     RESOURCE_NOT_DELETED
	//     SINGLE_INSTANCE_PROPERTY_TEMPLATE
	//     UNREACHABLE
	Code string                                   `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Data []*InstanceGroupsScopedList_Warning_Data `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
	// [Output Only] A human-readable description of the warning code.
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *InstanceGroupsScopedList_Warning) Reset()         { *m = InstanceGroupsScopedList_Warning{} }
func (m *InstanceGroupsScopedList_Warning) String() string { return proto.CompactTextString(m) }
func (*InstanceGroupsScopedList_Warning) ProtoMessage()    {}
func (*InstanceGroupsScopedList_Warning) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{108, 0}
}

func (m *InstanceGroupsScopedList_Warning) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *InstanceGroupsScopedList_Warning) GetData() []*InstanceGroupsScopedList_Warning_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *InstanceGroupsScopedList_Warning) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// [Output Only] Metadata about this warning in key: value format. For
// example:
// "data": [ { "key": "scope", "value": "zones/us-east1-d" }
type InstanceGroupsScopedList_Warning_Data struct {
	// [Output Only] A key that provides more detail on the warning being
	// returned. For example, for warnings where there are no results in a
	// list request for a particular zone, this key might be scope and the
	// key value might be the zone name. Other examples might be a key
	// indicating a deprecated resource and a suggested replacement, or a
	// warning about invalid network settings (for example, if an instance
	// attempts to perform IP forwarding but is not enabled for IP
	// forwarding).
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	// [Output Only] A warning data value corresponding to the key.
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *InstanceGroupsScopedList_Warning_Data) Reset()         { *m = InstanceGroupsScopedList_Warning_Data{} }
func (m *InstanceGroupsScopedList_Warning_Data) String() string { return proto.CompactTextString(m) }
func (*InstanceGroupsScopedList_Warning_Data) ProtoMessage()    {}
func (*InstanceGroupsScopedList_Warning_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{108, 0, 0}
}

func (m *InstanceGroupsScopedList_Warning_Data) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *InstanceGroupsScopedList_Warning_Data) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type InstanceGroupsSetNamedPortsRequest struct {
	// The fingerprint of the named ports information for this instance
	// group. Use this optional property to prevent conflicts when multiple
	// users change the named ports settings concurrently. Obtain the
	// fingerprint with the instanceGroups.get method. Then, include the
	// fingerprint in your request to ensure that you do not overwrite
	// changes that were applied from another concurrent request.
	Fingerprint string `protobuf:"bytes,1,opt,name=fingerprint" json:"fingerprint,omitempty"`
	// The list of named ports to set for this instance group.
	NamedPorts []*NamedPort `protobuf:"bytes,2,rep,name=namedPorts" json:"namedPorts,omitempty"`
}

func (m *InstanceGroupsSetNamedPortsRequest) Reset()         { *m = InstanceGroupsSetNamedPortsRequest{} }
func (m *InstanceGroupsSetNamedPortsRequest) String() string { return proto.CompactTextString(m) }
func (*InstanceGroupsSetNamedPortsRequest) ProtoMessage()    {}
func (*InstanceGroupsSetNamedPortsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{109}
}

func (m *InstanceGroupsSetNamedPortsRequest) GetFingerprint() string {
	if m != nil {
		return m.Fingerprint
	}
	return ""
}

func (m *InstanceGroupsSetNamedPortsRequest) GetNamedPorts() []*NamedPort {
	if m != nil {
		return m.NamedPorts
	}
	return nil
}

// Contains a list of instances.
type InstanceList struct {
	// [Output Only] Unique identifier for the resource; defined by the
	// server.
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// A list of Instance resources.
	Items []*Instance `protobuf:"bytes,2,rep,name=items" json:"items,omitempty"`
	// [Output Only] Type of resource. Always compute#instanceList for lists
	// of Instance resources.
	Kind string `protobuf:"bytes,3,opt,name=kind" json:"kind,omitempty"`
	// [Output Only] This token allows you to get the next page of results
	// for list requests. If the number of results is larger than
	// maxResults, use the nextPageToken as a value for the query parameter
	// pageToken in the next list request. Subsequent list requests will
	// have their own nextPageToken to continue paging through the results.
	NextPageToken string `protobuf:"bytes,4,opt,name=nextPageToken" json:"nextPageToken,omitempty"`
	// [Output Only] Server-defined URL for this resource.
	SelfLink string                `protobuf:"bytes,5,opt,name=selfLink" json:"selfLink,omitempty"`
	Warning  *InstanceList_Warning `protobuf:"bytes,6,opt,name=warning" json:"warning,omitempty"`
}

func (m *InstanceList) Reset()                    { *m = InstanceList{} }
func (m *InstanceList) String() string            { return proto.CompactTextString(m) }
func (*InstanceList) ProtoMessage()               {}
func (*InstanceList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{110} }

func (m *InstanceList) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *InstanceList) GetItems() []*Instance {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *InstanceList) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *InstanceList) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

func (m *InstanceList) GetSelfLink() string {
	if m != nil {
		return m.SelfLink
	}
	return ""
}

func (m *InstanceList) GetWarning() *InstanceList_Warning {
	if m != nil {
		return m.Warning
	}
	return nil
}

// [Output Only] Informational warning message.
// [Output Only] Informational warning message.
type InstanceList_Warning struct {
	// [Output Only] A warning code, if applicable. For example, Compute
	// Engine returns NO_RESULTS_ON_PAGE if there are no results in the
	// response.
	// Valid values:
	//     CLEANUP_FAILED
	//     DEPRECATED_RESOURCE_USED
	//     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
	//     FIELD_VALUE_OVERRIDEN
	//     INJECTED_KERNELS_DEPRECATED
	//     NEXT_HOP_ADDRESS_NOT_ASSIGNED
	//     NEXT_HOP_CANNOT_IP_FORWARD
	//     NEXT_HOP_INSTANCE_NOT_FOUND
	//     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
	//     NEXT_HOP_NOT_RUNNING
	//     NOT_CRITICAL_ERROR
	//     NO_RESULTS_ON_PAGE
	//     REQUIRED_TOS_AGREEMENT
	//     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
	//     RESOURCE_NOT_DELETED
	//     SINGLE_INSTANCE_PROPERTY_TEMPLATE
	//     UNREACHABLE
	Code string                       `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Data []*InstanceList_Warning_Data `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
	// [Output Only] A human-readable description of the warning code.
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *InstanceList_Warning) Reset()                    { *m = InstanceList_Warning{} }
func (m *InstanceList_Warning) String() string            { return proto.CompactTextString(m) }
func (*InstanceList_Warning) ProtoMessage()               {}
func (*InstanceList_Warning) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{110, 0} }

func (m *InstanceList_Warning) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *InstanceList_Warning) GetData() []*InstanceList_Warning_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *InstanceList_Warning) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// [Output Only] Metadata about this warning in key: value format. For
// example:
// "data": [ { "key": "scope", "value": "zones/us-east1-d" }
type InstanceList_Warning_Data struct {
	// [Output Only] A key that provides more detail on the warning being
	// returned. For example, for warnings where there are no results in a
	// list request for a particular zone, this key might be scope and the
	// key value might be the zone name. Other examples might be a key
	// indicating a deprecated resource and a suggested replacement, or a
	// warning about invalid network settings (for example, if an instance
	// attempts to perform IP forwarding but is not enabled for IP
	// forwarding).
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	// [Output Only] A warning data value corresponding to the key.
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *InstanceList_Warning_Data) Reset()         { *m = InstanceList_Warning_Data{} }
func (m *InstanceList_Warning_Data) String() string { return proto.CompactTextString(m) }
func (*InstanceList_Warning_Data) ProtoMessage()    {}
func (*InstanceList_Warning_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{110, 0, 0}
}

func (m *InstanceList_Warning_Data) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *InstanceList_Warning_Data) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

// Contains a list of instance referrers.
type InstanceListReferrers struct {
	// [Output Only] Unique identifier for the resource; defined by the
	// server.
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// A list of Reference resources.
	Items []*Reference `protobuf:"bytes,2,rep,name=items" json:"items,omitempty"`
	// [Output Only] Type of resource. Always compute#instanceListReferrers
	// for lists of Instance referrers.
	Kind string `protobuf:"bytes,3,opt,name=kind" json:"kind,omitempty"`
	// [Output Only] This token allows you to get the next page of results
	// for list requests. If the number of results is larger than
	// maxResults, use the nextPageToken as a value for the query parameter
	// pageToken in the next list request. Subsequent list requests will
	// have their own nextPageToken to continue paging through the results.
	NextPageToken string `protobuf:"bytes,4,opt,name=nextPageToken" json:"nextPageToken,omitempty"`
	// [Output Only] Server-defined URL for this resource.
	SelfLink string                         `protobuf:"bytes,5,opt,name=selfLink" json:"selfLink,omitempty"`
	Warning  *InstanceListReferrers_Warning `protobuf:"bytes,6,opt,name=warning" json:"warning,omitempty"`
}

func (m *InstanceListReferrers) Reset()                    { *m = InstanceListReferrers{} }
func (m *InstanceListReferrers) String() string            { return proto.CompactTextString(m) }
func (*InstanceListReferrers) ProtoMessage()               {}
func (*InstanceListReferrers) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{111} }

func (m *InstanceListReferrers) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *InstanceListReferrers) GetItems() []*Reference {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *InstanceListReferrers) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *InstanceListReferrers) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

func (m *InstanceListReferrers) GetSelfLink() string {
	if m != nil {
		return m.SelfLink
	}
	return ""
}

func (m *InstanceListReferrers) GetWarning() *InstanceListReferrers_Warning {
	if m != nil {
		return m.Warning
	}
	return nil
}

// [Output Only] Informational warning message.
// [Output Only] Informational warning message.
type InstanceListReferrers_Warning struct {
	// [Output Only] A warning code, if applicable. For example, Compute
	// Engine returns NO_RESULTS_ON_PAGE if there are no results in the
	// response.
	// Valid values:
	//     CLEANUP_FAILED
	//     DEPRECATED_RESOURCE_USED
	//     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
	//     FIELD_VALUE_OVERRIDEN
	//     INJECTED_KERNELS_DEPRECATED
	//     NEXT_HOP_ADDRESS_NOT_ASSIGNED
	//     NEXT_HOP_CANNOT_IP_FORWARD
	//     NEXT_HOP_INSTANCE_NOT_FOUND
	//     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
	//     NEXT_HOP_NOT_RUNNING
	//     NOT_CRITICAL_ERROR
	//     NO_RESULTS_ON_PAGE
	//     REQUIRED_TOS_AGREEMENT
	//     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
	//     RESOURCE_NOT_DELETED
	//     SINGLE_INSTANCE_PROPERTY_TEMPLATE
	//     UNREACHABLE
	Code string                                `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Data []*InstanceListReferrers_Warning_Data `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
	// [Output Only] A human-readable description of the warning code.
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *InstanceListReferrers_Warning) Reset()         { *m = InstanceListReferrers_Warning{} }
func (m *InstanceListReferrers_Warning) String() string { return proto.CompactTextString(m) }
func (*InstanceListReferrers_Warning) ProtoMessage()    {}
func (*InstanceListReferrers_Warning) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{111, 0}
}

func (m *InstanceListReferrers_Warning) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *InstanceListReferrers_Warning) GetData() []*InstanceListReferrers_Warning_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *InstanceListReferrers_Warning) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// [Output Only] Metadata about this warning in key: value format. For
// example:
// "data": [ { "key": "scope", "value": "zones/us-east1-d" }
type InstanceListReferrers_Warning_Data struct {
	// [Output Only] A key that provides more detail on the warning being
	// returned. For example, for warnings where there are no results in a
	// list request for a particular zone, this key might be scope and the
	// key value might be the zone name. Other examples might be a key
	// indicating a deprecated resource and a suggested replacement, or a
	// warning about invalid network settings (for example, if an instance
	// attempts to perform IP forwarding but is not enabled for IP
	// forwarding).
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	// [Output Only] A warning data value corresponding to the key.
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *InstanceListReferrers_Warning_Data) Reset()         { *m = InstanceListReferrers_Warning_Data{} }
func (m *InstanceListReferrers_Warning_Data) String() string { return proto.CompactTextString(m) }
func (*InstanceListReferrers_Warning_Data) ProtoMessage()    {}
func (*InstanceListReferrers_Warning_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{111, 0, 0}
}

func (m *InstanceListReferrers_Warning_Data) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *InstanceListReferrers_Warning_Data) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type InstanceMoveRequest struct {
	// The URL of the destination zone to move the instance. This can be a
	// full or partial URL. For example, the following are all valid URLs to
	// a zone:
	// - https://www.googleapis.com/compute/v1/projects/project/zones/zone
	// - projects/project/zones/zone
	// - zones/zone
	DestinationZone string `protobuf:"bytes,1,opt,name=destinationZone" json:"destinationZone,omitempty"`
	// The URL of the target instance to move. This can be a full or partial
	// URL. For example, the following are all valid URLs to an instance:
	// -
	// https://www.googleapis.com/compute/v1/projects/project/zones/zone/instances/instance
	// - projects/project/zones/zone/instances/instance
	// - zones/zone/instances/instance
	TargetInstance string `protobuf:"bytes,2,opt,name=targetInstance" json:"targetInstance,omitempty"`
}

func (m *InstanceMoveRequest) Reset()                    { *m = InstanceMoveRequest{} }
func (m *InstanceMoveRequest) String() string            { return proto.CompactTextString(m) }
func (*InstanceMoveRequest) ProtoMessage()               {}
func (*InstanceMoveRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{112} }

func (m *InstanceMoveRequest) GetDestinationZone() string {
	if m != nil {
		return m.DestinationZone
	}
	return ""
}

func (m *InstanceMoveRequest) GetTargetInstance() string {
	if m != nil {
		return m.TargetInstance
	}
	return ""
}

type InstanceProperties struct {
	// Enables instances created based on this template to send packets with
	// source IP addresses other than their own and receive packets with
	// destination IP addresses other than their own. If these instances
	// will be used as an IP gateway or it will be set as the next-hop in a
	// Route resource, specify true. If unsure, leave this set to false. See
	// the Enable IP forwarding documentation for more information.
	CanIpForward bool `protobuf:"varint,1,opt,name=canIpForward" json:"canIpForward,omitempty"`
	// An optional text description for the instances that are created from
	// this instance template.
	Description string `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	// An array of disks that are associated with the instances that are
	// created from this template.
	Disks []*AttachedDisk `protobuf:"bytes,3,rep,name=disks" json:"disks,omitempty"`
	// A list of guest accelerator cards' type and count to use for
	// instances created from the instance template.
	GuestAccelerators []*AcceleratorConfig `protobuf:"bytes,4,rep,name=guestAccelerators" json:"guestAccelerators,omitempty"`
	// Labels to apply to instances that are created from this template.
	Labels map[string]string `protobuf:"bytes,5,rep,name=labels" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// The machine type to use for instances that are created from this
	// template.
	MachineType string `protobuf:"bytes,6,opt,name=machineType" json:"machineType,omitempty"`
	// The metadata key/value pairs to assign to instances that are created
	// from this template. These pairs can consist of custom metadata or
	// predefined keys. See Project and instance metadata for more
	// information.
	Metadata *Metadata `protobuf:"bytes,7,opt,name=metadata" json:"metadata,omitempty"`
	// Minimum cpu/platform to be used by this instance. The instance may be
	// scheduled on the specified or newer cpu/platform. Applicable values
	// are the friendly names of CPU platforms, such as minCpuPlatform:
	// "Intel Haswell" or minCpuPlatform: "Intel Sandy Bridge". For more
	// information, read Specifying a Minimum CPU Platform.
	MinCpuPlatform string `protobuf:"bytes,8,opt,name=minCpuPlatform" json:"minCpuPlatform,omitempty"`
	// An array of network access configurations for this interface.
	NetworkInterfaces []*NetworkInterface `protobuf:"bytes,9,rep,name=networkInterfaces" json:"networkInterfaces,omitempty"`
	// Specifies the scheduling options for the instances that are created
	// from this template.
	Scheduling *Scheduling `protobuf:"bytes,10,opt,name=scheduling" json:"scheduling,omitempty"`
	// A list of service accounts with specified scopes. Access tokens for
	// these service accounts are available to the instances that are
	// created from this template. Use metadata queries to obtain the access
	// tokens for these instances.
	ServiceAccounts []*ServiceAccount `protobuf:"bytes,11,rep,name=serviceAccounts" json:"serviceAccounts,omitempty"`
	// A list of tags to apply to the instances that are created from this
	// template. The tags identify valid sources or targets for network
	// firewalls. The setTags method can modify this list of tags. Each tag
	// within the list must comply with RFC1035.
	Tags *Tags `protobuf:"bytes,12,opt,name=tags" json:"tags,omitempty"`
}

func (m *InstanceProperties) Reset()                    { *m = InstanceProperties{} }
func (m *InstanceProperties) String() string            { return proto.CompactTextString(m) }
func (*InstanceProperties) ProtoMessage()               {}
func (*InstanceProperties) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{113} }

func (m *InstanceProperties) GetCanIpForward() bool {
	if m != nil {
		return m.CanIpForward
	}
	return false
}

func (m *InstanceProperties) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *InstanceProperties) GetDisks() []*AttachedDisk {
	if m != nil {
		return m.Disks
	}
	return nil
}

func (m *InstanceProperties) GetGuestAccelerators() []*AcceleratorConfig {
	if m != nil {
		return m.GuestAccelerators
	}
	return nil
}

func (m *InstanceProperties) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *InstanceProperties) GetMachineType() string {
	if m != nil {
		return m.MachineType
	}
	return ""
}

func (m *InstanceProperties) GetMetadata() *Metadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *InstanceProperties) GetMinCpuPlatform() string {
	if m != nil {
		return m.MinCpuPlatform
	}
	return ""
}

func (m *InstanceProperties) GetNetworkInterfaces() []*NetworkInterface {
	if m != nil {
		return m.NetworkInterfaces
	}
	return nil
}

func (m *InstanceProperties) GetScheduling() *Scheduling {
	if m != nil {
		return m.Scheduling
	}
	return nil
}

func (m *InstanceProperties) GetServiceAccounts() []*ServiceAccount {
	if m != nil {
		return m.ServiceAccounts
	}
	return nil
}

func (m *InstanceProperties) GetTags() *Tags {
	if m != nil {
		return m.Tags
	}
	return nil
}

type InstanceReference struct {
	// The URL for a specific instance.
	Instance string `protobuf:"bytes,1,opt,name=instance" json:"instance,omitempty"`
}

func (m *InstanceReference) Reset()                    { *m = InstanceReference{} }
func (m *InstanceReference) String() string            { return proto.CompactTextString(m) }
func (*InstanceReference) ProtoMessage()               {}
func (*InstanceReference) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{114} }

func (m *InstanceReference) GetInstance() string {
	if m != nil {
		return m.Instance
	}
	return ""
}

// An Instance Template resource.
type InstanceTemplate struct {
	// [Output Only] The creation timestamp for this instance template in
	// RFC3339 text format.
	CreationTimestamp string `protobuf:"bytes,1,opt,name=creationTimestamp" json:"creationTimestamp,omitempty"`
	// An optional description of this resource. Provide this property when
	// you create the resource.
	Description string `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	// [Output Only] A unique identifier for this instance template. The
	// server defines this identifier.
	Id string `protobuf:"bytes,3,opt,name=id" json:"id,omitempty"`
	// [Output Only] The resource type, which is always
	// compute#instanceTemplate for instance templates.
	Kind string `protobuf:"bytes,4,opt,name=kind" json:"kind,omitempty"`
	// Name of the resource; provided by the client when the resource is
	// created. The name must be 1-63 characters long, and comply with
	// RFC1035. Specifically, the name must be 1-63 characters long and
	// match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means
	// the first character must be a lowercase letter, and all following
	// characters must be a dash, lowercase letter, or digit, except the
	// last character, which cannot be a dash.
	Name string `protobuf:"bytes,5,opt,name=name" json:"name,omitempty"`
	// The instance properties for this instance template.
	Properties *InstanceProperties `protobuf:"bytes,6,opt,name=properties" json:"properties,omitempty"`
	// [Output Only] The URL for this instance template. The server defines
	// this URL.
	SelfLink string `protobuf:"bytes,7,opt,name=selfLink" json:"selfLink,omitempty"`
}

func (m *InstanceTemplate) Reset()                    { *m = InstanceTemplate{} }
func (m *InstanceTemplate) String() string            { return proto.CompactTextString(m) }
func (*InstanceTemplate) ProtoMessage()               {}
func (*InstanceTemplate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{115} }

func (m *InstanceTemplate) GetCreationTimestamp() string {
	if m != nil {
		return m.CreationTimestamp
	}
	return ""
}

func (m *InstanceTemplate) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *InstanceTemplate) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *InstanceTemplate) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *InstanceTemplate) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *InstanceTemplate) GetProperties() *InstanceProperties {
	if m != nil {
		return m.Properties
	}
	return nil
}

func (m *InstanceTemplate) GetSelfLink() string {
	if m != nil {
		return m.SelfLink
	}
	return ""
}

// A list of instance templates.
type InstanceTemplateList struct {
	// [Output Only] Unique identifier for the resource; defined by the
	// server.
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// A list of InstanceTemplate resources.
	Items []*InstanceTemplate `protobuf:"bytes,2,rep,name=items" json:"items,omitempty"`
	// [Output Only] The resource type, which is always
	// compute#instanceTemplatesListResponse for instance template lists.
	Kind string `protobuf:"bytes,3,opt,name=kind" json:"kind,omitempty"`
	// [Output Only] This token allows you to get the next page of results
	// for list requests. If the number of results is larger than
	// maxResults, use the nextPageToken as a value for the query parameter
	// pageToken in the next list request. Subsequent list requests will
	// have their own nextPageToken to continue paging through the results.
	NextPageToken string `protobuf:"bytes,4,opt,name=nextPageToken" json:"nextPageToken,omitempty"`
	// [Output Only] Server-defined URL for this resource.
	SelfLink string                        `protobuf:"bytes,5,opt,name=selfLink" json:"selfLink,omitempty"`
	Warning  *InstanceTemplateList_Warning `protobuf:"bytes,6,opt,name=warning" json:"warning,omitempty"`
}

func (m *InstanceTemplateList) Reset()                    { *m = InstanceTemplateList{} }
func (m *InstanceTemplateList) String() string            { return proto.CompactTextString(m) }
func (*InstanceTemplateList) ProtoMessage()               {}
func (*InstanceTemplateList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{116} }

func (m *InstanceTemplateList) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *InstanceTemplateList) GetItems() []*InstanceTemplate {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *InstanceTemplateList) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *InstanceTemplateList) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

func (m *InstanceTemplateList) GetSelfLink() string {
	if m != nil {
		return m.SelfLink
	}
	return ""
}

func (m *InstanceTemplateList) GetWarning() *InstanceTemplateList_Warning {
	if m != nil {
		return m.Warning
	}
	return nil
}

// [Output Only] Informational warning message.
// [Output Only] Informational warning message.
type InstanceTemplateList_Warning struct {
	// [Output Only] A warning code, if applicable. For example, Compute
	// Engine returns NO_RESULTS_ON_PAGE if there are no results in the
	// response.
	// Valid values:
	//     CLEANUP_FAILED
	//     DEPRECATED_RESOURCE_USED
	//     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
	//     FIELD_VALUE_OVERRIDEN
	//     INJECTED_KERNELS_DEPRECATED
	//     NEXT_HOP_ADDRESS_NOT_ASSIGNED
	//     NEXT_HOP_CANNOT_IP_FORWARD
	//     NEXT_HOP_INSTANCE_NOT_FOUND
	//     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
	//     NEXT_HOP_NOT_RUNNING
	//     NOT_CRITICAL_ERROR
	//     NO_RESULTS_ON_PAGE
	//     REQUIRED_TOS_AGREEMENT
	//     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
	//     RESOURCE_NOT_DELETED
	//     SINGLE_INSTANCE_PROPERTY_TEMPLATE
	//     UNREACHABLE
	Code string                               `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Data []*InstanceTemplateList_Warning_Data `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
	// [Output Only] A human-readable description of the warning code.
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *InstanceTemplateList_Warning) Reset()         { *m = InstanceTemplateList_Warning{} }
func (m *InstanceTemplateList_Warning) String() string { return proto.CompactTextString(m) }
func (*InstanceTemplateList_Warning) ProtoMessage()    {}
func (*InstanceTemplateList_Warning) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{116, 0}
}

func (m *InstanceTemplateList_Warning) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *InstanceTemplateList_Warning) GetData() []*InstanceTemplateList_Warning_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *InstanceTemplateList_Warning) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// [Output Only] Metadata about this warning in key: value format. For
// example:
// "data": [ { "key": "scope", "value": "zones/us-east1-d" }
type InstanceTemplateList_Warning_Data struct {
	// [Output Only] A key that provides more detail on the warning being
	// returned. For example, for warnings where there are no results in a
	// list request for a particular zone, this key might be scope and the
	// key value might be the zone name. Other examples might be a key
	// indicating a deprecated resource and a suggested replacement, or a
	// warning about invalid network settings (for example, if an instance
	// attempts to perform IP forwarding but is not enabled for IP
	// forwarding).
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	// [Output Only] A warning data value corresponding to the key.
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *InstanceTemplateList_Warning_Data) Reset()         { *m = InstanceTemplateList_Warning_Data{} }
func (m *InstanceTemplateList_Warning_Data) String() string { return proto.CompactTextString(m) }
func (*InstanceTemplateList_Warning_Data) ProtoMessage()    {}
func (*InstanceTemplateList_Warning_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{116, 0, 0}
}

func (m *InstanceTemplateList_Warning_Data) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *InstanceTemplateList_Warning_Data) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type InstanceWithNamedPorts struct {
	// [Output Only] The URL of the instance.
	Instance string `protobuf:"bytes,1,opt,name=instance" json:"instance,omitempty"`
	// [Output Only] The named ports that belong to this instance group.
	NamedPorts []*NamedPort `protobuf:"bytes,2,rep,name=namedPorts" json:"namedPorts,omitempty"`
	// [Output Only] The status of the instance.
	// Valid values:
	//     PROVISIONING
	//     RUNNING
	//     STAGING
	//     STOPPED
	//     STOPPING
	//     SUSPENDED
	//     SUSPENDING
	//     TERMINATED
	Status string `protobuf:"bytes,3,opt,name=status" json:"status,omitempty"`
}

func (m *InstanceWithNamedPorts) Reset()                    { *m = InstanceWithNamedPorts{} }
func (m *InstanceWithNamedPorts) String() string            { return proto.CompactTextString(m) }
func (*InstanceWithNamedPorts) ProtoMessage()               {}
func (*InstanceWithNamedPorts) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{117} }

func (m *InstanceWithNamedPorts) GetInstance() string {
	if m != nil {
		return m.Instance
	}
	return ""
}

func (m *InstanceWithNamedPorts) GetNamedPorts() []*NamedPort {
	if m != nil {
		return m.NamedPorts
	}
	return nil
}

func (m *InstanceWithNamedPorts) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type InstancesScopedList struct {
	// [Output Only] List of instances contained in this scope.
	Instances []*Instance                  `protobuf:"bytes,1,rep,name=instances" json:"instances,omitempty"`
	Warning   *InstancesScopedList_Warning `protobuf:"bytes,2,opt,name=warning" json:"warning,omitempty"`
}

func (m *InstancesScopedList) Reset()                    { *m = InstancesScopedList{} }
func (m *InstancesScopedList) String() string            { return proto.CompactTextString(m) }
func (*InstancesScopedList) ProtoMessage()               {}
func (*InstancesScopedList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{118} }

func (m *InstancesScopedList) GetInstances() []*Instance {
	if m != nil {
		return m.Instances
	}
	return nil
}

func (m *InstancesScopedList) GetWarning() *InstancesScopedList_Warning {
	if m != nil {
		return m.Warning
	}
	return nil
}

// [Output Only] Informational warning which replaces the list of
// instances when the list is empty.
// [Output Only] Informational warning which replaces the list of
// instances when the list is empty.
type InstancesScopedList_Warning struct {
	// [Output Only] A warning code, if applicable. For example, Compute
	// Engine returns NO_RESULTS_ON_PAGE if there are no results in the
	// response.
	// Valid values:
	//     CLEANUP_FAILED
	//     DEPRECATED_RESOURCE_USED
	//     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
	//     FIELD_VALUE_OVERRIDEN
	//     INJECTED_KERNELS_DEPRECATED
	//     NEXT_HOP_ADDRESS_NOT_ASSIGNED
	//     NEXT_HOP_CANNOT_IP_FORWARD
	//     NEXT_HOP_INSTANCE_NOT_FOUND
	//     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
	//     NEXT_HOP_NOT_RUNNING
	//     NOT_CRITICAL_ERROR
	//     NO_RESULTS_ON_PAGE
	//     REQUIRED_TOS_AGREEMENT
	//     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
	//     RESOURCE_NOT_DELETED
	//     SINGLE_INSTANCE_PROPERTY_TEMPLATE
	//     UNREACHABLE
	Code string                              `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Data []*InstancesScopedList_Warning_Data `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
	// [Output Only] A human-readable description of the warning code.
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *InstancesScopedList_Warning) Reset()         { *m = InstancesScopedList_Warning{} }
func (m *InstancesScopedList_Warning) String() string { return proto.CompactTextString(m) }
func (*InstancesScopedList_Warning) ProtoMessage()    {}
func (*InstancesScopedList_Warning) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{118, 0}
}

func (m *InstancesScopedList_Warning) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *InstancesScopedList_Warning) GetData() []*InstancesScopedList_Warning_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *InstancesScopedList_Warning) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// [Output Only] Metadata about this warning in key: value format. For
// example:
// "data": [ { "key": "scope", "value": "zones/us-east1-d" }
type InstancesScopedList_Warning_Data struct {
	// [Output Only] A key that provides more detail on the warning being
	// returned. For example, for warnings where there are no results in a
	// list request for a particular zone, this key might be scope and the
	// key value might be the zone name. Other examples might be a key
	// indicating a deprecated resource and a suggested replacement, or a
	// warning about invalid network settings (for example, if an instance
	// attempts to perform IP forwarding but is not enabled for IP
	// forwarding).
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	// [Output Only] A warning data value corresponding to the key.
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *InstancesScopedList_Warning_Data) Reset()         { *m = InstancesScopedList_Warning_Data{} }
func (m *InstancesScopedList_Warning_Data) String() string { return proto.CompactTextString(m) }
func (*InstancesScopedList_Warning_Data) ProtoMessage()    {}
func (*InstancesScopedList_Warning_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{118, 0, 0}
}

func (m *InstancesScopedList_Warning_Data) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *InstancesScopedList_Warning_Data) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type InstancesSetLabelsRequest struct {
	// Fingerprint of the previous set of labels for this resource, used to
	// prevent conflicts. Provide the latest fingerprint value when making a
	// request to add or change labels.
	LabelFingerprint string            `protobuf:"bytes,1,opt,name=labelFingerprint" json:"labelFingerprint,omitempty"`
	Labels           map[string]string `protobuf:"bytes,2,rep,name=labels" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *InstancesSetLabelsRequest) Reset()                    { *m = InstancesSetLabelsRequest{} }
func (m *InstancesSetLabelsRequest) String() string            { return proto.CompactTextString(m) }
func (*InstancesSetLabelsRequest) ProtoMessage()               {}
func (*InstancesSetLabelsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{119} }

func (m *InstancesSetLabelsRequest) GetLabelFingerprint() string {
	if m != nil {
		return m.LabelFingerprint
	}
	return ""
}

func (m *InstancesSetLabelsRequest) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

type InstancesSetMachineResourcesRequest struct {
	// List of the type and count of accelerator cards attached to the
	// instance.
	GuestAccelerators []*AcceleratorConfig `protobuf:"bytes,1,rep,name=guestAccelerators" json:"guestAccelerators,omitempty"`
}

func (m *InstancesSetMachineResourcesRequest) Reset()         { *m = InstancesSetMachineResourcesRequest{} }
func (m *InstancesSetMachineResourcesRequest) String() string { return proto.CompactTextString(m) }
func (*InstancesSetMachineResourcesRequest) ProtoMessage()    {}
func (*InstancesSetMachineResourcesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{120}
}

func (m *InstancesSetMachineResourcesRequest) GetGuestAccelerators() []*AcceleratorConfig {
	if m != nil {
		return m.GuestAccelerators
	}
	return nil
}

type InstancesSetMachineTypeRequest struct {
	// Full or partial URL of the machine type resource. See Machine Types
	// for a full list of machine types. For example:
	// zones/us-central1-f/machineTypes/n1-standard-1
	MachineType string `protobuf:"bytes,1,opt,name=machineType" json:"machineType,omitempty"`
}

func (m *InstancesSetMachineTypeRequest) Reset()         { *m = InstancesSetMachineTypeRequest{} }
func (m *InstancesSetMachineTypeRequest) String() string { return proto.CompactTextString(m) }
func (*InstancesSetMachineTypeRequest) ProtoMessage()    {}
func (*InstancesSetMachineTypeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{121}
}

func (m *InstancesSetMachineTypeRequest) GetMachineType() string {
	if m != nil {
		return m.MachineType
	}
	return ""
}

type InstancesSetMinCpuPlatformRequest struct {
	// Minimum cpu/platform this instance should be started at.
	MinCpuPlatform string `protobuf:"bytes,1,opt,name=minCpuPlatform" json:"minCpuPlatform,omitempty"`
}

func (m *InstancesSetMinCpuPlatformRequest) Reset()         { *m = InstancesSetMinCpuPlatformRequest{} }
func (m *InstancesSetMinCpuPlatformRequest) String() string { return proto.CompactTextString(m) }
func (*InstancesSetMinCpuPlatformRequest) ProtoMessage()    {}
func (*InstancesSetMinCpuPlatformRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{122}
}

func (m *InstancesSetMinCpuPlatformRequest) GetMinCpuPlatform() string {
	if m != nil {
		return m.MinCpuPlatform
	}
	return ""
}

type InstancesSetServiceAccountRequest struct {
	// Email address of the service account.
	Email string `protobuf:"bytes,1,opt,name=email" json:"email,omitempty"`
	// The list of scopes to be made available for this service account.
	Scopes []string `protobuf:"bytes,2,rep,name=scopes" json:"scopes,omitempty"`
}

func (m *InstancesSetServiceAccountRequest) Reset()         { *m = InstancesSetServiceAccountRequest{} }
func (m *InstancesSetServiceAccountRequest) String() string { return proto.CompactTextString(m) }
func (*InstancesSetServiceAccountRequest) ProtoMessage()    {}
func (*InstancesSetServiceAccountRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{123}
}

func (m *InstancesSetServiceAccountRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *InstancesSetServiceAccountRequest) GetScopes() []string {
	if m != nil {
		return m.Scopes
	}
	return nil
}

type InstancesStartWithEncryptionKeyRequest struct {
	// Array of disks associated with this instance that are protected with
	// a customer-supplied encryption key.
	//
	// In order to start the instance, the disk url and its corresponding
	// key must be provided.
	//
	// If the disk is not protected with a customer-supplied encryption key
	// it should not be specified.
	Disks []*CustomerEncryptionKeyProtectedDisk `protobuf:"bytes,1,rep,name=disks" json:"disks,omitempty"`
}

func (m *InstancesStartWithEncryptionKeyRequest) Reset() {
	*m = InstancesStartWithEncryptionKeyRequest{}
}
func (m *InstancesStartWithEncryptionKeyRequest) String() string { return proto.CompactTextString(m) }
func (*InstancesStartWithEncryptionKeyRequest) ProtoMessage()    {}
func (*InstancesStartWithEncryptionKeyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{124}
}

func (m *InstancesStartWithEncryptionKeyRequest) GetDisks() []*CustomerEncryptionKeyProtectedDisk {
	if m != nil {
		return m.Disks
	}
	return nil
}

// Protocol definitions for Mixer API to support Interconnect. Next
// available tag: 23
type Interconnect struct {
	// Administrative status of the interconnect. When this is set to
	// ?true?, the Interconnect is functional and may carry traffic
	// (assuming there are functional InterconnectAttachments and other
	// requirements are satisfied). When set to ?false?, no packets will be
	// carried over this Interconnect and no BGP routes will be exchanged
	// over it. By default, it is set to ?true?.
	AdminEnabled bool `protobuf:"varint,1,opt,name=adminEnabled" json:"adminEnabled,omitempty"`
	// [Output Only] List of CircuitInfo objects, that describe the
	// individual circuits in this LAG.
	CircuitInfos []*InterconnectCircuitInfo `protobuf:"bytes,2,rep,name=circuitInfos" json:"circuitInfos,omitempty"`
	// [Output Only] URL to retrieve the Letter Of Authority and Customer
	// Facility Assignment (LOA-CFA) documentation relating to this
	// Interconnect. This documentation authorizes the facility provider to
	// connect to the specified crossconnect ports.
	ConnectionAuthorization string `protobuf:"bytes,3,opt,name=connectionAuthorization" json:"connectionAuthorization,omitempty"`
	// [Output Only] Creation timestamp in RFC3339 text format.
	CreationTimestamp string `protobuf:"bytes,4,opt,name=creationTimestamp" json:"creationTimestamp,omitempty"`
	// Customer name, to put in the Letter of Authorization as the party
	// authorized to request a crossconnect.
	CustomerName string `protobuf:"bytes,5,opt,name=customerName" json:"customerName,omitempty"`
	// An optional description of this resource. Provide this property when
	// you create the resource.
	Description string `protobuf:"bytes,6,opt,name=description" json:"description,omitempty"`
	// [Output Only] List of outages expected for this Interconnect.
	ExpectedOutages []*InterconnectOutageNotification `protobuf:"bytes,7,rep,name=expectedOutages" json:"expectedOutages,omitempty"`
	// [Output Only] IP address configured on the Google side of the
	// Interconnect link. This can be used only for ping tests.
	GoogleIpAddress string `protobuf:"bytes,8,opt,name=googleIpAddress" json:"googleIpAddress,omitempty"`
	// [Output Only] Google reference ID; to be used when raising support
	// tickets with Google or otherwise to debug backend connectivity
	// issues.
	GoogleReferenceId string `protobuf:"bytes,9,opt,name=googleReferenceId" json:"googleReferenceId,omitempty"`
	// [Output Only] The unique identifier for the resource. This identifier
	// is defined by the server.
	Id string `protobuf:"bytes,10,opt,name=id" json:"id,omitempty"`
	// [Output Only] A list of the URLs of all InterconnectAttachments
	// configured to use this Interconnect.
	InterconnectAttachments []string `protobuf:"bytes,11,rep,name=interconnectAttachments" json:"interconnectAttachments,omitempty"`
	// Valid values:
	//     IT_PRIVATE
	InterconnectType string `protobuf:"bytes,12,opt,name=interconnectType" json:"interconnectType,omitempty"`
	// [Output Only] Type of the resource. Always compute#interconnect for
	// interconnects.
	Kind string `protobuf:"bytes,13,opt,name=kind" json:"kind,omitempty"`
	// Valid values:
	//     LINK_TYPE_ETHERNET_10G_LR
	LinkType string `protobuf:"bytes,14,opt,name=linkType" json:"linkType,omitempty"`
	// URL of the InterconnectLocation object that represents where this
	// connection is to be provisioned.
	Location string `protobuf:"bytes,15,opt,name=location" json:"location,omitempty"`
	// Name of the resource. Provided by the client when the resource is
	// created. The name must be 1-63 characters long, and comply with
	// RFC1035. Specifically, the name must be 1-63 characters long and
	// match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means
	// the first character must be a lowercase letter, and all following
	// characters must be a dash, lowercase letter, or digit, except the
	// last character, which cannot be a dash.
	Name string `protobuf:"bytes,16,opt,name=name" json:"name,omitempty"`
	// Email address to contact the customer NOC for operations and
	// maintenance notifications regarding this Interconnect. If specified,
	// this will be used for notifications in addition to all other forms
	// described, such as Stackdriver logs alerting and Cloud Notifications.
	NocContactEmail string `protobuf:"bytes,17,opt,name=nocContactEmail" json:"nocContactEmail,omitempty"`
	// [Output Only] The current status of whether or not this Interconnect
	// is functional.
	// Valid values:
	//     OS_ACTIVE
	//     OS_UNPROVISIONED
	OperationalStatus string `protobuf:"bytes,18,opt,name=operationalStatus" json:"operationalStatus,omitempty"`
	// [Output Only] IP address configured on the customer side of the
	// Interconnect link. The customer should configure this IP address
	// during turnup when prompted by Google NOC. This can be used only for
	// ping tests.
	PeerIpAddress string `protobuf:"bytes,19,opt,name=peerIpAddress" json:"peerIpAddress,omitempty"`
	// [Output Only] Number of links actually provisioned in this
	// interconnect.
	ProvisionedLinkCount int32 `protobuf:"varint,20,opt,name=provisionedLinkCount" json:"provisionedLinkCount,omitempty"`
	// Target number of physical links in the link bundle, as requested by
	// the customer.
	RequestedLinkCount int32 `protobuf:"varint,21,opt,name=requestedLinkCount" json:"requestedLinkCount,omitempty"`
	// [Output Only] Server-defined URL for the resource.
	SelfLink string `protobuf:"bytes,22,opt,name=selfLink" json:"selfLink,omitempty"`
}

func (m *Interconnect) Reset()                    { *m = Interconnect{} }
func (m *Interconnect) String() string            { return proto.CompactTextString(m) }
func (*Interconnect) ProtoMessage()               {}
func (*Interconnect) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{125} }

func (m *Interconnect) GetAdminEnabled() bool {
	if m != nil {
		return m.AdminEnabled
	}
	return false
}

func (m *Interconnect) GetCircuitInfos() []*InterconnectCircuitInfo {
	if m != nil {
		return m.CircuitInfos
	}
	return nil
}

func (m *Interconnect) GetConnectionAuthorization() string {
	if m != nil {
		return m.ConnectionAuthorization
	}
	return ""
}

func (m *Interconnect) GetCreationTimestamp() string {
	if m != nil {
		return m.CreationTimestamp
	}
	return ""
}

func (m *Interconnect) GetCustomerName() string {
	if m != nil {
		return m.CustomerName
	}
	return ""
}

func (m *Interconnect) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Interconnect) GetExpectedOutages() []*InterconnectOutageNotification {
	if m != nil {
		return m.ExpectedOutages
	}
	return nil
}

func (m *Interconnect) GetGoogleIpAddress() string {
	if m != nil {
		return m.GoogleIpAddress
	}
	return ""
}

func (m *Interconnect) GetGoogleReferenceId() string {
	if m != nil {
		return m.GoogleReferenceId
	}
	return ""
}

func (m *Interconnect) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Interconnect) GetInterconnectAttachments() []string {
	if m != nil {
		return m.InterconnectAttachments
	}
	return nil
}

func (m *Interconnect) GetInterconnectType() string {
	if m != nil {
		return m.InterconnectType
	}
	return ""
}

func (m *Interconnect) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *Interconnect) GetLinkType() string {
	if m != nil {
		return m.LinkType
	}
	return ""
}

func (m *Interconnect) GetLocation() string {
	if m != nil {
		return m.Location
	}
	return ""
}

func (m *Interconnect) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Interconnect) GetNocContactEmail() string {
	if m != nil {
		return m.NocContactEmail
	}
	return ""
}

func (m *Interconnect) GetOperationalStatus() string {
	if m != nil {
		return m.OperationalStatus
	}
	return ""
}

func (m *Interconnect) GetPeerIpAddress() string {
	if m != nil {
		return m.PeerIpAddress
	}
	return ""
}

func (m *Interconnect) GetProvisionedLinkCount() int32 {
	if m != nil {
		return m.ProvisionedLinkCount
	}
	return 0
}

func (m *Interconnect) GetRequestedLinkCount() int32 {
	if m != nil {
		return m.RequestedLinkCount
	}
	return 0
}

func (m *Interconnect) GetSelfLink() string {
	if m != nil {
		return m.SelfLink
	}
	return ""
}

// Protocol definitions for Mixer API to support InterconnectAttachment.
// Next available tag: 18
type InterconnectAttachment struct {
	// [Output Only] IPv4 address + prefix length to be configured on Cloud
	// Router Interface for this interconnect attachment.
	CloudRouterIpAddress string `protobuf:"bytes,1,opt,name=cloudRouterIpAddress" json:"cloudRouterIpAddress,omitempty"`
	// [Output Only] Creation timestamp in RFC3339 text format.
	CreationTimestamp string `protobuf:"bytes,2,opt,name=creationTimestamp" json:"creationTimestamp,omitempty"`
	// [Output Only] IPv4 address + prefix length to be configured on the
	// customer router subinterface for this interconnect attachment.
	CustomerRouterIpAddress string `protobuf:"bytes,3,opt,name=customerRouterIpAddress" json:"customerRouterIpAddress,omitempty"`
	// An optional description of this resource. Provide this property when
	// you create the resource.
	Description string `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	// [Output Only] Google reference ID, to be used when raising support
	// tickets with Google or otherwise to debug backend connectivity
	// issues.
	GoogleReferenceId string `protobuf:"bytes,5,opt,name=googleReferenceId" json:"googleReferenceId,omitempty"`
	// [Output Only] The unique identifier for the resource. This identifier
	// is defined by the server.
	Id string `protobuf:"bytes,6,opt,name=id" json:"id,omitempty"`
	// URL of the underlying Interconnect object that this attachment's
	// traffic will traverse through.
	Interconnect string `protobuf:"bytes,7,opt,name=interconnect" json:"interconnect,omitempty"`
	// [Output Only] Type of the resource. Always
	// compute#interconnectAttachment for interconnect attachments.
	Kind string `protobuf:"bytes,8,opt,name=kind" json:"kind,omitempty"`
	// Name of the resource. Provided by the client when the resource is
	// created. The name must be 1-63 characters long, and comply with
	// RFC1035. Specifically, the name must be 1-63 characters long and
	// match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means
	// the first character must be a lowercase letter, and all following
	// characters must be a dash, lowercase letter, or digit, except the
	// last character, which cannot be a dash.
	Name string `protobuf:"bytes,9,opt,name=name" json:"name,omitempty"`
	// [Output Only] The current status of whether or not this interconnect
	// attachment is functional.
	// Valid values:
	//     OS_ACTIVE
	//     OS_UNPROVISIONED
	OperationalStatus string `protobuf:"bytes,10,opt,name=operationalStatus" json:"operationalStatus,omitempty"`
	// [Output Only] Information specific to a Private
	// InterconnectAttachment. Only populated if the interconnect that this
	// is attached is of type IT_PRIVATE.
	PrivateInterconnectInfo *InterconnectAttachmentPrivateInfo `protobuf:"bytes,11,opt,name=privateInterconnectInfo" json:"privateInterconnectInfo,omitempty"`
	// [Output Only] URL of the region where the regional interconnect
	// attachment resides.
	Region string `protobuf:"bytes,12,opt,name=region" json:"region,omitempty"`
	// URL of the cloud router to be used for dynamic routing. This router
	// must be in the same region as this InterconnectAttachment. The
	// InterconnectAttachment will automatically connect the Interconnect to
	// the network & region within which the Cloud Router is configured.
	Router string `protobuf:"bytes,13,opt,name=router" json:"router,omitempty"`
	// [Output Only] Server-defined URL for the resource.
	SelfLink string `protobuf:"bytes,14,opt,name=selfLink" json:"selfLink,omitempty"`
}

func (m *InterconnectAttachment) Reset()                    { *m = InterconnectAttachment{} }
func (m *InterconnectAttachment) String() string            { return proto.CompactTextString(m) }
func (*InterconnectAttachment) ProtoMessage()               {}
func (*InterconnectAttachment) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{126} }

func (m *InterconnectAttachment) GetCloudRouterIpAddress() string {
	if m != nil {
		return m.CloudRouterIpAddress
	}
	return ""
}

func (m *InterconnectAttachment) GetCreationTimestamp() string {
	if m != nil {
		return m.CreationTimestamp
	}
	return ""
}

func (m *InterconnectAttachment) GetCustomerRouterIpAddress() string {
	if m != nil {
		return m.CustomerRouterIpAddress
	}
	return ""
}

func (m *InterconnectAttachment) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *InterconnectAttachment) GetGoogleReferenceId() string {
	if m != nil {
		return m.GoogleReferenceId
	}
	return ""
}

func (m *InterconnectAttachment) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *InterconnectAttachment) GetInterconnect() string {
	if m != nil {
		return m.Interconnect
	}
	return ""
}

func (m *InterconnectAttachment) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *InterconnectAttachment) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *InterconnectAttachment) GetOperationalStatus() string {
	if m != nil {
		return m.OperationalStatus
	}
	return ""
}

func (m *InterconnectAttachment) GetPrivateInterconnectInfo() *InterconnectAttachmentPrivateInfo {
	if m != nil {
		return m.PrivateInterconnectInfo
	}
	return nil
}

func (m *InterconnectAttachment) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *InterconnectAttachment) GetRouter() string {
	if m != nil {
		return m.Router
	}
	return ""
}

func (m *InterconnectAttachment) GetSelfLink() string {
	if m != nil {
		return m.SelfLink
	}
	return ""
}

type InterconnectAttachmentAggregatedList struct {
	// [Output Only] Unique identifier for the resource; defined by the
	// server.
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// A list of InterconnectAttachmentsScopedList resources.
	Items map[string]*InterconnectAttachmentsScopedList `protobuf:"bytes,2,rep,name=items" json:"items,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// [Output Only] Type of resource. Always
	// compute#interconnectAttachmentAggregatedList for aggregated lists of
	// interconnect attachments.
	Kind string `protobuf:"bytes,3,opt,name=kind" json:"kind,omitempty"`
	// [Output Only] This token allows you to get the next page of results
	// for list requests. If the number of results is larger than
	// maxResults, use the nextPageToken as a value for the query parameter
	// pageToken in the next list request. Subsequent list requests will
	// have their own nextPageToken to continue paging through the results.
	NextPageToken string `protobuf:"bytes,4,opt,name=nextPageToken" json:"nextPageToken,omitempty"`
	// [Output Only] Server-defined URL for this resource.
	SelfLink string                                        `protobuf:"bytes,5,opt,name=selfLink" json:"selfLink,omitempty"`
	Warning  *InterconnectAttachmentAggregatedList_Warning `protobuf:"bytes,6,opt,name=warning" json:"warning,omitempty"`
}

func (m *InterconnectAttachmentAggregatedList) Reset()         { *m = InterconnectAttachmentAggregatedList{} }
func (m *InterconnectAttachmentAggregatedList) String() string { return proto.CompactTextString(m) }
func (*InterconnectAttachmentAggregatedList) ProtoMessage()    {}
func (*InterconnectAttachmentAggregatedList) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{127}
}

func (m *InterconnectAttachmentAggregatedList) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *InterconnectAttachmentAggregatedList) GetItems() map[string]*InterconnectAttachmentsScopedList {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *InterconnectAttachmentAggregatedList) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *InterconnectAttachmentAggregatedList) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

func (m *InterconnectAttachmentAggregatedList) GetSelfLink() string {
	if m != nil {
		return m.SelfLink
	}
	return ""
}

func (m *InterconnectAttachmentAggregatedList) GetWarning() *InterconnectAttachmentAggregatedList_Warning {
	if m != nil {
		return m.Warning
	}
	return nil
}

// [Output Only] Informational warning message.
// [Output Only] Informational warning message.
type InterconnectAttachmentAggregatedList_Warning struct {
	// [Output Only] A warning code, if applicable. For example, Compute
	// Engine returns NO_RESULTS_ON_PAGE if there are no results in the
	// response.
	// Valid values:
	//     CLEANUP_FAILED
	//     DEPRECATED_RESOURCE_USED
	//     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
	//     FIELD_VALUE_OVERRIDEN
	//     INJECTED_KERNELS_DEPRECATED
	//     NEXT_HOP_ADDRESS_NOT_ASSIGNED
	//     NEXT_HOP_CANNOT_IP_FORWARD
	//     NEXT_HOP_INSTANCE_NOT_FOUND
	//     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
	//     NEXT_HOP_NOT_RUNNING
	//     NOT_CRITICAL_ERROR
	//     NO_RESULTS_ON_PAGE
	//     REQUIRED_TOS_AGREEMENT
	//     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
	//     RESOURCE_NOT_DELETED
	//     SINGLE_INSTANCE_PROPERTY_TEMPLATE
	//     UNREACHABLE
	Code string                                               `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Data []*InterconnectAttachmentAggregatedList_Warning_Data `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
	// [Output Only] A human-readable description of the warning code.
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *InterconnectAttachmentAggregatedList_Warning) Reset() {
	*m = InterconnectAttachmentAggregatedList_Warning{}
}
func (m *InterconnectAttachmentAggregatedList_Warning) String() string {
	return proto.CompactTextString(m)
}
func (*InterconnectAttachmentAggregatedList_Warning) ProtoMessage() {}
func (*InterconnectAttachmentAggregatedList_Warning) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{127, 1}
}

func (m *InterconnectAttachmentAggregatedList_Warning) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *InterconnectAttachmentAggregatedList_Warning) GetData() []*InterconnectAttachmentAggregatedList_Warning_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *InterconnectAttachmentAggregatedList_Warning) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// [Output Only] Metadata about this warning in key: value format. For
// example:
// "data": [ { "key": "scope", "value": "zones/us-east1-d" }
type InterconnectAttachmentAggregatedList_Warning_Data struct {
	// [Output Only] A key that provides more detail on the warning being
	// returned. For example, for warnings where there are no results in a
	// list request for a particular zone, this key might be scope and the
	// key value might be the zone name. Other examples might be a key
	// indicating a deprecated resource and a suggested replacement, or a
	// warning about invalid network settings (for example, if an instance
	// attempts to perform IP forwarding but is not enabled for IP
	// forwarding).
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	// [Output Only] A warning data value corresponding to the key.
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *InterconnectAttachmentAggregatedList_Warning_Data) Reset() {
	*m = InterconnectAttachmentAggregatedList_Warning_Data{}
}
func (m *InterconnectAttachmentAggregatedList_Warning_Data) String() string {
	return proto.CompactTextString(m)
}
func (*InterconnectAttachmentAggregatedList_Warning_Data) ProtoMessage() {}
func (*InterconnectAttachmentAggregatedList_Warning_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{127, 1, 0}
}

func (m *InterconnectAttachmentAggregatedList_Warning_Data) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *InterconnectAttachmentAggregatedList_Warning_Data) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

// Response to the list request, and contains a list of interconnect
// attachments.
type InterconnectAttachmentList struct {
	// [Output Only] Unique identifier for the resource; defined by the
	// server.
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// A list of InterconnectAttachment resources.
	Items []*InterconnectAttachment `protobuf:"bytes,2,rep,name=items" json:"items,omitempty"`
	// [Output Only] Type of resource. Always
	// compute#interconnectAttachmentList for lists of interconnect
	// attachments.
	Kind string `protobuf:"bytes,3,opt,name=kind" json:"kind,omitempty"`
	// [Output Only] This token allows you to get the next page of results
	// for list requests. If the number of results is larger than
	// maxResults, use the nextPageToken as a value for the query parameter
	// pageToken in the next list request. Subsequent list requests will
	// have their own nextPageToken to continue paging through the results.
	NextPageToken string `protobuf:"bytes,4,opt,name=nextPageToken" json:"nextPageToken,omitempty"`
	// [Output Only] Server-defined URL for this resource.
	SelfLink string                              `protobuf:"bytes,5,opt,name=selfLink" json:"selfLink,omitempty"`
	Warning  *InterconnectAttachmentList_Warning `protobuf:"bytes,6,opt,name=warning" json:"warning,omitempty"`
}

func (m *InterconnectAttachmentList) Reset()                    { *m = InterconnectAttachmentList{} }
func (m *InterconnectAttachmentList) String() string            { return proto.CompactTextString(m) }
func (*InterconnectAttachmentList) ProtoMessage()               {}
func (*InterconnectAttachmentList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{128} }

func (m *InterconnectAttachmentList) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *InterconnectAttachmentList) GetItems() []*InterconnectAttachment {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *InterconnectAttachmentList) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *InterconnectAttachmentList) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

func (m *InterconnectAttachmentList) GetSelfLink() string {
	if m != nil {
		return m.SelfLink
	}
	return ""
}

func (m *InterconnectAttachmentList) GetWarning() *InterconnectAttachmentList_Warning {
	if m != nil {
		return m.Warning
	}
	return nil
}

// [Output Only] Informational warning message.
// [Output Only] Informational warning message.
type InterconnectAttachmentList_Warning struct {
	// [Output Only] A warning code, if applicable. For example, Compute
	// Engine returns NO_RESULTS_ON_PAGE if there are no results in the
	// response.
	// Valid values:
	//     CLEANUP_FAILED
	//     DEPRECATED_RESOURCE_USED
	//     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
	//     FIELD_VALUE_OVERRIDEN
	//     INJECTED_KERNELS_DEPRECATED
	//     NEXT_HOP_ADDRESS_NOT_ASSIGNED
	//     NEXT_HOP_CANNOT_IP_FORWARD
	//     NEXT_HOP_INSTANCE_NOT_FOUND
	//     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
	//     NEXT_HOP_NOT_RUNNING
	//     NOT_CRITICAL_ERROR
	//     NO_RESULTS_ON_PAGE
	//     REQUIRED_TOS_AGREEMENT
	//     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
	//     RESOURCE_NOT_DELETED
	//     SINGLE_INSTANCE_PROPERTY_TEMPLATE
	//     UNREACHABLE
	Code string                                     `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Data []*InterconnectAttachmentList_Warning_Data `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
	// [Output Only] A human-readable description of the warning code.
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *InterconnectAttachmentList_Warning) Reset()         { *m = InterconnectAttachmentList_Warning{} }
func (m *InterconnectAttachmentList_Warning) String() string { return proto.CompactTextString(m) }
func (*InterconnectAttachmentList_Warning) ProtoMessage()    {}
func (*InterconnectAttachmentList_Warning) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{128, 0}
}

func (m *InterconnectAttachmentList_Warning) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *InterconnectAttachmentList_Warning) GetData() []*InterconnectAttachmentList_Warning_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *InterconnectAttachmentList_Warning) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// [Output Only] Metadata about this warning in key: value format. For
// example:
// "data": [ { "key": "scope", "value": "zones/us-east1-d" }
type InterconnectAttachmentList_Warning_Data struct {
	// [Output Only] A key that provides more detail on the warning being
	// returned. For example, for warnings where there are no results in a
	// list request for a particular zone, this key might be scope and the
	// key value might be the zone name. Other examples might be a key
	// indicating a deprecated resource and a suggested replacement, or a
	// warning about invalid network settings (for example, if an instance
	// attempts to perform IP forwarding but is not enabled for IP
	// forwarding).
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	// [Output Only] A warning data value corresponding to the key.
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *InterconnectAttachmentList_Warning_Data) Reset() {
	*m = InterconnectAttachmentList_Warning_Data{}
}
func (m *InterconnectAttachmentList_Warning_Data) String() string { return proto.CompactTextString(m) }
func (*InterconnectAttachmentList_Warning_Data) ProtoMessage()    {}
func (*InterconnectAttachmentList_Warning_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{128, 0, 0}
}

func (m *InterconnectAttachmentList_Warning_Data) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *InterconnectAttachmentList_Warning_Data) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

// Private information for an interconnect attachment when this belongs
// to an interconnect of type IT_PRIVATE.
type InterconnectAttachmentPrivateInfo struct {
	// [Output Only] 802.1q encapsulation tag to be used for traffic between
	// Google and the customer, going to and from this network and region.
	Tag8021Q uint32 `protobuf:"varint,1,opt,name=tag8021q" json:"tag8021q,omitempty"`
}

func (m *InterconnectAttachmentPrivateInfo) Reset()         { *m = InterconnectAttachmentPrivateInfo{} }
func (m *InterconnectAttachmentPrivateInfo) String() string { return proto.CompactTextString(m) }
func (*InterconnectAttachmentPrivateInfo) ProtoMessage()    {}
func (*InterconnectAttachmentPrivateInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{129}
}

func (m *InterconnectAttachmentPrivateInfo) GetTag8021Q() uint32 {
	if m != nil {
		return m.Tag8021Q
	}
	return 0
}

type InterconnectAttachmentsScopedList struct {
	// List of interconnect attachments contained in this scope.
	InterconnectAttachments []*InterconnectAttachment                  `protobuf:"bytes,1,rep,name=interconnectAttachments" json:"interconnectAttachments,omitempty"`
	Warning                 *InterconnectAttachmentsScopedList_Warning `protobuf:"bytes,2,opt,name=warning" json:"warning,omitempty"`
}

func (m *InterconnectAttachmentsScopedList) Reset()         { *m = InterconnectAttachmentsScopedList{} }
func (m *InterconnectAttachmentsScopedList) String() string { return proto.CompactTextString(m) }
func (*InterconnectAttachmentsScopedList) ProtoMessage()    {}
func (*InterconnectAttachmentsScopedList) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{130}
}

func (m *InterconnectAttachmentsScopedList) GetInterconnectAttachments() []*InterconnectAttachment {
	if m != nil {
		return m.InterconnectAttachments
	}
	return nil
}

func (m *InterconnectAttachmentsScopedList) GetWarning() *InterconnectAttachmentsScopedList_Warning {
	if m != nil {
		return m.Warning
	}
	return nil
}

// Informational warning which replaces the list of addresses when the
// list is empty.
// Informational warning which replaces the list of addresses when the
// list is empty.
type InterconnectAttachmentsScopedList_Warning struct {
	// [Output Only] A warning code, if applicable. For example, Compute
	// Engine returns NO_RESULTS_ON_PAGE if there are no results in the
	// response.
	// Valid values:
	//     CLEANUP_FAILED
	//     DEPRECATED_RESOURCE_USED
	//     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
	//     FIELD_VALUE_OVERRIDEN
	//     INJECTED_KERNELS_DEPRECATED
	//     NEXT_HOP_ADDRESS_NOT_ASSIGNED
	//     NEXT_HOP_CANNOT_IP_FORWARD
	//     NEXT_HOP_INSTANCE_NOT_FOUND
	//     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
	//     NEXT_HOP_NOT_RUNNING
	//     NOT_CRITICAL_ERROR
	//     NO_RESULTS_ON_PAGE
	//     REQUIRED_TOS_AGREEMENT
	//     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
	//     RESOURCE_NOT_DELETED
	//     SINGLE_INSTANCE_PROPERTY_TEMPLATE
	//     UNREACHABLE
	Code string                                            `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Data []*InterconnectAttachmentsScopedList_Warning_Data `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
	// [Output Only] A human-readable description of the warning code.
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *InterconnectAttachmentsScopedList_Warning) Reset() {
	*m = InterconnectAttachmentsScopedList_Warning{}
}
func (m *InterconnectAttachmentsScopedList_Warning) String() string { return proto.CompactTextString(m) }
func (*InterconnectAttachmentsScopedList_Warning) ProtoMessage()    {}
func (*InterconnectAttachmentsScopedList_Warning) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{130, 0}
}

func (m *InterconnectAttachmentsScopedList_Warning) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *InterconnectAttachmentsScopedList_Warning) GetData() []*InterconnectAttachmentsScopedList_Warning_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *InterconnectAttachmentsScopedList_Warning) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// [Output Only] Metadata about this warning in key: value format. For
// example:
// "data": [ { "key": "scope", "value": "zones/us-east1-d" }
type InterconnectAttachmentsScopedList_Warning_Data struct {
	// [Output Only] A key that provides more detail on the warning being
	// returned. For example, for warnings where there are no results in a
	// list request for a particular zone, this key might be scope and the
	// key value might be the zone name. Other examples might be a key
	// indicating a deprecated resource and a suggested replacement, or a
	// warning about invalid network settings (for example, if an instance
	// attempts to perform IP forwarding but is not enabled for IP
	// forwarding).
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	// [Output Only] A warning data value corresponding to the key.
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *InterconnectAttachmentsScopedList_Warning_Data) Reset() {
	*m = InterconnectAttachmentsScopedList_Warning_Data{}
}
func (m *InterconnectAttachmentsScopedList_Warning_Data) String() string {
	return proto.CompactTextString(m)
}
func (*InterconnectAttachmentsScopedList_Warning_Data) ProtoMessage() {}
func (*InterconnectAttachmentsScopedList_Warning_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{130, 0, 0}
}

func (m *InterconnectAttachmentsScopedList_Warning_Data) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *InterconnectAttachmentsScopedList_Warning_Data) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

// Describes a single physical circuit between the Customer and Google.
// CircuitInfo objects are created by Google, so all fields are output
// only. Next id: 4
type InterconnectCircuitInfo struct {
	// Customer-side demarc ID for this circuit. This will only be set if it
	// was provided by the Customer to Google during circuit turn-up.
	CustomerDemarcId string `protobuf:"bytes,1,opt,name=customerDemarcId" json:"customerDemarcId,omitempty"`
	// Google-assigned unique ID for this circuit. Assigned at circuit
	// turn-up.
	GoogleCircuitId string `protobuf:"bytes,2,opt,name=googleCircuitId" json:"googleCircuitId,omitempty"`
	// Google-side demarc ID for this circuit. Assigned at circuit turn-up
	// and provided by Google to the customer in the LOA.
	GoogleDemarcId string `protobuf:"bytes,3,opt,name=googleDemarcId" json:"googleDemarcId,omitempty"`
}

func (m *InterconnectCircuitInfo) Reset()                    { *m = InterconnectCircuitInfo{} }
func (m *InterconnectCircuitInfo) String() string            { return proto.CompactTextString(m) }
func (*InterconnectCircuitInfo) ProtoMessage()               {}
func (*InterconnectCircuitInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{131} }

func (m *InterconnectCircuitInfo) GetCustomerDemarcId() string {
	if m != nil {
		return m.CustomerDemarcId
	}
	return ""
}

func (m *InterconnectCircuitInfo) GetGoogleCircuitId() string {
	if m != nil {
		return m.GoogleCircuitId
	}
	return ""
}

func (m *InterconnectCircuitInfo) GetGoogleDemarcId() string {
	if m != nil {
		return m.GoogleDemarcId
	}
	return ""
}

// Response to the list request, and contains a list of interconnects.
type InterconnectList struct {
	// [Output Only] Unique identifier for the resource; defined by the
	// server.
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// A list of Interconnect resources.
	Items []*Interconnect `protobuf:"bytes,2,rep,name=items" json:"items,omitempty"`
	// [Output Only] Type of resource. Always compute#interconnectList for
	// lists of interconnects.
	Kind string `protobuf:"bytes,3,opt,name=kind" json:"kind,omitempty"`
	// [Output Only] This token allows you to get the next page of results
	// for list requests. If the number of results is larger than
	// maxResults, use the nextPageToken as a value for the query parameter
	// pageToken in the next list request. Subsequent list requests will
	// have their own nextPageToken to continue paging through the results.
	NextPageToken string `protobuf:"bytes,4,opt,name=nextPageToken" json:"nextPageToken,omitempty"`
	// [Output Only] Server-defined URL for this resource.
	SelfLink string                    `protobuf:"bytes,5,opt,name=selfLink" json:"selfLink,omitempty"`
	Warning  *InterconnectList_Warning `protobuf:"bytes,6,opt,name=warning" json:"warning,omitempty"`
}

func (m *InterconnectList) Reset()                    { *m = InterconnectList{} }
func (m *InterconnectList) String() string            { return proto.CompactTextString(m) }
func (*InterconnectList) ProtoMessage()               {}
func (*InterconnectList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{132} }

func (m *InterconnectList) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *InterconnectList) GetItems() []*Interconnect {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *InterconnectList) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *InterconnectList) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

func (m *InterconnectList) GetSelfLink() string {
	if m != nil {
		return m.SelfLink
	}
	return ""
}

func (m *InterconnectList) GetWarning() *InterconnectList_Warning {
	if m != nil {
		return m.Warning
	}
	return nil
}

// [Output Only] Informational warning message.
// [Output Only] Informational warning message.
type InterconnectList_Warning struct {
	// [Output Only] A warning code, if applicable. For example, Compute
	// Engine returns NO_RESULTS_ON_PAGE if there are no results in the
	// response.
	// Valid values:
	//     CLEANUP_FAILED
	//     DEPRECATED_RESOURCE_USED
	//     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
	//     FIELD_VALUE_OVERRIDEN
	//     INJECTED_KERNELS_DEPRECATED
	//     NEXT_HOP_ADDRESS_NOT_ASSIGNED
	//     NEXT_HOP_CANNOT_IP_FORWARD
	//     NEXT_HOP_INSTANCE_NOT_FOUND
	//     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
	//     NEXT_HOP_NOT_RUNNING
	//     NOT_CRITICAL_ERROR
	//     NO_RESULTS_ON_PAGE
	//     REQUIRED_TOS_AGREEMENT
	//     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
	//     RESOURCE_NOT_DELETED
	//     SINGLE_INSTANCE_PROPERTY_TEMPLATE
	//     UNREACHABLE
	Code string                           `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Data []*InterconnectList_Warning_Data `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
	// [Output Only] A human-readable description of the warning code.
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *InterconnectList_Warning) Reset()                    { *m = InterconnectList_Warning{} }
func (m *InterconnectList_Warning) String() string            { return proto.CompactTextString(m) }
func (*InterconnectList_Warning) ProtoMessage()               {}
func (*InterconnectList_Warning) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{132, 0} }

func (m *InterconnectList_Warning) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *InterconnectList_Warning) GetData() []*InterconnectList_Warning_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *InterconnectList_Warning) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// [Output Only] Metadata about this warning in key: value format. For
// example:
// "data": [ { "key": "scope", "value": "zones/us-east1-d" }
type InterconnectList_Warning_Data struct {
	// [Output Only] A key that provides more detail on the warning being
	// returned. For example, for warnings where there are no results in a
	// list request for a particular zone, this key might be scope and the
	// key value might be the zone name. Other examples might be a key
	// indicating a deprecated resource and a suggested replacement, or a
	// warning about invalid network settings (for example, if an instance
	// attempts to perform IP forwarding but is not enabled for IP
	// forwarding).
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	// [Output Only] A warning data value corresponding to the key.
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *InterconnectList_Warning_Data) Reset()         { *m = InterconnectList_Warning_Data{} }
func (m *InterconnectList_Warning_Data) String() string { return proto.CompactTextString(m) }
func (*InterconnectList_Warning_Data) ProtoMessage()    {}
func (*InterconnectList_Warning_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{132, 0, 0}
}

func (m *InterconnectList_Warning_Data) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *InterconnectList_Warning_Data) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

// Protocol definitions for Mixer API to support InterconnectLocation.
type InterconnectLocation struct {
	// [Output Only] The postal address of the Point of Presence, each line
	// in the address is separated by a newline character.
	Address string `protobuf:"bytes,1,opt,name=address" json:"address,omitempty"`
	// Availability zone for this location. Within a city, maintenance will
	// not be simultaneously scheduled in more than one availability zone.
	// Example: "zone1" or "zone2".
	AvailabilityZone string `protobuf:"bytes,2,opt,name=availabilityZone" json:"availabilityZone,omitempty"`
	// City designator used by the Interconnect UI to locate this
	// InterconnectLocation within the Continent. For example: "Chicago,
	// IL", "Amsterdam, Netherlands".
	City string `protobuf:"bytes,3,opt,name=city" json:"city,omitempty"`
	// Continent for this location. Used by the location picker in the
	// Interconnect UI.
	// Valid values:
	//     C_AFRICA
	//     C_ASIA_PAC
	//     C_EUROPE
	//     C_NORTH_AMERICA
	//     C_SOUTH_AMERICA
	Continent string `protobuf:"bytes,4,opt,name=continent" json:"continent,omitempty"`
	// [Output Only] Creation timestamp in RFC3339 text format.
	CreationTimestamp string `protobuf:"bytes,5,opt,name=creationTimestamp" json:"creationTimestamp,omitempty"`
	// [Output Only] An optional description of the resource.
	Description string `protobuf:"bytes,6,opt,name=description" json:"description,omitempty"`
	// [Output Only] The name of the provider for this facility (e.g.,
	// EQUINIX).
	FacilityProvider string `protobuf:"bytes,7,opt,name=facilityProvider" json:"facilityProvider,omitempty"`
	// [Output Only] A provider-assigned Identifier for this facility (e.g.,
	// Ashburn-DC1).
	FacilityProviderFacilityId string `protobuf:"bytes,8,opt,name=facilityProviderFacilityId" json:"facilityProviderFacilityId,omitempty"`
	// [Output Only] The unique identifier for the resource. This identifier
	// is defined by the server.
	Id string `protobuf:"bytes,9,opt,name=id" json:"id,omitempty"`
	// [Output Only] Type of the resource. Always
	// compute#interconnectLocation for interconnect locations.
	Kind string `protobuf:"bytes,10,opt,name=kind" json:"kind,omitempty"`
	// [Output Only] Name of the resource.
	Name string `protobuf:"bytes,11,opt,name=name" json:"name,omitempty"`
	// [Output Only] The peeringdb identifier for this facility
	// (corresponding with a netfac type in peeringdb).
	PeeringdbFacilityId string `protobuf:"bytes,12,opt,name=peeringdbFacilityId" json:"peeringdbFacilityId,omitempty"`
	// [Output Only] A list of InterconnectLocation.RegionInfo objects, that
	// describe parameters pertaining to the relation between this
	// InterconnectLocation and various Google Cloud regions.
	RegionInfos []*InterconnectLocationRegionInfo `protobuf:"bytes,13,rep,name=regionInfos" json:"regionInfos,omitempty"`
	// [Output Only] Server-defined URL for the resource.
	SelfLink string `protobuf:"bytes,14,opt,name=selfLink" json:"selfLink,omitempty"`
}

func (m *InterconnectLocation) Reset()                    { *m = InterconnectLocation{} }
func (m *InterconnectLocation) String() string            { return proto.CompactTextString(m) }
func (*InterconnectLocation) ProtoMessage()               {}
func (*InterconnectLocation) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{133} }

func (m *InterconnectLocation) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *InterconnectLocation) GetAvailabilityZone() string {
	if m != nil {
		return m.AvailabilityZone
	}
	return ""
}

func (m *InterconnectLocation) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *InterconnectLocation) GetContinent() string {
	if m != nil {
		return m.Continent
	}
	return ""
}

func (m *InterconnectLocation) GetCreationTimestamp() string {
	if m != nil {
		return m.CreationTimestamp
	}
	return ""
}

func (m *InterconnectLocation) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *InterconnectLocation) GetFacilityProvider() string {
	if m != nil {
		return m.FacilityProvider
	}
	return ""
}

func (m *InterconnectLocation) GetFacilityProviderFacilityId() string {
	if m != nil {
		return m.FacilityProviderFacilityId
	}
	return ""
}

func (m *InterconnectLocation) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *InterconnectLocation) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *InterconnectLocation) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *InterconnectLocation) GetPeeringdbFacilityId() string {
	if m != nil {
		return m.PeeringdbFacilityId
	}
	return ""
}

func (m *InterconnectLocation) GetRegionInfos() []*InterconnectLocationRegionInfo {
	if m != nil {
		return m.RegionInfos
	}
	return nil
}

func (m *InterconnectLocation) GetSelfLink() string {
	if m != nil {
		return m.SelfLink
	}
	return ""
}

// Response to the list request, and contains a list of interconnect
// locations.
type InterconnectLocationList struct {
	// [Output Only] Unique identifier for the resource; defined by the
	// server.
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// A list of InterconnectLocation resources.
	Items []*InterconnectLocation `protobuf:"bytes,2,rep,name=items" json:"items,omitempty"`
	// [Output Only] Type of resource. Always
	// compute#interconnectLocationList for lists of interconnect locations.
	Kind string `protobuf:"bytes,3,opt,name=kind" json:"kind,omitempty"`
	// [Output Only] This token allows you to get the next page of results
	// for list requests. If the number of results is larger than
	// maxResults, use the nextPageToken as a value for the query parameter
	// pageToken in the next list request. Subsequent list requests will
	// have their own nextPageToken to continue paging through the results.
	NextPageToken string `protobuf:"bytes,4,opt,name=nextPageToken" json:"nextPageToken,omitempty"`
	// [Output Only] Server-defined URL for this resource.
	SelfLink string                            `protobuf:"bytes,5,opt,name=selfLink" json:"selfLink,omitempty"`
	Warning  *InterconnectLocationList_Warning `protobuf:"bytes,6,opt,name=warning" json:"warning,omitempty"`
}

func (m *InterconnectLocationList) Reset()                    { *m = InterconnectLocationList{} }
func (m *InterconnectLocationList) String() string            { return proto.CompactTextString(m) }
func (*InterconnectLocationList) ProtoMessage()               {}
func (*InterconnectLocationList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{134} }

func (m *InterconnectLocationList) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *InterconnectLocationList) GetItems() []*InterconnectLocation {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *InterconnectLocationList) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *InterconnectLocationList) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

func (m *InterconnectLocationList) GetSelfLink() string {
	if m != nil {
		return m.SelfLink
	}
	return ""
}

func (m *InterconnectLocationList) GetWarning() *InterconnectLocationList_Warning {
	if m != nil {
		return m.Warning
	}
	return nil
}

// [Output Only] Informational warning message.
// [Output Only] Informational warning message.
type InterconnectLocationList_Warning struct {
	// [Output Only] A warning code, if applicable. For example, Compute
	// Engine returns NO_RESULTS_ON_PAGE if there are no results in the
	// response.
	// Valid values:
	//     CLEANUP_FAILED
	//     DEPRECATED_RESOURCE_USED
	//     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
	//     FIELD_VALUE_OVERRIDEN
	//     INJECTED_KERNELS_DEPRECATED
	//     NEXT_HOP_ADDRESS_NOT_ASSIGNED
	//     NEXT_HOP_CANNOT_IP_FORWARD
	//     NEXT_HOP_INSTANCE_NOT_FOUND
	//     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
	//     NEXT_HOP_NOT_RUNNING
	//     NOT_CRITICAL_ERROR
	//     NO_RESULTS_ON_PAGE
	//     REQUIRED_TOS_AGREEMENT
	//     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
	//     RESOURCE_NOT_DELETED
	//     SINGLE_INSTANCE_PROPERTY_TEMPLATE
	//     UNREACHABLE
	Code string                                   `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Data []*InterconnectLocationList_Warning_Data `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
	// [Output Only] A human-readable description of the warning code.
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *InterconnectLocationList_Warning) Reset()         { *m = InterconnectLocationList_Warning{} }
func (m *InterconnectLocationList_Warning) String() string { return proto.CompactTextString(m) }
func (*InterconnectLocationList_Warning) ProtoMessage()    {}
func (*InterconnectLocationList_Warning) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{134, 0}
}

func (m *InterconnectLocationList_Warning) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *InterconnectLocationList_Warning) GetData() []*InterconnectLocationList_Warning_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *InterconnectLocationList_Warning) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// [Output Only] Metadata about this warning in key: value format. For
// example:
// "data": [ { "key": "scope", "value": "zones/us-east1-d" }
type InterconnectLocationList_Warning_Data struct {
	// [Output Only] A key that provides more detail on the warning being
	// returned. For example, for warnings where there are no results in a
	// list request for a particular zone, this key might be scope and the
	// key value might be the zone name. Other examples might be a key
	// indicating a deprecated resource and a suggested replacement, or a
	// warning about invalid network settings (for example, if an instance
	// attempts to perform IP forwarding but is not enabled for IP
	// forwarding).
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	// [Output Only] A warning data value corresponding to the key.
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *InterconnectLocationList_Warning_Data) Reset()         { *m = InterconnectLocationList_Warning_Data{} }
func (m *InterconnectLocationList_Warning_Data) String() string { return proto.CompactTextString(m) }
func (*InterconnectLocationList_Warning_Data) ProtoMessage()    {}
func (*InterconnectLocationList_Warning_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{134, 0, 0}
}

func (m *InterconnectLocationList_Warning_Data) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *InterconnectLocationList_Warning_Data) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

// Information about any potential InterconnectAttachments between an
// Interconnect at a specific InterconnectLocation, and a specific Cloud
// Region.
type InterconnectLocationRegionInfo struct {
	// Expected round-trip time in milliseconds, from this
	// InterconnectLocation to a VM in this region.
	ExpectedRttMs string `protobuf:"bytes,1,opt,name=expectedRttMs" json:"expectedRttMs,omitempty"`
	// Identifies the network presence of this location.
	// Valid values:
	//     LP_GLOBAL
	//     LP_LOCAL_REGION
	LocationPresence string `protobuf:"bytes,2,opt,name=locationPresence" json:"locationPresence,omitempty"`
	// URL for the region of this location.
	Region string `protobuf:"bytes,3,opt,name=region" json:"region,omitempty"`
	// Scope key for the region of this location.
	RegionKey string `protobuf:"bytes,4,opt,name=regionKey" json:"regionKey,omitempty"`
}

func (m *InterconnectLocationRegionInfo) Reset()         { *m = InterconnectLocationRegionInfo{} }
func (m *InterconnectLocationRegionInfo) String() string { return proto.CompactTextString(m) }
func (*InterconnectLocationRegionInfo) ProtoMessage()    {}
func (*InterconnectLocationRegionInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{135}
}

func (m *InterconnectLocationRegionInfo) GetExpectedRttMs() string {
	if m != nil {
		return m.ExpectedRttMs
	}
	return ""
}

func (m *InterconnectLocationRegionInfo) GetLocationPresence() string {
	if m != nil {
		return m.LocationPresence
	}
	return ""
}

func (m *InterconnectLocationRegionInfo) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *InterconnectLocationRegionInfo) GetRegionKey() string {
	if m != nil {
		return m.RegionKey
	}
	return ""
}

// Description of a planned outage on this Interconnect. Next id: 9
type InterconnectOutageNotification struct {
	// Iff issue_type is IT_PARTIAL_OUTAGE, a list of the Google-side
	// circuit IDs that will be affected.
	AffectedCircuits []string `protobuf:"bytes,1,rep,name=affectedCircuits" json:"affectedCircuits,omitempty"`
	// Short user-visible description of the purpose of the outage.
	Description string `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	EndTime     string `protobuf:"bytes,3,opt,name=endTime" json:"endTime,omitempty"`
	// Valid values:
	//     IT_OUTAGE
	//     IT_PARTIAL_OUTAGE
	IssueType string `protobuf:"bytes,4,opt,name=issueType" json:"issueType,omitempty"`
	// Unique identifier for this outage notification.
	Name string `protobuf:"bytes,5,opt,name=name" json:"name,omitempty"`
	// Valid values:
	//     NSRC_GOOGLE
	Source string `protobuf:"bytes,6,opt,name=source" json:"source,omitempty"`
	// Scheduled start and end times for the outage (milliseconds since Unix
	// epoch).
	StartTime string `protobuf:"bytes,7,opt,name=startTime" json:"startTime,omitempty"`
	// Valid values:
	//     NS_ACTIVE
	//     NS_CANCELED
	State string `protobuf:"bytes,8,opt,name=state" json:"state,omitempty"`
}

func (m *InterconnectOutageNotification) Reset()         { *m = InterconnectOutageNotification{} }
func (m *InterconnectOutageNotification) String() string { return proto.CompactTextString(m) }
func (*InterconnectOutageNotification) ProtoMessage()    {}
func (*InterconnectOutageNotification) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{136}
}

func (m *InterconnectOutageNotification) GetAffectedCircuits() []string {
	if m != nil {
		return m.AffectedCircuits
	}
	return nil
}

func (m *InterconnectOutageNotification) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *InterconnectOutageNotification) GetEndTime() string {
	if m != nil {
		return m.EndTime
	}
	return ""
}

func (m *InterconnectOutageNotification) GetIssueType() string {
	if m != nil {
		return m.IssueType
	}
	return ""
}

func (m *InterconnectOutageNotification) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *InterconnectOutageNotification) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *InterconnectOutageNotification) GetStartTime() string {
	if m != nil {
		return m.StartTime
	}
	return ""
}

func (m *InterconnectOutageNotification) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

// A license resource.
type License struct {
	// [Output Only] Deprecated. This field no longer reflects whether a
	// license charges a usage fee.
	ChargesUseFee bool `protobuf:"varint,1,opt,name=chargesUseFee" json:"chargesUseFee,omitempty"`
	// [Output Only] Type of resource. Always compute#license for licenses.
	Kind string `protobuf:"bytes,2,opt,name=kind" json:"kind,omitempty"`
	// [Output Only] Name of the resource. The name is 1-63 characters long
	// and complies with RFC1035.
	Name string `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	// [Output Only] Server-defined URL for the resource.
	SelfLink string `protobuf:"bytes,4,opt,name=selfLink" json:"selfLink,omitempty"`
}

func (m *License) Reset()                    { *m = License{} }
func (m *License) String() string            { return proto.CompactTextString(m) }
func (*License) ProtoMessage()               {}
func (*License) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{137} }

func (m *License) GetChargesUseFee() bool {
	if m != nil {
		return m.ChargesUseFee
	}
	return false
}

func (m *License) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *License) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *License) GetSelfLink() string {
	if m != nil {
		return m.SelfLink
	}
	return ""
}

// Specifies what kind of log the caller must write
type LogConfig struct {
	// Cloud audit options.
	CloudAudit *LogConfigCloudAuditOptions `protobuf:"bytes,1,opt,name=cloudAudit" json:"cloudAudit,omitempty"`
	// Counter options.
	Counter *LogConfigCounterOptions `protobuf:"bytes,2,opt,name=counter" json:"counter,omitempty"`
	// Data access options.
	DataAccess *LogConfigDataAccessOptions `protobuf:"bytes,3,opt,name=dataAccess" json:"dataAccess,omitempty"`
}

func (m *LogConfig) Reset()                    { *m = LogConfig{} }
func (m *LogConfig) String() string            { return proto.CompactTextString(m) }
func (*LogConfig) ProtoMessage()               {}
func (*LogConfig) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{138} }

func (m *LogConfig) GetCloudAudit() *LogConfigCloudAuditOptions {
	if m != nil {
		return m.CloudAudit
	}
	return nil
}

func (m *LogConfig) GetCounter() *LogConfigCounterOptions {
	if m != nil {
		return m.Counter
	}
	return nil
}

func (m *LogConfig) GetDataAccess() *LogConfigDataAccessOptions {
	if m != nil {
		return m.DataAccess
	}
	return nil
}

// Write a Cloud Audit log
type LogConfigCloudAuditOptions struct {
	// Information used by the Cloud Audit Logging pipeline.
	AuthorizationLoggingOptions *AuthorizationLoggingOptions `protobuf:"bytes,1,opt,name=authorizationLoggingOptions" json:"authorizationLoggingOptions,omitempty"`
	// The log_name to populate in the Cloud Audit Record.
	// Valid values:
	//     ADMIN_ACTIVITY
	//     DATA_ACCESS
	//     UNSPECIFIED_LOG_NAME
	LogName string `protobuf:"bytes,2,opt,name=logName" json:"logName,omitempty"`
}

func (m *LogConfigCloudAuditOptions) Reset()                    { *m = LogConfigCloudAuditOptions{} }
func (m *LogConfigCloudAuditOptions) String() string            { return proto.CompactTextString(m) }
func (*LogConfigCloudAuditOptions) ProtoMessage()               {}
func (*LogConfigCloudAuditOptions) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{139} }

func (m *LogConfigCloudAuditOptions) GetAuthorizationLoggingOptions() *AuthorizationLoggingOptions {
	if m != nil {
		return m.AuthorizationLoggingOptions
	}
	return nil
}

func (m *LogConfigCloudAuditOptions) GetLogName() string {
	if m != nil {
		return m.LogName
	}
	return ""
}

// Increment a streamz counter with the specified metric and field
// names.
//
// Metric names should start with a '/', generally be lowercase-only,
// and end in "_count". Field names should not contain an initial slash.
// The actual exported metric names will have "/iam/policy" prepended.
//
// Field names correspond to IAM request parameters and field values are
// their respective values.
//
// At present the only supported field names are - "iam_principal",
// corresponding to IAMContext.principal; - "" (empty string), resulting
// in one aggretated counter with no field.
//
// Examples: counter { metric: "/debug_access_count" field:
// "iam_principal" } ==> increment counter
// /iam/policy/backend_debug_access_count {iam_principal=[value of
// IAMContext.principal]}
//
// At this time we do not support: * multiple field names (though this
// may be supported in the future) * decrementing the counter *
// incrementing it by anything other than 1
type LogConfigCounterOptions struct {
	// The field value to attribute.
	Field string `protobuf:"bytes,1,opt,name=field" json:"field,omitempty"`
	// The metric to update.
	Metric string `protobuf:"bytes,2,opt,name=metric" json:"metric,omitempty"`
}

func (m *LogConfigCounterOptions) Reset()                    { *m = LogConfigCounterOptions{} }
func (m *LogConfigCounterOptions) String() string            { return proto.CompactTextString(m) }
func (*LogConfigCounterOptions) ProtoMessage()               {}
func (*LogConfigCounterOptions) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{140} }

func (m *LogConfigCounterOptions) GetField() string {
	if m != nil {
		return m.Field
	}
	return ""
}

func (m *LogConfigCounterOptions) GetMetric() string {
	if m != nil {
		return m.Metric
	}
	return ""
}

// Write a Data Access (Gin) log
type LogConfigDataAccessOptions struct {
	// Whether Gin logging should happen in a fail-closed manner at the
	// caller. This is relevant only in the LocalIAM implementation, for
	// now.
	// Valid values:
	//     LOG_FAIL_CLOSED
	//     LOG_MODE_UNSPECIFIED
	LogMode string `protobuf:"bytes,1,opt,name=logMode" json:"logMode,omitempty"`
}

func (m *LogConfigDataAccessOptions) Reset()                    { *m = LogConfigDataAccessOptions{} }
func (m *LogConfigDataAccessOptions) String() string            { return proto.CompactTextString(m) }
func (*LogConfigDataAccessOptions) ProtoMessage()               {}
func (*LogConfigDataAccessOptions) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{141} }

func (m *LogConfigDataAccessOptions) GetLogMode() string {
	if m != nil {
		return m.LogMode
	}
	return ""
}

// A Machine Type resource.
type MachineType struct {
	// [Output Only] Creation timestamp in RFC3339 text format.
	CreationTimestamp string `protobuf:"bytes,1,opt,name=creationTimestamp" json:"creationTimestamp,omitempty"`
	// [Output Only] The deprecation status associated with this machine
	// type.
	Deprecated *DeprecationStatus `protobuf:"bytes,2,opt,name=deprecated" json:"deprecated,omitempty"`
	// [Output Only] An optional textual description of the resource.
	Description string `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	// [Output Only] The number of virtual CPUs that are available to the
	// instance.
	GuestCpus int32 `protobuf:"varint,4,opt,name=guestCpus" json:"guestCpus,omitempty"`
	// [Output Only] The unique identifier for the resource. This identifier
	// is defined by the server.
	Id string `protobuf:"bytes,5,opt,name=id" json:"id,omitempty"`
	// [Output Only] Whether this machine type has a shared CPU. See
	// Shared-core machine types for more information.
	IsSharedCpu bool `protobuf:"varint,6,opt,name=isSharedCpu" json:"isSharedCpu,omitempty"`
	// [Output Only] The type of the resource. Always compute#machineType
	// for machine types.
	Kind string `protobuf:"bytes,7,opt,name=kind" json:"kind,omitempty"`
	// [Output Only] Maximum persistent disks allowed.
	MaximumPersistentDisks int32 `protobuf:"varint,8,opt,name=maximumPersistentDisks" json:"maximumPersistentDisks,omitempty"`
	// [Output Only] Maximum total persistent disks size (GB) allowed.
	MaximumPersistentDisksSizeGb string `protobuf:"bytes,9,opt,name=maximumPersistentDisksSizeGb" json:"maximumPersistentDisksSizeGb,omitempty"`
	// [Output Only] The amount of physical memory available to the
	// instance, defined in MB.
	MemoryMb int32 `protobuf:"varint,10,opt,name=memoryMb" json:"memoryMb,omitempty"`
	// [Output Only] Name of the resource.
	Name string `protobuf:"bytes,11,opt,name=name" json:"name,omitempty"`
	// [Output Only] Server-defined URL for the resource.
	SelfLink string `protobuf:"bytes,12,opt,name=selfLink" json:"selfLink,omitempty"`
	// [Output Only] The name of the zone where the machine type resides,
	// such as us-central1-a.
	Zone string `protobuf:"bytes,13,opt,name=zone" json:"zone,omitempty"`
}

func (m *MachineType) Reset()                    { *m = MachineType{} }
func (m *MachineType) String() string            { return proto.CompactTextString(m) }
func (*MachineType) ProtoMessage()               {}
func (*MachineType) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{142} }

func (m *MachineType) GetCreationTimestamp() string {
	if m != nil {
		return m.CreationTimestamp
	}
	return ""
}

func (m *MachineType) GetDeprecated() *DeprecationStatus {
	if m != nil {
		return m.Deprecated
	}
	return nil
}

func (m *MachineType) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *MachineType) GetGuestCpus() int32 {
	if m != nil {
		return m.GuestCpus
	}
	return 0
}

func (m *MachineType) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *MachineType) GetIsSharedCpu() bool {
	if m != nil {
		return m.IsSharedCpu
	}
	return false
}

func (m *MachineType) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *MachineType) GetMaximumPersistentDisks() int32 {
	if m != nil {
		return m.MaximumPersistentDisks
	}
	return 0
}

func (m *MachineType) GetMaximumPersistentDisksSizeGb() string {
	if m != nil {
		return m.MaximumPersistentDisksSizeGb
	}
	return ""
}

func (m *MachineType) GetMemoryMb() int32 {
	if m != nil {
		return m.MemoryMb
	}
	return 0
}

func (m *MachineType) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MachineType) GetSelfLink() string {
	if m != nil {
		return m.SelfLink
	}
	return ""
}

func (m *MachineType) GetZone() string {
	if m != nil {
		return m.Zone
	}
	return ""
}

type MachineTypeAggregatedList struct {
	// [Output Only] Unique identifier for the resource; defined by the
	// server.
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// A list of MachineTypesScopedList resources.
	Items map[string]*MachineTypesScopedList `protobuf:"bytes,2,rep,name=items" json:"items,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// [Output Only] Type of resource. Always
	// compute#machineTypeAggregatedList for aggregated lists of machine
	// types.
	Kind string `protobuf:"bytes,3,opt,name=kind" json:"kind,omitempty"`
	// [Output Only] This token allows you to get the next page of results
	// for list requests. If the number of results is larger than
	// maxResults, use the nextPageToken as a value for the query parameter
	// pageToken in the next list request. Subsequent list requests will
	// have their own nextPageToken to continue paging through the results.
	NextPageToken string `protobuf:"bytes,4,opt,name=nextPageToken" json:"nextPageToken,omitempty"`
	// [Output Only] Server-defined URL for this resource.
	SelfLink string                             `protobuf:"bytes,5,opt,name=selfLink" json:"selfLink,omitempty"`
	Warning  *MachineTypeAggregatedList_Warning `protobuf:"bytes,6,opt,name=warning" json:"warning,omitempty"`
}

func (m *MachineTypeAggregatedList) Reset()                    { *m = MachineTypeAggregatedList{} }
func (m *MachineTypeAggregatedList) String() string            { return proto.CompactTextString(m) }
func (*MachineTypeAggregatedList) ProtoMessage()               {}
func (*MachineTypeAggregatedList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{143} }

func (m *MachineTypeAggregatedList) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *MachineTypeAggregatedList) GetItems() map[string]*MachineTypesScopedList {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *MachineTypeAggregatedList) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *MachineTypeAggregatedList) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

func (m *MachineTypeAggregatedList) GetSelfLink() string {
	if m != nil {
		return m.SelfLink
	}
	return ""
}

func (m *MachineTypeAggregatedList) GetWarning() *MachineTypeAggregatedList_Warning {
	if m != nil {
		return m.Warning
	}
	return nil
}

// [Output Only] Informational warning message.
// [Output Only] Informational warning message.
type MachineTypeAggregatedList_Warning struct {
	// [Output Only] A warning code, if applicable. For example, Compute
	// Engine returns NO_RESULTS_ON_PAGE if there are no results in the
	// response.
	// Valid values:
	//     CLEANUP_FAILED
	//     DEPRECATED_RESOURCE_USED
	//     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
	//     FIELD_VALUE_OVERRIDEN
	//     INJECTED_KERNELS_DEPRECATED
	//     NEXT_HOP_ADDRESS_NOT_ASSIGNED
	//     NEXT_HOP_CANNOT_IP_FORWARD
	//     NEXT_HOP_INSTANCE_NOT_FOUND
	//     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
	//     NEXT_HOP_NOT_RUNNING
	//     NOT_CRITICAL_ERROR
	//     NO_RESULTS_ON_PAGE
	//     REQUIRED_TOS_AGREEMENT
	//     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
	//     RESOURCE_NOT_DELETED
	//     SINGLE_INSTANCE_PROPERTY_TEMPLATE
	//     UNREACHABLE
	Code string                                    `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Data []*MachineTypeAggregatedList_Warning_Data `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
	// [Output Only] A human-readable description of the warning code.
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *MachineTypeAggregatedList_Warning) Reset()         { *m = MachineTypeAggregatedList_Warning{} }
func (m *MachineTypeAggregatedList_Warning) String() string { return proto.CompactTextString(m) }
func (*MachineTypeAggregatedList_Warning) ProtoMessage()    {}
func (*MachineTypeAggregatedList_Warning) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{143, 1}
}

func (m *MachineTypeAggregatedList_Warning) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *MachineTypeAggregatedList_Warning) GetData() []*MachineTypeAggregatedList_Warning_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *MachineTypeAggregatedList_Warning) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// [Output Only] Metadata about this warning in key: value format. For
// example:
// "data": [ { "key": "scope", "value": "zones/us-east1-d" }
type MachineTypeAggregatedList_Warning_Data struct {
	// [Output Only] A key that provides more detail on the warning being
	// returned. For example, for warnings where there are no results in a
	// list request for a particular zone, this key might be scope and the
	// key value might be the zone name. Other examples might be a key
	// indicating a deprecated resource and a suggested replacement, or a
	// warning about invalid network settings (for example, if an instance
	// attempts to perform IP forwarding but is not enabled for IP
	// forwarding).
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	// [Output Only] A warning data value corresponding to the key.
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *MachineTypeAggregatedList_Warning_Data) Reset() {
	*m = MachineTypeAggregatedList_Warning_Data{}
}
func (m *MachineTypeAggregatedList_Warning_Data) String() string { return proto.CompactTextString(m) }
func (*MachineTypeAggregatedList_Warning_Data) ProtoMessage()    {}
func (*MachineTypeAggregatedList_Warning_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{143, 1, 0}
}

func (m *MachineTypeAggregatedList_Warning_Data) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *MachineTypeAggregatedList_Warning_Data) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

// Contains a list of machine types.
type MachineTypeList struct {
	// [Output Only] Unique identifier for the resource; defined by the
	// server.
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// A list of MachineType resources.
	Items []*MachineType `protobuf:"bytes,2,rep,name=items" json:"items,omitempty"`
	// [Output Only] Type of resource. Always compute#machineTypeList for
	// lists of machine types.
	Kind string `protobuf:"bytes,3,opt,name=kind" json:"kind,omitempty"`
	// [Output Only] This token allows you to get the next page of results
	// for list requests. If the number of results is larger than
	// maxResults, use the nextPageToken as a value for the query parameter
	// pageToken in the next list request. Subsequent list requests will
	// have their own nextPageToken to continue paging through the results.
	NextPageToken string `protobuf:"bytes,4,opt,name=nextPageToken" json:"nextPageToken,omitempty"`
	// [Output Only] Server-defined URL for this resource.
	SelfLink string                   `protobuf:"bytes,5,opt,name=selfLink" json:"selfLink,omitempty"`
	Warning  *MachineTypeList_Warning `protobuf:"bytes,6,opt,name=warning" json:"warning,omitempty"`
}

func (m *MachineTypeList) Reset()                    { *m = MachineTypeList{} }
func (m *MachineTypeList) String() string            { return proto.CompactTextString(m) }
func (*MachineTypeList) ProtoMessage()               {}
func (*MachineTypeList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{144} }

func (m *MachineTypeList) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *MachineTypeList) GetItems() []*MachineType {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *MachineTypeList) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *MachineTypeList) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

func (m *MachineTypeList) GetSelfLink() string {
	if m != nil {
		return m.SelfLink
	}
	return ""
}

func (m *MachineTypeList) GetWarning() *MachineTypeList_Warning {
	if m != nil {
		return m.Warning
	}
	return nil
}

// [Output Only] Informational warning message.
// [Output Only] Informational warning message.
type MachineTypeList_Warning struct {
	// [Output Only] A warning code, if applicable. For example, Compute
	// Engine returns NO_RESULTS_ON_PAGE if there are no results in the
	// response.
	// Valid values:
	//     CLEANUP_FAILED
	//     DEPRECATED_RESOURCE_USED
	//     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
	//     FIELD_VALUE_OVERRIDEN
	//     INJECTED_KERNELS_DEPRECATED
	//     NEXT_HOP_ADDRESS_NOT_ASSIGNED
	//     NEXT_HOP_CANNOT_IP_FORWARD
	//     NEXT_HOP_INSTANCE_NOT_FOUND
	//     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
	//     NEXT_HOP_NOT_RUNNING
	//     NOT_CRITICAL_ERROR
	//     NO_RESULTS_ON_PAGE
	//     REQUIRED_TOS_AGREEMENT
	//     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
	//     RESOURCE_NOT_DELETED
	//     SINGLE_INSTANCE_PROPERTY_TEMPLATE
	//     UNREACHABLE
	Code string                          `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Data []*MachineTypeList_Warning_Data `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
	// [Output Only] A human-readable description of the warning code.
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *MachineTypeList_Warning) Reset()                    { *m = MachineTypeList_Warning{} }
func (m *MachineTypeList_Warning) String() string            { return proto.CompactTextString(m) }
func (*MachineTypeList_Warning) ProtoMessage()               {}
func (*MachineTypeList_Warning) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{144, 0} }

func (m *MachineTypeList_Warning) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *MachineTypeList_Warning) GetData() []*MachineTypeList_Warning_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *MachineTypeList_Warning) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// [Output Only] Metadata about this warning in key: value format. For
// example:
// "data": [ { "key": "scope", "value": "zones/us-east1-d" }
type MachineTypeList_Warning_Data struct {
	// [Output Only] A key that provides more detail on the warning being
	// returned. For example, for warnings where there are no results in a
	// list request for a particular zone, this key might be scope and the
	// key value might be the zone name. Other examples might be a key
	// indicating a deprecated resource and a suggested replacement, or a
	// warning about invalid network settings (for example, if an instance
	// attempts to perform IP forwarding but is not enabled for IP
	// forwarding).
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	// [Output Only] A warning data value corresponding to the key.
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *MachineTypeList_Warning_Data) Reset()         { *m = MachineTypeList_Warning_Data{} }
func (m *MachineTypeList_Warning_Data) String() string { return proto.CompactTextString(m) }
func (*MachineTypeList_Warning_Data) ProtoMessage()    {}
func (*MachineTypeList_Warning_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{144, 0, 0}
}

func (m *MachineTypeList_Warning_Data) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *MachineTypeList_Warning_Data) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type MachineTypesScopedList struct {
	// [Output Only] List of machine types contained in this scope.
	MachineTypes []*MachineType                  `protobuf:"bytes,1,rep,name=machineTypes" json:"machineTypes,omitempty"`
	Warning      *MachineTypesScopedList_Warning `protobuf:"bytes,2,opt,name=warning" json:"warning,omitempty"`
}

func (m *MachineTypesScopedList) Reset()                    { *m = MachineTypesScopedList{} }
func (m *MachineTypesScopedList) String() string            { return proto.CompactTextString(m) }
func (*MachineTypesScopedList) ProtoMessage()               {}
func (*MachineTypesScopedList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{145} }

func (m *MachineTypesScopedList) GetMachineTypes() []*MachineType {
	if m != nil {
		return m.MachineTypes
	}
	return nil
}

func (m *MachineTypesScopedList) GetWarning() *MachineTypesScopedList_Warning {
	if m != nil {
		return m.Warning
	}
	return nil
}

// [Output Only] An informational warning that appears when the machine
// types list is empty.
// [Output Only] An informational warning that appears when the machine
// types list is empty.
type MachineTypesScopedList_Warning struct {
	// [Output Only] A warning code, if applicable. For example, Compute
	// Engine returns NO_RESULTS_ON_PAGE if there are no results in the
	// response.
	// Valid values:
	//     CLEANUP_FAILED
	//     DEPRECATED_RESOURCE_USED
	//     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
	//     FIELD_VALUE_OVERRIDEN
	//     INJECTED_KERNELS_DEPRECATED
	//     NEXT_HOP_ADDRESS_NOT_ASSIGNED
	//     NEXT_HOP_CANNOT_IP_FORWARD
	//     NEXT_HOP_INSTANCE_NOT_FOUND
	//     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
	//     NEXT_HOP_NOT_RUNNING
	//     NOT_CRITICAL_ERROR
	//     NO_RESULTS_ON_PAGE
	//     REQUIRED_TOS_AGREEMENT
	//     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
	//     RESOURCE_NOT_DELETED
	//     SINGLE_INSTANCE_PROPERTY_TEMPLATE
	//     UNREACHABLE
	Code string                                 `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Data []*MachineTypesScopedList_Warning_Data `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
	// [Output Only] A human-readable description of the warning code.
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *MachineTypesScopedList_Warning) Reset()         { *m = MachineTypesScopedList_Warning{} }
func (m *MachineTypesScopedList_Warning) String() string { return proto.CompactTextString(m) }
func (*MachineTypesScopedList_Warning) ProtoMessage()    {}
func (*MachineTypesScopedList_Warning) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{145, 0}
}

func (m *MachineTypesScopedList_Warning) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *MachineTypesScopedList_Warning) GetData() []*MachineTypesScopedList_Warning_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *MachineTypesScopedList_Warning) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// [Output Only] Metadata about this warning in key: value format. For
// example:
// "data": [ { "key": "scope", "value": "zones/us-east1-d" }
type MachineTypesScopedList_Warning_Data struct {
	// [Output Only] A key that provides more detail on the warning being
	// returned. For example, for warnings where there are no results in a
	// list request for a particular zone, this key might be scope and the
	// key value might be the zone name. Other examples might be a key
	// indicating a deprecated resource and a suggested replacement, or a
	// warning about invalid network settings (for example, if an instance
	// attempts to perform IP forwarding but is not enabled for IP
	// forwarding).
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	// [Output Only] A warning data value corresponding to the key.
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *MachineTypesScopedList_Warning_Data) Reset()         { *m = MachineTypesScopedList_Warning_Data{} }
func (m *MachineTypesScopedList_Warning_Data) String() string { return proto.CompactTextString(m) }
func (*MachineTypesScopedList_Warning_Data) ProtoMessage()    {}
func (*MachineTypesScopedList_Warning_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{145, 0, 0}
}

func (m *MachineTypesScopedList_Warning_Data) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *MachineTypesScopedList_Warning_Data) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type ManagedInstance struct {
	// [Output Only] The current action that the managed instance group has
	// scheduled for the instance. Possible values:
	// - NONE The instance is running, and the managed instance group does
	// not have any scheduled actions for this instance.
	// - CREATING The managed instance group is creating this instance. If
	// the group fails to create this instance, it will try again until it
	// is successful.
	// - CREATING_WITHOUT_RETRIES The managed instance group is attempting
	// to create this instance only once. If the group fails to create this
	// instance, it does not try again and the group's targetSize value is
	// decreased instead.
	// - RECREATING The managed instance group is recreating this instance.
	// - DELETING The managed instance group is permanently deleting this
	// instance.
	// - ABANDONING The managed instance group is abandoning this instance.
	// The instance will be removed from the instance group and from any
	// target pools that are associated with this group.
	// - RESTARTING The managed instance group is restarting the instance.
	// - REFRESHING The managed instance group is applying configuration
	// changes to the instance without stopping it. For example, the group
	// can update the target pool list for an instance without stopping that
	// instance.
	// Valid values:
	//     ABANDONING
	//     CREATING
	//     CREATING_WITHOUT_RETRIES
	//     DELETING
	//     NONE
	//     RECREATING
	//     REFRESHING
	//     RESTARTING
	//     VERIFYING
	CurrentAction string `protobuf:"bytes,1,opt,name=currentAction" json:"currentAction,omitempty"`
	// [Output only] The unique identifier for this resource. This field is
	// empty when instance does not exist.
	Id string `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	// [Output Only] The URL of the instance. The URL can exist even if the
	// instance has not yet been created.
	Instance string `protobuf:"bytes,3,opt,name=instance" json:"instance,omitempty"`
	// [Output Only] The status of the instance. This field is empty when
	// the instance does not exist.
	// Valid values:
	//     PROVISIONING
	//     RUNNING
	//     STAGING
	//     STOPPED
	//     STOPPING
	//     SUSPENDED
	//     SUSPENDING
	//     TERMINATED
	InstanceStatus string `protobuf:"bytes,4,opt,name=instanceStatus" json:"instanceStatus,omitempty"`
	// [Output Only] Information about the last attempt to create or delete
	// the instance.
	LastAttempt *ManagedInstanceLastAttempt `protobuf:"bytes,5,opt,name=lastAttempt" json:"lastAttempt,omitempty"`
	// [Output Only] Intended version of this instance.
	Version *ManagedInstanceVersion `protobuf:"bytes,6,opt,name=version" json:"version,omitempty"`
}

func (m *ManagedInstance) Reset()                    { *m = ManagedInstance{} }
func (m *ManagedInstance) String() string            { return proto.CompactTextString(m) }
func (*ManagedInstance) ProtoMessage()               {}
func (*ManagedInstance) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{146} }

func (m *ManagedInstance) GetCurrentAction() string {
	if m != nil {
		return m.CurrentAction
	}
	return ""
}

func (m *ManagedInstance) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ManagedInstance) GetInstance() string {
	if m != nil {
		return m.Instance
	}
	return ""
}

func (m *ManagedInstance) GetInstanceStatus() string {
	if m != nil {
		return m.InstanceStatus
	}
	return ""
}

func (m *ManagedInstance) GetLastAttempt() *ManagedInstanceLastAttempt {
	if m != nil {
		return m.LastAttempt
	}
	return nil
}

func (m *ManagedInstance) GetVersion() *ManagedInstanceVersion {
	if m != nil {
		return m.Version
	}
	return nil
}

type ManagedInstanceLastAttempt struct {
	Errors *ManagedInstanceLastAttempt_Errors `protobuf:"bytes,1,opt,name=errors" json:"errors,omitempty"`
}

func (m *ManagedInstanceLastAttempt) Reset()                    { *m = ManagedInstanceLastAttempt{} }
func (m *ManagedInstanceLastAttempt) String() string            { return proto.CompactTextString(m) }
func (*ManagedInstanceLastAttempt) ProtoMessage()               {}
func (*ManagedInstanceLastAttempt) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{147} }

func (m *ManagedInstanceLastAttempt) GetErrors() *ManagedInstanceLastAttempt_Errors {
	if m != nil {
		return m.Errors
	}
	return nil
}

// [Output Only] Encountered errors during the last attempt to create or
// delete the instance.
// [Output Only] Encountered errors during the last attempt to create or
// delete the instance.
type ManagedInstanceLastAttempt_Errors struct {
	Errors []*ManagedInstanceLastAttempt_Errors_Errors `protobuf:"bytes,1,rep,name=errors" json:"errors,omitempty"`
}

func (m *ManagedInstanceLastAttempt_Errors) Reset()         { *m = ManagedInstanceLastAttempt_Errors{} }
func (m *ManagedInstanceLastAttempt_Errors) String() string { return proto.CompactTextString(m) }
func (*ManagedInstanceLastAttempt_Errors) ProtoMessage()    {}
func (*ManagedInstanceLastAttempt_Errors) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{147, 0}
}

func (m *ManagedInstanceLastAttempt_Errors) GetErrors() []*ManagedInstanceLastAttempt_Errors_Errors {
	if m != nil {
		return m.Errors
	}
	return nil
}

// [Output Only] The array of errors encountered while processing this
// operation.
type ManagedInstanceLastAttempt_Errors_Errors struct {
	// [Output Only] The error type identifier for this error.
	Code string `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	// [Output Only] Indicates the field in the request that caused the
	// error. This property is optional.
	Location string `protobuf:"bytes,2,opt,name=location" json:"location,omitempty"`
	// [Output Only] An optional, human-readable error message.
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *ManagedInstanceLastAttempt_Errors_Errors) Reset() {
	*m = ManagedInstanceLastAttempt_Errors_Errors{}
}
func (m *ManagedInstanceLastAttempt_Errors_Errors) String() string { return proto.CompactTextString(m) }
func (*ManagedInstanceLastAttempt_Errors_Errors) ProtoMessage()    {}
func (*ManagedInstanceLastAttempt_Errors_Errors) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{147, 0, 0}
}

func (m *ManagedInstanceLastAttempt_Errors_Errors) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *ManagedInstanceLastAttempt_Errors_Errors) GetLocation() string {
	if m != nil {
		return m.Location
	}
	return ""
}

func (m *ManagedInstanceLastAttempt_Errors_Errors) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type ManagedInstanceVersion struct {
	// [Output Only] The intended template of the instance. This field is
	// empty when current_action is one of { DELETING, ABANDONING }.
	InstanceTemplate string `protobuf:"bytes,1,opt,name=instanceTemplate" json:"instanceTemplate,omitempty"`
	// [Output Only] Name of the version.
	Name string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (m *ManagedInstanceVersion) Reset()                    { *m = ManagedInstanceVersion{} }
func (m *ManagedInstanceVersion) String() string            { return proto.CompactTextString(m) }
func (*ManagedInstanceVersion) ProtoMessage()               {}
func (*ManagedInstanceVersion) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{148} }

func (m *ManagedInstanceVersion) GetInstanceTemplate() string {
	if m != nil {
		return m.InstanceTemplate
	}
	return ""
}

func (m *ManagedInstanceVersion) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// A metadata key/value entry.
type Metadata struct {
	// Specifies a fingerprint for this request, which is essentially a hash
	// of the metadata's contents and used for optimistic locking. The
	// fingerprint is initially generated by Compute Engine and changes
	// after every request to modify or update metadata. You must always
	// provide an up-to-date fingerprint hash in order to update or change
	// metadata.
	Fingerprint string            `protobuf:"bytes,1,opt,name=fingerprint" json:"fingerprint,omitempty"`
	Items       []*Metadata_Items `protobuf:"bytes,2,rep,name=items" json:"items,omitempty"`
	// [Output Only] Type of the resource. Always compute#metadata for
	// metadata.
	Kind string `protobuf:"bytes,3,opt,name=kind" json:"kind,omitempty"`
}

func (m *Metadata) Reset()                    { *m = Metadata{} }
func (m *Metadata) String() string            { return proto.CompactTextString(m) }
func (*Metadata) ProtoMessage()               {}
func (*Metadata) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{149} }

func (m *Metadata) GetFingerprint() string {
	if m != nil {
		return m.Fingerprint
	}
	return ""
}

func (m *Metadata) GetItems() []*Metadata_Items {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *Metadata) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

// Array of key/value pairs. The total size of all keys and values must
// be less than 512 KB.
type Metadata_Items struct {
	// Key for the metadata entry. Keys must conform to the following
	// regexp: [a-zA-Z0-9-_]+, and be less than 128 bytes in length. This is
	// reflected as part of a URL in the metadata server. Additionally, to
	// avoid ambiguity, keys must not conflict with any other metadata keys
	// for the project.
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	// Value for the metadata entry. These are free-form strings, and only
	// have meaning as interpreted by the image running in the instance. The
	// only restriction placed on values is that their size must be less
	// than or equal to 262144 bytes (256 KiB).
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *Metadata_Items) Reset()                    { *m = Metadata_Items{} }
func (m *Metadata_Items) String() string            { return proto.CompactTextString(m) }
func (*Metadata_Items) ProtoMessage()               {}
func (*Metadata_Items) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{149, 0} }

func (m *Metadata_Items) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Metadata_Items) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

// The named port. For example: .
type NamedPort struct {
	// The name for this named port. The name must be 1-63 characters long,
	// and comply with RFC1035.
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// The port number, which can be a value between 1 and 65535.
	Port int32 `protobuf:"varint,2,opt,name=port" json:"port,omitempty"`
}

func (m *NamedPort) Reset()                    { *m = NamedPort{} }
func (m *NamedPort) String() string            { return proto.CompactTextString(m) }
func (*NamedPort) ProtoMessage()               {}
func (*NamedPort) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{150} }

func (m *NamedPort) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *NamedPort) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

// Represents a Network resource. Read Networks and Firewalls for more
// information.
type Network struct {
	// The range of internal addresses that are legal on this network. This
	// range is a CIDR specification, for example: 192.168.0.0/16. Provided
	// by the client when the network is created.
	IPv4Range string `protobuf:"bytes,1,opt,name=IPv4Range" json:"IPv4Range,omitempty"`
	// When set to true, the network is created in "auto subnet mode". When
	// set to false, the network is in "custom subnet mode".
	//
	// In "auto subnet mode", a newly created network is assigned the
	// default CIDR of 10.128.0.0/9 and it automatically creates one
	// subnetwork per region.
	AutoCreateSubnetworks bool `protobuf:"varint,2,opt,name=autoCreateSubnetworks" json:"autoCreateSubnetworks,omitempty"`
	// [Output Only] Creation timestamp in RFC3339 text format.
	CreationTimestamp string `protobuf:"bytes,3,opt,name=creationTimestamp" json:"creationTimestamp,omitempty"`
	// An optional description of this resource. Provide this property when
	// you create the resource.
	Description string `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	// A gateway address for default routing to other networks. This value
	// is read only and is selected by the Google Compute Engine, typically
	// as the first usable address in the IPv4Range.
	GatewayIPv4 string `protobuf:"bytes,5,opt,name=gatewayIPv4" json:"gatewayIPv4,omitempty"`
	// [Output Only] The unique identifier for the resource. This identifier
	// is defined by the server.
	Id string `protobuf:"bytes,6,opt,name=id" json:"id,omitempty"`
	// [Output Only] Type of the resource. Always compute#network for
	// networks.
	Kind string `protobuf:"bytes,7,opt,name=kind" json:"kind,omitempty"`
	// Name of the resource. Provided by the client when the resource is
	// created. The name must be 1-63 characters long, and comply with
	// RFC1035. Specifically, the name must be 1-63 characters long and
	// match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means
	// the first character must be a lowercase letter, and all following
	// characters must be a dash, lowercase letter, or digit, except the
	// last character, which cannot be a dash.
	Name string `protobuf:"bytes,8,opt,name=name" json:"name,omitempty"`
	// [Output Only] List of network peerings for the resource.
	Peerings []*NetworkPeering `protobuf:"bytes,9,rep,name=peerings" json:"peerings,omitempty"`
	// The network-level routing configuration for this network. Used by
	// Cloud Router to determine what type of network-wide routing behavior
	// to enforce.
	RoutingConfig *NetworkRoutingConfig `protobuf:"bytes,10,opt,name=routingConfig" json:"routingConfig,omitempty"`
	// [Output Only] Server-defined URL for the resource.
	SelfLink string `protobuf:"bytes,11,opt,name=selfLink" json:"selfLink,omitempty"`
	// [Output Only] Server-defined fully-qualified URLs for all subnetworks
	// in this network.
	Subnetworks []string `protobuf:"bytes,12,rep,name=subnetworks" json:"subnetworks,omitempty"`
}

func (m *Network) Reset()                    { *m = Network{} }
func (m *Network) String() string            { return proto.CompactTextString(m) }
func (*Network) ProtoMessage()               {}
func (*Network) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{151} }

func (m *Network) GetIPv4Range() string {
	if m != nil {
		return m.IPv4Range
	}
	return ""
}

func (m *Network) GetAutoCreateSubnetworks() bool {
	if m != nil {
		return m.AutoCreateSubnetworks
	}
	return false
}

func (m *Network) GetCreationTimestamp() string {
	if m != nil {
		return m.CreationTimestamp
	}
	return ""
}

func (m *Network) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Network) GetGatewayIPv4() string {
	if m != nil {
		return m.GatewayIPv4
	}
	return ""
}

func (m *Network) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Network) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *Network) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Network) GetPeerings() []*NetworkPeering {
	if m != nil {
		return m.Peerings
	}
	return nil
}

func (m *Network) GetRoutingConfig() *NetworkRoutingConfig {
	if m != nil {
		return m.RoutingConfig
	}
	return nil
}

func (m *Network) GetSelfLink() string {
	if m != nil {
		return m.SelfLink
	}
	return ""
}

func (m *Network) GetSubnetworks() []string {
	if m != nil {
		return m.Subnetworks
	}
	return nil
}

// A network interface resource attached to an instance.
type NetworkInterface struct {
	// An array of configurations for this interface. Currently, only one
	// access config, ONE_TO_ONE_NAT, is supported. If there are no
	// accessConfigs specified, then this instance will have no external
	// internet access.
	AccessConfigs []*AccessConfig `protobuf:"bytes,1,rep,name=accessConfigs" json:"accessConfigs,omitempty"`
	// An array of alias IP ranges for this network interface. Can only be
	// specified for network interfaces on subnet-mode networks.
	AliasIpRanges []*AliasIpRange `protobuf:"bytes,2,rep,name=aliasIpRanges" json:"aliasIpRanges,omitempty"`
	// Fingerprint hash of contents stored in this network interface. This
	// field will be ignored when inserting an Instance or adding a
	// NetworkInterface. An up-to-date fingerprint must be provided in order
	// to update the NetworkInterface.
	Fingerprint string `protobuf:"bytes,3,opt,name=fingerprint" json:"fingerprint,omitempty"`
	// [Output Only] Type of the resource. Always compute#networkInterface
	// for network interfaces.
	Kind string `protobuf:"bytes,4,opt,name=kind" json:"kind,omitempty"`
	// [Output Only] The name of the network interface, generated by the
	// server. For network devices, these are eth0, eth1, etc.
	Name string `protobuf:"bytes,5,opt,name=name" json:"name,omitempty"`
	// URL of the network resource for this instance. When creating an
	// instance, if neither the network nor the subnetwork is specified, the
	// default network global/networks/default is used; if the network is
	// not specified but the subnetwork is specified, the network is
	// inferred.
	//
	// This field is optional when creating a firewall rule. If not
	// specified when creating a firewall rule, the default network
	// global/networks/default is used.
	//
	// If you specify this property, you can specify the network as a full
	// or partial URL. For example, the following are all valid URLs:
	// -
	// https://www.googleapis.com/compute/v1/projects/project/global/networks/network
	// - projects/project/global/networks/network
	// - global/networks/default
	Network string `protobuf:"bytes,6,opt,name=network" json:"network,omitempty"`
	// An IPv4 internal network address to assign to the instance for this
	// network interface. If not specified by the user, an unused internal
	// IP is assigned by the system.
	NetworkIP string `protobuf:"bytes,7,opt,name=networkIP" json:"networkIP,omitempty"`
	// The URL of the Subnetwork resource for this instance. If the network
	// resource is in legacy mode, do not provide this property. If the
	// network is in auto subnet mode, providing the subnetwork is optional.
	// If the network is in custom subnet mode, then this field should be
	// specified. If you specify this property, you can specify the
	// subnetwork as a full or partial URL. For example, the following are
	// all valid URLs:
	// -
	// https://www.googleapis.com/compute/v1/projects/project/regions/region/subnetworks/subnetwork
	// - regions/region/subnetworks/subnetwork
	Subnetwork string `protobuf:"bytes,8,opt,name=subnetwork" json:"subnetwork,omitempty"`
}

func (m *NetworkInterface) Reset()                    { *m = NetworkInterface{} }
func (m *NetworkInterface) String() string            { return proto.CompactTextString(m) }
func (*NetworkInterface) ProtoMessage()               {}
func (*NetworkInterface) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{152} }

func (m *NetworkInterface) GetAccessConfigs() []*AccessConfig {
	if m != nil {
		return m.AccessConfigs
	}
	return nil
}

func (m *NetworkInterface) GetAliasIpRanges() []*AliasIpRange {
	if m != nil {
		return m.AliasIpRanges
	}
	return nil
}

func (m *NetworkInterface) GetFingerprint() string {
	if m != nil {
		return m.Fingerprint
	}
	return ""
}

func (m *NetworkInterface) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *NetworkInterface) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *NetworkInterface) GetNetwork() string {
	if m != nil {
		return m.Network
	}
	return ""
}

func (m *NetworkInterface) GetNetworkIP() string {
	if m != nil {
		return m.NetworkIP
	}
	return ""
}

func (m *NetworkInterface) GetSubnetwork() string {
	if m != nil {
		return m.Subnetwork
	}
	return ""
}

// Contains a list of networks.
type NetworkList struct {
	// [Output Only] Unique identifier for the resource; defined by the
	// server.
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// A list of Network resources.
	Items []*Network `protobuf:"bytes,2,rep,name=items" json:"items,omitempty"`
	// [Output Only] Type of resource. Always compute#networkList for lists
	// of networks.
	Kind string `protobuf:"bytes,3,opt,name=kind" json:"kind,omitempty"`
	// [Output Only] This token allows you to get the next page of results
	// for list requests. If the number of results is larger than
	// maxResults, use the nextPageToken as a value for the query parameter
	// pageToken in the next list request. Subsequent list requests will
	// have their own nextPageToken to continue paging through the results.
	NextPageToken string `protobuf:"bytes,4,opt,name=nextPageToken" json:"nextPageToken,omitempty"`
	// [Output Only] Server-defined URL for this resource.
	SelfLink string               `protobuf:"bytes,5,opt,name=selfLink" json:"selfLink,omitempty"`
	Warning  *NetworkList_Warning `protobuf:"bytes,6,opt,name=warning" json:"warning,omitempty"`
}

func (m *NetworkList) Reset()                    { *m = NetworkList{} }
func (m *NetworkList) String() string            { return proto.CompactTextString(m) }
func (*NetworkList) ProtoMessage()               {}
func (*NetworkList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{153} }

func (m *NetworkList) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *NetworkList) GetItems() []*Network {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *NetworkList) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *NetworkList) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

func (m *NetworkList) GetSelfLink() string {
	if m != nil {
		return m.SelfLink
	}
	return ""
}

func (m *NetworkList) GetWarning() *NetworkList_Warning {
	if m != nil {
		return m.Warning
	}
	return nil
}

// [Output Only] Informational warning message.
// [Output Only] Informational warning message.
type NetworkList_Warning struct {
	// [Output Only] A warning code, if applicable. For example, Compute
	// Engine returns NO_RESULTS_ON_PAGE if there are no results in the
	// response.
	// Valid values:
	//     CLEANUP_FAILED
	//     DEPRECATED_RESOURCE_USED
	//     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
	//     FIELD_VALUE_OVERRIDEN
	//     INJECTED_KERNELS_DEPRECATED
	//     NEXT_HOP_ADDRESS_NOT_ASSIGNED
	//     NEXT_HOP_CANNOT_IP_FORWARD
	//     NEXT_HOP_INSTANCE_NOT_FOUND
	//     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
	//     NEXT_HOP_NOT_RUNNING
	//     NOT_CRITICAL_ERROR
	//     NO_RESULTS_ON_PAGE
	//     REQUIRED_TOS_AGREEMENT
	//     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
	//     RESOURCE_NOT_DELETED
	//     SINGLE_INSTANCE_PROPERTY_TEMPLATE
	//     UNREACHABLE
	Code string                      `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Data []*NetworkList_Warning_Data `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
	// [Output Only] A human-readable description of the warning code.
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *NetworkList_Warning) Reset()                    { *m = NetworkList_Warning{} }
func (m *NetworkList_Warning) String() string            { return proto.CompactTextString(m) }
func (*NetworkList_Warning) ProtoMessage()               {}
func (*NetworkList_Warning) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{153, 0} }

func (m *NetworkList_Warning) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *NetworkList_Warning) GetData() []*NetworkList_Warning_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *NetworkList_Warning) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// [Output Only] Metadata about this warning in key: value format. For
// example:
// "data": [ { "key": "scope", "value": "zones/us-east1-d" }
type NetworkList_Warning_Data struct {
	// [Output Only] A key that provides more detail on the warning being
	// returned. For example, for warnings where there are no results in a
	// list request for a particular zone, this key might be scope and the
	// key value might be the zone name. Other examples might be a key
	// indicating a deprecated resource and a suggested replacement, or a
	// warning about invalid network settings (for example, if an instance
	// attempts to perform IP forwarding but is not enabled for IP
	// forwarding).
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	// [Output Only] A warning data value corresponding to the key.
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *NetworkList_Warning_Data) Reset()         { *m = NetworkList_Warning_Data{} }
func (m *NetworkList_Warning_Data) String() string { return proto.CompactTextString(m) }
func (*NetworkList_Warning_Data) ProtoMessage()    {}
func (*NetworkList_Warning_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{153, 0, 0}
}

func (m *NetworkList_Warning_Data) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *NetworkList_Warning_Data) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

// A network peering attached to a network resource. The message
// includes the peering name, peer network, peering state, and a flag
// indicating whether Google Compute Engine should automatically create
// routes for the peering.
type NetworkPeering struct {
	// Whether full mesh connectivity is created and managed automatically.
	// When it is set to true, Google Compute Engine will automatically
	// create and manage the routes between two networks when the state is
	// ACTIVE. Otherwise, user needs to create routes manually to route
	// packets to peer network.
	AutoCreateRoutes bool `protobuf:"varint,1,opt,name=autoCreateRoutes" json:"autoCreateRoutes,omitempty"`
	// Name of this peering. Provided by the client when the peering is
	// created. The name must comply with RFC1035. Specifically, the name
	// must be 1-63 characters long and match regular expression
	// [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a
	// lowercase letter, and all the following characters must be a dash,
	// lowercase letter, or digit, except the last character, which cannot
	// be a dash.
	Name string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	// The URL of the peer network. It can be either full URL or partial
	// URL. The peer network may belong to a different project. If the
	// partial URL does not contain project, it is assumed that the peer
	// network is in the same project as the current network.
	Network string `protobuf:"bytes,3,opt,name=network" json:"network,omitempty"`
	// [Output Only] State for the peering.
	// Valid values:
	//     ACTIVE
	//     INACTIVE
	State string `protobuf:"bytes,4,opt,name=state" json:"state,omitempty"`
	// [Output Only] Details about the current state of the peering.
	StateDetails string `protobuf:"bytes,5,opt,name=stateDetails" json:"stateDetails,omitempty"`
}

func (m *NetworkPeering) Reset()                    { *m = NetworkPeering{} }
func (m *NetworkPeering) String() string            { return proto.CompactTextString(m) }
func (*NetworkPeering) ProtoMessage()               {}
func (*NetworkPeering) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{154} }

func (m *NetworkPeering) GetAutoCreateRoutes() bool {
	if m != nil {
		return m.AutoCreateRoutes
	}
	return false
}

func (m *NetworkPeering) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *NetworkPeering) GetNetwork() string {
	if m != nil {
		return m.Network
	}
	return ""
}

func (m *NetworkPeering) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *NetworkPeering) GetStateDetails() string {
	if m != nil {
		return m.StateDetails
	}
	return ""
}

// A routing configuration attached to a network resource. The message
// includes the list of routers associated with the network, and a flag
// indicating the type of routing behavior to enforce network-wide.
type NetworkRoutingConfig struct {
	// The network-wide routing mode to use. If set to REGIONAL, this
	// network's cloud routers will only advertise routes with subnetworks
	// of this network in the same region as the router. If set to GLOBAL,
	// this network's cloud routers will advertise routes with all
	// subnetworks of this network, across regions.
	// Valid values:
	//     GLOBAL
	//     REGIONAL
	RoutingMode string `protobuf:"bytes,1,opt,name=routingMode" json:"routingMode,omitempty"`
}

func (m *NetworkRoutingConfig) Reset()                    { *m = NetworkRoutingConfig{} }
func (m *NetworkRoutingConfig) String() string            { return proto.CompactTextString(m) }
func (*NetworkRoutingConfig) ProtoMessage()               {}
func (*NetworkRoutingConfig) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{155} }

func (m *NetworkRoutingConfig) GetRoutingMode() string {
	if m != nil {
		return m.RoutingMode
	}
	return ""
}

type NetworksAddPeeringRequest struct {
	// Whether Google Compute Engine manages the routes automatically.
	AutoCreateRoutes bool `protobuf:"varint,1,opt,name=autoCreateRoutes" json:"autoCreateRoutes,omitempty"`
	// Name of the peering, which should conform to RFC1035.
	Name string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	// URL of the peer network. It can be either full URL or partial URL.
	// The peer network may belong to a different project. If the partial
	// URL does not contain project, it is assumed that the peer network is
	// in the same project as the current network.
	PeerNetwork string `protobuf:"bytes,3,opt,name=peerNetwork" json:"peerNetwork,omitempty"`
}

func (m *NetworksAddPeeringRequest) Reset()                    { *m = NetworksAddPeeringRequest{} }
func (m *NetworksAddPeeringRequest) String() string            { return proto.CompactTextString(m) }
func (*NetworksAddPeeringRequest) ProtoMessage()               {}
func (*NetworksAddPeeringRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{156} }

func (m *NetworksAddPeeringRequest) GetAutoCreateRoutes() bool {
	if m != nil {
		return m.AutoCreateRoutes
	}
	return false
}

func (m *NetworksAddPeeringRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *NetworksAddPeeringRequest) GetPeerNetwork() string {
	if m != nil {
		return m.PeerNetwork
	}
	return ""
}

type NetworksRemovePeeringRequest struct {
	// Name of the peering, which should conform to RFC1035.
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *NetworksRemovePeeringRequest) Reset()                    { *m = NetworksRemovePeeringRequest{} }
func (m *NetworksRemovePeeringRequest) String() string            { return proto.CompactTextString(m) }
func (*NetworksRemovePeeringRequest) ProtoMessage()               {}
func (*NetworksRemovePeeringRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{157} }

func (m *NetworksRemovePeeringRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// An Operation resource, used to manage asynchronous API requests.
type Operation struct {
	// [Output Only] Reserved for future use.
	ClientOperationId string `protobuf:"bytes,1,opt,name=clientOperationId" json:"clientOperationId,omitempty"`
	// [Deprecated] This field is deprecated.
	CreationTimestamp string `protobuf:"bytes,2,opt,name=creationTimestamp" json:"creationTimestamp,omitempty"`
	// [Output Only] A textual description of the operation, which is set
	// when the operation is created.
	Description string `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	// [Output Only] The time that this operation was completed. This value
	// is in RFC3339 text format.
	EndTime string           `protobuf:"bytes,4,opt,name=endTime" json:"endTime,omitempty"`
	Error   *Operation_Error `protobuf:"bytes,5,opt,name=error" json:"error,omitempty"`
	// [Output Only] If the operation fails, this field contains the HTTP
	// error message that was returned, such as NOT FOUND.
	HttpErrorMessage string `protobuf:"bytes,6,opt,name=httpErrorMessage" json:"httpErrorMessage,omitempty"`
	// [Output Only] If the operation fails, this field contains the HTTP
	// error status code that was returned. For example, a 404 means the
	// resource was not found.
	HttpErrorStatusCode int32 `protobuf:"varint,7,opt,name=httpErrorStatusCode" json:"httpErrorStatusCode,omitempty"`
	// [Output Only] The unique identifier for the resource. This identifier
	// is defined by the server.
	Id string `protobuf:"bytes,8,opt,name=id" json:"id,omitempty"`
	// [Output Only] The time that this operation was requested. This value
	// is in RFC3339 text format.
	InsertTime string `protobuf:"bytes,9,opt,name=insertTime" json:"insertTime,omitempty"`
	// [Output Only] Type of the resource. Always compute#operation for
	// Operation resources.
	Kind string `protobuf:"bytes,10,opt,name=kind" json:"kind,omitempty"`
	// [Output Only] Name of the resource.
	Name string `protobuf:"bytes,11,opt,name=name" json:"name,omitempty"`
	// [Output Only] The type of operation, such as insert, update, or
	// delete, and so on.
	OperationType string `protobuf:"bytes,12,opt,name=operationType" json:"operationType,omitempty"`
	// [Output Only] An optional progress indicator that ranges from 0 to
	// 100. There is no requirement that this be linear or support any
	// granularity of operations. This should not be used to guess when the
	// operation will be complete. This number should monotonically increase
	// as the operation progresses.
	Progress int32 `protobuf:"varint,13,opt,name=progress" json:"progress,omitempty"`
	// [Output Only] The URL of the region where the operation resides. Only
	// available when performing regional operations.
	Region string `protobuf:"bytes,14,opt,name=region" json:"region,omitempty"`
	// [Output Only] Server-defined URL for the resource.
	SelfLink string `protobuf:"bytes,15,opt,name=selfLink" json:"selfLink,omitempty"`
	// [Output Only] The time that this operation was started by the server.
	// This value is in RFC3339 text format.
	StartTime string `protobuf:"bytes,16,opt,name=startTime" json:"startTime,omitempty"`
	// [Output Only] The status of the operation, which can be one of the
	// following: PENDING, RUNNING, or DONE.
	// Valid values:
	//     DONE
	//     PENDING
	//     RUNNING
	Status string `protobuf:"bytes,17,opt,name=status" json:"status,omitempty"`
	// [Output Only] An optional textual description of the current status
	// of the operation.
	StatusMessage string `protobuf:"bytes,18,opt,name=statusMessage" json:"statusMessage,omitempty"`
	// [Output Only] The unique target ID, which identifies a specific
	// incarnation of the target resource.
	TargetId string `protobuf:"bytes,19,opt,name=targetId" json:"targetId,omitempty"`
	// [Output Only] The URL of the resource that the operation modifies.
	// For operations related to creating a snapshot, this points to the
	// persistent disk that the snapshot was created from.
	TargetLink string `protobuf:"bytes,20,opt,name=targetLink" json:"targetLink,omitempty"`
	// [Output Only] User who requested the operation, for example:
	// user@example.com.
	User     string                `protobuf:"bytes,21,opt,name=user" json:"user,omitempty"`
	Warnings []*Operation_Warnings `protobuf:"bytes,22,rep,name=warnings" json:"warnings,omitempty"`
	// [Output Only] The URL of the zone where the operation resides. Only
	// available when performing per-zone operations.
	Zone string `protobuf:"bytes,23,opt,name=zone" json:"zone,omitempty"`
}

func (m *Operation) Reset()                    { *m = Operation{} }
func (m *Operation) String() string            { return proto.CompactTextString(m) }
func (*Operation) ProtoMessage()               {}
func (*Operation) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{158} }

func (m *Operation) GetClientOperationId() string {
	if m != nil {
		return m.ClientOperationId
	}
	return ""
}

func (m *Operation) GetCreationTimestamp() string {
	if m != nil {
		return m.CreationTimestamp
	}
	return ""
}

func (m *Operation) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Operation) GetEndTime() string {
	if m != nil {
		return m.EndTime
	}
	return ""
}

func (m *Operation) GetError() *Operation_Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *Operation) GetHttpErrorMessage() string {
	if m != nil {
		return m.HttpErrorMessage
	}
	return ""
}

func (m *Operation) GetHttpErrorStatusCode() int32 {
	if m != nil {
		return m.HttpErrorStatusCode
	}
	return 0
}

func (m *Operation) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Operation) GetInsertTime() string {
	if m != nil {
		return m.InsertTime
	}
	return ""
}

func (m *Operation) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *Operation) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Operation) GetOperationType() string {
	if m != nil {
		return m.OperationType
	}
	return ""
}

func (m *Operation) GetProgress() int32 {
	if m != nil {
		return m.Progress
	}
	return 0
}

func (m *Operation) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *Operation) GetSelfLink() string {
	if m != nil {
		return m.SelfLink
	}
	return ""
}

func (m *Operation) GetStartTime() string {
	if m != nil {
		return m.StartTime
	}
	return ""
}

func (m *Operation) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Operation) GetStatusMessage() string {
	if m != nil {
		return m.StatusMessage
	}
	return ""
}

func (m *Operation) GetTargetId() string {
	if m != nil {
		return m.TargetId
	}
	return ""
}

func (m *Operation) GetTargetLink() string {
	if m != nil {
		return m.TargetLink
	}
	return ""
}

func (m *Operation) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *Operation) GetWarnings() []*Operation_Warnings {
	if m != nil {
		return m.Warnings
	}
	return nil
}

func (m *Operation) GetZone() string {
	if m != nil {
		return m.Zone
	}
	return ""
}

// [Output Only] If errors are generated during processing of the
// operation, this field will be populated.
// [Output Only] If errors are generated during processing of the
// operation, this field will be populated.
type Operation_Error struct {
	Errors []*Operation_Error_Errors `protobuf:"bytes,1,rep,name=errors" json:"errors,omitempty"`
}

func (m *Operation_Error) Reset()                    { *m = Operation_Error{} }
func (m *Operation_Error) String() string            { return proto.CompactTextString(m) }
func (*Operation_Error) ProtoMessage()               {}
func (*Operation_Error) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{158, 0} }

func (m *Operation_Error) GetErrors() []*Operation_Error_Errors {
	if m != nil {
		return m.Errors
	}
	return nil
}

// [Output Only] The array of errors encountered while processing this
// operation.
type Operation_Error_Errors struct {
	// [Output Only] The error type identifier for this error.
	Code string `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	// [Output Only] Indicates the field in the request that caused the
	// error. This property is optional.
	Location string `protobuf:"bytes,2,opt,name=location" json:"location,omitempty"`
	// [Output Only] An optional, human-readable error message.
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *Operation_Error_Errors) Reset()                    { *m = Operation_Error_Errors{} }
func (m *Operation_Error_Errors) String() string            { return proto.CompactTextString(m) }
func (*Operation_Error_Errors) ProtoMessage()               {}
func (*Operation_Error_Errors) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{158, 0, 0} }

func (m *Operation_Error_Errors) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *Operation_Error_Errors) GetLocation() string {
	if m != nil {
		return m.Location
	}
	return ""
}

func (m *Operation_Error_Errors) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// [Output Only] If warning messages are generated during processing of
// the operation, this field will be populated.
type Operation_Warnings struct {
	// [Output Only] A warning code, if applicable. For example, Compute
	// Engine returns NO_RESULTS_ON_PAGE if there are no results in the
	// response.
	// Valid values:
	//     CLEANUP_FAILED
	//     DEPRECATED_RESOURCE_USED
	//     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
	//     FIELD_VALUE_OVERRIDEN
	//     INJECTED_KERNELS_DEPRECATED
	//     NEXT_HOP_ADDRESS_NOT_ASSIGNED
	//     NEXT_HOP_CANNOT_IP_FORWARD
	//     NEXT_HOP_INSTANCE_NOT_FOUND
	//     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
	//     NEXT_HOP_NOT_RUNNING
	//     NOT_CRITICAL_ERROR
	//     NO_RESULTS_ON_PAGE
	//     REQUIRED_TOS_AGREEMENT
	//     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
	//     RESOURCE_NOT_DELETED
	//     SINGLE_INSTANCE_PROPERTY_TEMPLATE
	//     UNREACHABLE
	Code string                     `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Data []*Operation_Warnings_Data `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
	// [Output Only] A human-readable description of the warning code.
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *Operation_Warnings) Reset()                    { *m = Operation_Warnings{} }
func (m *Operation_Warnings) String() string            { return proto.CompactTextString(m) }
func (*Operation_Warnings) ProtoMessage()               {}
func (*Operation_Warnings) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{158, 1} }

func (m *Operation_Warnings) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *Operation_Warnings) GetData() []*Operation_Warnings_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *Operation_Warnings) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// [Output Only] Metadata about this warning in key: value format. For
// example:
// "data": [ { "key": "scope", "value": "zones/us-east1-d" }
type Operation_Warnings_Data struct {
	// [Output Only] A key that provides more detail on the warning being
	// returned. For example, for warnings where there are no results in a
	// list request for a particular zone, this key might be scope and the
	// key value might be the zone name. Other examples might be a key
	// indicating a deprecated resource and a suggested replacement, or a
	// warning about invalid network settings (for example, if an instance
	// attempts to perform IP forwarding but is not enabled for IP
	// forwarding).
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	// [Output Only] A warning data value corresponding to the key.
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *Operation_Warnings_Data) Reset()                    { *m = Operation_Warnings_Data{} }
func (m *Operation_Warnings_Data) String() string            { return proto.CompactTextString(m) }
func (*Operation_Warnings_Data) ProtoMessage()               {}
func (*Operation_Warnings_Data) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{158, 1, 0} }

func (m *Operation_Warnings_Data) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Operation_Warnings_Data) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type OperationAggregatedList struct {
	// [Output Only] The unique identifier for the resource. This identifier
	// is defined by the server.
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// [Output Only] A map of scoped operation lists.
	Items map[string]*OperationsScopedList `protobuf:"bytes,2,rep,name=items" json:"items,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// [Output Only] Type of resource. Always
	// compute#operationAggregatedList for aggregated lists of operations.
	Kind string `protobuf:"bytes,3,opt,name=kind" json:"kind,omitempty"`
	// [Output Only] This token allows you to get the next page of results
	// for list requests. If the number of results is larger than
	// maxResults, use the nextPageToken as a value for the query parameter
	// pageToken in the next list request. Subsequent list requests will
	// have their own nextPageToken to continue paging through the results.
	NextPageToken string `protobuf:"bytes,4,opt,name=nextPageToken" json:"nextPageToken,omitempty"`
	// [Output Only] Server-defined URL for this resource.
	SelfLink string                           `protobuf:"bytes,5,opt,name=selfLink" json:"selfLink,omitempty"`
	Warning  *OperationAggregatedList_Warning `protobuf:"bytes,6,opt,name=warning" json:"warning,omitempty"`
}

func (m *OperationAggregatedList) Reset()                    { *m = OperationAggregatedList{} }
func (m *OperationAggregatedList) String() string            { return proto.CompactTextString(m) }
func (*OperationAggregatedList) ProtoMessage()               {}
func (*OperationAggregatedList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{159} }

func (m *OperationAggregatedList) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *OperationAggregatedList) GetItems() map[string]*OperationsScopedList {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *OperationAggregatedList) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *OperationAggregatedList) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

func (m *OperationAggregatedList) GetSelfLink() string {
	if m != nil {
		return m.SelfLink
	}
	return ""
}

func (m *OperationAggregatedList) GetWarning() *OperationAggregatedList_Warning {
	if m != nil {
		return m.Warning
	}
	return nil
}

// [Output Only] Informational warning message.
// [Output Only] Informational warning message.
type OperationAggregatedList_Warning struct {
	// [Output Only] A warning code, if applicable. For example, Compute
	// Engine returns NO_RESULTS_ON_PAGE if there are no results in the
	// response.
	// Valid values:
	//     CLEANUP_FAILED
	//     DEPRECATED_RESOURCE_USED
	//     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
	//     FIELD_VALUE_OVERRIDEN
	//     INJECTED_KERNELS_DEPRECATED
	//     NEXT_HOP_ADDRESS_NOT_ASSIGNED
	//     NEXT_HOP_CANNOT_IP_FORWARD
	//     NEXT_HOP_INSTANCE_NOT_FOUND
	//     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
	//     NEXT_HOP_NOT_RUNNING
	//     NOT_CRITICAL_ERROR
	//     NO_RESULTS_ON_PAGE
	//     REQUIRED_TOS_AGREEMENT
	//     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
	//     RESOURCE_NOT_DELETED
	//     SINGLE_INSTANCE_PROPERTY_TEMPLATE
	//     UNREACHABLE
	Code string                                  `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Data []*OperationAggregatedList_Warning_Data `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
	// [Output Only] A human-readable description of the warning code.
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *OperationAggregatedList_Warning) Reset()         { *m = OperationAggregatedList_Warning{} }
func (m *OperationAggregatedList_Warning) String() string { return proto.CompactTextString(m) }
func (*OperationAggregatedList_Warning) ProtoMessage()    {}
func (*OperationAggregatedList_Warning) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{159, 1}
}

func (m *OperationAggregatedList_Warning) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *OperationAggregatedList_Warning) GetData() []*OperationAggregatedList_Warning_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *OperationAggregatedList_Warning) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// [Output Only] Metadata about this warning in key: value format. For
// example:
// "data": [ { "key": "scope", "value": "zones/us-east1-d" }
type OperationAggregatedList_Warning_Data struct {
	// [Output Only] A key that provides more detail on the warning being
	// returned. For example, for warnings where there are no results in a
	// list request for a particular zone, this key might be scope and the
	// key value might be the zone name. Other examples might be a key
	// indicating a deprecated resource and a suggested replacement, or a
	// warning about invalid network settings (for example, if an instance
	// attempts to perform IP forwarding but is not enabled for IP
	// forwarding).
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	// [Output Only] A warning data value corresponding to the key.
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *OperationAggregatedList_Warning_Data) Reset()         { *m = OperationAggregatedList_Warning_Data{} }
func (m *OperationAggregatedList_Warning_Data) String() string { return proto.CompactTextString(m) }
func (*OperationAggregatedList_Warning_Data) ProtoMessage()    {}
func (*OperationAggregatedList_Warning_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{159, 1, 0}
}

func (m *OperationAggregatedList_Warning_Data) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *OperationAggregatedList_Warning_Data) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

// Contains a list of Operation resources.
type OperationList struct {
	// [Output Only] The unique identifier for the resource. This identifier
	// is defined by the server.
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// [Output Only] A list of Operation resources.
	Items []*Operation `protobuf:"bytes,2,rep,name=items" json:"items,omitempty"`
	// [Output Only] Type of resource. Always compute#operations for
	// Operations resource.
	Kind string `protobuf:"bytes,3,opt,name=kind" json:"kind,omitempty"`
	// [Output Only] This token allows you to get the next page of results
	// for list requests. If the number of results is larger than
	// maxResults, use the nextPageToken as a value for the query parameter
	// pageToken in the next list request. Subsequent list requests will
	// have their own nextPageToken to continue paging through the results.
	NextPageToken string `protobuf:"bytes,4,opt,name=nextPageToken" json:"nextPageToken,omitempty"`
	// [Output Only] Server-defined URL for this resource.
	SelfLink string                 `protobuf:"bytes,5,opt,name=selfLink" json:"selfLink,omitempty"`
	Warning  *OperationList_Warning `protobuf:"bytes,6,opt,name=warning" json:"warning,omitempty"`
}

func (m *OperationList) Reset()                    { *m = OperationList{} }
func (m *OperationList) String() string            { return proto.CompactTextString(m) }
func (*OperationList) ProtoMessage()               {}
func (*OperationList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{160} }

func (m *OperationList) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *OperationList) GetItems() []*Operation {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *OperationList) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *OperationList) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

func (m *OperationList) GetSelfLink() string {
	if m != nil {
		return m.SelfLink
	}
	return ""
}

func (m *OperationList) GetWarning() *OperationList_Warning {
	if m != nil {
		return m.Warning
	}
	return nil
}

// [Output Only] Informational warning message.
// [Output Only] Informational warning message.
type OperationList_Warning struct {
	// [Output Only] A warning code, if applicable. For example, Compute
	// Engine returns NO_RESULTS_ON_PAGE if there are no results in the
	// response.
	// Valid values:
	//     CLEANUP_FAILED
	//     DEPRECATED_RESOURCE_USED
	//     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
	//     FIELD_VALUE_OVERRIDEN
	//     INJECTED_KERNELS_DEPRECATED
	//     NEXT_HOP_ADDRESS_NOT_ASSIGNED
	//     NEXT_HOP_CANNOT_IP_FORWARD
	//     NEXT_HOP_INSTANCE_NOT_FOUND
	//     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
	//     NEXT_HOP_NOT_RUNNING
	//     NOT_CRITICAL_ERROR
	//     NO_RESULTS_ON_PAGE
	//     REQUIRED_TOS_AGREEMENT
	//     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
	//     RESOURCE_NOT_DELETED
	//     SINGLE_INSTANCE_PROPERTY_TEMPLATE
	//     UNREACHABLE
	Code string                        `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Data []*OperationList_Warning_Data `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
	// [Output Only] A human-readable description of the warning code.
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *OperationList_Warning) Reset()                    { *m = OperationList_Warning{} }
func (m *OperationList_Warning) String() string            { return proto.CompactTextString(m) }
func (*OperationList_Warning) ProtoMessage()               {}
func (*OperationList_Warning) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{160, 0} }

func (m *OperationList_Warning) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *OperationList_Warning) GetData() []*OperationList_Warning_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *OperationList_Warning) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// [Output Only] Metadata about this warning in key: value format. For
// example:
// "data": [ { "key": "scope", "value": "zones/us-east1-d" }
type OperationList_Warning_Data struct {
	// [Output Only] A key that provides more detail on the warning being
	// returned. For example, for warnings where there are no results in a
	// list request for a particular zone, this key might be scope and the
	// key value might be the zone name. Other examples might be a key
	// indicating a deprecated resource and a suggested replacement, or a
	// warning about invalid network settings (for example, if an instance
	// attempts to perform IP forwarding but is not enabled for IP
	// forwarding).
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	// [Output Only] A warning data value corresponding to the key.
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *OperationList_Warning_Data) Reset()         { *m = OperationList_Warning_Data{} }
func (m *OperationList_Warning_Data) String() string { return proto.CompactTextString(m) }
func (*OperationList_Warning_Data) ProtoMessage()    {}
func (*OperationList_Warning_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{160, 0, 0}
}

func (m *OperationList_Warning_Data) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *OperationList_Warning_Data) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type OperationsScopedList struct {
	// [Output Only] List of operations contained in this scope.
	Operations []*Operation                  `protobuf:"bytes,1,rep,name=operations" json:"operations,omitempty"`
	Warning    *OperationsScopedList_Warning `protobuf:"bytes,2,opt,name=warning" json:"warning,omitempty"`
}

func (m *OperationsScopedList) Reset()                    { *m = OperationsScopedList{} }
func (m *OperationsScopedList) String() string            { return proto.CompactTextString(m) }
func (*OperationsScopedList) ProtoMessage()               {}
func (*OperationsScopedList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{161} }

func (m *OperationsScopedList) GetOperations() []*Operation {
	if m != nil {
		return m.Operations
	}
	return nil
}

func (m *OperationsScopedList) GetWarning() *OperationsScopedList_Warning {
	if m != nil {
		return m.Warning
	}
	return nil
}

// [Output Only] Informational warning which replaces the list of
// operations when the list is empty.
// [Output Only] Informational warning which replaces the list of
// operations when the list is empty.
type OperationsScopedList_Warning struct {
	// [Output Only] A warning code, if applicable. For example, Compute
	// Engine returns NO_RESULTS_ON_PAGE if there are no results in the
	// response.
	// Valid values:
	//     CLEANUP_FAILED
	//     DEPRECATED_RESOURCE_USED
	//     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
	//     FIELD_VALUE_OVERRIDEN
	//     INJECTED_KERNELS_DEPRECATED
	//     NEXT_HOP_ADDRESS_NOT_ASSIGNED
	//     NEXT_HOP_CANNOT_IP_FORWARD
	//     NEXT_HOP_INSTANCE_NOT_FOUND
	//     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
	//     NEXT_HOP_NOT_RUNNING
	//     NOT_CRITICAL_ERROR
	//     NO_RESULTS_ON_PAGE
	//     REQUIRED_TOS_AGREEMENT
	//     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
	//     RESOURCE_NOT_DELETED
	//     SINGLE_INSTANCE_PROPERTY_TEMPLATE
	//     UNREACHABLE
	Code string                               `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Data []*OperationsScopedList_Warning_Data `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
	// [Output Only] A human-readable description of the warning code.
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *OperationsScopedList_Warning) Reset()         { *m = OperationsScopedList_Warning{} }
func (m *OperationsScopedList_Warning) String() string { return proto.CompactTextString(m) }
func (*OperationsScopedList_Warning) ProtoMessage()    {}
func (*OperationsScopedList_Warning) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{161, 0}
}

func (m *OperationsScopedList_Warning) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *OperationsScopedList_Warning) GetData() []*OperationsScopedList_Warning_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *OperationsScopedList_Warning) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// [Output Only] Metadata about this warning in key: value format. For
// example:
// "data": [ { "key": "scope", "value": "zones/us-east1-d" }
type OperationsScopedList_Warning_Data struct {
	// [Output Only] A key that provides more detail on the warning being
	// returned. For example, for warnings where there are no results in a
	// list request for a particular zone, this key might be scope and the
	// key value might be the zone name. Other examples might be a key
	// indicating a deprecated resource and a suggested replacement, or a
	// warning about invalid network settings (for example, if an instance
	// attempts to perform IP forwarding but is not enabled for IP
	// forwarding).
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	// [Output Only] A warning data value corresponding to the key.
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *OperationsScopedList_Warning_Data) Reset()         { *m = OperationsScopedList_Warning_Data{} }
func (m *OperationsScopedList_Warning_Data) String() string { return proto.CompactTextString(m) }
func (*OperationsScopedList_Warning_Data) ProtoMessage()    {}
func (*OperationsScopedList_Warning_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{161, 0, 0}
}

func (m *OperationsScopedList_Warning_Data) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *OperationsScopedList_Warning_Data) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

// A matcher for the path portion of the URL. The BackendService from
// the longest-matched rule will serve the URL. If no rule was matched,
// the default service will be used.
type PathMatcher struct {
	// The full or partial URL to the BackendService resource. This will be
	// used if none of the pathRules defined by this PathMatcher is matched
	// by the URL's path portion. For example, the following are all valid
	// URLs to a BackendService resource:
	// -
	// https://www.googleapis.com/compute/v1/projects/project/global/backendServices/backendService
	// - compute/v1/projects/project/global/backendServices/backendService
	// - global/backendServices/backendService
	DefaultService string `protobuf:"bytes,1,opt,name=defaultService" json:"defaultService,omitempty"`
	// An optional description of this resource. Provide this property when
	// you create the resource.
	Description string `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	// The name to which this PathMatcher is referred by the HostRule.
	Name string `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	// The list of path rules.
	PathRules []*PathRule `protobuf:"bytes,4,rep,name=pathRules" json:"pathRules,omitempty"`
}

func (m *PathMatcher) Reset()                    { *m = PathMatcher{} }
func (m *PathMatcher) String() string            { return proto.CompactTextString(m) }
func (*PathMatcher) ProtoMessage()               {}
func (*PathMatcher) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{162} }

func (m *PathMatcher) GetDefaultService() string {
	if m != nil {
		return m.DefaultService
	}
	return ""
}

func (m *PathMatcher) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *PathMatcher) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PathMatcher) GetPathRules() []*PathRule {
	if m != nil {
		return m.PathRules
	}
	return nil
}

// A path-matching rule for a URL. If matched, will use the specified
// BackendService to handle the traffic arriving at this URL.
type PathRule struct {
	// The list of path patterns to match. Each must start with / and the
	// only place a * is allowed is at the end following a /. The string fed
	// to the path matcher does not include any text after the first ? or #,
	// and those chars are not allowed here.
	Paths []string `protobuf:"bytes,1,rep,name=paths" json:"paths,omitempty"`
	// The URL of the BackendService resource if this rule is matched.
	Service string `protobuf:"bytes,2,opt,name=service" json:"service,omitempty"`
}

func (m *PathRule) Reset()                    { *m = PathRule{} }
func (m *PathRule) String() string            { return proto.CompactTextString(m) }
func (*PathRule) ProtoMessage()               {}
func (*PathRule) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{163} }

func (m *PathRule) GetPaths() []string {
	if m != nil {
		return m.Paths
	}
	return nil
}

func (m *PathRule) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

// Defines an Identity and Access Management (IAM) policy. It is used to
// specify access control policies for Cloud Platform resources.
//
//
//
// A `Policy` consists of a list of `bindings`. A `Binding` binds a list
// of `members` to a `role`, where the members can be user accounts,
// Google groups, Google domains, and service accounts. A `role` is a
// named list of permissions defined by IAM.
//
// **Example**
//
// { "bindings": [ { "role": "roles/owner", "members": [
// "user:mike@example.com", "group:admins@example.com",
// "domain:google.com",
// "serviceAccount:my-other-app@appspot.gserviceaccount.com", ] }, {
// "role": "roles/viewer", "members": ["user:sean@example.com"] } ] }
//
// For a description of IAM and its features, see the [IAM developer's
// guide](https://cloud.google.com/iam).
type Policy struct {
	// Specifies cloud audit logging configuration for this policy.
	AuditConfigs []*AuditConfig `protobuf:"bytes,1,rep,name=auditConfigs" json:"auditConfigs,omitempty"`
	// Associates a list of `members` to a `role`. `bindings` with no
	// members will result in an error.
	Bindings []*Binding `protobuf:"bytes,2,rep,name=bindings" json:"bindings,omitempty"`
	// `etag` is used for optimistic concurrency control as a way to help
	// prevent simultaneous updates of a policy from overwriting each other.
	// It is strongly suggested that systems make use of the `etag` in the
	// read-modify-write cycle to perform policy updates in order to avoid
	// race conditions: An `etag` is returned in the response to
	// `getIamPolicy`, and systems are expected to put that etag in the
	// request to `setIamPolicy` to ensure that their change will be applied
	// to the same version of the policy.
	//
	// If no `etag` is provided in the call to `setIamPolicy`, then the
	// existing policy is overwritten blindly.
	Etag     string `protobuf:"bytes,3,opt,name=etag" json:"etag,omitempty"`
	IamOwned bool   `protobuf:"varint,4,opt,name=iamOwned" json:"iamOwned,omitempty"`
	// If more than one rule is specified, the rules are applied in the
	// following manner: - All matching LOG rules are always applied. - If
	// any DENY/DENY_WITH_LOG rule matches, permission is denied. Logging
	// will be applied if one or more matching rule requires logging. -
	// Otherwise, if any ALLOW/ALLOW_WITH_LOG rule matches, permission is
	// granted. Logging will be applied if one or more matching rule
	// requires logging. - Otherwise, if no rule applies, permission is
	// denied.
	Rules []*Rule `protobuf:"bytes,5,rep,name=rules" json:"rules,omitempty"`
	// Version of the `Policy`. The default version is 0.
	Version int32 `protobuf:"varint,6,opt,name=version" json:"version,omitempty"`
}

func (m *Policy) Reset()                    { *m = Policy{} }
func (m *Policy) String() string            { return proto.CompactTextString(m) }
func (*Policy) ProtoMessage()               {}
func (*Policy) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{164} }

func (m *Policy) GetAuditConfigs() []*AuditConfig {
	if m != nil {
		return m.AuditConfigs
	}
	return nil
}

func (m *Policy) GetBindings() []*Binding {
	if m != nil {
		return m.Bindings
	}
	return nil
}

func (m *Policy) GetEtag() string {
	if m != nil {
		return m.Etag
	}
	return ""
}

func (m *Policy) GetIamOwned() bool {
	if m != nil {
		return m.IamOwned
	}
	return false
}

func (m *Policy) GetRules() []*Rule {
	if m != nil {
		return m.Rules
	}
	return nil
}

func (m *Policy) GetVersion() int32 {
	if m != nil {
		return m.Version
	}
	return 0
}

// A Project resource. Projects can only be created in the Google Cloud
// Platform Console. Unless marked otherwise, values can only be
// modified in the console.
type Project struct {
	// Metadata key/value pairs available to all instances contained in this
	// project. See Custom metadata for more information.
	CommonInstanceMetadata *Metadata `protobuf:"bytes,1,opt,name=commonInstanceMetadata" json:"commonInstanceMetadata,omitempty"`
	// [Output Only] Creation timestamp in RFC3339 text format.
	CreationTimestamp string `protobuf:"bytes,2,opt,name=creationTimestamp" json:"creationTimestamp,omitempty"`
	// [Output Only] Default service account used by VMs running in this
	// project.
	DefaultServiceAccount string `protobuf:"bytes,3,opt,name=defaultServiceAccount" json:"defaultServiceAccount,omitempty"`
	// An optional textual description of the resource.
	Description string `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	// Restricted features enabled for use on this project.
	EnabledFeatures []string `protobuf:"bytes,5,rep,name=enabledFeatures" json:"enabledFeatures,omitempty"`
	// [Output Only] The unique identifier for the resource. This identifier
	// is defined by the server. This is not the project ID, and is just a
	// unique ID used by Compute Engine to identify resources.
	Id string `protobuf:"bytes,6,opt,name=id" json:"id,omitempty"`
	// [Output Only] Type of the resource. Always compute#project for
	// projects.
	Kind string `protobuf:"bytes,7,opt,name=kind" json:"kind,omitempty"`
	// The project ID. For example: my-example-project. Use the project ID
	// to make requests to Compute Engine.
	Name string `protobuf:"bytes,8,opt,name=name" json:"name,omitempty"`
	// [Output Only] Quotas assigned to this project.
	Quotas []*Quota `protobuf:"bytes,9,rep,name=quotas" json:"quotas,omitempty"`
	// [Output Only] Server-defined URL for the resource.
	SelfLink string `protobuf:"bytes,10,opt,name=selfLink" json:"selfLink,omitempty"`
	// The naming prefix for daily usage reports and the Google Cloud
	// Storage bucket where they are stored.
	UsageExportLocation *UsageExportLocation `protobuf:"bytes,11,opt,name=usageExportLocation" json:"usageExportLocation,omitempty"`
	// [Output Only] The role this project has in a shared VPC
	// configuration. Currently only HOST projects are differentiated.
	// Valid values:
	//     HOST
	//     UNSPECIFIED_XPN_PROJECT_STATUS
	XpnProjectStatus string `protobuf:"bytes,12,opt,name=xpnProjectStatus" json:"xpnProjectStatus,omitempty"`
}

func (m *Project) Reset()                    { *m = Project{} }
func (m *Project) String() string            { return proto.CompactTextString(m) }
func (*Project) ProtoMessage()               {}
func (*Project) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{165} }

func (m *Project) GetCommonInstanceMetadata() *Metadata {
	if m != nil {
		return m.CommonInstanceMetadata
	}
	return nil
}

func (m *Project) GetCreationTimestamp() string {
	if m != nil {
		return m.CreationTimestamp
	}
	return ""
}

func (m *Project) GetDefaultServiceAccount() string {
	if m != nil {
		return m.DefaultServiceAccount
	}
	return ""
}

func (m *Project) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Project) GetEnabledFeatures() []string {
	if m != nil {
		return m.EnabledFeatures
	}
	return nil
}

func (m *Project) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Project) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *Project) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Project) GetQuotas() []*Quota {
	if m != nil {
		return m.Quotas
	}
	return nil
}

func (m *Project) GetSelfLink() string {
	if m != nil {
		return m.SelfLink
	}
	return ""
}

func (m *Project) GetUsageExportLocation() *UsageExportLocation {
	if m != nil {
		return m.UsageExportLocation
	}
	return nil
}

func (m *Project) GetXpnProjectStatus() string {
	if m != nil {
		return m.XpnProjectStatus
	}
	return ""
}

type ProjectsDisableXpnResourceRequest struct {
	// Service resource (a.k.a service project) ID.
	XpnResource *XpnResourceId `protobuf:"bytes,1,opt,name=xpnResource" json:"xpnResource,omitempty"`
}

func (m *ProjectsDisableXpnResourceRequest) Reset()         { *m = ProjectsDisableXpnResourceRequest{} }
func (m *ProjectsDisableXpnResourceRequest) String() string { return proto.CompactTextString(m) }
func (*ProjectsDisableXpnResourceRequest) ProtoMessage()    {}
func (*ProjectsDisableXpnResourceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{166}
}

func (m *ProjectsDisableXpnResourceRequest) GetXpnResource() *XpnResourceId {
	if m != nil {
		return m.XpnResource
	}
	return nil
}

type ProjectsEnableXpnResourceRequest struct {
	// Service resource (a.k.a service project) ID.
	XpnResource *XpnResourceId `protobuf:"bytes,1,opt,name=xpnResource" json:"xpnResource,omitempty"`
}

func (m *ProjectsEnableXpnResourceRequest) Reset()         { *m = ProjectsEnableXpnResourceRequest{} }
func (m *ProjectsEnableXpnResourceRequest) String() string { return proto.CompactTextString(m) }
func (*ProjectsEnableXpnResourceRequest) ProtoMessage()    {}
func (*ProjectsEnableXpnResourceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{167}
}

func (m *ProjectsEnableXpnResourceRequest) GetXpnResource() *XpnResourceId {
	if m != nil {
		return m.XpnResource
	}
	return nil
}

type ProjectsGetXpnResources struct {
	// [Output Only] Type of resource. Always
	// compute#projectsGetXpnResources for lists of service resources (a.k.a
	// service projects)
	Kind string `protobuf:"bytes,1,opt,name=kind" json:"kind,omitempty"`
	// [Output Only] This token allows you to get the next page of results
	// for list requests. If the number of results is larger than
	// maxResults, use the nextPageToken as a value for the query parameter
	// pageToken in the next list request. Subsequent list requests will
	// have their own nextPageToken to continue paging through the results.
	NextPageToken string `protobuf:"bytes,2,opt,name=nextPageToken" json:"nextPageToken,omitempty"`
	// Service resources (a.k.a service projects) attached to this project
	// as their shared VPC host.
	Resources []*XpnResourceId `protobuf:"bytes,3,rep,name=resources" json:"resources,omitempty"`
}

func (m *ProjectsGetXpnResources) Reset()                    { *m = ProjectsGetXpnResources{} }
func (m *ProjectsGetXpnResources) String() string            { return proto.CompactTextString(m) }
func (*ProjectsGetXpnResources) ProtoMessage()               {}
func (*ProjectsGetXpnResources) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{168} }

func (m *ProjectsGetXpnResources) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *ProjectsGetXpnResources) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

func (m *ProjectsGetXpnResources) GetResources() []*XpnResourceId {
	if m != nil {
		return m.Resources
	}
	return nil
}

type ProjectsListXpnHostsRequest struct {
	// Optional organization ID managed by Cloud Resource Manager, for which
	// to list shared VPC host projects. If not specified, the organization
	// will be inferred from the project.
	Organization string `protobuf:"bytes,1,opt,name=organization" json:"organization,omitempty"`
}

func (m *ProjectsListXpnHostsRequest) Reset()                    { *m = ProjectsListXpnHostsRequest{} }
func (m *ProjectsListXpnHostsRequest) String() string            { return proto.CompactTextString(m) }
func (*ProjectsListXpnHostsRequest) ProtoMessage()               {}
func (*ProjectsListXpnHostsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{169} }

func (m *ProjectsListXpnHostsRequest) GetOrganization() string {
	if m != nil {
		return m.Organization
	}
	return ""
}

// A quotas entry.
type Quota struct {
	// [Output Only] Quota limit for this metric.
	Limit float64 `protobuf:"fixed64,1,opt,name=limit" json:"limit,omitempty"`
	// [Output Only] Name of the quota metric.
	// Valid values:
	//     AUTOSCALERS
	//     BACKEND_BUCKETS
	//     BACKEND_SERVICES
	//     COMMITMENTS
	//     CPUS
	//     CPUS_ALL_REGIONS
	//     DISKS_TOTAL_GB
	//     FIREWALLS
	//     FORWARDING_RULES
	//     HEALTH_CHECKS
	//     IMAGES
	//     INSTANCES
	//     INSTANCE_GROUPS
	//     INSTANCE_GROUP_MANAGERS
	//     INSTANCE_TEMPLATES
	//     INTERCONNECTS
	//     IN_USE_ADDRESSES
	//     LOCAL_SSD_TOTAL_GB
	//     NETWORKS
	//     NVIDIA_K80_GPUS
	//     NVIDIA_P100_GPUS
	//     PREEMPTIBLE_CPUS
	//     PREEMPTIBLE_LOCAL_SSD_GB
	//     REGIONAL_AUTOSCALERS
	//     REGIONAL_INSTANCE_GROUP_MANAGERS
	//     ROUTERS
	//     ROUTES
	//     SECURITY_POLICIES
	//     SECURITY_POLICY_RULES
	//     SNAPSHOTS
	//     SSD_TOTAL_GB
	//     SSL_CERTIFICATES
	//     STATIC_ADDRESSES
	//     SUBNETWORKS
	//     TARGET_HTTPS_PROXIES
	//     TARGET_HTTP_PROXIES
	//     TARGET_INSTANCES
	//     TARGET_POOLS
	//     TARGET_SSL_PROXIES
	//     TARGET_TCP_PROXIES
	//     TARGET_VPN_GATEWAYS
	//     URL_MAPS
	//     VPN_TUNNELS
	Metric string `protobuf:"bytes,2,opt,name=metric" json:"metric,omitempty"`
	// [Output Only] Current usage of this metric.
	Usage float64 `protobuf:"fixed64,3,opt,name=usage" json:"usage,omitempty"`
}

func (m *Quota) Reset()                    { *m = Quota{} }
func (m *Quota) String() string            { return proto.CompactTextString(m) }
func (*Quota) ProtoMessage()               {}
func (*Quota) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{170} }

func (m *Quota) GetLimit() float64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *Quota) GetMetric() string {
	if m != nil {
		return m.Metric
	}
	return ""
}

func (m *Quota) GetUsage() float64 {
	if m != nil {
		return m.Usage
	}
	return 0
}

// Represents a reference to a resource.
type Reference struct {
	// [Output Only] Type of the resource. Always compute#reference for
	// references.
	Kind string `protobuf:"bytes,1,opt,name=kind" json:"kind,omitempty"`
	// A description of the reference type with no implied semantics.
	// Possible values include:
	// - MEMBER_OF
	ReferenceType string `protobuf:"bytes,2,opt,name=referenceType" json:"referenceType,omitempty"`
	// URL of the resource which refers to the target.
	Referrer string `protobuf:"bytes,3,opt,name=referrer" json:"referrer,omitempty"`
	// URL of the resource to which this reference points.
	Target string `protobuf:"bytes,4,opt,name=target" json:"target,omitempty"`
}

func (m *Reference) Reset()                    { *m = Reference{} }
func (m *Reference) String() string            { return proto.CompactTextString(m) }
func (*Reference) ProtoMessage()               {}
func (*Reference) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{171} }

func (m *Reference) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *Reference) GetReferenceType() string {
	if m != nil {
		return m.ReferenceType
	}
	return ""
}

func (m *Reference) GetReferrer() string {
	if m != nil {
		return m.Referrer
	}
	return ""
}

func (m *Reference) GetTarget() string {
	if m != nil {
		return m.Target
	}
	return ""
}

// Region resource.
type Region struct {
	// [Output Only] Creation timestamp in RFC3339 text format.
	CreationTimestamp string `protobuf:"bytes,1,opt,name=creationTimestamp" json:"creationTimestamp,omitempty"`
	// [Output Only] The deprecation status associated with this region.
	Deprecated *DeprecationStatus `protobuf:"bytes,2,opt,name=deprecated" json:"deprecated,omitempty"`
	// [Output Only] Textual description of the resource.
	Description string `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	// [Output Only] The unique identifier for the resource. This identifier
	// is defined by the server.
	Id string `protobuf:"bytes,4,opt,name=id" json:"id,omitempty"`
	// [Output Only] Type of the resource. Always compute#region for
	// regions.
	Kind string `protobuf:"bytes,5,opt,name=kind" json:"kind,omitempty"`
	// [Output Only] Name of the resource.
	Name string `protobuf:"bytes,6,opt,name=name" json:"name,omitempty"`
	// [Output Only] Quotas assigned to this region.
	Quotas []*Quota `protobuf:"bytes,7,rep,name=quotas" json:"quotas,omitempty"`
	// [Output Only] Server-defined URL for the resource.
	SelfLink string `protobuf:"bytes,8,opt,name=selfLink" json:"selfLink,omitempty"`
	// [Output Only] Status of the region, either UP or DOWN.
	// Valid values:
	//     DOWN
	//     UP
	Status string `protobuf:"bytes,9,opt,name=status" json:"status,omitempty"`
	// [Output Only] A list of zones available in this region, in the form
	// of resource URLs.
	Zones []string `protobuf:"bytes,10,rep,name=zones" json:"zones,omitempty"`
}

func (m *Region) Reset()                    { *m = Region{} }
func (m *Region) String() string            { return proto.CompactTextString(m) }
func (*Region) ProtoMessage()               {}
func (*Region) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{172} }

func (m *Region) GetCreationTimestamp() string {
	if m != nil {
		return m.CreationTimestamp
	}
	return ""
}

func (m *Region) GetDeprecated() *DeprecationStatus {
	if m != nil {
		return m.Deprecated
	}
	return nil
}

func (m *Region) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Region) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Region) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *Region) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Region) GetQuotas() []*Quota {
	if m != nil {
		return m.Quotas
	}
	return nil
}

func (m *Region) GetSelfLink() string {
	if m != nil {
		return m.SelfLink
	}
	return ""
}

func (m *Region) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Region) GetZones() []string {
	if m != nil {
		return m.Zones
	}
	return nil
}

// Contains a list of autoscalers.
type RegionAutoscalerList struct {
	// [Output Only] Unique identifier for the resource; defined by the
	// server.
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// A list of Autoscaler resources.
	Items []*Autoscaler `protobuf:"bytes,2,rep,name=items" json:"items,omitempty"`
	// Type of resource.
	Kind string `protobuf:"bytes,3,opt,name=kind" json:"kind,omitempty"`
	// [Output Only] This token allows you to get the next page of results
	// for list requests. If the number of results is larger than
	// maxResults, use the nextPageToken as a value for the query parameter
	// pageToken in the next list request. Subsequent list requests will
	// have their own nextPageToken to continue paging through the results.
	NextPageToken string `protobuf:"bytes,4,opt,name=nextPageToken" json:"nextPageToken,omitempty"`
	// [Output Only] Server-defined URL for this resource.
	SelfLink string                        `protobuf:"bytes,5,opt,name=selfLink" json:"selfLink,omitempty"`
	Warning  *RegionAutoscalerList_Warning `protobuf:"bytes,6,opt,name=warning" json:"warning,omitempty"`
}

func (m *RegionAutoscalerList) Reset()                    { *m = RegionAutoscalerList{} }
func (m *RegionAutoscalerList) String() string            { return proto.CompactTextString(m) }
func (*RegionAutoscalerList) ProtoMessage()               {}
func (*RegionAutoscalerList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{173} }

func (m *RegionAutoscalerList) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *RegionAutoscalerList) GetItems() []*Autoscaler {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *RegionAutoscalerList) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *RegionAutoscalerList) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

func (m *RegionAutoscalerList) GetSelfLink() string {
	if m != nil {
		return m.SelfLink
	}
	return ""
}

func (m *RegionAutoscalerList) GetWarning() *RegionAutoscalerList_Warning {
	if m != nil {
		return m.Warning
	}
	return nil
}

// [Output Only] Informational warning message.
// [Output Only] Informational warning message.
type RegionAutoscalerList_Warning struct {
	// [Output Only] A warning code, if applicable. For example, Compute
	// Engine returns NO_RESULTS_ON_PAGE if there are no results in the
	// response.
	// Valid values:
	//     CLEANUP_FAILED
	//     DEPRECATED_RESOURCE_USED
	//     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
	//     FIELD_VALUE_OVERRIDEN
	//     INJECTED_KERNELS_DEPRECATED
	//     NEXT_HOP_ADDRESS_NOT_ASSIGNED
	//     NEXT_HOP_CANNOT_IP_FORWARD
	//     NEXT_HOP_INSTANCE_NOT_FOUND
	//     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
	//     NEXT_HOP_NOT_RUNNING
	//     NOT_CRITICAL_ERROR
	//     NO_RESULTS_ON_PAGE
	//     REQUIRED_TOS_AGREEMENT
	//     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
	//     RESOURCE_NOT_DELETED
	//     SINGLE_INSTANCE_PROPERTY_TEMPLATE
	//     UNREACHABLE
	Code string                               `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Data []*RegionAutoscalerList_Warning_Data `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
	// [Output Only] A human-readable description of the warning code.
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *RegionAutoscalerList_Warning) Reset()         { *m = RegionAutoscalerList_Warning{} }
func (m *RegionAutoscalerList_Warning) String() string { return proto.CompactTextString(m) }
func (*RegionAutoscalerList_Warning) ProtoMessage()    {}
func (*RegionAutoscalerList_Warning) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{173, 0}
}

func (m *RegionAutoscalerList_Warning) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *RegionAutoscalerList_Warning) GetData() []*RegionAutoscalerList_Warning_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *RegionAutoscalerList_Warning) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// [Output Only] Metadata about this warning in key: value format. For
// example:
// "data": [ { "key": "scope", "value": "zones/us-east1-d" }
type RegionAutoscalerList_Warning_Data struct {
	// [Output Only] A key that provides more detail on the warning being
	// returned. For example, for warnings where there are no results in a
	// list request for a particular zone, this key might be scope and the
	// key value might be the zone name. Other examples might be a key
	// indicating a deprecated resource and a suggested replacement, or a
	// warning about invalid network settings (for example, if an instance
	// attempts to perform IP forwarding but is not enabled for IP
	// forwarding).
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	// [Output Only] A warning data value corresponding to the key.
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *RegionAutoscalerList_Warning_Data) Reset()         { *m = RegionAutoscalerList_Warning_Data{} }
func (m *RegionAutoscalerList_Warning_Data) String() string { return proto.CompactTextString(m) }
func (*RegionAutoscalerList_Warning_Data) ProtoMessage()    {}
func (*RegionAutoscalerList_Warning_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{173, 0, 0}
}

func (m *RegionAutoscalerList_Warning_Data) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *RegionAutoscalerList_Warning_Data) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

// Contains a list of InstanceGroup resources.
type RegionInstanceGroupList struct {
	// [Output Only] Unique identifier for the resource; defined by the
	// server.
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// A list of InstanceGroup resources.
	Items []*InstanceGroup `protobuf:"bytes,2,rep,name=items" json:"items,omitempty"`
	// The resource type.
	Kind string `protobuf:"bytes,3,opt,name=kind" json:"kind,omitempty"`
	// [Output Only] This token allows you to get the next page of results
	// for list requests. If the number of results is larger than
	// maxResults, use the nextPageToken as a value for the query parameter
	// pageToken in the next list request. Subsequent list requests will
	// have their own nextPageToken to continue paging through the results.
	NextPageToken string `protobuf:"bytes,4,opt,name=nextPageToken" json:"nextPageToken,omitempty"`
	// [Output Only] Server-defined URL for this resource.
	SelfLink string                           `protobuf:"bytes,5,opt,name=selfLink" json:"selfLink,omitempty"`
	Warning  *RegionInstanceGroupList_Warning `protobuf:"bytes,6,opt,name=warning" json:"warning,omitempty"`
}

func (m *RegionInstanceGroupList) Reset()                    { *m = RegionInstanceGroupList{} }
func (m *RegionInstanceGroupList) String() string            { return proto.CompactTextString(m) }
func (*RegionInstanceGroupList) ProtoMessage()               {}
func (*RegionInstanceGroupList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{174} }

func (m *RegionInstanceGroupList) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *RegionInstanceGroupList) GetItems() []*InstanceGroup {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *RegionInstanceGroupList) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *RegionInstanceGroupList) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

func (m *RegionInstanceGroupList) GetSelfLink() string {
	if m != nil {
		return m.SelfLink
	}
	return ""
}

func (m *RegionInstanceGroupList) GetWarning() *RegionInstanceGroupList_Warning {
	if m != nil {
		return m.Warning
	}
	return nil
}

// [Output Only] Informational warning message.
// [Output Only] Informational warning message.
type RegionInstanceGroupList_Warning struct {
	// [Output Only] A warning code, if applicable. For example, Compute
	// Engine returns NO_RESULTS_ON_PAGE if there are no results in the
	// response.
	// Valid values:
	//     CLEANUP_FAILED
	//     DEPRECATED_RESOURCE_USED
	//     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
	//     FIELD_VALUE_OVERRIDEN
	//     INJECTED_KERNELS_DEPRECATED
	//     NEXT_HOP_ADDRESS_NOT_ASSIGNED
	//     NEXT_HOP_CANNOT_IP_FORWARD
	//     NEXT_HOP_INSTANCE_NOT_FOUND
	//     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
	//     NEXT_HOP_NOT_RUNNING
	//     NOT_CRITICAL_ERROR
	//     NO_RESULTS_ON_PAGE
	//     REQUIRED_TOS_AGREEMENT
	//     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
	//     RESOURCE_NOT_DELETED
	//     SINGLE_INSTANCE_PROPERTY_TEMPLATE
	//     UNREACHABLE
	Code string                                  `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Data []*RegionInstanceGroupList_Warning_Data `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
	// [Output Only] A human-readable description of the warning code.
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *RegionInstanceGroupList_Warning) Reset()         { *m = RegionInstanceGroupList_Warning{} }
func (m *RegionInstanceGroupList_Warning) String() string { return proto.CompactTextString(m) }
func (*RegionInstanceGroupList_Warning) ProtoMessage()    {}
func (*RegionInstanceGroupList_Warning) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{174, 0}
}

func (m *RegionInstanceGroupList_Warning) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *RegionInstanceGroupList_Warning) GetData() []*RegionInstanceGroupList_Warning_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *RegionInstanceGroupList_Warning) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// [Output Only] Metadata about this warning in key: value format. For
// example:
// "data": [ { "key": "scope", "value": "zones/us-east1-d" }
type RegionInstanceGroupList_Warning_Data struct {
	// [Output Only] A key that provides more detail on the warning being
	// returned. For example, for warnings where there are no results in a
	// list request for a particular zone, this key might be scope and the
	// key value might be the zone name. Other examples might be a key
	// indicating a deprecated resource and a suggested replacement, or a
	// warning about invalid network settings (for example, if an instance
	// attempts to perform IP forwarding but is not enabled for IP
	// forwarding).
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	// [Output Only] A warning data value corresponding to the key.
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *RegionInstanceGroupList_Warning_Data) Reset()         { *m = RegionInstanceGroupList_Warning_Data{} }
func (m *RegionInstanceGroupList_Warning_Data) String() string { return proto.CompactTextString(m) }
func (*RegionInstanceGroupList_Warning_Data) ProtoMessage()    {}
func (*RegionInstanceGroupList_Warning_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{174, 0, 0}
}

func (m *RegionInstanceGroupList_Warning_Data) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *RegionInstanceGroupList_Warning_Data) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

// Contains a list of managed instance groups.
type RegionInstanceGroupManagerList struct {
	// [Output Only] Unique identifier for the resource; defined by the
	// server.
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// A list of InstanceGroupManager resources.
	Items []*InstanceGroupManager `protobuf:"bytes,2,rep,name=items" json:"items,omitempty"`
	// [Output Only] The resource type, which is always
	// compute#instanceGroupManagerList for a list of managed instance
	// groups that exist in th regional scope.
	Kind string `protobuf:"bytes,3,opt,name=kind" json:"kind,omitempty"`
	// [Output Only] This token allows you to get the next page of results
	// for list requests. If the number of results is larger than
	// maxResults, use the nextPageToken as a value for the query parameter
	// pageToken in the next list request. Subsequent list requests will
	// have their own nextPageToken to continue paging through the results.
	NextPageToken string `protobuf:"bytes,4,opt,name=nextPageToken" json:"nextPageToken,omitempty"`
	// [Output Only] Server-defined URL for this resource.
	SelfLink string                                  `protobuf:"bytes,5,opt,name=selfLink" json:"selfLink,omitempty"`
	Warning  *RegionInstanceGroupManagerList_Warning `protobuf:"bytes,6,opt,name=warning" json:"warning,omitempty"`
}

func (m *RegionInstanceGroupManagerList) Reset()         { *m = RegionInstanceGroupManagerList{} }
func (m *RegionInstanceGroupManagerList) String() string { return proto.CompactTextString(m) }
func (*RegionInstanceGroupManagerList) ProtoMessage()    {}
func (*RegionInstanceGroupManagerList) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{175}
}

func (m *RegionInstanceGroupManagerList) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *RegionInstanceGroupManagerList) GetItems() []*InstanceGroupManager {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *RegionInstanceGroupManagerList) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *RegionInstanceGroupManagerList) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

func (m *RegionInstanceGroupManagerList) GetSelfLink() string {
	if m != nil {
		return m.SelfLink
	}
	return ""
}

func (m *RegionInstanceGroupManagerList) GetWarning() *RegionInstanceGroupManagerList_Warning {
	if m != nil {
		return m.Warning
	}
	return nil
}

// [Output Only] Informational warning message.
// [Output Only] Informational warning message.
type RegionInstanceGroupManagerList_Warning struct {
	// [Output Only] A warning code, if applicable. For example, Compute
	// Engine returns NO_RESULTS_ON_PAGE if there are no results in the
	// response.
	// Valid values:
	//     CLEANUP_FAILED
	//     DEPRECATED_RESOURCE_USED
	//     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
	//     FIELD_VALUE_OVERRIDEN
	//     INJECTED_KERNELS_DEPRECATED
	//     NEXT_HOP_ADDRESS_NOT_ASSIGNED
	//     NEXT_HOP_CANNOT_IP_FORWARD
	//     NEXT_HOP_INSTANCE_NOT_FOUND
	//     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
	//     NEXT_HOP_NOT_RUNNING
	//     NOT_CRITICAL_ERROR
	//     NO_RESULTS_ON_PAGE
	//     REQUIRED_TOS_AGREEMENT
	//     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
	//     RESOURCE_NOT_DELETED
	//     SINGLE_INSTANCE_PROPERTY_TEMPLATE
	//     UNREACHABLE
	Code string                                         `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Data []*RegionInstanceGroupManagerList_Warning_Data `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
	// [Output Only] A human-readable description of the warning code.
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *RegionInstanceGroupManagerList_Warning) Reset() {
	*m = RegionInstanceGroupManagerList_Warning{}
}
func (m *RegionInstanceGroupManagerList_Warning) String() string { return proto.CompactTextString(m) }
func (*RegionInstanceGroupManagerList_Warning) ProtoMessage()    {}
func (*RegionInstanceGroupManagerList_Warning) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{175, 0}
}

func (m *RegionInstanceGroupManagerList_Warning) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *RegionInstanceGroupManagerList_Warning) GetData() []*RegionInstanceGroupManagerList_Warning_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *RegionInstanceGroupManagerList_Warning) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// [Output Only] Metadata about this warning in key: value format. For
// example:
// "data": [ { "key": "scope", "value": "zones/us-east1-d" }
type RegionInstanceGroupManagerList_Warning_Data struct {
	// [Output Only] A key that provides more detail on the warning being
	// returned. For example, for warnings where there are no results in a
	// list request for a particular zone, this key might be scope and the
	// key value might be the zone name. Other examples might be a key
	// indicating a deprecated resource and a suggested replacement, or a
	// warning about invalid network settings (for example, if an instance
	// attempts to perform IP forwarding but is not enabled for IP
	// forwarding).
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	// [Output Only] A warning data value corresponding to the key.
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *RegionInstanceGroupManagerList_Warning_Data) Reset() {
	*m = RegionInstanceGroupManagerList_Warning_Data{}
}
func (m *RegionInstanceGroupManagerList_Warning_Data) String() string {
	return proto.CompactTextString(m)
}
func (*RegionInstanceGroupManagerList_Warning_Data) ProtoMessage() {}
func (*RegionInstanceGroupManagerList_Warning_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{175, 0, 0}
}

func (m *RegionInstanceGroupManagerList_Warning_Data) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *RegionInstanceGroupManagerList_Warning_Data) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type RegionInstanceGroupManagersAbandonInstancesRequest struct {
	// The URLs of one or more instances to abandon. This can be a full URL
	// or a partial URL, such as zones/[ZONE]/instances/[INSTANCE_NAME].
	Instances []string `protobuf:"bytes,1,rep,name=instances" json:"instances,omitempty"`
}

func (m *RegionInstanceGroupManagersAbandonInstancesRequest) Reset() {
	*m = RegionInstanceGroupManagersAbandonInstancesRequest{}
}
func (m *RegionInstanceGroupManagersAbandonInstancesRequest) String() string {
	return proto.CompactTextString(m)
}
func (*RegionInstanceGroupManagersAbandonInstancesRequest) ProtoMessage() {}
func (*RegionInstanceGroupManagersAbandonInstancesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{176}
}

func (m *RegionInstanceGroupManagersAbandonInstancesRequest) GetInstances() []string {
	if m != nil {
		return m.Instances
	}
	return nil
}

type RegionInstanceGroupManagersDeleteInstancesRequest struct {
	// The URLs of one or more instances to delete. This can be a full URL
	// or a partial URL, such as zones/[ZONE]/instances/[INSTANCE_NAME].
	Instances []string `protobuf:"bytes,1,rep,name=instances" json:"instances,omitempty"`
}

func (m *RegionInstanceGroupManagersDeleteInstancesRequest) Reset() {
	*m = RegionInstanceGroupManagersDeleteInstancesRequest{}
}
func (m *RegionInstanceGroupManagersDeleteInstancesRequest) String() string {
	return proto.CompactTextString(m)
}
func (*RegionInstanceGroupManagersDeleteInstancesRequest) ProtoMessage() {}
func (*RegionInstanceGroupManagersDeleteInstancesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{177}
}

func (m *RegionInstanceGroupManagersDeleteInstancesRequest) GetInstances() []string {
	if m != nil {
		return m.Instances
	}
	return nil
}

type RegionInstanceGroupManagersListInstancesResponse struct {
	// List of managed instances.
	ManagedInstances []*ManagedInstance `protobuf:"bytes,1,rep,name=managedInstances" json:"managedInstances,omitempty"`
	// [Output Only] This token allows you to get the next page of results
	// for list requests. If the number of results is larger than
	// maxResults, use the nextPageToken as a value for the query parameter
	// pageToken in the next list request. Subsequent list requests will
	// have their own nextPageToken to continue paging through the results.
	NextPageToken string `protobuf:"bytes,2,opt,name=nextPageToken" json:"nextPageToken,omitempty"`
}

func (m *RegionInstanceGroupManagersListInstancesResponse) Reset() {
	*m = RegionInstanceGroupManagersListInstancesResponse{}
}
func (m *RegionInstanceGroupManagersListInstancesResponse) String() string {
	return proto.CompactTextString(m)
}
func (*RegionInstanceGroupManagersListInstancesResponse) ProtoMessage() {}
func (*RegionInstanceGroupManagersListInstancesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{178}
}

func (m *RegionInstanceGroupManagersListInstancesResponse) GetManagedInstances() []*ManagedInstance {
	if m != nil {
		return m.ManagedInstances
	}
	return nil
}

func (m *RegionInstanceGroupManagersListInstancesResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

type RegionInstanceGroupManagersRecreateRequest struct {
	// The URLs of one or more instances to recreate. This can be a full URL
	// or a partial URL, such as zones/[ZONE]/instances/[INSTANCE_NAME].
	Instances []string `protobuf:"bytes,1,rep,name=instances" json:"instances,omitempty"`
}

func (m *RegionInstanceGroupManagersRecreateRequest) Reset() {
	*m = RegionInstanceGroupManagersRecreateRequest{}
}
func (m *RegionInstanceGroupManagersRecreateRequest) String() string {
	return proto.CompactTextString(m)
}
func (*RegionInstanceGroupManagersRecreateRequest) ProtoMessage() {}
func (*RegionInstanceGroupManagersRecreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{179}
}

func (m *RegionInstanceGroupManagersRecreateRequest) GetInstances() []string {
	if m != nil {
		return m.Instances
	}
	return nil
}

type RegionInstanceGroupManagersSetAutoHealingRequest struct {
	AutoHealingPolicies []*InstanceGroupManagerAutoHealingPolicy `protobuf:"bytes,1,rep,name=autoHealingPolicies" json:"autoHealingPolicies,omitempty"`
}

func (m *RegionInstanceGroupManagersSetAutoHealingRequest) Reset() {
	*m = RegionInstanceGroupManagersSetAutoHealingRequest{}
}
func (m *RegionInstanceGroupManagersSetAutoHealingRequest) String() string {
	return proto.CompactTextString(m)
}
func (*RegionInstanceGroupManagersSetAutoHealingRequest) ProtoMessage() {}
func (*RegionInstanceGroupManagersSetAutoHealingRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{180}
}

func (m *RegionInstanceGroupManagersSetAutoHealingRequest) GetAutoHealingPolicies() []*InstanceGroupManagerAutoHealingPolicy {
	if m != nil {
		return m.AutoHealingPolicies
	}
	return nil
}

type RegionInstanceGroupManagersSetTargetPoolsRequest struct {
	// Fingerprint of the target pools information, which is a hash of the
	// contents. This field is used for optimistic locking when you update
	// the target pool entries. This field is optional.
	Fingerprint string `protobuf:"bytes,1,opt,name=fingerprint" json:"fingerprint,omitempty"`
	// The URL of all TargetPool resources to which instances in the
	// instanceGroup field are added. The target pools automatically apply
	// to all of the instances in the managed instance group.
	TargetPools []string `protobuf:"bytes,2,rep,name=targetPools" json:"targetPools,omitempty"`
}

func (m *RegionInstanceGroupManagersSetTargetPoolsRequest) Reset() {
	*m = RegionInstanceGroupManagersSetTargetPoolsRequest{}
}
func (m *RegionInstanceGroupManagersSetTargetPoolsRequest) String() string {
	return proto.CompactTextString(m)
}
func (*RegionInstanceGroupManagersSetTargetPoolsRequest) ProtoMessage() {}
func (*RegionInstanceGroupManagersSetTargetPoolsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{181}
}

func (m *RegionInstanceGroupManagersSetTargetPoolsRequest) GetFingerprint() string {
	if m != nil {
		return m.Fingerprint
	}
	return ""
}

func (m *RegionInstanceGroupManagersSetTargetPoolsRequest) GetTargetPools() []string {
	if m != nil {
		return m.TargetPools
	}
	return nil
}

type RegionInstanceGroupManagersSetTemplateRequest struct {
	// URL of the InstanceTemplate resource from which all new instances
	// will be created.
	InstanceTemplate string `protobuf:"bytes,1,opt,name=instanceTemplate" json:"instanceTemplate,omitempty"`
}

func (m *RegionInstanceGroupManagersSetTemplateRequest) Reset() {
	*m = RegionInstanceGroupManagersSetTemplateRequest{}
}
func (m *RegionInstanceGroupManagersSetTemplateRequest) String() string {
	return proto.CompactTextString(m)
}
func (*RegionInstanceGroupManagersSetTemplateRequest) ProtoMessage() {}
func (*RegionInstanceGroupManagersSetTemplateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{182}
}

func (m *RegionInstanceGroupManagersSetTemplateRequest) GetInstanceTemplate() string {
	if m != nil {
		return m.InstanceTemplate
	}
	return ""
}

type RegionInstanceGroupsListInstances struct {
	// [Output Only] Unique identifier for the resource; defined by the
	// server.
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// A list of InstanceWithNamedPorts resources.
	Items []*InstanceWithNamedPorts `protobuf:"bytes,2,rep,name=items" json:"items,omitempty"`
	// The resource type.
	Kind string `protobuf:"bytes,3,opt,name=kind" json:"kind,omitempty"`
	// [Output Only] This token allows you to get the next page of results
	// for list requests. If the number of results is larger than
	// maxResults, use the nextPageToken as a value for the query parameter
	// pageToken in the next list request. Subsequent list requests will
	// have their own nextPageToken to continue paging through the results.
	NextPageToken string `protobuf:"bytes,4,opt,name=nextPageToken" json:"nextPageToken,omitempty"`
	// [Output Only] Server-defined URL for this resource.
	SelfLink string                                     `protobuf:"bytes,5,opt,name=selfLink" json:"selfLink,omitempty"`
	Warning  *RegionInstanceGroupsListInstances_Warning `protobuf:"bytes,6,opt,name=warning" json:"warning,omitempty"`
}

func (m *RegionInstanceGroupsListInstances) Reset()         { *m = RegionInstanceGroupsListInstances{} }
func (m *RegionInstanceGroupsListInstances) String() string { return proto.CompactTextString(m) }
func (*RegionInstanceGroupsListInstances) ProtoMessage()    {}
func (*RegionInstanceGroupsListInstances) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{183}
}

func (m *RegionInstanceGroupsListInstances) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *RegionInstanceGroupsListInstances) GetItems() []*InstanceWithNamedPorts {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *RegionInstanceGroupsListInstances) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *RegionInstanceGroupsListInstances) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

func (m *RegionInstanceGroupsListInstances) GetSelfLink() string {
	if m != nil {
		return m.SelfLink
	}
	return ""
}

func (m *RegionInstanceGroupsListInstances) GetWarning() *RegionInstanceGroupsListInstances_Warning {
	if m != nil {
		return m.Warning
	}
	return nil
}

// [Output Only] Informational warning message.
// [Output Only] Informational warning message.
type RegionInstanceGroupsListInstances_Warning struct {
	// [Output Only] A warning code, if applicable. For example, Compute
	// Engine returns NO_RESULTS_ON_PAGE if there are no results in the
	// response.
	// Valid values:
	//     CLEANUP_FAILED
	//     DEPRECATED_RESOURCE_USED
	//     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
	//     FIELD_VALUE_OVERRIDEN
	//     INJECTED_KERNELS_DEPRECATED
	//     NEXT_HOP_ADDRESS_NOT_ASSIGNED
	//     NEXT_HOP_CANNOT_IP_FORWARD
	//     NEXT_HOP_INSTANCE_NOT_FOUND
	//     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
	//     NEXT_HOP_NOT_RUNNING
	//     NOT_CRITICAL_ERROR
	//     NO_RESULTS_ON_PAGE
	//     REQUIRED_TOS_AGREEMENT
	//     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
	//     RESOURCE_NOT_DELETED
	//     SINGLE_INSTANCE_PROPERTY_TEMPLATE
	//     UNREACHABLE
	Code string                                            `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Data []*RegionInstanceGroupsListInstances_Warning_Data `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
	// [Output Only] A human-readable description of the warning code.
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *RegionInstanceGroupsListInstances_Warning) Reset() {
	*m = RegionInstanceGroupsListInstances_Warning{}
}
func (m *RegionInstanceGroupsListInstances_Warning) String() string { return proto.CompactTextString(m) }
func (*RegionInstanceGroupsListInstances_Warning) ProtoMessage()    {}
func (*RegionInstanceGroupsListInstances_Warning) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{183, 0}
}

func (m *RegionInstanceGroupsListInstances_Warning) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *RegionInstanceGroupsListInstances_Warning) GetData() []*RegionInstanceGroupsListInstances_Warning_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *RegionInstanceGroupsListInstances_Warning) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// [Output Only] Metadata about this warning in key: value format. For
// example:
// "data": [ { "key": "scope", "value": "zones/us-east1-d" }
type RegionInstanceGroupsListInstances_Warning_Data struct {
	// [Output Only] A key that provides more detail on the warning being
	// returned. For example, for warnings where there are no results in a
	// list request for a particular zone, this key might be scope and the
	// key value might be the zone name. Other examples might be a key
	// indicating a deprecated resource and a suggested replacement, or a
	// warning about invalid network settings (for example, if an instance
	// attempts to perform IP forwarding but is not enabled for IP
	// forwarding).
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	// [Output Only] A warning data value corresponding to the key.
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *RegionInstanceGroupsListInstances_Warning_Data) Reset() {
	*m = RegionInstanceGroupsListInstances_Warning_Data{}
}
func (m *RegionInstanceGroupsListInstances_Warning_Data) String() string {
	return proto.CompactTextString(m)
}
func (*RegionInstanceGroupsListInstances_Warning_Data) ProtoMessage() {}
func (*RegionInstanceGroupsListInstances_Warning_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{183, 0, 0}
}

func (m *RegionInstanceGroupsListInstances_Warning_Data) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *RegionInstanceGroupsListInstances_Warning_Data) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type RegionInstanceGroupsListInstancesRequest struct {
	// Instances in which state should be returned. Valid options are:
	// 'ALL', 'RUNNING'. By default, it lists all instances.
	// Valid values:
	//     ALL
	//     RUNNING
	InstanceState string `protobuf:"bytes,1,opt,name=instanceState" json:"instanceState,omitempty"`
	// Name of port user is interested in. It is optional. If it is set,
	// only information about this ports will be returned. If it is not set,
	// all the named ports will be returned. Always lists all instances.
	PortName string `protobuf:"bytes,2,opt,name=portName" json:"portName,omitempty"`
}

func (m *RegionInstanceGroupsListInstancesRequest) Reset() {
	*m = RegionInstanceGroupsListInstancesRequest{}
}
func (m *RegionInstanceGroupsListInstancesRequest) String() string { return proto.CompactTextString(m) }
func (*RegionInstanceGroupsListInstancesRequest) ProtoMessage()    {}
func (*RegionInstanceGroupsListInstancesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{184}
}

func (m *RegionInstanceGroupsListInstancesRequest) GetInstanceState() string {
	if m != nil {
		return m.InstanceState
	}
	return ""
}

func (m *RegionInstanceGroupsListInstancesRequest) GetPortName() string {
	if m != nil {
		return m.PortName
	}
	return ""
}

type RegionInstanceGroupsSetNamedPortsRequest struct {
	// The fingerprint of the named ports information for this instance
	// group. Use this optional property to prevent conflicts when multiple
	// users change the named ports settings concurrently. Obtain the
	// fingerprint with the instanceGroups.get method. Then, include the
	// fingerprint in your request to ensure that you do not overwrite
	// changes that were applied from another concurrent request.
	Fingerprint string `protobuf:"bytes,1,opt,name=fingerprint" json:"fingerprint,omitempty"`
	// The list of named ports to set for this instance group.
	NamedPorts []*NamedPort `protobuf:"bytes,2,rep,name=namedPorts" json:"namedPorts,omitempty"`
}

func (m *RegionInstanceGroupsSetNamedPortsRequest) Reset() {
	*m = RegionInstanceGroupsSetNamedPortsRequest{}
}
func (m *RegionInstanceGroupsSetNamedPortsRequest) String() string { return proto.CompactTextString(m) }
func (*RegionInstanceGroupsSetNamedPortsRequest) ProtoMessage()    {}
func (*RegionInstanceGroupsSetNamedPortsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{185}
}

func (m *RegionInstanceGroupsSetNamedPortsRequest) GetFingerprint() string {
	if m != nil {
		return m.Fingerprint
	}
	return ""
}

func (m *RegionInstanceGroupsSetNamedPortsRequest) GetNamedPorts() []*NamedPort {
	if m != nil {
		return m.NamedPorts
	}
	return nil
}

// Contains a list of region resources.
type RegionList struct {
	// [Output Only] Unique identifier for the resource; defined by the
	// server.
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// A list of Region resources.
	Items []*Region `protobuf:"bytes,2,rep,name=items" json:"items,omitempty"`
	// [Output Only] Type of resource. Always compute#regionList for lists
	// of regions.
	Kind string `protobuf:"bytes,3,opt,name=kind" json:"kind,omitempty"`
	// [Output Only] This token allows you to get the next page of results
	// for list requests. If the number of results is larger than
	// maxResults, use the nextPageToken as a value for the query parameter
	// pageToken in the next list request. Subsequent list requests will
	// have their own nextPageToken to continue paging through the results.
	NextPageToken string `protobuf:"bytes,4,opt,name=nextPageToken" json:"nextPageToken,omitempty"`
	// [Output Only] Server-defined URL for this resource.
	SelfLink string              `protobuf:"bytes,5,opt,name=selfLink" json:"selfLink,omitempty"`
	Warning  *RegionList_Warning `protobuf:"bytes,6,opt,name=warning" json:"warning,omitempty"`
}

func (m *RegionList) Reset()                    { *m = RegionList{} }
func (m *RegionList) String() string            { return proto.CompactTextString(m) }
func (*RegionList) ProtoMessage()               {}
func (*RegionList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{186} }

func (m *RegionList) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *RegionList) GetItems() []*Region {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *RegionList) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *RegionList) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

func (m *RegionList) GetSelfLink() string {
	if m != nil {
		return m.SelfLink
	}
	return ""
}

func (m *RegionList) GetWarning() *RegionList_Warning {
	if m != nil {
		return m.Warning
	}
	return nil
}

// [Output Only] Informational warning message.
// [Output Only] Informational warning message.
type RegionList_Warning struct {
	// [Output Only] A warning code, if applicable. For example, Compute
	// Engine returns NO_RESULTS_ON_PAGE if there are no results in the
	// response.
	// Valid values:
	//     CLEANUP_FAILED
	//     DEPRECATED_RESOURCE_USED
	//     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
	//     FIELD_VALUE_OVERRIDEN
	//     INJECTED_KERNELS_DEPRECATED
	//     NEXT_HOP_ADDRESS_NOT_ASSIGNED
	//     NEXT_HOP_CANNOT_IP_FORWARD
	//     NEXT_HOP_INSTANCE_NOT_FOUND
	//     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
	//     NEXT_HOP_NOT_RUNNING
	//     NOT_CRITICAL_ERROR
	//     NO_RESULTS_ON_PAGE
	//     REQUIRED_TOS_AGREEMENT
	//     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
	//     RESOURCE_NOT_DELETED
	//     SINGLE_INSTANCE_PROPERTY_TEMPLATE
	//     UNREACHABLE
	Code string                     `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Data []*RegionList_Warning_Data `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
	// [Output Only] A human-readable description of the warning code.
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *RegionList_Warning) Reset()                    { *m = RegionList_Warning{} }
func (m *RegionList_Warning) String() string            { return proto.CompactTextString(m) }
func (*RegionList_Warning) ProtoMessage()               {}
func (*RegionList_Warning) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{186, 0} }

func (m *RegionList_Warning) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *RegionList_Warning) GetData() []*RegionList_Warning_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *RegionList_Warning) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// [Output Only] Metadata about this warning in key: value format. For
// example:
// "data": [ { "key": "scope", "value": "zones/us-east1-d" }
type RegionList_Warning_Data struct {
	// [Output Only] A key that provides more detail on the warning being
	// returned. For example, for warnings where there are no results in a
	// list request for a particular zone, this key might be scope and the
	// key value might be the zone name. Other examples might be a key
	// indicating a deprecated resource and a suggested replacement, or a
	// warning about invalid network settings (for example, if an instance
	// attempts to perform IP forwarding but is not enabled for IP
	// forwarding).
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	// [Output Only] A warning data value corresponding to the key.
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *RegionList_Warning_Data) Reset()                    { *m = RegionList_Warning_Data{} }
func (m *RegionList_Warning_Data) String() string            { return proto.CompactTextString(m) }
func (*RegionList_Warning_Data) ProtoMessage()               {}
func (*RegionList_Warning_Data) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{186, 0, 0} }

func (m *RegionList_Warning_Data) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *RegionList_Warning_Data) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type RegionSetLabelsRequest struct {
	// The fingerprint of the previous set of labels for this resource, used
	// to detect conflicts. The fingerprint is initially generated by
	// Compute Engine and changes after every request to modify or update
	// labels. You must always provide an up-to-date fingerprint hash in
	// order to update or change labels. Make a get() request to the
	// resource to get the latest fingerprint.
	LabelFingerprint string `protobuf:"bytes,1,opt,name=labelFingerprint" json:"labelFingerprint,omitempty"`
	// The labels to set for this resource.
	Labels map[string]string `protobuf:"bytes,2,rep,name=labels" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *RegionSetLabelsRequest) Reset()                    { *m = RegionSetLabelsRequest{} }
func (m *RegionSetLabelsRequest) String() string            { return proto.CompactTextString(m) }
func (*RegionSetLabelsRequest) ProtoMessage()               {}
func (*RegionSetLabelsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{187} }

func (m *RegionSetLabelsRequest) GetLabelFingerprint() string {
	if m != nil {
		return m.LabelFingerprint
	}
	return ""
}

func (m *RegionSetLabelsRequest) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

// Commitment for a particular resource (a Commitment is composed of one
// or more of these).
type ResourceCommitment struct {
	// The amount of the resource purchased (in a type-dependent unit, such
	// as bytes). For vCPUs, this can just be an integer. For memory, this
	// must be provided in MB. Memory must be a multiple of 256 MB, with up
	// to 6.5GB of memory per every vCPU.
	Amount string `protobuf:"bytes,1,opt,name=amount" json:"amount,omitempty"`
	// Type of resource for which this commitment applies. Possible values
	// are VCPU and MEMORY
	// Valid values:
	//     MEMORY
	//     UNSPECIFIED
	//     VCPU
	Type string `protobuf:"bytes,2,opt,name=type" json:"type,omitempty"`
}

func (m *ResourceCommitment) Reset()                    { *m = ResourceCommitment{} }
func (m *ResourceCommitment) String() string            { return proto.CompactTextString(m) }
func (*ResourceCommitment) ProtoMessage()               {}
func (*ResourceCommitment) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{188} }

func (m *ResourceCommitment) GetAmount() string {
	if m != nil {
		return m.Amount
	}
	return ""
}

func (m *ResourceCommitment) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

type ResourceGroupReference struct {
	// A URI referencing one of the instance groups listed in the backend
	// service.
	Group string `protobuf:"bytes,1,opt,name=group" json:"group,omitempty"`
}

func (m *ResourceGroupReference) Reset()                    { *m = ResourceGroupReference{} }
func (m *ResourceGroupReference) String() string            { return proto.CompactTextString(m) }
func (*ResourceGroupReference) ProtoMessage()               {}
func (*ResourceGroupReference) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{189} }

func (m *ResourceGroupReference) GetGroup() string {
	if m != nil {
		return m.Group
	}
	return ""
}

// Represents a Route resource. A route specifies how certain packets
// should be handled by the network. Routes are associated with
// instances by tags and the set of routes for a particular instance is
// called its routing table.
//
// For each packet leaving an instance, the system searches that
// instance's routing table for a single best matching route. Routes
// match packets by destination IP address, preferring smaller or more
// specific ranges over larger ones. If there is a tie, the system
// selects the route with the smallest priority value. If there is still
// a tie, it uses the layer three and four packet headers to select just
// one of the remaining matching routes. The packet is then forwarded as
// specified by the nextHop field of the winning route - either to
// another instance destination, an instance gateway, or a Google
// Compute Engine-operated gateway.
//
// Packets that do not match any route in the sending instance's routing
// table are dropped.
type Route struct {
	// [Output Only] Creation timestamp in RFC3339 text format.
	CreationTimestamp string `protobuf:"bytes,1,opt,name=creationTimestamp" json:"creationTimestamp,omitempty"`
	// An optional description of this resource. Provide this property when
	// you create the resource.
	Description string `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	// The destination range of outgoing packets that this route applies to.
	// Only IPv4 is supported.
	DestRange string `protobuf:"bytes,3,opt,name=destRange" json:"destRange,omitempty"`
	// [Output Only] The unique identifier for the resource. This identifier
	// is defined by the server.
	Id string `protobuf:"bytes,4,opt,name=id" json:"id,omitempty"`
	// [Output Only] Type of this resource. Always compute#routes for Route
	// resources.
	Kind string `protobuf:"bytes,5,opt,name=kind" json:"kind,omitempty"`
	// Name of the resource. Provided by the client when the resource is
	// created. The name must be 1-63 characters long, and comply with
	// RFC1035. Specifically, the name must be 1-63 characters long and
	// match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means
	// the first character must be a lowercase letter, and all following
	// characters must be a dash, lowercase letter, or digit, except the
	// last character, which cannot be a dash.
	Name string `protobuf:"bytes,6,opt,name=name" json:"name,omitempty"`
	// Fully-qualified URL of the network that this route applies to.
	Network string `protobuf:"bytes,7,opt,name=network" json:"network,omitempty"`
	// The URL to a gateway that should handle matching packets. You can
	// only specify the internet gateway using a full or partial valid URL:
	// projects/<project-id>/global/gateways/default-internet-gateway
	NextHopGateway string `protobuf:"bytes,8,opt,name=nextHopGateway" json:"nextHopGateway,omitempty"`
	// The URL to an instance that should handle matching packets. You can
	// specify this as a full or partial URL. For example:
	// https://www.googleapis.com/compute/v1/projects/project/zones/zone/instances/
	NextHopInstance string `protobuf:"bytes,9,opt,name=nextHopInstance" json:"nextHopInstance,omitempty"`
	// The network IP address of an instance that should handle matching
	// packets. Only IPv4 is supported.
	NextHopIp string `protobuf:"bytes,10,opt,name=nextHopIp" json:"nextHopIp,omitempty"`
	// The URL of the local network if it should handle matching packets.
	NextHopNetwork string `protobuf:"bytes,11,opt,name=nextHopNetwork" json:"nextHopNetwork,omitempty"`
	// [Output Only] The network peering name that should handle matching
	// packets, which should conform to RFC1035.
	NextHopPeering string `protobuf:"bytes,12,opt,name=nextHopPeering" json:"nextHopPeering,omitempty"`
	// The URL to a VpnTunnel that should handle matching packets.
	NextHopVpnTunnel string `protobuf:"bytes,13,opt,name=nextHopVpnTunnel" json:"nextHopVpnTunnel,omitempty"`
	// The priority of this route. Priority is used to break ties in cases
	// where there is more than one matching route of equal prefix length.
	// In the case of two routes with equal prefix length, the one with the
	// lowest-numbered priority value wins. Default value is 1000. Valid
	// range is 0 through 65535.
	Priority uint32 `protobuf:"varint,14,opt,name=priority" json:"priority,omitempty"`
	// [Output Only] Server-defined fully-qualified URL for this resource.
	SelfLink string `protobuf:"bytes,15,opt,name=selfLink" json:"selfLink,omitempty"`
	// A list of instance tags to which this route applies.
	Tags     []string          `protobuf:"bytes,16,rep,name=tags" json:"tags,omitempty"`
	Warnings []*Route_Warnings `protobuf:"bytes,17,rep,name=warnings" json:"warnings,omitempty"`
}

func (m *Route) Reset()                    { *m = Route{} }
func (m *Route) String() string            { return proto.CompactTextString(m) }
func (*Route) ProtoMessage()               {}
func (*Route) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{190} }

func (m *Route) GetCreationTimestamp() string {
	if m != nil {
		return m.CreationTimestamp
	}
	return ""
}

func (m *Route) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Route) GetDestRange() string {
	if m != nil {
		return m.DestRange
	}
	return ""
}

func (m *Route) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Route) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *Route) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Route) GetNetwork() string {
	if m != nil {
		return m.Network
	}
	return ""
}

func (m *Route) GetNextHopGateway() string {
	if m != nil {
		return m.NextHopGateway
	}
	return ""
}

func (m *Route) GetNextHopInstance() string {
	if m != nil {
		return m.NextHopInstance
	}
	return ""
}

func (m *Route) GetNextHopIp() string {
	if m != nil {
		return m.NextHopIp
	}
	return ""
}

func (m *Route) GetNextHopNetwork() string {
	if m != nil {
		return m.NextHopNetwork
	}
	return ""
}

func (m *Route) GetNextHopPeering() string {
	if m != nil {
		return m.NextHopPeering
	}
	return ""
}

func (m *Route) GetNextHopVpnTunnel() string {
	if m != nil {
		return m.NextHopVpnTunnel
	}
	return ""
}

func (m *Route) GetPriority() uint32 {
	if m != nil {
		return m.Priority
	}
	return 0
}

func (m *Route) GetSelfLink() string {
	if m != nil {
		return m.SelfLink
	}
	return ""
}

func (m *Route) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Route) GetWarnings() []*Route_Warnings {
	if m != nil {
		return m.Warnings
	}
	return nil
}

// [Output Only] If potential misconfigurations are detected for this
// route, this field will be populated with warning messages.
type Route_Warnings struct {
	// [Output Only] A warning code, if applicable. For example, Compute
	// Engine returns NO_RESULTS_ON_PAGE if there are no results in the
	// response.
	// Valid values:
	//     CLEANUP_FAILED
	//     DEPRECATED_RESOURCE_USED
	//     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
	//     FIELD_VALUE_OVERRIDEN
	//     INJECTED_KERNELS_DEPRECATED
	//     NEXT_HOP_ADDRESS_NOT_ASSIGNED
	//     NEXT_HOP_CANNOT_IP_FORWARD
	//     NEXT_HOP_INSTANCE_NOT_FOUND
	//     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
	//     NEXT_HOP_NOT_RUNNING
	//     NOT_CRITICAL_ERROR
	//     NO_RESULTS_ON_PAGE
	//     REQUIRED_TOS_AGREEMENT
	//     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
	//     RESOURCE_NOT_DELETED
	//     SINGLE_INSTANCE_PROPERTY_TEMPLATE
	//     UNREACHABLE
	Code string                 `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Data []*Route_Warnings_Data `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
	// [Output Only] A human-readable description of the warning code.
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *Route_Warnings) Reset()                    { *m = Route_Warnings{} }
func (m *Route_Warnings) String() string            { return proto.CompactTextString(m) }
func (*Route_Warnings) ProtoMessage()               {}
func (*Route_Warnings) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{190, 0} }

func (m *Route_Warnings) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *Route_Warnings) GetData() []*Route_Warnings_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *Route_Warnings) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// [Output Only] Metadata about this warning in key: value format. For
// example:
// "data": [ { "key": "scope", "value": "zones/us-east1-d" }
type Route_Warnings_Data struct {
	// [Output Only] A key that provides more detail on the warning being
	// returned. For example, for warnings where there are no results in a
	// list request for a particular zone, this key might be scope and the
	// key value might be the zone name. Other examples might be a key
	// indicating a deprecated resource and a suggested replacement, or a
	// warning about invalid network settings (for example, if an instance
	// attempts to perform IP forwarding but is not enabled for IP
	// forwarding).
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	// [Output Only] A warning data value corresponding to the key.
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *Route_Warnings_Data) Reset()                    { *m = Route_Warnings_Data{} }
func (m *Route_Warnings_Data) String() string            { return proto.CompactTextString(m) }
func (*Route_Warnings_Data) ProtoMessage()               {}
func (*Route_Warnings_Data) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{190, 0, 0} }

func (m *Route_Warnings_Data) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Route_Warnings_Data) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

// Contains a list of Route resources.
type RouteList struct {
	// [Output Only] Unique identifier for the resource; defined by the
	// server.
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// A list of Route resources.
	Items []*Route `protobuf:"bytes,2,rep,name=items" json:"items,omitempty"`
	// Type of resource.
	Kind string `protobuf:"bytes,3,opt,name=kind" json:"kind,omitempty"`
	// [Output Only] This token allows you to get the next page of results
	// for list requests. If the number of results is larger than
	// maxResults, use the nextPageToken as a value for the query parameter
	// pageToken in the next list request. Subsequent list requests will
	// have their own nextPageToken to continue paging through the results.
	NextPageToken string `protobuf:"bytes,4,opt,name=nextPageToken" json:"nextPageToken,omitempty"`
	// [Output Only] Server-defined URL for this resource.
	SelfLink string             `protobuf:"bytes,5,opt,name=selfLink" json:"selfLink,omitempty"`
	Warning  *RouteList_Warning `protobuf:"bytes,6,opt,name=warning" json:"warning,omitempty"`
}

func (m *RouteList) Reset()                    { *m = RouteList{} }
func (m *RouteList) String() string            { return proto.CompactTextString(m) }
func (*RouteList) ProtoMessage()               {}
func (*RouteList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{191} }

func (m *RouteList) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *RouteList) GetItems() []*Route {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *RouteList) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *RouteList) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

func (m *RouteList) GetSelfLink() string {
	if m != nil {
		return m.SelfLink
	}
	return ""
}

func (m *RouteList) GetWarning() *RouteList_Warning {
	if m != nil {
		return m.Warning
	}
	return nil
}

// [Output Only] Informational warning message.
// [Output Only] Informational warning message.
type RouteList_Warning struct {
	// [Output Only] A warning code, if applicable. For example, Compute
	// Engine returns NO_RESULTS_ON_PAGE if there are no results in the
	// response.
	// Valid values:
	//     CLEANUP_FAILED
	//     DEPRECATED_RESOURCE_USED
	//     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
	//     FIELD_VALUE_OVERRIDEN
	//     INJECTED_KERNELS_DEPRECATED
	//     NEXT_HOP_ADDRESS_NOT_ASSIGNED
	//     NEXT_HOP_CANNOT_IP_FORWARD
	//     NEXT_HOP_INSTANCE_NOT_FOUND
	//     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
	//     NEXT_HOP_NOT_RUNNING
	//     NOT_CRITICAL_ERROR
	//     NO_RESULTS_ON_PAGE
	//     REQUIRED_TOS_AGREEMENT
	//     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
	//     RESOURCE_NOT_DELETED
	//     SINGLE_INSTANCE_PROPERTY_TEMPLATE
	//     UNREACHABLE
	Code string                    `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Data []*RouteList_Warning_Data `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
	// [Output Only] A human-readable description of the warning code.
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *RouteList_Warning) Reset()                    { *m = RouteList_Warning{} }
func (m *RouteList_Warning) String() string            { return proto.CompactTextString(m) }
func (*RouteList_Warning) ProtoMessage()               {}
func (*RouteList_Warning) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{191, 0} }

func (m *RouteList_Warning) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *RouteList_Warning) GetData() []*RouteList_Warning_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *RouteList_Warning) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// [Output Only] Metadata about this warning in key: value format. For
// example:
// "data": [ { "key": "scope", "value": "zones/us-east1-d" }
type RouteList_Warning_Data struct {
	// [Output Only] A key that provides more detail on the warning being
	// returned. For example, for warnings where there are no results in a
	// list request for a particular zone, this key might be scope and the
	// key value might be the zone name. Other examples might be a key
	// indicating a deprecated resource and a suggested replacement, or a
	// warning about invalid network settings (for example, if an instance
	// attempts to perform IP forwarding but is not enabled for IP
	// forwarding).
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	// [Output Only] A warning data value corresponding to the key.
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *RouteList_Warning_Data) Reset()                    { *m = RouteList_Warning_Data{} }
func (m *RouteList_Warning_Data) String() string            { return proto.CompactTextString(m) }
func (*RouteList_Warning_Data) ProtoMessage()               {}
func (*RouteList_Warning_Data) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{191, 0, 0} }

func (m *RouteList_Warning_Data) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *RouteList_Warning_Data) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

// Router resource.
type Router struct {
	// BGP information specific to this router.
	Bgp *RouterBgp `protobuf:"bytes,1,opt,name=bgp" json:"bgp,omitempty"`
	// BGP information that needs to be configured into the routing stack to
	// establish the BGP peering. It must specify peer ASN and either
	// interface name, IP, or peer IP. Please refer to RFC4273.
	BgpPeers []*RouterBgpPeer `protobuf:"bytes,2,rep,name=bgpPeers" json:"bgpPeers,omitempty"`
	// [Output Only] Creation timestamp in RFC3339 text format.
	CreationTimestamp string `protobuf:"bytes,3,opt,name=creationTimestamp" json:"creationTimestamp,omitempty"`
	// An optional description of this resource. Provide this property when
	// you create the resource.
	Description string `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	// [Output Only] The unique identifier for the resource. This identifier
	// is defined by the server.
	Id string `protobuf:"bytes,5,opt,name=id" json:"id,omitempty"`
	// Router interfaces. Each interface requires either one linked resource
	// (e.g. linkedVpnTunnel), or IP address and IP address range (e.g.
	// ipRange), or both.
	Interfaces []*RouterInterface `protobuf:"bytes,6,rep,name=interfaces" json:"interfaces,omitempty"`
	// [Output Only] Type of resource. Always compute#router for routers.
	Kind string `protobuf:"bytes,7,opt,name=kind" json:"kind,omitempty"`
	// Name of the resource. Provided by the client when the resource is
	// created. The name must be 1-63 characters long, and comply with
	// RFC1035. Specifically, the name must be 1-63 characters long and
	// match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means
	// the first character must be a lowercase letter, and all following
	// characters must be a dash, lowercase letter, or digit, except the
	// last character, which cannot be a dash.
	Name string `protobuf:"bytes,8,opt,name=name" json:"name,omitempty"`
	// URI of the network to which this router belongs.
	Network string `protobuf:"bytes,9,opt,name=network" json:"network,omitempty"`
	// [Output Only] URI of the region where the router resides.
	Region string `protobuf:"bytes,10,opt,name=region" json:"region,omitempty"`
	// [Output Only] Server-defined URL for the resource.
	SelfLink string `protobuf:"bytes,11,opt,name=selfLink" json:"selfLink,omitempty"`
}

func (m *Router) Reset()                    { *m = Router{} }
func (m *Router) String() string            { return proto.CompactTextString(m) }
func (*Router) ProtoMessage()               {}
func (*Router) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{192} }

func (m *Router) GetBgp() *RouterBgp {
	if m != nil {
		return m.Bgp
	}
	return nil
}

func (m *Router) GetBgpPeers() []*RouterBgpPeer {
	if m != nil {
		return m.BgpPeers
	}
	return nil
}

func (m *Router) GetCreationTimestamp() string {
	if m != nil {
		return m.CreationTimestamp
	}
	return ""
}

func (m *Router) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Router) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Router) GetInterfaces() []*RouterInterface {
	if m != nil {
		return m.Interfaces
	}
	return nil
}

func (m *Router) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *Router) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Router) GetNetwork() string {
	if m != nil {
		return m.Network
	}
	return ""
}

func (m *Router) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *Router) GetSelfLink() string {
	if m != nil {
		return m.SelfLink
	}
	return ""
}

// Contains a list of routers.
type RouterAggregatedList struct {
	// [Output Only] Unique identifier for the resource; defined by the
	// server.
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// A list of Router resources.
	Items map[string]*RoutersScopedList `protobuf:"bytes,2,rep,name=items" json:"items,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Type of resource.
	Kind string `protobuf:"bytes,3,opt,name=kind" json:"kind,omitempty"`
	// [Output Only] This token allows you to get the next page of results
	// for list requests. If the number of results is larger than
	// maxResults, use the nextPageToken as a value for the query parameter
	// pageToken in the next list request. Subsequent list requests will
	// have their own nextPageToken to continue paging through the results.
	NextPageToken string `protobuf:"bytes,4,opt,name=nextPageToken" json:"nextPageToken,omitempty"`
	// [Output Only] Server-defined URL for this resource.
	SelfLink string                        `protobuf:"bytes,5,opt,name=selfLink" json:"selfLink,omitempty"`
	Warning  *RouterAggregatedList_Warning `protobuf:"bytes,6,opt,name=warning" json:"warning,omitempty"`
}

func (m *RouterAggregatedList) Reset()                    { *m = RouterAggregatedList{} }
func (m *RouterAggregatedList) String() string            { return proto.CompactTextString(m) }
func (*RouterAggregatedList) ProtoMessage()               {}
func (*RouterAggregatedList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{193} }

func (m *RouterAggregatedList) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *RouterAggregatedList) GetItems() map[string]*RoutersScopedList {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *RouterAggregatedList) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *RouterAggregatedList) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

func (m *RouterAggregatedList) GetSelfLink() string {
	if m != nil {
		return m.SelfLink
	}
	return ""
}

func (m *RouterAggregatedList) GetWarning() *RouterAggregatedList_Warning {
	if m != nil {
		return m.Warning
	}
	return nil
}

// [Output Only] Informational warning message.
// [Output Only] Informational warning message.
type RouterAggregatedList_Warning struct {
	// [Output Only] A warning code, if applicable. For example, Compute
	// Engine returns NO_RESULTS_ON_PAGE if there are no results in the
	// response.
	// Valid values:
	//     CLEANUP_FAILED
	//     DEPRECATED_RESOURCE_USED
	//     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
	//     FIELD_VALUE_OVERRIDEN
	//     INJECTED_KERNELS_DEPRECATED
	//     NEXT_HOP_ADDRESS_NOT_ASSIGNED
	//     NEXT_HOP_CANNOT_IP_FORWARD
	//     NEXT_HOP_INSTANCE_NOT_FOUND
	//     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
	//     NEXT_HOP_NOT_RUNNING
	//     NOT_CRITICAL_ERROR
	//     NO_RESULTS_ON_PAGE
	//     REQUIRED_TOS_AGREEMENT
	//     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
	//     RESOURCE_NOT_DELETED
	//     SINGLE_INSTANCE_PROPERTY_TEMPLATE
	//     UNREACHABLE
	Code string                               `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Data []*RouterAggregatedList_Warning_Data `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
	// [Output Only] A human-readable description of the warning code.
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *RouterAggregatedList_Warning) Reset()         { *m = RouterAggregatedList_Warning{} }
func (m *RouterAggregatedList_Warning) String() string { return proto.CompactTextString(m) }
func (*RouterAggregatedList_Warning) ProtoMessage()    {}
func (*RouterAggregatedList_Warning) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{193, 1}
}

func (m *RouterAggregatedList_Warning) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *RouterAggregatedList_Warning) GetData() []*RouterAggregatedList_Warning_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *RouterAggregatedList_Warning) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// [Output Only] Metadata about this warning in key: value format. For
// example:
// "data": [ { "key": "scope", "value": "zones/us-east1-d" }
type RouterAggregatedList_Warning_Data struct {
	// [Output Only] A key that provides more detail on the warning being
	// returned. For example, for warnings where there are no results in a
	// list request for a particular zone, this key might be scope and the
	// key value might be the zone name. Other examples might be a key
	// indicating a deprecated resource and a suggested replacement, or a
	// warning about invalid network settings (for example, if an instance
	// attempts to perform IP forwarding but is not enabled for IP
	// forwarding).
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	// [Output Only] A warning data value corresponding to the key.
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *RouterAggregatedList_Warning_Data) Reset()         { *m = RouterAggregatedList_Warning_Data{} }
func (m *RouterAggregatedList_Warning_Data) String() string { return proto.CompactTextString(m) }
func (*RouterAggregatedList_Warning_Data) ProtoMessage()    {}
func (*RouterAggregatedList_Warning_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{193, 1, 0}
}

func (m *RouterAggregatedList_Warning_Data) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *RouterAggregatedList_Warning_Data) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type RouterBgp struct {
	// Local BGP Autonomous System Number (ASN). Must be an RFC6996 private
	// ASN, either 16-bit or 32-bit. The value will be fixed for this router
	// resource. All VPN tunnels that link to this router will have the same
	// local ASN.
	Asn uint32 `protobuf:"varint,1,opt,name=asn" json:"asn,omitempty"`
}

func (m *RouterBgp) Reset()                    { *m = RouterBgp{} }
func (m *RouterBgp) String() string            { return proto.CompactTextString(m) }
func (*RouterBgp) ProtoMessage()               {}
func (*RouterBgp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{194} }

func (m *RouterBgp) GetAsn() uint32 {
	if m != nil {
		return m.Asn
	}
	return 0
}

type RouterBgpPeer struct {
	// The priority of routes advertised to this BGP peer. In the case where
	// there is more than one matching route of maximum length, the routes
	// with lowest priority value win.
	AdvertisedRoutePriority uint32 `protobuf:"varint,1,opt,name=advertisedRoutePriority" json:"advertisedRoutePriority,omitempty"`
	// Name of the interface the BGP peer is associated with.
	InterfaceName string `protobuf:"bytes,2,opt,name=interfaceName" json:"interfaceName,omitempty"`
	// IP address of the interface inside Google Cloud Platform. Only IPv4
	// is supported.
	IpAddress string `protobuf:"bytes,3,opt,name=ipAddress" json:"ipAddress,omitempty"`
	// Name of this BGP peer. The name must be 1-63 characters long and
	// comply with RFC1035.
	Name string `protobuf:"bytes,4,opt,name=name" json:"name,omitempty"`
	// Peer BGP Autonomous System Number (ASN). For VPN use case, this value
	// can be different for every tunnel.
	PeerAsn uint32 `protobuf:"varint,5,opt,name=peerAsn" json:"peerAsn,omitempty"`
	// IP address of the BGP interface outside Google cloud. Only IPv4 is
	// supported.
	PeerIpAddress string `protobuf:"bytes,6,opt,name=peerIpAddress" json:"peerIpAddress,omitempty"`
}

func (m *RouterBgpPeer) Reset()                    { *m = RouterBgpPeer{} }
func (m *RouterBgpPeer) String() string            { return proto.CompactTextString(m) }
func (*RouterBgpPeer) ProtoMessage()               {}
func (*RouterBgpPeer) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{195} }

func (m *RouterBgpPeer) GetAdvertisedRoutePriority() uint32 {
	if m != nil {
		return m.AdvertisedRoutePriority
	}
	return 0
}

func (m *RouterBgpPeer) GetInterfaceName() string {
	if m != nil {
		return m.InterfaceName
	}
	return ""
}

func (m *RouterBgpPeer) GetIpAddress() string {
	if m != nil {
		return m.IpAddress
	}
	return ""
}

func (m *RouterBgpPeer) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *RouterBgpPeer) GetPeerAsn() uint32 {
	if m != nil {
		return m.PeerAsn
	}
	return 0
}

func (m *RouterBgpPeer) GetPeerIpAddress() string {
	if m != nil {
		return m.PeerIpAddress
	}
	return ""
}

type RouterInterface struct {
	// IP address and range of the interface. The IP range must be in the
	// RFC3927 link-local IP space. The value must be a CIDR-formatted
	// string, for example: 169.254.0.1/30. NOTE: Do not truncate the
	// address as it represents the IP address of the interface.
	IpRange string `protobuf:"bytes,1,opt,name=ipRange" json:"ipRange,omitempty"`
	// URI of the linked interconnect attachment. It must be in the same
	// region as the router. Each interface can have at most one linked
	// resource and it could either be a VPN Tunnel or an interconnect
	// attachment.
	LinkedInterconnectAttachment string `protobuf:"bytes,2,opt,name=linkedInterconnectAttachment" json:"linkedInterconnectAttachment,omitempty"`
	// URI of the linked VPN tunnel. It must be in the same region as the
	// router. Each interface can have at most one linked resource and it
	// could either be a VPN Tunnel or an interconnect attachment.
	LinkedVpnTunnel string `protobuf:"bytes,3,opt,name=linkedVpnTunnel" json:"linkedVpnTunnel,omitempty"`
	// Name of this interface entry. The name must be 1-63 characters long
	// and comply with RFC1035.
	Name string `protobuf:"bytes,4,opt,name=name" json:"name,omitempty"`
}

func (m *RouterInterface) Reset()                    { *m = RouterInterface{} }
func (m *RouterInterface) String() string            { return proto.CompactTextString(m) }
func (*RouterInterface) ProtoMessage()               {}
func (*RouterInterface) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{196} }

func (m *RouterInterface) GetIpRange() string {
	if m != nil {
		return m.IpRange
	}
	return ""
}

func (m *RouterInterface) GetLinkedInterconnectAttachment() string {
	if m != nil {
		return m.LinkedInterconnectAttachment
	}
	return ""
}

func (m *RouterInterface) GetLinkedVpnTunnel() string {
	if m != nil {
		return m.LinkedVpnTunnel
	}
	return ""
}

func (m *RouterInterface) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// Contains a list of Router resources.
type RouterList struct {
	// [Output Only] Unique identifier for the resource; defined by the
	// server.
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// A list of Router resources.
	Items []*Router `protobuf:"bytes,2,rep,name=items" json:"items,omitempty"`
	// [Output Only] Type of resource. Always compute#router for routers.
	Kind string `protobuf:"bytes,3,opt,name=kind" json:"kind,omitempty"`
	// [Output Only] This token allows you to get the next page of results
	// for list requests. If the number of results is larger than
	// maxResults, use the nextPageToken as a value for the query parameter
	// pageToken in the next list request. Subsequent list requests will
	// have their own nextPageToken to continue paging through the results.
	NextPageToken string `protobuf:"bytes,4,opt,name=nextPageToken" json:"nextPageToken,omitempty"`
	// [Output Only] Server-defined URL for this resource.
	SelfLink string              `protobuf:"bytes,5,opt,name=selfLink" json:"selfLink,omitempty"`
	Warning  *RouterList_Warning `protobuf:"bytes,6,opt,name=warning" json:"warning,omitempty"`
}

func (m *RouterList) Reset()                    { *m = RouterList{} }
func (m *RouterList) String() string            { return proto.CompactTextString(m) }
func (*RouterList) ProtoMessage()               {}
func (*RouterList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{197} }

func (m *RouterList) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *RouterList) GetItems() []*Router {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *RouterList) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *RouterList) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

func (m *RouterList) GetSelfLink() string {
	if m != nil {
		return m.SelfLink
	}
	return ""
}

func (m *RouterList) GetWarning() *RouterList_Warning {
	if m != nil {
		return m.Warning
	}
	return nil
}

// [Output Only] Informational warning message.
// [Output Only] Informational warning message.
type RouterList_Warning struct {
	// [Output Only] A warning code, if applicable. For example, Compute
	// Engine returns NO_RESULTS_ON_PAGE if there are no results in the
	// response.
	// Valid values:
	//     CLEANUP_FAILED
	//     DEPRECATED_RESOURCE_USED
	//     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
	//     FIELD_VALUE_OVERRIDEN
	//     INJECTED_KERNELS_DEPRECATED
	//     NEXT_HOP_ADDRESS_NOT_ASSIGNED
	//     NEXT_HOP_CANNOT_IP_FORWARD
	//     NEXT_HOP_INSTANCE_NOT_FOUND
	//     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
	//     NEXT_HOP_NOT_RUNNING
	//     NOT_CRITICAL_ERROR
	//     NO_RESULTS_ON_PAGE
	//     REQUIRED_TOS_AGREEMENT
	//     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
	//     RESOURCE_NOT_DELETED
	//     SINGLE_INSTANCE_PROPERTY_TEMPLATE
	//     UNREACHABLE
	Code string                     `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Data []*RouterList_Warning_Data `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
	// [Output Only] A human-readable description of the warning code.
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *RouterList_Warning) Reset()                    { *m = RouterList_Warning{} }
func (m *RouterList_Warning) String() string            { return proto.CompactTextString(m) }
func (*RouterList_Warning) ProtoMessage()               {}
func (*RouterList_Warning) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{197, 0} }

func (m *RouterList_Warning) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *RouterList_Warning) GetData() []*RouterList_Warning_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *RouterList_Warning) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// [Output Only] Metadata about this warning in key: value format. For
// example:
// "data": [ { "key": "scope", "value": "zones/us-east1-d" }
type RouterList_Warning_Data struct {
	// [Output Only] A key that provides more detail on the warning being
	// returned. For example, for warnings where there are no results in a
	// list request for a particular zone, this key might be scope and the
	// key value might be the zone name. Other examples might be a key
	// indicating a deprecated resource and a suggested replacement, or a
	// warning about invalid network settings (for example, if an instance
	// attempts to perform IP forwarding but is not enabled for IP
	// forwarding).
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	// [Output Only] A warning data value corresponding to the key.
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *RouterList_Warning_Data) Reset()                    { *m = RouterList_Warning_Data{} }
func (m *RouterList_Warning_Data) String() string            { return proto.CompactTextString(m) }
func (*RouterList_Warning_Data) ProtoMessage()               {}
func (*RouterList_Warning_Data) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{197, 0, 0} }

func (m *RouterList_Warning_Data) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *RouterList_Warning_Data) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type RouterStatus struct {
	// Best routes for this router's network.
	BestRoutes []*Route `protobuf:"bytes,1,rep,name=bestRoutes" json:"bestRoutes,omitempty"`
	// Best routes learned by this router.
	BestRoutesForRouter []*Route                     `protobuf:"bytes,2,rep,name=bestRoutesForRouter" json:"bestRoutesForRouter,omitempty"`
	BgpPeerStatus       []*RouterStatusBgpPeerStatus `protobuf:"bytes,3,rep,name=bgpPeerStatus" json:"bgpPeerStatus,omitempty"`
	// URI of the network to which this router belongs.
	Network string `protobuf:"bytes,4,opt,name=network" json:"network,omitempty"`
}

func (m *RouterStatus) Reset()                    { *m = RouterStatus{} }
func (m *RouterStatus) String() string            { return proto.CompactTextString(m) }
func (*RouterStatus) ProtoMessage()               {}
func (*RouterStatus) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{198} }

func (m *RouterStatus) GetBestRoutes() []*Route {
	if m != nil {
		return m.BestRoutes
	}
	return nil
}

func (m *RouterStatus) GetBestRoutesForRouter() []*Route {
	if m != nil {
		return m.BestRoutesForRouter
	}
	return nil
}

func (m *RouterStatus) GetBgpPeerStatus() []*RouterStatusBgpPeerStatus {
	if m != nil {
		return m.BgpPeerStatus
	}
	return nil
}

func (m *RouterStatus) GetNetwork() string {
	if m != nil {
		return m.Network
	}
	return ""
}

type RouterStatusBgpPeerStatus struct {
	// Routes that were advertised to the remote BGP peer
	AdvertisedRoutes []*Route `protobuf:"bytes,1,rep,name=advertisedRoutes" json:"advertisedRoutes,omitempty"`
	// IP address of the local BGP interface.
	IpAddress string `protobuf:"bytes,2,opt,name=ipAddress" json:"ipAddress,omitempty"`
	// URL of the VPN tunnel that this BGP peer controls.
	LinkedVpnTunnel string `protobuf:"bytes,3,opt,name=linkedVpnTunnel" json:"linkedVpnTunnel,omitempty"`
	// Name of this BGP peer. Unique within the Routers resource.
	Name string `protobuf:"bytes,4,opt,name=name" json:"name,omitempty"`
	// Number of routes learned from the remote BGP Peer.
	NumLearnedRoutes uint32 `protobuf:"varint,5,opt,name=numLearnedRoutes" json:"numLearnedRoutes,omitempty"`
	// IP address of the remote BGP interface.
	PeerIpAddress string `protobuf:"bytes,6,opt,name=peerIpAddress" json:"peerIpAddress,omitempty"`
	// BGP state as specified in RFC1771.
	State string `protobuf:"bytes,7,opt,name=state" json:"state,omitempty"`
	// Status of the BGP peer: {UP, DOWN}
	// Valid values:
	//     DOWN
	//     UNKNOWN
	//     UP
	Status string `protobuf:"bytes,8,opt,name=status" json:"status,omitempty"`
	// Time this session has been up. Format: 14 years, 51 weeks, 6 days, 23
	// hours, 59 minutes, 59 seconds
	Uptime string `protobuf:"bytes,9,opt,name=uptime" json:"uptime,omitempty"`
	// Time this session has been up, in seconds. Format: 145
	UptimeSeconds string `protobuf:"bytes,10,opt,name=uptimeSeconds" json:"uptimeSeconds,omitempty"`
}

func (m *RouterStatusBgpPeerStatus) Reset()                    { *m = RouterStatusBgpPeerStatus{} }
func (m *RouterStatusBgpPeerStatus) String() string            { return proto.CompactTextString(m) }
func (*RouterStatusBgpPeerStatus) ProtoMessage()               {}
func (*RouterStatusBgpPeerStatus) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{199} }

func (m *RouterStatusBgpPeerStatus) GetAdvertisedRoutes() []*Route {
	if m != nil {
		return m.AdvertisedRoutes
	}
	return nil
}

func (m *RouterStatusBgpPeerStatus) GetIpAddress() string {
	if m != nil {
		return m.IpAddress
	}
	return ""
}

func (m *RouterStatusBgpPeerStatus) GetLinkedVpnTunnel() string {
	if m != nil {
		return m.LinkedVpnTunnel
	}
	return ""
}

func (m *RouterStatusBgpPeerStatus) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *RouterStatusBgpPeerStatus) GetNumLearnedRoutes() uint32 {
	if m != nil {
		return m.NumLearnedRoutes
	}
	return 0
}

func (m *RouterStatusBgpPeerStatus) GetPeerIpAddress() string {
	if m != nil {
		return m.PeerIpAddress
	}
	return ""
}

func (m *RouterStatusBgpPeerStatus) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *RouterStatusBgpPeerStatus) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *RouterStatusBgpPeerStatus) GetUptime() string {
	if m != nil {
		return m.Uptime
	}
	return ""
}

func (m *RouterStatusBgpPeerStatus) GetUptimeSeconds() string {
	if m != nil {
		return m.UptimeSeconds
	}
	return ""
}

type RouterStatusResponse struct {
	// Type of resource.
	Kind   string        `protobuf:"bytes,1,opt,name=kind" json:"kind,omitempty"`
	Result *RouterStatus `protobuf:"bytes,2,opt,name=result" json:"result,omitempty"`
}

func (m *RouterStatusResponse) Reset()                    { *m = RouterStatusResponse{} }
func (m *RouterStatusResponse) String() string            { return proto.CompactTextString(m) }
func (*RouterStatusResponse) ProtoMessage()               {}
func (*RouterStatusResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{200} }

func (m *RouterStatusResponse) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *RouterStatusResponse) GetResult() *RouterStatus {
	if m != nil {
		return m.Result
	}
	return nil
}

type RoutersPreviewResponse struct {
	// Preview of given router.
	Resource *Router `protobuf:"bytes,1,opt,name=resource" json:"resource,omitempty"`
}

func (m *RoutersPreviewResponse) Reset()                    { *m = RoutersPreviewResponse{} }
func (m *RoutersPreviewResponse) String() string            { return proto.CompactTextString(m) }
func (*RoutersPreviewResponse) ProtoMessage()               {}
func (*RoutersPreviewResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{201} }

func (m *RoutersPreviewResponse) GetResource() *Router {
	if m != nil {
		return m.Resource
	}
	return nil
}

type RoutersScopedList struct {
	// List of routers contained in this scope.
	Routers []*Router                  `protobuf:"bytes,1,rep,name=routers" json:"routers,omitempty"`
	Warning *RoutersScopedList_Warning `protobuf:"bytes,2,opt,name=warning" json:"warning,omitempty"`
}

func (m *RoutersScopedList) Reset()                    { *m = RoutersScopedList{} }
func (m *RoutersScopedList) String() string            { return proto.CompactTextString(m) }
func (*RoutersScopedList) ProtoMessage()               {}
func (*RoutersScopedList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{202} }

func (m *RoutersScopedList) GetRouters() []*Router {
	if m != nil {
		return m.Routers
	}
	return nil
}

func (m *RoutersScopedList) GetWarning() *RoutersScopedList_Warning {
	if m != nil {
		return m.Warning
	}
	return nil
}

// Informational warning which replaces the list of routers when the
// list is empty.
// Informational warning which replaces the list of routers when the
// list is empty.
type RoutersScopedList_Warning struct {
	// [Output Only] A warning code, if applicable. For example, Compute
	// Engine returns NO_RESULTS_ON_PAGE if there are no results in the
	// response.
	// Valid values:
	//     CLEANUP_FAILED
	//     DEPRECATED_RESOURCE_USED
	//     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
	//     FIELD_VALUE_OVERRIDEN
	//     INJECTED_KERNELS_DEPRECATED
	//     NEXT_HOP_ADDRESS_NOT_ASSIGNED
	//     NEXT_HOP_CANNOT_IP_FORWARD
	//     NEXT_HOP_INSTANCE_NOT_FOUND
	//     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
	//     NEXT_HOP_NOT_RUNNING
	//     NOT_CRITICAL_ERROR
	//     NO_RESULTS_ON_PAGE
	//     REQUIRED_TOS_AGREEMENT
	//     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
	//     RESOURCE_NOT_DELETED
	//     SINGLE_INSTANCE_PROPERTY_TEMPLATE
	//     UNREACHABLE
	Code string                            `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Data []*RoutersScopedList_Warning_Data `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
	// [Output Only] A human-readable description of the warning code.
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *RoutersScopedList_Warning) Reset()                    { *m = RoutersScopedList_Warning{} }
func (m *RoutersScopedList_Warning) String() string            { return proto.CompactTextString(m) }
func (*RoutersScopedList_Warning) ProtoMessage()               {}
func (*RoutersScopedList_Warning) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{202, 0} }

func (m *RoutersScopedList_Warning) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *RoutersScopedList_Warning) GetData() []*RoutersScopedList_Warning_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *RoutersScopedList_Warning) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// [Output Only] Metadata about this warning in key: value format. For
// example:
// "data": [ { "key": "scope", "value": "zones/us-east1-d" }
type RoutersScopedList_Warning_Data struct {
	// [Output Only] A key that provides more detail on the warning being
	// returned. For example, for warnings where there are no results in a
	// list request for a particular zone, this key might be scope and the
	// key value might be the zone name. Other examples might be a key
	// indicating a deprecated resource and a suggested replacement, or a
	// warning about invalid network settings (for example, if an instance
	// attempts to perform IP forwarding but is not enabled for IP
	// forwarding).
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	// [Output Only] A warning data value corresponding to the key.
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *RoutersScopedList_Warning_Data) Reset()         { *m = RoutersScopedList_Warning_Data{} }
func (m *RoutersScopedList_Warning_Data) String() string { return proto.CompactTextString(m) }
func (*RoutersScopedList_Warning_Data) ProtoMessage()    {}
func (*RoutersScopedList_Warning_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{202, 0, 0}
}

func (m *RoutersScopedList_Warning_Data) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *RoutersScopedList_Warning_Data) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

// A rule to be applied in a Policy.
type Rule struct {
	// Required
	// Valid values:
	//     ALLOW
	//     ALLOW_WITH_LOG
	//     DENY
	//     DENY_WITH_LOG
	//     LOG
	//     NO_ACTION
	Action string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	// Additional restrictions that must be met
	Conditions []*Condition `protobuf:"bytes,2,rep,name=conditions" json:"conditions,omitempty"`
	// Human-readable description of the rule.
	Description string `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	// If one or more 'in' clauses are specified, the rule matches if the
	// PRINCIPAL/AUTHORITY_SELECTOR is in at least one of these entries.
	Ins []string `protobuf:"bytes,4,rep,name=ins" json:"ins,omitempty"`
	// The config returned to callers of tech.iam.IAM.CheckPolicy for any
	// entries that match the LOG action.
	LogConfigs []*LogConfig `protobuf:"bytes,5,rep,name=logConfigs" json:"logConfigs,omitempty"`
	// If one or more 'not_in' clauses are specified, the rule matches if
	// the PRINCIPAL/AUTHORITY_SELECTOR is in none of the entries.
	NotIns []string `protobuf:"bytes,6,rep,name=notIns" json:"notIns,omitempty"`
	// A permission is a string of form '..' (e.g., 'storage.buckets.list').
	// A value of '*' matches all permissions, and a verb part of '*' (e.g.,
	// 'storage.buckets.*') matches all verbs.
	Permissions []string `protobuf:"bytes,7,rep,name=permissions" json:"permissions,omitempty"`
}

func (m *Rule) Reset()                    { *m = Rule{} }
func (m *Rule) String() string            { return proto.CompactTextString(m) }
func (*Rule) ProtoMessage()               {}
func (*Rule) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{203} }

func (m *Rule) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *Rule) GetConditions() []*Condition {
	if m != nil {
		return m.Conditions
	}
	return nil
}

func (m *Rule) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Rule) GetIns() []string {
	if m != nil {
		return m.Ins
	}
	return nil
}

func (m *Rule) GetLogConfigs() []*LogConfig {
	if m != nil {
		return m.LogConfigs
	}
	return nil
}

func (m *Rule) GetNotIns() []string {
	if m != nil {
		return m.NotIns
	}
	return nil
}

func (m *Rule) GetPermissions() []string {
	if m != nil {
		return m.Permissions
	}
	return nil
}

type SSLHealthCheck struct {
	// The TCP port number for the health check request. The default value
	// is 443. Valid values are 1 through 65535.
	Port int32 `protobuf:"varint,1,opt,name=port" json:"port,omitempty"`
	// Port name as defined in InstanceGroup#NamedPort#name. If both port
	// and port_name are defined, port takes precedence.
	PortName string `protobuf:"bytes,2,opt,name=portName" json:"portName,omitempty"`
	// Specifies the type of proxy header to append before sending data to
	// the backend, either NONE or PROXY_V1. The default is NONE.
	// Valid values:
	//     NONE
	//     PROXY_V1
	ProxyHeader string `protobuf:"bytes,3,opt,name=proxyHeader" json:"proxyHeader,omitempty"`
	// The application data to send once the SSL connection has been
	// established (default value is empty). If both request and response
	// are empty, the connection establishment alone will indicate health.
	// The request data can only be ASCII.
	Request string `protobuf:"bytes,4,opt,name=request" json:"request,omitempty"`
	// The bytes to match against the beginning of the response data. If
	// left empty (the default value), any response will indicate health.
	// The response data can only be ASCII.
	Response string `protobuf:"bytes,5,opt,name=response" json:"response,omitempty"`
}

func (m *SSLHealthCheck) Reset()                    { *m = SSLHealthCheck{} }
func (m *SSLHealthCheck) String() string            { return proto.CompactTextString(m) }
func (*SSLHealthCheck) ProtoMessage()               {}
func (*SSLHealthCheck) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{204} }

func (m *SSLHealthCheck) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *SSLHealthCheck) GetPortName() string {
	if m != nil {
		return m.PortName
	}
	return ""
}

func (m *SSLHealthCheck) GetProxyHeader() string {
	if m != nil {
		return m.ProxyHeader
	}
	return ""
}

func (m *SSLHealthCheck) GetRequest() string {
	if m != nil {
		return m.Request
	}
	return ""
}

func (m *SSLHealthCheck) GetResponse() string {
	if m != nil {
		return m.Response
	}
	return ""
}

// Sets the scheduling options for an Instance.
type Scheduling struct {
	// Specifies whether the instance should be automatically restarted if
	// it is terminated by Compute Engine (not terminated by a user). You
	// can only set the automatic restart option for standard instances.
	// Preemptible instances cannot be automatically restarted.
	//
	// By default, this is set to true so an instance is automatically
	// restarted if it is terminated by Compute Engine.
	AutomaticRestart bool `protobuf:"varint,1,opt,name=automaticRestart" json:"automaticRestart,omitempty"`
	// Defines the maintenance behavior for this instance. For standard
	// instances, the default behavior is MIGRATE. For preemptible
	// instances, the default and only possible behavior is TERMINATE. For
	// more information, see Setting Instance Scheduling Options.
	// Valid values:
	//     MIGRATE
	//     TERMINATE
	OnHostMaintenance string `protobuf:"bytes,2,opt,name=onHostMaintenance" json:"onHostMaintenance,omitempty"`
	// Defines whether the instance is preemptible. This can only be set
	// during instance creation, it cannot be set or changed after the
	// instance has been created.
	Preemptible bool `protobuf:"varint,3,opt,name=preemptible" json:"preemptible,omitempty"`
}

func (m *Scheduling) Reset()                    { *m = Scheduling{} }
func (m *Scheduling) String() string            { return proto.CompactTextString(m) }
func (*Scheduling) ProtoMessage()               {}
func (*Scheduling) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{205} }

func (m *Scheduling) GetAutomaticRestart() bool {
	if m != nil {
		return m.AutomaticRestart
	}
	return false
}

func (m *Scheduling) GetOnHostMaintenance() string {
	if m != nil {
		return m.OnHostMaintenance
	}
	return ""
}

func (m *Scheduling) GetPreemptible() bool {
	if m != nil {
		return m.Preemptible
	}
	return false
}

// A security policy is comprised of one or more rules. It can also be
// associated with one or more 'targets'.
type SecurityPolicy struct {
	// [Output Only] Creation timestamp in RFC3339 text format.
	CreationTimestamp string `protobuf:"bytes,1,opt,name=creationTimestamp" json:"creationTimestamp,omitempty"`
	// An optional description of this resource. Provide this property when
	// you create the resource.
	Description string `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	// Specifies a fingerprint for this resource, which is essentially a
	// hash of the metadata's contents and used for optimistic locking. The
	// fingerprint is initially generated by Compute Engine and changes
	// after every request to modify or update metadata. You must always
	// provide an up-to-date fingerprint hash in order to update or change
	// metadata.
	//
	// To see the latest fingerprint, make get() request to the security
	// policy.
	Fingerprint string `protobuf:"bytes,3,opt,name=fingerprint" json:"fingerprint,omitempty"`
	// [Output Only] The unique identifier for the resource. This identifier
	// is defined by the server.
	Id string `protobuf:"bytes,4,opt,name=id" json:"id,omitempty"`
	// [Output only] Type of the resource. Always compute#securityPolicyfor
	// security policies
	Kind string `protobuf:"bytes,5,opt,name=kind" json:"kind,omitempty"`
	// Name of the resource. Provided by the client when the resource is
	// created. The name must be 1-63 characters long, and comply with
	// RFC1035. Specifically, the name must be 1-63 characters long and
	// match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means
	// the first character must be a lowercase letter, and all following
	// characters must be a dash, lowercase letter, or digit, except the
	// last character, which cannot be a dash.
	Name string `protobuf:"bytes,6,opt,name=name" json:"name,omitempty"`
	// List of rules that belong to this policy. There must always be a
	// default rule (rule with priority 2147483647 and match "*"). If no
	// rules are provided when creating a security policy, a default rule
	// with action "allow" will be added.
	Rules []*SecurityPolicyRule `protobuf:"bytes,7,rep,name=rules" json:"rules,omitempty"`
	// [Output Only] Server-defined URL for the resource.
	SelfLink string `protobuf:"bytes,8,opt,name=selfLink" json:"selfLink,omitempty"`
}

func (m *SecurityPolicy) Reset()                    { *m = SecurityPolicy{} }
func (m *SecurityPolicy) String() string            { return proto.CompactTextString(m) }
func (*SecurityPolicy) ProtoMessage()               {}
func (*SecurityPolicy) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{206} }

func (m *SecurityPolicy) GetCreationTimestamp() string {
	if m != nil {
		return m.CreationTimestamp
	}
	return ""
}

func (m *SecurityPolicy) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *SecurityPolicy) GetFingerprint() string {
	if m != nil {
		return m.Fingerprint
	}
	return ""
}

func (m *SecurityPolicy) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *SecurityPolicy) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *SecurityPolicy) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SecurityPolicy) GetRules() []*SecurityPolicyRule {
	if m != nil {
		return m.Rules
	}
	return nil
}

func (m *SecurityPolicy) GetSelfLink() string {
	if m != nil {
		return m.SelfLink
	}
	return ""
}

type SecurityPolicyList struct {
	// [Output Only] Unique identifier for the resource; defined by the
	// server.
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// A list of SecurityPolicy resources.
	Items []*SecurityPolicy `protobuf:"bytes,2,rep,name=items" json:"items,omitempty"`
	// [Output Only] Type of resource. Always compute#securityPolicyList for
	// listsof securityPolicies
	Kind string `protobuf:"bytes,3,opt,name=kind" json:"kind,omitempty"`
	// [Output Only] This token allows you to get the next page of results
	// for list requests. If the number of results is larger than
	// maxResults, use the nextPageToken as a value for the query parameter
	// pageToken in the next list request. Subsequent list requests will
	// have their own nextPageToken to continue paging through the results.
	NextPageToken string                      `protobuf:"bytes,4,opt,name=nextPageToken" json:"nextPageToken,omitempty"`
	Warning       *SecurityPolicyList_Warning `protobuf:"bytes,5,opt,name=warning" json:"warning,omitempty"`
}

func (m *SecurityPolicyList) Reset()                    { *m = SecurityPolicyList{} }
func (m *SecurityPolicyList) String() string            { return proto.CompactTextString(m) }
func (*SecurityPolicyList) ProtoMessage()               {}
func (*SecurityPolicyList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{207} }

func (m *SecurityPolicyList) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *SecurityPolicyList) GetItems() []*SecurityPolicy {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *SecurityPolicyList) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *SecurityPolicyList) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

func (m *SecurityPolicyList) GetWarning() *SecurityPolicyList_Warning {
	if m != nil {
		return m.Warning
	}
	return nil
}

// [Output Only] Informational warning message.
// [Output Only] Informational warning message.
type SecurityPolicyList_Warning struct {
	// [Output Only] A warning code, if applicable. For example, Compute
	// Engine returns NO_RESULTS_ON_PAGE if there are no results in the
	// response.
	// Valid values:
	//     CLEANUP_FAILED
	//     DEPRECATED_RESOURCE_USED
	//     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
	//     FIELD_VALUE_OVERRIDEN
	//     INJECTED_KERNELS_DEPRECATED
	//     NEXT_HOP_ADDRESS_NOT_ASSIGNED
	//     NEXT_HOP_CANNOT_IP_FORWARD
	//     NEXT_HOP_INSTANCE_NOT_FOUND
	//     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
	//     NEXT_HOP_NOT_RUNNING
	//     NOT_CRITICAL_ERROR
	//     NO_RESULTS_ON_PAGE
	//     REQUIRED_TOS_AGREEMENT
	//     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
	//     RESOURCE_NOT_DELETED
	//     SINGLE_INSTANCE_PROPERTY_TEMPLATE
	//     UNREACHABLE
	Code string                             `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Data []*SecurityPolicyList_Warning_Data `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
	// [Output Only] A human-readable description of the warning code.
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *SecurityPolicyList_Warning) Reset()                    { *m = SecurityPolicyList_Warning{} }
func (m *SecurityPolicyList_Warning) String() string            { return proto.CompactTextString(m) }
func (*SecurityPolicyList_Warning) ProtoMessage()               {}
func (*SecurityPolicyList_Warning) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{207, 0} }

func (m *SecurityPolicyList_Warning) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *SecurityPolicyList_Warning) GetData() []*SecurityPolicyList_Warning_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *SecurityPolicyList_Warning) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// [Output Only] Metadata about this warning in key: value format. For
// example:
// "data": [ { "key": "scope", "value": "zones/us-east1-d" }
type SecurityPolicyList_Warning_Data struct {
	// [Output Only] A key that provides more detail on the warning being
	// returned. For example, for warnings where there are no results in a
	// list request for a particular zone, this key might be scope and the
	// key value might be the zone name. Other examples might be a key
	// indicating a deprecated resource and a suggested replacement, or a
	// warning about invalid network settings (for example, if an instance
	// attempts to perform IP forwarding but is not enabled for IP
	// forwarding).
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	// [Output Only] A warning data value corresponding to the key.
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *SecurityPolicyList_Warning_Data) Reset()         { *m = SecurityPolicyList_Warning_Data{} }
func (m *SecurityPolicyList_Warning_Data) String() string { return proto.CompactTextString(m) }
func (*SecurityPolicyList_Warning_Data) ProtoMessage()    {}
func (*SecurityPolicyList_Warning_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{207, 0, 0}
}

func (m *SecurityPolicyList_Warning_Data) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *SecurityPolicyList_Warning_Data) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type SecurityPolicyReference struct {
	SecurityPolicy string `protobuf:"bytes,1,opt,name=securityPolicy" json:"securityPolicy,omitempty"`
}

func (m *SecurityPolicyReference) Reset()                    { *m = SecurityPolicyReference{} }
func (m *SecurityPolicyReference) String() string            { return proto.CompactTextString(m) }
func (*SecurityPolicyReference) ProtoMessage()               {}
func (*SecurityPolicyReference) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{208} }

func (m *SecurityPolicyReference) GetSecurityPolicy() string {
	if m != nil {
		return m.SecurityPolicy
	}
	return ""
}

// Represents a rule that describes one or more match conditions along
// with the action to be taken when traffic matches this condition
// (allow or deny).
type SecurityPolicyRule struct {
	// The Action to preform when the client connection triggers the rule.
	// Can currently be either "allow" or "deny()" where valid values for
	// status are 403, 404, and 502.
	Action string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	// An optional description of this resource. Provide this property when
	// you create the resource.
	Description string `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	// [Output only] Type of the resource. Always compute#securityPolicyRule
	// for security policy rules
	Kind string `protobuf:"bytes,3,opt,name=kind" json:"kind,omitempty"`
	// A match condition that incoming traffic is evaluated against. If it
	// evaluates to true, the corresponding ?action? is enforced.
	Match *SecurityPolicyRuleMatcher `protobuf:"bytes,4,opt,name=match" json:"match,omitempty"`
	// If set to true, the specified action is not enforced.
	Preview bool `protobuf:"varint,5,opt,name=preview" json:"preview,omitempty"`
	// An integer indicating the priority of a rule in the list. The
	// priority must be a positive value between 0 and 2147483647. Rules are
	// evaluated in the increasing order of priority.
	Priority int32 `protobuf:"varint,6,opt,name=priority" json:"priority,omitempty"`
}

func (m *SecurityPolicyRule) Reset()                    { *m = SecurityPolicyRule{} }
func (m *SecurityPolicyRule) String() string            { return proto.CompactTextString(m) }
func (*SecurityPolicyRule) ProtoMessage()               {}
func (*SecurityPolicyRule) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{209} }

func (m *SecurityPolicyRule) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *SecurityPolicyRule) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *SecurityPolicyRule) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *SecurityPolicyRule) GetMatch() *SecurityPolicyRuleMatcher {
	if m != nil {
		return m.Match
	}
	return nil
}

func (m *SecurityPolicyRule) GetPreview() bool {
	if m != nil {
		return m.Preview
	}
	return false
}

func (m *SecurityPolicyRule) GetPriority() int32 {
	if m != nil {
		return m.Priority
	}
	return 0
}

// Represents a match condition that incoming traffic is evaluated
// against. Exactly one field must be specified.
type SecurityPolicyRuleMatcher struct {
	// CIDR IP address range. Only IPv4 is supported.
	SrcIpRanges []string `protobuf:"bytes,1,rep,name=srcIpRanges" json:"srcIpRanges,omitempty"`
}

func (m *SecurityPolicyRuleMatcher) Reset()                    { *m = SecurityPolicyRuleMatcher{} }
func (m *SecurityPolicyRuleMatcher) String() string            { return proto.CompactTextString(m) }
func (*SecurityPolicyRuleMatcher) ProtoMessage()               {}
func (*SecurityPolicyRuleMatcher) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{210} }

func (m *SecurityPolicyRuleMatcher) GetSrcIpRanges() []string {
	if m != nil {
		return m.SrcIpRanges
	}
	return nil
}

// An instance's serial console output.
type SerialPortOutput struct {
	// [Output Only] The contents of the console output.
	Contents string `protobuf:"bytes,1,opt,name=contents" json:"contents,omitempty"`
	// [Output Only] Type of the resource. Always compute#serialPortOutput
	// for serial port output.
	Kind string `protobuf:"bytes,2,opt,name=kind" json:"kind,omitempty"`
	// [Output Only] The position of the next byte of content from the
	// serial console output. Use this value in the next request as the
	// start parameter.
	Next string `protobuf:"bytes,3,opt,name=next" json:"next,omitempty"`
	// [Output Only] Server-defined URL for this resource.
	SelfLink string `protobuf:"bytes,4,opt,name=selfLink" json:"selfLink,omitempty"`
	// The starting byte position of the output that was returned. This
	// should match the start parameter sent with the request. If the serial
	// console output exceeds the size of the buffer, older output will be
	// overwritten by newer content and the start values will be mismatched.
	Start string `protobuf:"bytes,5,opt,name=start" json:"start,omitempty"`
}

func (m *SerialPortOutput) Reset()                    { *m = SerialPortOutput{} }
func (m *SerialPortOutput) String() string            { return proto.CompactTextString(m) }
func (*SerialPortOutput) ProtoMessage()               {}
func (*SerialPortOutput) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{211} }

func (m *SerialPortOutput) GetContents() string {
	if m != nil {
		return m.Contents
	}
	return ""
}

func (m *SerialPortOutput) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *SerialPortOutput) GetNext() string {
	if m != nil {
		return m.Next
	}
	return ""
}

func (m *SerialPortOutput) GetSelfLink() string {
	if m != nil {
		return m.SelfLink
	}
	return ""
}

func (m *SerialPortOutput) GetStart() string {
	if m != nil {
		return m.Start
	}
	return ""
}

// A service account.
type ServiceAccount struct {
	// Email address of the service account.
	Email string `protobuf:"bytes,1,opt,name=email" json:"email,omitempty"`
	// The list of scopes to be made available for this service account.
	Scopes []string `protobuf:"bytes,2,rep,name=scopes" json:"scopes,omitempty"`
}

func (m *ServiceAccount) Reset()                    { *m = ServiceAccount{} }
func (m *ServiceAccount) String() string            { return proto.CompactTextString(m) }
func (*ServiceAccount) ProtoMessage()               {}
func (*ServiceAccount) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{212} }

func (m *ServiceAccount) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *ServiceAccount) GetScopes() []string {
	if m != nil {
		return m.Scopes
	}
	return nil
}

// A persistent disk snapshot resource.
type Snapshot struct {
	// [Output Only] Creation timestamp in RFC3339 text format.
	CreationTimestamp string `protobuf:"bytes,1,opt,name=creationTimestamp" json:"creationTimestamp,omitempty"`
	// An optional description of this resource. Provide this property when
	// you create the resource.
	Description string `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	// [Output Only] Size of the snapshot, specified in GB.
	DiskSizeGb string `protobuf:"bytes,3,opt,name=diskSizeGb" json:"diskSizeGb,omitempty"`
	// [Output Only] The unique identifier for the resource. This identifier
	// is defined by the server.
	Id string `protobuf:"bytes,4,opt,name=id" json:"id,omitempty"`
	// [Output Only] Type of the resource. Always compute#snapshot for
	// Snapshot resources.
	Kind string `protobuf:"bytes,5,opt,name=kind" json:"kind,omitempty"`
	// A fingerprint for the labels being applied to this snapshot, which is
	// essentially a hash of the labels set used for optimistic locking. The
	// fingerprint is initially generated by Compute Engine and changes
	// after every request to modify or update labels. You must always
	// provide an up-to-date fingerprint hash in order to update or change
	// labels.
	//
	// To see the latest fingerprint, make a get() request to retrieve a
	// snapshot.
	LabelFingerprint string `protobuf:"bytes,6,opt,name=labelFingerprint" json:"labelFingerprint,omitempty"`
	// Labels to apply to this snapshot. These can be later modified by the
	// setLabels method. Label values may be empty.
	Labels map[string]string `protobuf:"bytes,7,rep,name=labels" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// [Output Only] A list of public visible licenses that apply to this
	// snapshot. This can be because the original image had licenses
	// attached (such as a Windows image).
	Licenses []string `protobuf:"bytes,8,rep,name=licenses" json:"licenses,omitempty"`
	// Name of the resource; provided by the client when the resource is
	// created. The name must be 1-63 characters long, and comply with
	// RFC1035. Specifically, the name must be 1-63 characters long and
	// match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means
	// the first character must be a lowercase letter, and all following
	// characters must be a dash, lowercase letter, or digit, except the
	// last character, which cannot be a dash.
	Name string `protobuf:"bytes,9,opt,name=name" json:"name,omitempty"`
	// [Output Only] Server-defined URL for the resource.
	SelfLink string `protobuf:"bytes,10,opt,name=selfLink" json:"selfLink,omitempty"`
	// Encrypts the snapshot using a customer-supplied encryption key.
	//
	// After you encrypt a snapshot using a customer-supplied key, you must
	// provide the same key if you use the image later For example, you must
	// provide the encryption key when you create a disk from the encrypted
	// snapshot in a future request.
	//
	// Customer-supplied encryption keys do not protect access to metadata
	// of the disk.
	//
	// If you do not provide an encryption key when creating the snapshot,
	// then the snapshot will be encrypted using an automatically generated
	// key and you do not need to provide a key to use the snapshot later.
	SnapshotEncryptionKey *CustomerEncryptionKey `protobuf:"bytes,11,opt,name=snapshotEncryptionKey" json:"snapshotEncryptionKey,omitempty"`
	// [Output Only] The source disk used to create this snapshot.
	SourceDisk string `protobuf:"bytes,12,opt,name=sourceDisk" json:"sourceDisk,omitempty"`
	// The customer-supplied encryption key of the source disk. Required if
	// the source disk is protected by a customer-supplied encryption key.
	SourceDiskEncryptionKey *CustomerEncryptionKey `protobuf:"bytes,13,opt,name=sourceDiskEncryptionKey" json:"sourceDiskEncryptionKey,omitempty"`
	// [Output Only] The ID value of the disk used to create this snapshot.
	// This value may be used to determine whether the snapshot was taken
	// from the current or a previous instance of a given disk name.
	SourceDiskId string `protobuf:"bytes,14,opt,name=sourceDiskId" json:"sourceDiskId,omitempty"`
	// [Output Only] The status of the snapshot. This can be CREATING,
	// DELETING, FAILED, READY, or UPLOADING.
	// Valid values:
	//     CREATING
	//     DELETING
	//     FAILED
	//     READY
	//     UPLOADING
	Status string `protobuf:"bytes,15,opt,name=status" json:"status,omitempty"`
	// [Output Only] A size of the storage used by the snapshot. As
	// snapshots share storage, this number is expected to change with
	// snapshot creation/deletion.
	StorageBytes string `protobuf:"bytes,16,opt,name=storageBytes" json:"storageBytes,omitempty"`
	// [Output Only] An indicator whether storageBytes is in a stable state
	// or it is being adjusted as a result of shared storage reallocation.
	// This status can either be UPDATING, meaning the size of the snapshot
	// is being updated, or UP_TO_DATE, meaning the size of the snapshot is
	// up-to-date.
	// Valid values:
	//     UPDATING
	//     UP_TO_DATE
	StorageBytesStatus string `protobuf:"bytes,17,opt,name=storageBytesStatus" json:"storageBytesStatus,omitempty"`
}

func (m *Snapshot) Reset()                    { *m = Snapshot{} }
func (m *Snapshot) String() string            { return proto.CompactTextString(m) }
func (*Snapshot) ProtoMessage()               {}
func (*Snapshot) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{213} }

func (m *Snapshot) GetCreationTimestamp() string {
	if m != nil {
		return m.CreationTimestamp
	}
	return ""
}

func (m *Snapshot) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Snapshot) GetDiskSizeGb() string {
	if m != nil {
		return m.DiskSizeGb
	}
	return ""
}

func (m *Snapshot) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Snapshot) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *Snapshot) GetLabelFingerprint() string {
	if m != nil {
		return m.LabelFingerprint
	}
	return ""
}

func (m *Snapshot) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *Snapshot) GetLicenses() []string {
	if m != nil {
		return m.Licenses
	}
	return nil
}

func (m *Snapshot) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Snapshot) GetSelfLink() string {
	if m != nil {
		return m.SelfLink
	}
	return ""
}

func (m *Snapshot) GetSnapshotEncryptionKey() *CustomerEncryptionKey {
	if m != nil {
		return m.SnapshotEncryptionKey
	}
	return nil
}

func (m *Snapshot) GetSourceDisk() string {
	if m != nil {
		return m.SourceDisk
	}
	return ""
}

func (m *Snapshot) GetSourceDiskEncryptionKey() *CustomerEncryptionKey {
	if m != nil {
		return m.SourceDiskEncryptionKey
	}
	return nil
}

func (m *Snapshot) GetSourceDiskId() string {
	if m != nil {
		return m.SourceDiskId
	}
	return ""
}

func (m *Snapshot) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Snapshot) GetStorageBytes() string {
	if m != nil {
		return m.StorageBytes
	}
	return ""
}

func (m *Snapshot) GetStorageBytesStatus() string {
	if m != nil {
		return m.StorageBytesStatus
	}
	return ""
}

// Contains a list of Snapshot resources.
type SnapshotList struct {
	// [Output Only] Unique identifier for the resource; defined by the
	// server.
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// A list of Snapshot resources.
	Items []*Snapshot `protobuf:"bytes,2,rep,name=items" json:"items,omitempty"`
	// Type of resource.
	Kind string `protobuf:"bytes,3,opt,name=kind" json:"kind,omitempty"`
	// [Output Only] This token allows you to get the next page of results
	// for list requests. If the number of results is larger than
	// maxResults, use the nextPageToken as a value for the query parameter
	// pageToken in the next list request. Subsequent list requests will
	// have their own nextPageToken to continue paging through the results.
	NextPageToken string `protobuf:"bytes,4,opt,name=nextPageToken" json:"nextPageToken,omitempty"`
	// [Output Only] Server-defined URL for this resource.
	SelfLink string                `protobuf:"bytes,5,opt,name=selfLink" json:"selfLink,omitempty"`
	Warning  *SnapshotList_Warning `protobuf:"bytes,6,opt,name=warning" json:"warning,omitempty"`
}

func (m *SnapshotList) Reset()                    { *m = SnapshotList{} }
func (m *SnapshotList) String() string            { return proto.CompactTextString(m) }
func (*SnapshotList) ProtoMessage()               {}
func (*SnapshotList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{214} }

func (m *SnapshotList) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *SnapshotList) GetItems() []*Snapshot {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *SnapshotList) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *SnapshotList) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

func (m *SnapshotList) GetSelfLink() string {
	if m != nil {
		return m.SelfLink
	}
	return ""
}

func (m *SnapshotList) GetWarning() *SnapshotList_Warning {
	if m != nil {
		return m.Warning
	}
	return nil
}

// [Output Only] Informational warning message.
// [Output Only] Informational warning message.
type SnapshotList_Warning struct {
	// [Output Only] A warning code, if applicable. For example, Compute
	// Engine returns NO_RESULTS_ON_PAGE if there are no results in the
	// response.
	// Valid values:
	//     CLEANUP_FAILED
	//     DEPRECATED_RESOURCE_USED
	//     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
	//     FIELD_VALUE_OVERRIDEN
	//     INJECTED_KERNELS_DEPRECATED
	//     NEXT_HOP_ADDRESS_NOT_ASSIGNED
	//     NEXT_HOP_CANNOT_IP_FORWARD
	//     NEXT_HOP_INSTANCE_NOT_FOUND
	//     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
	//     NEXT_HOP_NOT_RUNNING
	//     NOT_CRITICAL_ERROR
	//     NO_RESULTS_ON_PAGE
	//     REQUIRED_TOS_AGREEMENT
	//     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
	//     RESOURCE_NOT_DELETED
	//     SINGLE_INSTANCE_PROPERTY_TEMPLATE
	//     UNREACHABLE
	Code string                       `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Data []*SnapshotList_Warning_Data `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
	// [Output Only] A human-readable description of the warning code.
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *SnapshotList_Warning) Reset()                    { *m = SnapshotList_Warning{} }
func (m *SnapshotList_Warning) String() string            { return proto.CompactTextString(m) }
func (*SnapshotList_Warning) ProtoMessage()               {}
func (*SnapshotList_Warning) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{214, 0} }

func (m *SnapshotList_Warning) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *SnapshotList_Warning) GetData() []*SnapshotList_Warning_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *SnapshotList_Warning) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// [Output Only] Metadata about this warning in key: value format. For
// example:
// "data": [ { "key": "scope", "value": "zones/us-east1-d" }
type SnapshotList_Warning_Data struct {
	// [Output Only] A key that provides more detail on the warning being
	// returned. For example, for warnings where there are no results in a
	// list request for a particular zone, this key might be scope and the
	// key value might be the zone name. Other examples might be a key
	// indicating a deprecated resource and a suggested replacement, or a
	// warning about invalid network settings (for example, if an instance
	// attempts to perform IP forwarding but is not enabled for IP
	// forwarding).
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	// [Output Only] A warning data value corresponding to the key.
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *SnapshotList_Warning_Data) Reset()         { *m = SnapshotList_Warning_Data{} }
func (m *SnapshotList_Warning_Data) String() string { return proto.CompactTextString(m) }
func (*SnapshotList_Warning_Data) ProtoMessage()    {}
func (*SnapshotList_Warning_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{214, 0, 0}
}

func (m *SnapshotList_Warning_Data) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *SnapshotList_Warning_Data) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

// An SslCertificate resource. This resource provides a mechanism to
// upload an SSL key and certificate to the load balancer to serve
// secure connections from the user.
type SslCertificate struct {
	// A local certificate file. The certificate must be in PEM format. The
	// certificate chain must be no greater than 5 certs long. The chain
	// must include at least one intermediate cert.
	Certificate string `protobuf:"bytes,1,opt,name=certificate" json:"certificate,omitempty"`
	// [Output Only] Creation timestamp in RFC3339 text format.
	CreationTimestamp string `protobuf:"bytes,2,opt,name=creationTimestamp" json:"creationTimestamp,omitempty"`
	// An optional description of this resource. Provide this property when
	// you create the resource.
	Description string `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	// [Output Only] The unique identifier for the resource. This identifier
	// is defined by the server.
	Id string `protobuf:"bytes,4,opt,name=id" json:"id,omitempty"`
	// [Output Only] Type of the resource. Always compute#sslCertificate for
	// SSL certificates.
	Kind string `protobuf:"bytes,5,opt,name=kind" json:"kind,omitempty"`
	// Name of the resource. Provided by the client when the resource is
	// created. The name must be 1-63 characters long, and comply with
	// RFC1035. Specifically, the name must be 1-63 characters long and
	// match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means
	// the first character must be a lowercase letter, and all following
	// characters must be a dash, lowercase letter, or digit, except the
	// last character, which cannot be a dash.
	Name string `protobuf:"bytes,6,opt,name=name" json:"name,omitempty"`
	// A write-only private key in PEM format. Only insert requests will
	// include this field.
	PrivateKey string `protobuf:"bytes,7,opt,name=privateKey" json:"privateKey,omitempty"`
	// [Output only] Server-defined URL for the resource.
	SelfLink string `protobuf:"bytes,8,opt,name=selfLink" json:"selfLink,omitempty"`
}

func (m *SslCertificate) Reset()                    { *m = SslCertificate{} }
func (m *SslCertificate) String() string            { return proto.CompactTextString(m) }
func (*SslCertificate) ProtoMessage()               {}
func (*SslCertificate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{215} }

func (m *SslCertificate) GetCertificate() string {
	if m != nil {
		return m.Certificate
	}
	return ""
}

func (m *SslCertificate) GetCreationTimestamp() string {
	if m != nil {
		return m.CreationTimestamp
	}
	return ""
}

func (m *SslCertificate) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *SslCertificate) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *SslCertificate) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *SslCertificate) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SslCertificate) GetPrivateKey() string {
	if m != nil {
		return m.PrivateKey
	}
	return ""
}

func (m *SslCertificate) GetSelfLink() string {
	if m != nil {
		return m.SelfLink
	}
	return ""
}

// Contains a list of SslCertificate resources.
type SslCertificateList struct {
	// [Output Only] Unique identifier for the resource; defined by the
	// server.
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// A list of SslCertificate resources.
	Items []*SslCertificate `protobuf:"bytes,2,rep,name=items" json:"items,omitempty"`
	// Type of resource.
	Kind string `protobuf:"bytes,3,opt,name=kind" json:"kind,omitempty"`
	// [Output Only] This token allows you to get the next page of results
	// for list requests. If the number of results is larger than
	// maxResults, use the nextPageToken as a value for the query parameter
	// pageToken in the next list request. Subsequent list requests will
	// have their own nextPageToken to continue paging through the results.
	NextPageToken string `protobuf:"bytes,4,opt,name=nextPageToken" json:"nextPageToken,omitempty"`
	// [Output Only] Server-defined URL for this resource.
	SelfLink string                      `protobuf:"bytes,5,opt,name=selfLink" json:"selfLink,omitempty"`
	Warning  *SslCertificateList_Warning `protobuf:"bytes,6,opt,name=warning" json:"warning,omitempty"`
}

func (m *SslCertificateList) Reset()                    { *m = SslCertificateList{} }
func (m *SslCertificateList) String() string            { return proto.CompactTextString(m) }
func (*SslCertificateList) ProtoMessage()               {}
func (*SslCertificateList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{216} }

func (m *SslCertificateList) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *SslCertificateList) GetItems() []*SslCertificate {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *SslCertificateList) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *SslCertificateList) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

func (m *SslCertificateList) GetSelfLink() string {
	if m != nil {
		return m.SelfLink
	}
	return ""
}

func (m *SslCertificateList) GetWarning() *SslCertificateList_Warning {
	if m != nil {
		return m.Warning
	}
	return nil
}

// [Output Only] Informational warning message.
// [Output Only] Informational warning message.
type SslCertificateList_Warning struct {
	// [Output Only] A warning code, if applicable. For example, Compute
	// Engine returns NO_RESULTS_ON_PAGE if there are no results in the
	// response.
	// Valid values:
	//     CLEANUP_FAILED
	//     DEPRECATED_RESOURCE_USED
	//     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
	//     FIELD_VALUE_OVERRIDEN
	//     INJECTED_KERNELS_DEPRECATED
	//     NEXT_HOP_ADDRESS_NOT_ASSIGNED
	//     NEXT_HOP_CANNOT_IP_FORWARD
	//     NEXT_HOP_INSTANCE_NOT_FOUND
	//     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
	//     NEXT_HOP_NOT_RUNNING
	//     NOT_CRITICAL_ERROR
	//     NO_RESULTS_ON_PAGE
	//     REQUIRED_TOS_AGREEMENT
	//     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
	//     RESOURCE_NOT_DELETED
	//     SINGLE_INSTANCE_PROPERTY_TEMPLATE
	//     UNREACHABLE
	Code string                             `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Data []*SslCertificateList_Warning_Data `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
	// [Output Only] A human-readable description of the warning code.
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *SslCertificateList_Warning) Reset()                    { *m = SslCertificateList_Warning{} }
func (m *SslCertificateList_Warning) String() string            { return proto.CompactTextString(m) }
func (*SslCertificateList_Warning) ProtoMessage()               {}
func (*SslCertificateList_Warning) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{216, 0} }

func (m *SslCertificateList_Warning) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *SslCertificateList_Warning) GetData() []*SslCertificateList_Warning_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *SslCertificateList_Warning) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// [Output Only] Metadata about this warning in key: value format. For
// example:
// "data": [ { "key": "scope", "value": "zones/us-east1-d" }
type SslCertificateList_Warning_Data struct {
	// [Output Only] A key that provides more detail on the warning being
	// returned. For example, for warnings where there are no results in a
	// list request for a particular zone, this key might be scope and the
	// key value might be the zone name. Other examples might be a key
	// indicating a deprecated resource and a suggested replacement, or a
	// warning about invalid network settings (for example, if an instance
	// attempts to perform IP forwarding but is not enabled for IP
	// forwarding).
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	// [Output Only] A warning data value corresponding to the key.
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *SslCertificateList_Warning_Data) Reset()         { *m = SslCertificateList_Warning_Data{} }
func (m *SslCertificateList_Warning_Data) String() string { return proto.CompactTextString(m) }
func (*SslCertificateList_Warning_Data) ProtoMessage()    {}
func (*SslCertificateList_Warning_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{216, 0, 0}
}

func (m *SslCertificateList_Warning_Data) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *SslCertificateList_Warning_Data) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

// A Subnetwork resource.
type Subnetwork struct {
	// Whether this subnetwork can conflict with static routes. Setting this
	// to true allows this subnetwork's primary and secondary ranges to
	// conflict with routes that have already been configured on the
	// corresponding network. Static routes will take precedence over the
	// subnetwork route if the route prefix length is at least as large as
	// the subnetwork prefix length.
	//
	// Also, packets destined to IPs within subnetwork may contain
	// private/sensitive data and are prevented from leaving the virtual
	// network. Setting this field to true will disable this feature.
	//
	// The default value is false and applies to all existing subnetworks
	// and automatically created subnetworks.
	//
	// This field cannot be set to true at resource creation time.
	AllowSubnetCidrRoutesOverlap bool `protobuf:"varint,1,opt,name=allowSubnetCidrRoutesOverlap" json:"allowSubnetCidrRoutesOverlap,omitempty"`
	// [Output Only] Creation timestamp in RFC3339 text format.
	CreationTimestamp string `protobuf:"bytes,2,opt,name=creationTimestamp" json:"creationTimestamp,omitempty"`
	// An optional description of this resource. Provide this property when
	// you create the resource. This field can be set only at resource
	// creation time.
	Description string `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	// Fingerprint of this resource. A hash of the contents stored in this
	// object. This field is used in optimistic locking. This field will be
	// ignored when inserting a Subnetwork. An up-to-date fingerprint must
	// be provided in order to update the Subnetwork.
	Fingerprint string `protobuf:"bytes,4,opt,name=fingerprint" json:"fingerprint,omitempty"`
	// [Output Only] The gateway address for default routes to reach
	// destination addresses outside this subnetwork. This field can be set
	// only at resource creation time.
	GatewayAddress string `protobuf:"bytes,5,opt,name=gatewayAddress" json:"gatewayAddress,omitempty"`
	// [Output Only] The unique identifier for the resource. This identifier
	// is defined by the server.
	Id string `protobuf:"bytes,6,opt,name=id" json:"id,omitempty"`
	// The range of internal addresses that are owned by this subnetwork.
	// Provide this property when you create the subnetwork. For example,
	// 10.0.0.0/8 or 192.168.0.0/16. Ranges must be unique and
	// non-overlapping within a network. Only IPv4 is supported. This field
	// can be set only at resource creation time.
	IpCidrRange string `protobuf:"bytes,7,opt,name=ipCidrRange" json:"ipCidrRange,omitempty"`
	// [Output Only] Type of the resource. Always compute#subnetwork for
	// Subnetwork resources.
	Kind string `protobuf:"bytes,8,opt,name=kind" json:"kind,omitempty"`
	// The name of the resource, provided by the client when initially
	// creating the resource. The name must be 1-63 characters long, and
	// comply with RFC1035. Specifically, the name must be 1-63 characters
	// long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])?
	// which means the first character must be a lowercase letter, and all
	// following characters must be a dash, lowercase letter, or digit,
	// except the last character, which cannot be a dash.
	Name string `protobuf:"bytes,9,opt,name=name" json:"name,omitempty"`
	// The URL of the network to which this subnetwork belongs, provided by
	// the client when initially creating the subnetwork. Only networks that
	// are in the distributed mode can have subnetworks. This field can be
	// set only at resource creation time.
	Network string `protobuf:"bytes,10,opt,name=network" json:"network,omitempty"`
	// Whether the VMs in this subnet can access Google services without
	// assigned external IP addresses. This field can be both set at
	// resource creation time and updated using setPrivateIpGoogleAccess.
	PrivateIpGoogleAccess bool `protobuf:"varint,11,opt,name=privateIpGoogleAccess" json:"privateIpGoogleAccess,omitempty"`
	// URL of the region where the Subnetwork resides. This field can be set
	// only at resource creation time.
	Region string `protobuf:"bytes,12,opt,name=region" json:"region,omitempty"`
	// An array of configurations for secondary IP ranges for VM instances
	// contained in this subnetwork. The primary IP of such VM must belong
	// to the primary ipCidrRange of the subnetwork. The alias IPs may
	// belong to either primary or secondary ranges.
	SecondaryIpRanges []*SubnetworkSecondaryRange `protobuf:"bytes,13,rep,name=secondaryIpRanges" json:"secondaryIpRanges,omitempty"`
	// [Output Only] Server-defined URL for the resource.
	SelfLink string `protobuf:"bytes,14,opt,name=selfLink" json:"selfLink,omitempty"`
}

func (m *Subnetwork) Reset()                    { *m = Subnetwork{} }
func (m *Subnetwork) String() string            { return proto.CompactTextString(m) }
func (*Subnetwork) ProtoMessage()               {}
func (*Subnetwork) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{217} }

func (m *Subnetwork) GetAllowSubnetCidrRoutesOverlap() bool {
	if m != nil {
		return m.AllowSubnetCidrRoutesOverlap
	}
	return false
}

func (m *Subnetwork) GetCreationTimestamp() string {
	if m != nil {
		return m.CreationTimestamp
	}
	return ""
}

func (m *Subnetwork) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Subnetwork) GetFingerprint() string {
	if m != nil {
		return m.Fingerprint
	}
	return ""
}

func (m *Subnetwork) GetGatewayAddress() string {
	if m != nil {
		return m.GatewayAddress
	}
	return ""
}

func (m *Subnetwork) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Subnetwork) GetIpCidrRange() string {
	if m != nil {
		return m.IpCidrRange
	}
	return ""
}

func (m *Subnetwork) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *Subnetwork) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Subnetwork) GetNetwork() string {
	if m != nil {
		return m.Network
	}
	return ""
}

func (m *Subnetwork) GetPrivateIpGoogleAccess() bool {
	if m != nil {
		return m.PrivateIpGoogleAccess
	}
	return false
}

func (m *Subnetwork) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *Subnetwork) GetSecondaryIpRanges() []*SubnetworkSecondaryRange {
	if m != nil {
		return m.SecondaryIpRanges
	}
	return nil
}

func (m *Subnetwork) GetSelfLink() string {
	if m != nil {
		return m.SelfLink
	}
	return ""
}

type SubnetworkAggregatedList struct {
	// [Output Only] Unique identifier for the resource; defined by the
	// server.
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// A list of SubnetworksScopedList resources.
	Items map[string]*SubnetworksScopedList `protobuf:"bytes,2,rep,name=items" json:"items,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// [Output Only] Type of resource. Always
	// compute#subnetworkAggregatedList for aggregated lists of subnetworks.
	Kind string `protobuf:"bytes,3,opt,name=kind" json:"kind,omitempty"`
	// [Output Only] This token allows you to get the next page of results
	// for list requests. If the number of results is larger than
	// maxResults, use the nextPageToken as a value for the query parameter
	// pageToken in the next list request. Subsequent list requests will
	// have their own nextPageToken to continue paging through the results.
	NextPageToken string `protobuf:"bytes,4,opt,name=nextPageToken" json:"nextPageToken,omitempty"`
	// [Output Only] Server-defined URL for this resource.
	SelfLink string                            `protobuf:"bytes,5,opt,name=selfLink" json:"selfLink,omitempty"`
	Warning  *SubnetworkAggregatedList_Warning `protobuf:"bytes,6,opt,name=warning" json:"warning,omitempty"`
}

func (m *SubnetworkAggregatedList) Reset()                    { *m = SubnetworkAggregatedList{} }
func (m *SubnetworkAggregatedList) String() string            { return proto.CompactTextString(m) }
func (*SubnetworkAggregatedList) ProtoMessage()               {}
func (*SubnetworkAggregatedList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{218} }

func (m *SubnetworkAggregatedList) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *SubnetworkAggregatedList) GetItems() map[string]*SubnetworksScopedList {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *SubnetworkAggregatedList) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *SubnetworkAggregatedList) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

func (m *SubnetworkAggregatedList) GetSelfLink() string {
	if m != nil {
		return m.SelfLink
	}
	return ""
}

func (m *SubnetworkAggregatedList) GetWarning() *SubnetworkAggregatedList_Warning {
	if m != nil {
		return m.Warning
	}
	return nil
}

// [Output Only] Informational warning message.
// [Output Only] Informational warning message.
type SubnetworkAggregatedList_Warning struct {
	// [Output Only] A warning code, if applicable. For example, Compute
	// Engine returns NO_RESULTS_ON_PAGE if there are no results in the
	// response.
	// Valid values:
	//     CLEANUP_FAILED
	//     DEPRECATED_RESOURCE_USED
	//     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
	//     FIELD_VALUE_OVERRIDEN
	//     INJECTED_KERNELS_DEPRECATED
	//     NEXT_HOP_ADDRESS_NOT_ASSIGNED
	//     NEXT_HOP_CANNOT_IP_FORWARD
	//     NEXT_HOP_INSTANCE_NOT_FOUND
	//     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
	//     NEXT_HOP_NOT_RUNNING
	//     NOT_CRITICAL_ERROR
	//     NO_RESULTS_ON_PAGE
	//     REQUIRED_TOS_AGREEMENT
	//     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
	//     RESOURCE_NOT_DELETED
	//     SINGLE_INSTANCE_PROPERTY_TEMPLATE
	//     UNREACHABLE
	Code string                                   `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Data []*SubnetworkAggregatedList_Warning_Data `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
	// [Output Only] A human-readable description of the warning code.
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *SubnetworkAggregatedList_Warning) Reset()         { *m = SubnetworkAggregatedList_Warning{} }
func (m *SubnetworkAggregatedList_Warning) String() string { return proto.CompactTextString(m) }
func (*SubnetworkAggregatedList_Warning) ProtoMessage()    {}
func (*SubnetworkAggregatedList_Warning) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{218, 1}
}

func (m *SubnetworkAggregatedList_Warning) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *SubnetworkAggregatedList_Warning) GetData() []*SubnetworkAggregatedList_Warning_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *SubnetworkAggregatedList_Warning) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// [Output Only] Metadata about this warning in key: value format. For
// example:
// "data": [ { "key": "scope", "value": "zones/us-east1-d" }
type SubnetworkAggregatedList_Warning_Data struct {
	// [Output Only] A key that provides more detail on the warning being
	// returned. For example, for warnings where there are no results in a
	// list request for a particular zone, this key might be scope and the
	// key value might be the zone name. Other examples might be a key
	// indicating a deprecated resource and a suggested replacement, or a
	// warning about invalid network settings (for example, if an instance
	// attempts to perform IP forwarding but is not enabled for IP
	// forwarding).
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	// [Output Only] A warning data value corresponding to the key.
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *SubnetworkAggregatedList_Warning_Data) Reset()         { *m = SubnetworkAggregatedList_Warning_Data{} }
func (m *SubnetworkAggregatedList_Warning_Data) String() string { return proto.CompactTextString(m) }
func (*SubnetworkAggregatedList_Warning_Data) ProtoMessage()    {}
func (*SubnetworkAggregatedList_Warning_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{218, 1, 0}
}

func (m *SubnetworkAggregatedList_Warning_Data) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *SubnetworkAggregatedList_Warning_Data) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

// Contains a list of Subnetwork resources.
type SubnetworkList struct {
	// [Output Only] Unique identifier for the resource; defined by the
	// server.
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// A list of Subnetwork resources.
	Items []*Subnetwork `protobuf:"bytes,2,rep,name=items" json:"items,omitempty"`
	// [Output Only] Type of resource. Always compute#subnetworkList for
	// lists of subnetworks.
	Kind string `protobuf:"bytes,3,opt,name=kind" json:"kind,omitempty"`
	// [Output Only] This token allows you to get the next page of results
	// for list requests. If the number of results is larger than
	// maxResults, use the nextPageToken as a value for the query parameter
	// pageToken in the next list request. Subsequent list requests will
	// have their own nextPageToken to continue paging through the results.
	NextPageToken string `protobuf:"bytes,4,opt,name=nextPageToken" json:"nextPageToken,omitempty"`
	// [Output Only] Server-defined URL for this resource.
	SelfLink string                  `protobuf:"bytes,5,opt,name=selfLink" json:"selfLink,omitempty"`
	Warning  *SubnetworkList_Warning `protobuf:"bytes,6,opt,name=warning" json:"warning,omitempty"`
}

func (m *SubnetworkList) Reset()                    { *m = SubnetworkList{} }
func (m *SubnetworkList) String() string            { return proto.CompactTextString(m) }
func (*SubnetworkList) ProtoMessage()               {}
func (*SubnetworkList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{219} }

func (m *SubnetworkList) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *SubnetworkList) GetItems() []*Subnetwork {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *SubnetworkList) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *SubnetworkList) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

func (m *SubnetworkList) GetSelfLink() string {
	if m != nil {
		return m.SelfLink
	}
	return ""
}

func (m *SubnetworkList) GetWarning() *SubnetworkList_Warning {
	if m != nil {
		return m.Warning
	}
	return nil
}

// [Output Only] Informational warning message.
// [Output Only] Informational warning message.
type SubnetworkList_Warning struct {
	// [Output Only] A warning code, if applicable. For example, Compute
	// Engine returns NO_RESULTS_ON_PAGE if there are no results in the
	// response.
	// Valid values:
	//     CLEANUP_FAILED
	//     DEPRECATED_RESOURCE_USED
	//     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
	//     FIELD_VALUE_OVERRIDEN
	//     INJECTED_KERNELS_DEPRECATED
	//     NEXT_HOP_ADDRESS_NOT_ASSIGNED
	//     NEXT_HOP_CANNOT_IP_FORWARD
	//     NEXT_HOP_INSTANCE_NOT_FOUND
	//     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
	//     NEXT_HOP_NOT_RUNNING
	//     NOT_CRITICAL_ERROR
	//     NO_RESULTS_ON_PAGE
	//     REQUIRED_TOS_AGREEMENT
	//     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
	//     RESOURCE_NOT_DELETED
	//     SINGLE_INSTANCE_PROPERTY_TEMPLATE
	//     UNREACHABLE
	Code string                         `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Data []*SubnetworkList_Warning_Data `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
	// [Output Only] A human-readable description of the warning code.
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *SubnetworkList_Warning) Reset()                    { *m = SubnetworkList_Warning{} }
func (m *SubnetworkList_Warning) String() string            { return proto.CompactTextString(m) }
func (*SubnetworkList_Warning) ProtoMessage()               {}
func (*SubnetworkList_Warning) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{219, 0} }

func (m *SubnetworkList_Warning) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *SubnetworkList_Warning) GetData() []*SubnetworkList_Warning_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *SubnetworkList_Warning) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// [Output Only] Metadata about this warning in key: value format. For
// example:
// "data": [ { "key": "scope", "value": "zones/us-east1-d" }
type SubnetworkList_Warning_Data struct {
	// [Output Only] A key that provides more detail on the warning being
	// returned. For example, for warnings where there are no results in a
	// list request for a particular zone, this key might be scope and the
	// key value might be the zone name. Other examples might be a key
	// indicating a deprecated resource and a suggested replacement, or a
	// warning about invalid network settings (for example, if an instance
	// attempts to perform IP forwarding but is not enabled for IP
	// forwarding).
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	// [Output Only] A warning data value corresponding to the key.
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *SubnetworkList_Warning_Data) Reset()         { *m = SubnetworkList_Warning_Data{} }
func (m *SubnetworkList_Warning_Data) String() string { return proto.CompactTextString(m) }
func (*SubnetworkList_Warning_Data) ProtoMessage()    {}
func (*SubnetworkList_Warning_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{219, 0, 0}
}

func (m *SubnetworkList_Warning_Data) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *SubnetworkList_Warning_Data) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

// Represents a secondary IP range of a subnetwork.
type SubnetworkSecondaryRange struct {
	// The range of IP addresses belonging to this subnetwork secondary
	// range. Provide this property when you create the subnetwork. Ranges
	// must be unique and non-overlapping with all primary and secondary IP
	// ranges within a network. Only IPv4 is supported.
	IpCidrRange string `protobuf:"bytes,1,opt,name=ipCidrRange" json:"ipCidrRange,omitempty"`
	// The name associated with this subnetwork secondary range, used when
	// adding an alias IP range to a VM instance. The name must be 1-63
	// characters long, and comply with RFC1035. The name must be unique
	// within the subnetwork.
	RangeName string `protobuf:"bytes,2,opt,name=rangeName" json:"rangeName,omitempty"`
}

func (m *SubnetworkSecondaryRange) Reset()                    { *m = SubnetworkSecondaryRange{} }
func (m *SubnetworkSecondaryRange) String() string            { return proto.CompactTextString(m) }
func (*SubnetworkSecondaryRange) ProtoMessage()               {}
func (*SubnetworkSecondaryRange) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{220} }

func (m *SubnetworkSecondaryRange) GetIpCidrRange() string {
	if m != nil {
		return m.IpCidrRange
	}
	return ""
}

func (m *SubnetworkSecondaryRange) GetRangeName() string {
	if m != nil {
		return m.RangeName
	}
	return ""
}

type SubnetworksExpandIpCidrRangeRequest struct {
	// The IP (in CIDR format or netmask) of internal addresses that are
	// legal on this Subnetwork. This range should be disjoint from other
	// subnetworks within this network. This range can only be larger than
	// (i.e. a superset of) the range previously defined before the update.
	IpCidrRange string `protobuf:"bytes,1,opt,name=ipCidrRange" json:"ipCidrRange,omitempty"`
}

func (m *SubnetworksExpandIpCidrRangeRequest) Reset()         { *m = SubnetworksExpandIpCidrRangeRequest{} }
func (m *SubnetworksExpandIpCidrRangeRequest) String() string { return proto.CompactTextString(m) }
func (*SubnetworksExpandIpCidrRangeRequest) ProtoMessage()    {}
func (*SubnetworksExpandIpCidrRangeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{221}
}

func (m *SubnetworksExpandIpCidrRangeRequest) GetIpCidrRange() string {
	if m != nil {
		return m.IpCidrRange
	}
	return ""
}

type SubnetworksScopedList struct {
	// List of subnetworks contained in this scope.
	Subnetworks []*Subnetwork                  `protobuf:"bytes,1,rep,name=subnetworks" json:"subnetworks,omitempty"`
	Warning     *SubnetworksScopedList_Warning `protobuf:"bytes,2,opt,name=warning" json:"warning,omitempty"`
}

func (m *SubnetworksScopedList) Reset()                    { *m = SubnetworksScopedList{} }
func (m *SubnetworksScopedList) String() string            { return proto.CompactTextString(m) }
func (*SubnetworksScopedList) ProtoMessage()               {}
func (*SubnetworksScopedList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{222} }

func (m *SubnetworksScopedList) GetSubnetworks() []*Subnetwork {
	if m != nil {
		return m.Subnetworks
	}
	return nil
}

func (m *SubnetworksScopedList) GetWarning() *SubnetworksScopedList_Warning {
	if m != nil {
		return m.Warning
	}
	return nil
}

// An informational warning that appears when the list of addresses is
// empty.
// An informational warning that appears when the list of addresses is
// empty.
type SubnetworksScopedList_Warning struct {
	// [Output Only] A warning code, if applicable. For example, Compute
	// Engine returns NO_RESULTS_ON_PAGE if there are no results in the
	// response.
	// Valid values:
	//     CLEANUP_FAILED
	//     DEPRECATED_RESOURCE_USED
	//     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
	//     FIELD_VALUE_OVERRIDEN
	//     INJECTED_KERNELS_DEPRECATED
	//     NEXT_HOP_ADDRESS_NOT_ASSIGNED
	//     NEXT_HOP_CANNOT_IP_FORWARD
	//     NEXT_HOP_INSTANCE_NOT_FOUND
	//     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
	//     NEXT_HOP_NOT_RUNNING
	//     NOT_CRITICAL_ERROR
	//     NO_RESULTS_ON_PAGE
	//     REQUIRED_TOS_AGREEMENT
	//     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
	//     RESOURCE_NOT_DELETED
	//     SINGLE_INSTANCE_PROPERTY_TEMPLATE
	//     UNREACHABLE
	Code string                                `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Data []*SubnetworksScopedList_Warning_Data `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
	// [Output Only] A human-readable description of the warning code.
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *SubnetworksScopedList_Warning) Reset()         { *m = SubnetworksScopedList_Warning{} }
func (m *SubnetworksScopedList_Warning) String() string { return proto.CompactTextString(m) }
func (*SubnetworksScopedList_Warning) ProtoMessage()    {}
func (*SubnetworksScopedList_Warning) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{222, 0}
}

func (m *SubnetworksScopedList_Warning) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *SubnetworksScopedList_Warning) GetData() []*SubnetworksScopedList_Warning_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *SubnetworksScopedList_Warning) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// [Output Only] Metadata about this warning in key: value format. For
// example:
// "data": [ { "key": "scope", "value": "zones/us-east1-d" }
type SubnetworksScopedList_Warning_Data struct {
	// [Output Only] A key that provides more detail on the warning being
	// returned. For example, for warnings where there are no results in a
	// list request for a particular zone, this key might be scope and the
	// key value might be the zone name. Other examples might be a key
	// indicating a deprecated resource and a suggested replacement, or a
	// warning about invalid network settings (for example, if an instance
	// attempts to perform IP forwarding but is not enabled for IP
	// forwarding).
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	// [Output Only] A warning data value corresponding to the key.
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *SubnetworksScopedList_Warning_Data) Reset()         { *m = SubnetworksScopedList_Warning_Data{} }
func (m *SubnetworksScopedList_Warning_Data) String() string { return proto.CompactTextString(m) }
func (*SubnetworksScopedList_Warning_Data) ProtoMessage()    {}
func (*SubnetworksScopedList_Warning_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{222, 0, 0}
}

func (m *SubnetworksScopedList_Warning_Data) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *SubnetworksScopedList_Warning_Data) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type SubnetworksSetPrivateIpGoogleAccessRequest struct {
	PrivateIpGoogleAccess bool `protobuf:"varint,1,opt,name=privateIpGoogleAccess" json:"privateIpGoogleAccess,omitempty"`
}

func (m *SubnetworksSetPrivateIpGoogleAccessRequest) Reset() {
	*m = SubnetworksSetPrivateIpGoogleAccessRequest{}
}
func (m *SubnetworksSetPrivateIpGoogleAccessRequest) String() string {
	return proto.CompactTextString(m)
}
func (*SubnetworksSetPrivateIpGoogleAccessRequest) ProtoMessage() {}
func (*SubnetworksSetPrivateIpGoogleAccessRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{223}
}

func (m *SubnetworksSetPrivateIpGoogleAccessRequest) GetPrivateIpGoogleAccess() bool {
	if m != nil {
		return m.PrivateIpGoogleAccess
	}
	return false
}

type TCPHealthCheck struct {
	// The TCP port number for the health check request. The default value
	// is 80. Valid values are 1 through 65535.
	Port int32 `protobuf:"varint,1,opt,name=port" json:"port,omitempty"`
	// Port name as defined in InstanceGroup#NamedPort#name. If both port
	// and port_name are defined, port takes precedence.
	PortName string `protobuf:"bytes,2,opt,name=portName" json:"portName,omitempty"`
	// Specifies the type of proxy header to append before sending data to
	// the backend, either NONE or PROXY_V1. The default is NONE.
	// Valid values:
	//     NONE
	//     PROXY_V1
	ProxyHeader string `protobuf:"bytes,3,opt,name=proxyHeader" json:"proxyHeader,omitempty"`
	// The application data to send once the TCP connection has been
	// established (default value is empty). If both request and response
	// are empty, the connection establishment alone will indicate health.
	// The request data can only be ASCII.
	Request string `protobuf:"bytes,4,opt,name=request" json:"request,omitempty"`
	// The bytes to match against the beginning of the response data. If
	// left empty (the default value), any response will indicate health.
	// The response data can only be ASCII.
	Response string `protobuf:"bytes,5,opt,name=response" json:"response,omitempty"`
}

func (m *TCPHealthCheck) Reset()                    { *m = TCPHealthCheck{} }
func (m *TCPHealthCheck) String() string            { return proto.CompactTextString(m) }
func (*TCPHealthCheck) ProtoMessage()               {}
func (*TCPHealthCheck) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{224} }

func (m *TCPHealthCheck) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *TCPHealthCheck) GetPortName() string {
	if m != nil {
		return m.PortName
	}
	return ""
}

func (m *TCPHealthCheck) GetProxyHeader() string {
	if m != nil {
		return m.ProxyHeader
	}
	return ""
}

func (m *TCPHealthCheck) GetRequest() string {
	if m != nil {
		return m.Request
	}
	return ""
}

func (m *TCPHealthCheck) GetResponse() string {
	if m != nil {
		return m.Response
	}
	return ""
}

// A set of instance tags.
type Tags struct {
	// Specifies a fingerprint for this request, which is essentially a hash
	// of the metadata's contents and used for optimistic locking. The
	// fingerprint is initially generated by Compute Engine and changes
	// after every request to modify or update metadata. You must always
	// provide an up-to-date fingerprint hash in order to update or change
	// metadata.
	//
	// To see the latest fingerprint, make get() request to the instance.
	Fingerprint string `protobuf:"bytes,1,opt,name=fingerprint" json:"fingerprint,omitempty"`
	// An array of tags. Each tag must be 1-63 characters long, and comply
	// with RFC1035.
	Items []string `protobuf:"bytes,2,rep,name=items" json:"items,omitempty"`
}

func (m *Tags) Reset()                    { *m = Tags{} }
func (m *Tags) String() string            { return proto.CompactTextString(m) }
func (*Tags) ProtoMessage()               {}
func (*Tags) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{225} }

func (m *Tags) GetFingerprint() string {
	if m != nil {
		return m.Fingerprint
	}
	return ""
}

func (m *Tags) GetItems() []string {
	if m != nil {
		return m.Items
	}
	return nil
}

// A TargetHttpProxy resource. This resource defines an HTTP proxy.
type TargetHttpProxy struct {
	// [Output Only] Creation timestamp in RFC3339 text format.
	CreationTimestamp string `protobuf:"bytes,1,opt,name=creationTimestamp" json:"creationTimestamp,omitempty"`
	// An optional description of this resource. Provide this property when
	// you create the resource.
	Description string `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	// [Output Only] The unique identifier for the resource. This identifier
	// is defined by the server.
	Id string `protobuf:"bytes,3,opt,name=id" json:"id,omitempty"`
	// [Output Only] Type of resource. Always compute#targetHttpProxy for
	// target HTTP proxies.
	Kind string `protobuf:"bytes,4,opt,name=kind" json:"kind,omitempty"`
	// Name of the resource. Provided by the client when the resource is
	// created. The name must be 1-63 characters long, and comply with
	// RFC1035. Specifically, the name must be 1-63 characters long and
	// match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means
	// the first character must be a lowercase letter, and all following
	// characters must be a dash, lowercase letter, or digit, except the
	// last character, which cannot be a dash.
	Name string `protobuf:"bytes,5,opt,name=name" json:"name,omitempty"`
	// [Output Only] Server-defined URL for the resource.
	SelfLink string `protobuf:"bytes,6,opt,name=selfLink" json:"selfLink,omitempty"`
	// URL to the UrlMap resource that defines the mapping from URL to the
	// BackendService.
	UrlMap string `protobuf:"bytes,7,opt,name=urlMap" json:"urlMap,omitempty"`
}

func (m *TargetHttpProxy) Reset()                    { *m = TargetHttpProxy{} }
func (m *TargetHttpProxy) String() string            { return proto.CompactTextString(m) }
func (*TargetHttpProxy) ProtoMessage()               {}
func (*TargetHttpProxy) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{226} }

func (m *TargetHttpProxy) GetCreationTimestamp() string {
	if m != nil {
		return m.CreationTimestamp
	}
	return ""
}

func (m *TargetHttpProxy) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *TargetHttpProxy) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *TargetHttpProxy) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *TargetHttpProxy) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *TargetHttpProxy) GetSelfLink() string {
	if m != nil {
		return m.SelfLink
	}
	return ""
}

func (m *TargetHttpProxy) GetUrlMap() string {
	if m != nil {
		return m.UrlMap
	}
	return ""
}

// A list of TargetHttpProxy resources.
type TargetHttpProxyList struct {
	// [Output Only] Unique identifier for the resource; defined by the
	// server.
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// A list of TargetHttpProxy resources.
	Items []*TargetHttpProxy `protobuf:"bytes,2,rep,name=items" json:"items,omitempty"`
	// Type of resource. Always compute#targetHttpProxyList for lists of
	// target HTTP proxies.
	Kind string `protobuf:"bytes,3,opt,name=kind" json:"kind,omitempty"`
	// [Output Only] This token allows you to get the next page of results
	// for list requests. If the number of results is larger than
	// maxResults, use the nextPageToken as a value for the query parameter
	// pageToken in the next list request. Subsequent list requests will
	// have their own nextPageToken to continue paging through the results.
	NextPageToken string `protobuf:"bytes,4,opt,name=nextPageToken" json:"nextPageToken,omitempty"`
	// [Output Only] Server-defined URL for this resource.
	SelfLink string                       `protobuf:"bytes,5,opt,name=selfLink" json:"selfLink,omitempty"`
	Warning  *TargetHttpProxyList_Warning `protobuf:"bytes,6,opt,name=warning" json:"warning,omitempty"`
}

func (m *TargetHttpProxyList) Reset()                    { *m = TargetHttpProxyList{} }
func (m *TargetHttpProxyList) String() string            { return proto.CompactTextString(m) }
func (*TargetHttpProxyList) ProtoMessage()               {}
func (*TargetHttpProxyList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{227} }

func (m *TargetHttpProxyList) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *TargetHttpProxyList) GetItems() []*TargetHttpProxy {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *TargetHttpProxyList) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *TargetHttpProxyList) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

func (m *TargetHttpProxyList) GetSelfLink() string {
	if m != nil {
		return m.SelfLink
	}
	return ""
}

func (m *TargetHttpProxyList) GetWarning() *TargetHttpProxyList_Warning {
	if m != nil {
		return m.Warning
	}
	return nil
}

// [Output Only] Informational warning message.
// [Output Only] Informational warning message.
type TargetHttpProxyList_Warning struct {
	// [Output Only] A warning code, if applicable. For example, Compute
	// Engine returns NO_RESULTS_ON_PAGE if there are no results in the
	// response.
	// Valid values:
	//     CLEANUP_FAILED
	//     DEPRECATED_RESOURCE_USED
	//     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
	//     FIELD_VALUE_OVERRIDEN
	//     INJECTED_KERNELS_DEPRECATED
	//     NEXT_HOP_ADDRESS_NOT_ASSIGNED
	//     NEXT_HOP_CANNOT_IP_FORWARD
	//     NEXT_HOP_INSTANCE_NOT_FOUND
	//     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
	//     NEXT_HOP_NOT_RUNNING
	//     NOT_CRITICAL_ERROR
	//     NO_RESULTS_ON_PAGE
	//     REQUIRED_TOS_AGREEMENT
	//     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
	//     RESOURCE_NOT_DELETED
	//     SINGLE_INSTANCE_PROPERTY_TEMPLATE
	//     UNREACHABLE
	Code string                              `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Data []*TargetHttpProxyList_Warning_Data `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
	// [Output Only] A human-readable description of the warning code.
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *TargetHttpProxyList_Warning) Reset()         { *m = TargetHttpProxyList_Warning{} }
func (m *TargetHttpProxyList_Warning) String() string { return proto.CompactTextString(m) }
func (*TargetHttpProxyList_Warning) ProtoMessage()    {}
func (*TargetHttpProxyList_Warning) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{227, 0}
}

func (m *TargetHttpProxyList_Warning) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *TargetHttpProxyList_Warning) GetData() []*TargetHttpProxyList_Warning_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *TargetHttpProxyList_Warning) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// [Output Only] Metadata about this warning in key: value format. For
// example:
// "data": [ { "key": "scope", "value": "zones/us-east1-d" }
type TargetHttpProxyList_Warning_Data struct {
	// [Output Only] A key that provides more detail on the warning being
	// returned. For example, for warnings where there are no results in a
	// list request for a particular zone, this key might be scope and the
	// key value might be the zone name. Other examples might be a key
	// indicating a deprecated resource and a suggested replacement, or a
	// warning about invalid network settings (for example, if an instance
	// attempts to perform IP forwarding but is not enabled for IP
	// forwarding).
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	// [Output Only] A warning data value corresponding to the key.
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *TargetHttpProxyList_Warning_Data) Reset()         { *m = TargetHttpProxyList_Warning_Data{} }
func (m *TargetHttpProxyList_Warning_Data) String() string { return proto.CompactTextString(m) }
func (*TargetHttpProxyList_Warning_Data) ProtoMessage()    {}
func (*TargetHttpProxyList_Warning_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{227, 0, 0}
}

func (m *TargetHttpProxyList_Warning_Data) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *TargetHttpProxyList_Warning_Data) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type TargetHttpsProxiesSetSslCertificatesRequest struct {
	// New set of SslCertificate resources to associate with this
	// TargetHttpsProxy resource. Currently exactly one SslCertificate
	// resource must be specified.
	SslCertificates []string `protobuf:"bytes,1,rep,name=sslCertificates" json:"sslCertificates,omitempty"`
}

func (m *TargetHttpsProxiesSetSslCertificatesRequest) Reset() {
	*m = TargetHttpsProxiesSetSslCertificatesRequest{}
}
func (m *TargetHttpsProxiesSetSslCertificatesRequest) String() string {
	return proto.CompactTextString(m)
}
func (*TargetHttpsProxiesSetSslCertificatesRequest) ProtoMessage() {}
func (*TargetHttpsProxiesSetSslCertificatesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{228}
}

func (m *TargetHttpsProxiesSetSslCertificatesRequest) GetSslCertificates() []string {
	if m != nil {
		return m.SslCertificates
	}
	return nil
}

// A TargetHttpsProxy resource. This resource defines an HTTPS proxy.
type TargetHttpsProxy struct {
	// [Output Only] Creation timestamp in RFC3339 text format.
	CreationTimestamp string `protobuf:"bytes,1,opt,name=creationTimestamp" json:"creationTimestamp,omitempty"`
	// An optional description of this resource. Provide this property when
	// you create the resource.
	Description string `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	// [Output Only] The unique identifier for the resource. This identifier
	// is defined by the server.
	Id string `protobuf:"bytes,3,opt,name=id" json:"id,omitempty"`
	// [Output Only] Type of resource. Always compute#targetHttpsProxy for
	// target HTTPS proxies.
	Kind string `protobuf:"bytes,4,opt,name=kind" json:"kind,omitempty"`
	// Name of the resource. Provided by the client when the resource is
	// created. The name must be 1-63 characters long, and comply with
	// RFC1035. Specifically, the name must be 1-63 characters long and
	// match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means
	// the first character must be a lowercase letter, and all following
	// characters must be a dash, lowercase letter, or digit, except the
	// last character, which cannot be a dash.
	Name string `protobuf:"bytes,5,opt,name=name" json:"name,omitempty"`
	// [Output Only] Server-defined URL for the resource.
	SelfLink string `protobuf:"bytes,6,opt,name=selfLink" json:"selfLink,omitempty"`
	// URLs to SslCertificate resources that are used to authenticate
	// connections between users and the load balancer. Currently, exactly
	// one SSL certificate must be specified.
	SslCertificates []string `protobuf:"bytes,7,rep,name=sslCertificates" json:"sslCertificates,omitempty"`
	// A fully-qualified or valid partial URL to the UrlMap resource that
	// defines the mapping from URL to the BackendService. For example, the
	// following are all valid URLs for specifying a URL map:
	// -
	// https://www.googleapis.compute/v1/projects/project/global/urlMaps/url-map
	// - projects/project/global/urlMaps/url-map
	// - global/urlMaps/url-map
	UrlMap string `protobuf:"bytes,8,opt,name=urlMap" json:"urlMap,omitempty"`
}

func (m *TargetHttpsProxy) Reset()                    { *m = TargetHttpsProxy{} }
func (m *TargetHttpsProxy) String() string            { return proto.CompactTextString(m) }
func (*TargetHttpsProxy) ProtoMessage()               {}
func (*TargetHttpsProxy) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{229} }

func (m *TargetHttpsProxy) GetCreationTimestamp() string {
	if m != nil {
		return m.CreationTimestamp
	}
	return ""
}

func (m *TargetHttpsProxy) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *TargetHttpsProxy) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *TargetHttpsProxy) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *TargetHttpsProxy) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *TargetHttpsProxy) GetSelfLink() string {
	if m != nil {
		return m.SelfLink
	}
	return ""
}

func (m *TargetHttpsProxy) GetSslCertificates() []string {
	if m != nil {
		return m.SslCertificates
	}
	return nil
}

func (m *TargetHttpsProxy) GetUrlMap() string {
	if m != nil {
		return m.UrlMap
	}
	return ""
}

// Contains a list of TargetHttpsProxy resources.
type TargetHttpsProxyList struct {
	// [Output Only] Unique identifier for the resource; defined by the
	// server.
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// A list of TargetHttpsProxy resources.
	Items []*TargetHttpsProxy `protobuf:"bytes,2,rep,name=items" json:"items,omitempty"`
	// Type of resource. Always compute#targetHttpsProxyList for lists of
	// target HTTPS proxies.
	Kind string `protobuf:"bytes,3,opt,name=kind" json:"kind,omitempty"`
	// [Output Only] This token allows you to get the next page of results
	// for list requests. If the number of results is larger than
	// maxResults, use the nextPageToken as a value for the query parameter
	// pageToken in the next list request. Subsequent list requests will
	// have their own nextPageToken to continue paging through the results.
	NextPageToken string `protobuf:"bytes,4,opt,name=nextPageToken" json:"nextPageToken,omitempty"`
	// [Output Only] Server-defined URL for this resource.
	SelfLink string                        `protobuf:"bytes,5,opt,name=selfLink" json:"selfLink,omitempty"`
	Warning  *TargetHttpsProxyList_Warning `protobuf:"bytes,6,opt,name=warning" json:"warning,omitempty"`
}

func (m *TargetHttpsProxyList) Reset()                    { *m = TargetHttpsProxyList{} }
func (m *TargetHttpsProxyList) String() string            { return proto.CompactTextString(m) }
func (*TargetHttpsProxyList) ProtoMessage()               {}
func (*TargetHttpsProxyList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{230} }

func (m *TargetHttpsProxyList) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *TargetHttpsProxyList) GetItems() []*TargetHttpsProxy {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *TargetHttpsProxyList) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *TargetHttpsProxyList) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

func (m *TargetHttpsProxyList) GetSelfLink() string {
	if m != nil {
		return m.SelfLink
	}
	return ""
}

func (m *TargetHttpsProxyList) GetWarning() *TargetHttpsProxyList_Warning {
	if m != nil {
		return m.Warning
	}
	return nil
}

// [Output Only] Informational warning message.
// [Output Only] Informational warning message.
type TargetHttpsProxyList_Warning struct {
	// [Output Only] A warning code, if applicable. For example, Compute
	// Engine returns NO_RESULTS_ON_PAGE if there are no results in the
	// response.
	// Valid values:
	//     CLEANUP_FAILED
	//     DEPRECATED_RESOURCE_USED
	//     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
	//     FIELD_VALUE_OVERRIDEN
	//     INJECTED_KERNELS_DEPRECATED
	//     NEXT_HOP_ADDRESS_NOT_ASSIGNED
	//     NEXT_HOP_CANNOT_IP_FORWARD
	//     NEXT_HOP_INSTANCE_NOT_FOUND
	//     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
	//     NEXT_HOP_NOT_RUNNING
	//     NOT_CRITICAL_ERROR
	//     NO_RESULTS_ON_PAGE
	//     REQUIRED_TOS_AGREEMENT
	//     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
	//     RESOURCE_NOT_DELETED
	//     SINGLE_INSTANCE_PROPERTY_TEMPLATE
	//     UNREACHABLE
	Code string                               `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Data []*TargetHttpsProxyList_Warning_Data `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
	// [Output Only] A human-readable description of the warning code.
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *TargetHttpsProxyList_Warning) Reset()         { *m = TargetHttpsProxyList_Warning{} }
func (m *TargetHttpsProxyList_Warning) String() string { return proto.CompactTextString(m) }
func (*TargetHttpsProxyList_Warning) ProtoMessage()    {}
func (*TargetHttpsProxyList_Warning) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{230, 0}
}

func (m *TargetHttpsProxyList_Warning) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *TargetHttpsProxyList_Warning) GetData() []*TargetHttpsProxyList_Warning_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *TargetHttpsProxyList_Warning) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// [Output Only] Metadata about this warning in key: value format. For
// example:
// "data": [ { "key": "scope", "value": "zones/us-east1-d" }
type TargetHttpsProxyList_Warning_Data struct {
	// [Output Only] A key that provides more detail on the warning being
	// returned. For example, for warnings where there are no results in a
	// list request for a particular zone, this key might be scope and the
	// key value might be the zone name. Other examples might be a key
	// indicating a deprecated resource and a suggested replacement, or a
	// warning about invalid network settings (for example, if an instance
	// attempts to perform IP forwarding but is not enabled for IP
	// forwarding).
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	// [Output Only] A warning data value corresponding to the key.
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *TargetHttpsProxyList_Warning_Data) Reset()         { *m = TargetHttpsProxyList_Warning_Data{} }
func (m *TargetHttpsProxyList_Warning_Data) String() string { return proto.CompactTextString(m) }
func (*TargetHttpsProxyList_Warning_Data) ProtoMessage()    {}
func (*TargetHttpsProxyList_Warning_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{230, 0, 0}
}

func (m *TargetHttpsProxyList_Warning_Data) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *TargetHttpsProxyList_Warning_Data) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

// A TargetInstance resource. This resource defines an endpoint instance
// that terminates traffic of certain protocols.
type TargetInstance struct {
	// [Output Only] Creation timestamp in RFC3339 text format.
	CreationTimestamp string `protobuf:"bytes,1,opt,name=creationTimestamp" json:"creationTimestamp,omitempty"`
	// An optional description of this resource. Provide this property when
	// you create the resource.
	Description string `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	// [Output Only] The unique identifier for the resource. This identifier
	// is defined by the server.
	Id string `protobuf:"bytes,3,opt,name=id" json:"id,omitempty"`
	// A URL to the virtual machine instance that handles traffic for this
	// target instance. When creating a target instance, you can provide the
	// fully-qualified URL or a valid partial URL to the desired virtual
	// machine. For example, the following are all valid URLs:
	// -
	// https://www.googleapis.com/compute/v1/projects/project/zones/zone/instances/instance
	// - projects/project/zones/zone/instances/instance
	// - zones/zone/instances/instance
	Instance string `protobuf:"bytes,4,opt,name=instance" json:"instance,omitempty"`
	// [Output Only] The type of the resource. Always compute#targetInstance
	// for target instances.
	Kind string `protobuf:"bytes,5,opt,name=kind" json:"kind,omitempty"`
	// Name of the resource. Provided by the client when the resource is
	// created. The name must be 1-63 characters long, and comply with
	// RFC1035. Specifically, the name must be 1-63 characters long and
	// match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means
	// the first character must be a lowercase letter, and all following
	// characters must be a dash, lowercase letter, or digit, except the
	// last character, which cannot be a dash.
	Name string `protobuf:"bytes,6,opt,name=name" json:"name,omitempty"`
	// NAT option controlling how IPs are NAT'ed to the instance. Currently
	// only NO_NAT (default value) is supported.
	// Valid values:
	//     NO_NAT
	NatPolicy string `protobuf:"bytes,7,opt,name=natPolicy" json:"natPolicy,omitempty"`
	// [Output Only] Server-defined URL for the resource.
	SelfLink string `protobuf:"bytes,8,opt,name=selfLink" json:"selfLink,omitempty"`
	// [Output Only] URL of the zone where the target instance resides.
	Zone string `protobuf:"bytes,9,opt,name=zone" json:"zone,omitempty"`
}

func (m *TargetInstance) Reset()                    { *m = TargetInstance{} }
func (m *TargetInstance) String() string            { return proto.CompactTextString(m) }
func (*TargetInstance) ProtoMessage()               {}
func (*TargetInstance) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{231} }

func (m *TargetInstance) GetCreationTimestamp() string {
	if m != nil {
		return m.CreationTimestamp
	}
	return ""
}

func (m *TargetInstance) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *TargetInstance) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *TargetInstance) GetInstance() string {
	if m != nil {
		return m.Instance
	}
	return ""
}

func (m *TargetInstance) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *TargetInstance) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *TargetInstance) GetNatPolicy() string {
	if m != nil {
		return m.NatPolicy
	}
	return ""
}

func (m *TargetInstance) GetSelfLink() string {
	if m != nil {
		return m.SelfLink
	}
	return ""
}

func (m *TargetInstance) GetZone() string {
	if m != nil {
		return m.Zone
	}
	return ""
}

type TargetInstanceAggregatedList struct {
	// [Output Only] Unique identifier for the resource; defined by the
	// server.
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// A list of TargetInstance resources.
	Items map[string]*TargetInstancesScopedList `protobuf:"bytes,2,rep,name=items" json:"items,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Type of resource.
	Kind string `protobuf:"bytes,3,opt,name=kind" json:"kind,omitempty"`
	// [Output Only] This token allows you to get the next page of results
	// for list requests. If the number of results is larger than
	// maxResults, use the nextPageToken as a value for the query parameter
	// pageToken in the next list request. Subsequent list requests will
	// have their own nextPageToken to continue paging through the results.
	NextPageToken string `protobuf:"bytes,4,opt,name=nextPageToken" json:"nextPageToken,omitempty"`
	// [Output Only] Server-defined URL for this resource.
	SelfLink string                                `protobuf:"bytes,5,opt,name=selfLink" json:"selfLink,omitempty"`
	Warning  *TargetInstanceAggregatedList_Warning `protobuf:"bytes,6,opt,name=warning" json:"warning,omitempty"`
}

func (m *TargetInstanceAggregatedList) Reset()                    { *m = TargetInstanceAggregatedList{} }
func (m *TargetInstanceAggregatedList) String() string            { return proto.CompactTextString(m) }
func (*TargetInstanceAggregatedList) ProtoMessage()               {}
func (*TargetInstanceAggregatedList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{232} }

func (m *TargetInstanceAggregatedList) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *TargetInstanceAggregatedList) GetItems() map[string]*TargetInstancesScopedList {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *TargetInstanceAggregatedList) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *TargetInstanceAggregatedList) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

func (m *TargetInstanceAggregatedList) GetSelfLink() string {
	if m != nil {
		return m.SelfLink
	}
	return ""
}

func (m *TargetInstanceAggregatedList) GetWarning() *TargetInstanceAggregatedList_Warning {
	if m != nil {
		return m.Warning
	}
	return nil
}

// [Output Only] Informational warning message.
// [Output Only] Informational warning message.
type TargetInstanceAggregatedList_Warning struct {
	// [Output Only] A warning code, if applicable. For example, Compute
	// Engine returns NO_RESULTS_ON_PAGE if there are no results in the
	// response.
	// Valid values:
	//     CLEANUP_FAILED
	//     DEPRECATED_RESOURCE_USED
	//     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
	//     FIELD_VALUE_OVERRIDEN
	//     INJECTED_KERNELS_DEPRECATED
	//     NEXT_HOP_ADDRESS_NOT_ASSIGNED
	//     NEXT_HOP_CANNOT_IP_FORWARD
	//     NEXT_HOP_INSTANCE_NOT_FOUND
	//     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
	//     NEXT_HOP_NOT_RUNNING
	//     NOT_CRITICAL_ERROR
	//     NO_RESULTS_ON_PAGE
	//     REQUIRED_TOS_AGREEMENT
	//     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
	//     RESOURCE_NOT_DELETED
	//     SINGLE_INSTANCE_PROPERTY_TEMPLATE
	//     UNREACHABLE
	Code string                                       `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Data []*TargetInstanceAggregatedList_Warning_Data `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
	// [Output Only] A human-readable description of the warning code.
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *TargetInstanceAggregatedList_Warning) Reset()         { *m = TargetInstanceAggregatedList_Warning{} }
func (m *TargetInstanceAggregatedList_Warning) String() string { return proto.CompactTextString(m) }
func (*TargetInstanceAggregatedList_Warning) ProtoMessage()    {}
func (*TargetInstanceAggregatedList_Warning) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{232, 1}
}

func (m *TargetInstanceAggregatedList_Warning) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *TargetInstanceAggregatedList_Warning) GetData() []*TargetInstanceAggregatedList_Warning_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *TargetInstanceAggregatedList_Warning) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// [Output Only] Metadata about this warning in key: value format. For
// example:
// "data": [ { "key": "scope", "value": "zones/us-east1-d" }
type TargetInstanceAggregatedList_Warning_Data struct {
	// [Output Only] A key that provides more detail on the warning being
	// returned. For example, for warnings where there are no results in a
	// list request for a particular zone, this key might be scope and the
	// key value might be the zone name. Other examples might be a key
	// indicating a deprecated resource and a suggested replacement, or a
	// warning about invalid network settings (for example, if an instance
	// attempts to perform IP forwarding but is not enabled for IP
	// forwarding).
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	// [Output Only] A warning data value corresponding to the key.
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *TargetInstanceAggregatedList_Warning_Data) Reset() {
	*m = TargetInstanceAggregatedList_Warning_Data{}
}
func (m *TargetInstanceAggregatedList_Warning_Data) String() string { return proto.CompactTextString(m) }
func (*TargetInstanceAggregatedList_Warning_Data) ProtoMessage()    {}
func (*TargetInstanceAggregatedList_Warning_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{232, 1, 0}
}

func (m *TargetInstanceAggregatedList_Warning_Data) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *TargetInstanceAggregatedList_Warning_Data) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

// Contains a list of TargetInstance resources.
type TargetInstanceList struct {
	// [Output Only] Unique identifier for the resource; defined by the
	// server.
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// A list of TargetInstance resources.
	Items []*TargetInstance `protobuf:"bytes,2,rep,name=items" json:"items,omitempty"`
	// Type of resource.
	Kind string `protobuf:"bytes,3,opt,name=kind" json:"kind,omitempty"`
	// [Output Only] This token allows you to get the next page of results
	// for list requests. If the number of results is larger than
	// maxResults, use the nextPageToken as a value for the query parameter
	// pageToken in the next list request. Subsequent list requests will
	// have their own nextPageToken to continue paging through the results.
	NextPageToken string `protobuf:"bytes,4,opt,name=nextPageToken" json:"nextPageToken,omitempty"`
	// [Output Only] Server-defined URL for this resource.
	SelfLink string                      `protobuf:"bytes,5,opt,name=selfLink" json:"selfLink,omitempty"`
	Warning  *TargetInstanceList_Warning `protobuf:"bytes,6,opt,name=warning" json:"warning,omitempty"`
}

func (m *TargetInstanceList) Reset()                    { *m = TargetInstanceList{} }
func (m *TargetInstanceList) String() string            { return proto.CompactTextString(m) }
func (*TargetInstanceList) ProtoMessage()               {}
func (*TargetInstanceList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{233} }

func (m *TargetInstanceList) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *TargetInstanceList) GetItems() []*TargetInstance {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *TargetInstanceList) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *TargetInstanceList) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

func (m *TargetInstanceList) GetSelfLink() string {
	if m != nil {
		return m.SelfLink
	}
	return ""
}

func (m *TargetInstanceList) GetWarning() *TargetInstanceList_Warning {
	if m != nil {
		return m.Warning
	}
	return nil
}

// [Output Only] Informational warning message.
// [Output Only] Informational warning message.
type TargetInstanceList_Warning struct {
	// [Output Only] A warning code, if applicable. For example, Compute
	// Engine returns NO_RESULTS_ON_PAGE if there are no results in the
	// response.
	// Valid values:
	//     CLEANUP_FAILED
	//     DEPRECATED_RESOURCE_USED
	//     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
	//     FIELD_VALUE_OVERRIDEN
	//     INJECTED_KERNELS_DEPRECATED
	//     NEXT_HOP_ADDRESS_NOT_ASSIGNED
	//     NEXT_HOP_CANNOT_IP_FORWARD
	//     NEXT_HOP_INSTANCE_NOT_FOUND
	//     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
	//     NEXT_HOP_NOT_RUNNING
	//     NOT_CRITICAL_ERROR
	//     NO_RESULTS_ON_PAGE
	//     REQUIRED_TOS_AGREEMENT
	//     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
	//     RESOURCE_NOT_DELETED
	//     SINGLE_INSTANCE_PROPERTY_TEMPLATE
	//     UNREACHABLE
	Code string                             `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Data []*TargetInstanceList_Warning_Data `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
	// [Output Only] A human-readable description of the warning code.
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *TargetInstanceList_Warning) Reset()                    { *m = TargetInstanceList_Warning{} }
func (m *TargetInstanceList_Warning) String() string            { return proto.CompactTextString(m) }
func (*TargetInstanceList_Warning) ProtoMessage()               {}
func (*TargetInstanceList_Warning) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{233, 0} }

func (m *TargetInstanceList_Warning) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *TargetInstanceList_Warning) GetData() []*TargetInstanceList_Warning_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *TargetInstanceList_Warning) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// [Output Only] Metadata about this warning in key: value format. For
// example:
// "data": [ { "key": "scope", "value": "zones/us-east1-d" }
type TargetInstanceList_Warning_Data struct {
	// [Output Only] A key that provides more detail on the warning being
	// returned. For example, for warnings where there are no results in a
	// list request for a particular zone, this key might be scope and the
	// key value might be the zone name. Other examples might be a key
	// indicating a deprecated resource and a suggested replacement, or a
	// warning about invalid network settings (for example, if an instance
	// attempts to perform IP forwarding but is not enabled for IP
	// forwarding).
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	// [Output Only] A warning data value corresponding to the key.
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *TargetInstanceList_Warning_Data) Reset()         { *m = TargetInstanceList_Warning_Data{} }
func (m *TargetInstanceList_Warning_Data) String() string { return proto.CompactTextString(m) }
func (*TargetInstanceList_Warning_Data) ProtoMessage()    {}
func (*TargetInstanceList_Warning_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{233, 0, 0}
}

func (m *TargetInstanceList_Warning_Data) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *TargetInstanceList_Warning_Data) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type TargetInstancesScopedList struct {
	// List of target instances contained in this scope.
	TargetInstances []*TargetInstance                  `protobuf:"bytes,1,rep,name=targetInstances" json:"targetInstances,omitempty"`
	Warning         *TargetInstancesScopedList_Warning `protobuf:"bytes,2,opt,name=warning" json:"warning,omitempty"`
}

func (m *TargetInstancesScopedList) Reset()                    { *m = TargetInstancesScopedList{} }
func (m *TargetInstancesScopedList) String() string            { return proto.CompactTextString(m) }
func (*TargetInstancesScopedList) ProtoMessage()               {}
func (*TargetInstancesScopedList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{234} }

func (m *TargetInstancesScopedList) GetTargetInstances() []*TargetInstance {
	if m != nil {
		return m.TargetInstances
	}
	return nil
}

func (m *TargetInstancesScopedList) GetWarning() *TargetInstancesScopedList_Warning {
	if m != nil {
		return m.Warning
	}
	return nil
}

// Informational warning which replaces the list of addresses when the
// list is empty.
// Informational warning which replaces the list of addresses when the
// list is empty.
type TargetInstancesScopedList_Warning struct {
	// [Output Only] A warning code, if applicable. For example, Compute
	// Engine returns NO_RESULTS_ON_PAGE if there are no results in the
	// response.
	// Valid values:
	//     CLEANUP_FAILED
	//     DEPRECATED_RESOURCE_USED
	//     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
	//     FIELD_VALUE_OVERRIDEN
	//     INJECTED_KERNELS_DEPRECATED
	//     NEXT_HOP_ADDRESS_NOT_ASSIGNED
	//     NEXT_HOP_CANNOT_IP_FORWARD
	//     NEXT_HOP_INSTANCE_NOT_FOUND
	//     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
	//     NEXT_HOP_NOT_RUNNING
	//     NOT_CRITICAL_ERROR
	//     NO_RESULTS_ON_PAGE
	//     REQUIRED_TOS_AGREEMENT
	//     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
	//     RESOURCE_NOT_DELETED
	//     SINGLE_INSTANCE_PROPERTY_TEMPLATE
	//     UNREACHABLE
	Code string                                    `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Data []*TargetInstancesScopedList_Warning_Data `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
	// [Output Only] A human-readable description of the warning code.
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *TargetInstancesScopedList_Warning) Reset()         { *m = TargetInstancesScopedList_Warning{} }
func (m *TargetInstancesScopedList_Warning) String() string { return proto.CompactTextString(m) }
func (*TargetInstancesScopedList_Warning) ProtoMessage()    {}
func (*TargetInstancesScopedList_Warning) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{234, 0}
}

func (m *TargetInstancesScopedList_Warning) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *TargetInstancesScopedList_Warning) GetData() []*TargetInstancesScopedList_Warning_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *TargetInstancesScopedList_Warning) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// [Output Only] Metadata about this warning in key: value format. For
// example:
// "data": [ { "key": "scope", "value": "zones/us-east1-d" }
type TargetInstancesScopedList_Warning_Data struct {
	// [Output Only] A key that provides more detail on the warning being
	// returned. For example, for warnings where there are no results in a
	// list request for a particular zone, this key might be scope and the
	// key value might be the zone name. Other examples might be a key
	// indicating a deprecated resource and a suggested replacement, or a
	// warning about invalid network settings (for example, if an instance
	// attempts to perform IP forwarding but is not enabled for IP
	// forwarding).
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	// [Output Only] A warning data value corresponding to the key.
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *TargetInstancesScopedList_Warning_Data) Reset() {
	*m = TargetInstancesScopedList_Warning_Data{}
}
func (m *TargetInstancesScopedList_Warning_Data) String() string { return proto.CompactTextString(m) }
func (*TargetInstancesScopedList_Warning_Data) ProtoMessage()    {}
func (*TargetInstancesScopedList_Warning_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{234, 0, 0}
}

func (m *TargetInstancesScopedList_Warning_Data) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *TargetInstancesScopedList_Warning_Data) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

// A TargetPool resource. This resource defines a pool of instances, an
// associated HttpHealthCheck resource, and the fallback target pool.
type TargetPool struct {
	// This field is applicable only when the containing target pool is
	// serving a forwarding rule as the primary pool, and its failoverRatio
	// field is properly set to a value between [0, 1].
	//
	// backupPool and failoverRatio together define the fallback behavior of
	// the primary target pool: if the ratio of the healthy instances in the
	// primary pool is at or below failoverRatio, traffic arriving at the
	// load-balanced IP will be directed to the backup pool.
	//
	// In case where failoverRatio and backupPool are not set, or all the
	// instances in the backup pool are unhealthy, the traffic will be
	// directed back to the primary pool in the "force" mode, where traffic
	// will be spread to the healthy instances with the best effort, or to
	// all instances when no instance is healthy.
	BackupPool string `protobuf:"bytes,1,opt,name=backupPool" json:"backupPool,omitempty"`
	// [Output Only] Creation timestamp in RFC3339 text format.
	CreationTimestamp string `protobuf:"bytes,2,opt,name=creationTimestamp" json:"creationTimestamp,omitempty"`
	// An optional description of this resource. Provide this property when
	// you create the resource.
	Description string `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	// This field is applicable only when the containing target pool is
	// serving a forwarding rule as the primary pool (i.e., not as a backup
	// pool to some other target pool). The value of the field must be in
	// [0, 1].
	//
	// If set, backupPool must also be set. They together define the
	// fallback behavior of the primary target pool: if the ratio of the
	// healthy instances in the primary pool is at or below this number,
	// traffic arriving at the load-balanced IP will be directed to the
	// backup pool.
	//
	// In case where failoverRatio is not set or all the instances in the
	// backup pool are unhealthy, the traffic will be directed back to the
	// primary pool in the "force" mode, where traffic will be spread to the
	// healthy instances with the best effort, or to all instances when no
	// instance is healthy.
	FailoverRatio float32 `protobuf:"fixed32,4,opt,name=failoverRatio" json:"failoverRatio,omitempty"`
	// The URL of the HttpHealthCheck resource. A member instance in this
	// pool is considered healthy if and only if the health checks pass. An
	// empty list means all member instances will be considered healthy at
	// all times. Only HttpHealthChecks are supported. Only one health check
	// may be specified.
	HealthChecks []string `protobuf:"bytes,5,rep,name=healthChecks" json:"healthChecks,omitempty"`
	// [Output Only] The unique identifier for the resource. This identifier
	// is defined by the server.
	Id string `protobuf:"bytes,6,opt,name=id" json:"id,omitempty"`
	// A list of resource URLs to the virtual machine instances serving this
	// pool. They must live in zones contained in the same region as this
	// pool.
	Instances []string `protobuf:"bytes,7,rep,name=instances" json:"instances,omitempty"`
	// [Output Only] Type of the resource. Always compute#targetPool for
	// target pools.
	Kind string `protobuf:"bytes,8,opt,name=kind" json:"kind,omitempty"`
	// Name of the resource. Provided by the client when the resource is
	// created. The name must be 1-63 characters long, and comply with
	// RFC1035. Specifically, the name must be 1-63 characters long and
	// match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means
	// the first character must be a lowercase letter, and all following
	// characters must be a dash, lowercase letter, or digit, except the
	// last character, which cannot be a dash.
	Name string `protobuf:"bytes,9,opt,name=name" json:"name,omitempty"`
	// [Output Only] URL of the region where the target pool resides.
	Region string `protobuf:"bytes,10,opt,name=region" json:"region,omitempty"`
	// [Output Only] Server-defined URL for the resource.
	SelfLink string `protobuf:"bytes,11,opt,name=selfLink" json:"selfLink,omitempty"`
	// Sesssion affinity option, must be one of the following values:
	// NONE: Connections from the same client IP may go to any instance in
	// the pool.
	// CLIENT_IP: Connections from the same client IP will go to the same
	// instance in the pool while that instance remains healthy.
	// CLIENT_IP_PROTO: Connections from the same client IP with the same IP
	// protocol will go to the same instance in the pool while that instance
	// remains healthy.
	// Valid values:
	//     CLIENT_IP
	//     CLIENT_IP_PORT_PROTO
	//     CLIENT_IP_PROTO
	//     GENERATED_COOKIE
	//     NONE
	SessionAffinity string `protobuf:"bytes,12,opt,name=sessionAffinity" json:"sessionAffinity,omitempty"`
}

func (m *TargetPool) Reset()                    { *m = TargetPool{} }
func (m *TargetPool) String() string            { return proto.CompactTextString(m) }
func (*TargetPool) ProtoMessage()               {}
func (*TargetPool) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{235} }

func (m *TargetPool) GetBackupPool() string {
	if m != nil {
		return m.BackupPool
	}
	return ""
}

func (m *TargetPool) GetCreationTimestamp() string {
	if m != nil {
		return m.CreationTimestamp
	}
	return ""
}

func (m *TargetPool) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *TargetPool) GetFailoverRatio() float32 {
	if m != nil {
		return m.FailoverRatio
	}
	return 0
}

func (m *TargetPool) GetHealthChecks() []string {
	if m != nil {
		return m.HealthChecks
	}
	return nil
}

func (m *TargetPool) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *TargetPool) GetInstances() []string {
	if m != nil {
		return m.Instances
	}
	return nil
}

func (m *TargetPool) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *TargetPool) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *TargetPool) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *TargetPool) GetSelfLink() string {
	if m != nil {
		return m.SelfLink
	}
	return ""
}

func (m *TargetPool) GetSessionAffinity() string {
	if m != nil {
		return m.SessionAffinity
	}
	return ""
}

type TargetPoolAggregatedList struct {
	// [Output Only] Unique identifier for the resource; defined by the
	// server.
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// A list of TargetPool resources.
	Items map[string]*TargetPoolsScopedList `protobuf:"bytes,2,rep,name=items" json:"items,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// [Output Only] Type of resource. Always
	// compute#targetPoolAggregatedList for aggregated lists of target
	// pools.
	Kind string `protobuf:"bytes,3,opt,name=kind" json:"kind,omitempty"`
	// [Output Only] This token allows you to get the next page of results
	// for list requests. If the number of results is larger than
	// maxResults, use the nextPageToken as a value for the query parameter
	// pageToken in the next list request. Subsequent list requests will
	// have their own nextPageToken to continue paging through the results.
	NextPageToken string `protobuf:"bytes,4,opt,name=nextPageToken" json:"nextPageToken,omitempty"`
	// [Output Only] Server-defined URL for this resource.
	SelfLink string                            `protobuf:"bytes,5,opt,name=selfLink" json:"selfLink,omitempty"`
	Warning  *TargetPoolAggregatedList_Warning `protobuf:"bytes,6,opt,name=warning" json:"warning,omitempty"`
}

func (m *TargetPoolAggregatedList) Reset()                    { *m = TargetPoolAggregatedList{} }
func (m *TargetPoolAggregatedList) String() string            { return proto.CompactTextString(m) }
func (*TargetPoolAggregatedList) ProtoMessage()               {}
func (*TargetPoolAggregatedList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{236} }

func (m *TargetPoolAggregatedList) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *TargetPoolAggregatedList) GetItems() map[string]*TargetPoolsScopedList {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *TargetPoolAggregatedList) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *TargetPoolAggregatedList) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

func (m *TargetPoolAggregatedList) GetSelfLink() string {
	if m != nil {
		return m.SelfLink
	}
	return ""
}

func (m *TargetPoolAggregatedList) GetWarning() *TargetPoolAggregatedList_Warning {
	if m != nil {
		return m.Warning
	}
	return nil
}

// [Output Only] Informational warning message.
// [Output Only] Informational warning message.
type TargetPoolAggregatedList_Warning struct {
	// [Output Only] A warning code, if applicable. For example, Compute
	// Engine returns NO_RESULTS_ON_PAGE if there are no results in the
	// response.
	// Valid values:
	//     CLEANUP_FAILED
	//     DEPRECATED_RESOURCE_USED
	//     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
	//     FIELD_VALUE_OVERRIDEN
	//     INJECTED_KERNELS_DEPRECATED
	//     NEXT_HOP_ADDRESS_NOT_ASSIGNED
	//     NEXT_HOP_CANNOT_IP_FORWARD
	//     NEXT_HOP_INSTANCE_NOT_FOUND
	//     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
	//     NEXT_HOP_NOT_RUNNING
	//     NOT_CRITICAL_ERROR
	//     NO_RESULTS_ON_PAGE
	//     REQUIRED_TOS_AGREEMENT
	//     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
	//     RESOURCE_NOT_DELETED
	//     SINGLE_INSTANCE_PROPERTY_TEMPLATE
	//     UNREACHABLE
	Code string                                   `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Data []*TargetPoolAggregatedList_Warning_Data `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
	// [Output Only] A human-readable description of the warning code.
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *TargetPoolAggregatedList_Warning) Reset()         { *m = TargetPoolAggregatedList_Warning{} }
func (m *TargetPoolAggregatedList_Warning) String() string { return proto.CompactTextString(m) }
func (*TargetPoolAggregatedList_Warning) ProtoMessage()    {}
func (*TargetPoolAggregatedList_Warning) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{236, 1}
}

func (m *TargetPoolAggregatedList_Warning) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *TargetPoolAggregatedList_Warning) GetData() []*TargetPoolAggregatedList_Warning_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *TargetPoolAggregatedList_Warning) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// [Output Only] Metadata about this warning in key: value format. For
// example:
// "data": [ { "key": "scope", "value": "zones/us-east1-d" }
type TargetPoolAggregatedList_Warning_Data struct {
	// [Output Only] A key that provides more detail on the warning being
	// returned. For example, for warnings where there are no results in a
	// list request for a particular zone, this key might be scope and the
	// key value might be the zone name. Other examples might be a key
	// indicating a deprecated resource and a suggested replacement, or a
	// warning about invalid network settings (for example, if an instance
	// attempts to perform IP forwarding but is not enabled for IP
	// forwarding).
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	// [Output Only] A warning data value corresponding to the key.
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *TargetPoolAggregatedList_Warning_Data) Reset()         { *m = TargetPoolAggregatedList_Warning_Data{} }
func (m *TargetPoolAggregatedList_Warning_Data) String() string { return proto.CompactTextString(m) }
func (*TargetPoolAggregatedList_Warning_Data) ProtoMessage()    {}
func (*TargetPoolAggregatedList_Warning_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{236, 1, 0}
}

func (m *TargetPoolAggregatedList_Warning_Data) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *TargetPoolAggregatedList_Warning_Data) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type TargetPoolInstanceHealth struct {
	HealthStatus []*HealthStatus `protobuf:"bytes,1,rep,name=healthStatus" json:"healthStatus,omitempty"`
	// [Output Only] Type of resource. Always
	// compute#targetPoolInstanceHealth when checking the health of an
	// instance.
	Kind string `protobuf:"bytes,2,opt,name=kind" json:"kind,omitempty"`
}

func (m *TargetPoolInstanceHealth) Reset()                    { *m = TargetPoolInstanceHealth{} }
func (m *TargetPoolInstanceHealth) String() string            { return proto.CompactTextString(m) }
func (*TargetPoolInstanceHealth) ProtoMessage()               {}
func (*TargetPoolInstanceHealth) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{237} }

func (m *TargetPoolInstanceHealth) GetHealthStatus() []*HealthStatus {
	if m != nil {
		return m.HealthStatus
	}
	return nil
}

func (m *TargetPoolInstanceHealth) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

// Contains a list of TargetPool resources.
type TargetPoolList struct {
	// [Output Only] Unique identifier for the resource; defined by the
	// server.
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// A list of TargetPool resources.
	Items []*TargetPool `protobuf:"bytes,2,rep,name=items" json:"items,omitempty"`
	// [Output Only] Type of resource. Always compute#targetPoolList for
	// lists of target pools.
	Kind string `protobuf:"bytes,3,opt,name=kind" json:"kind,omitempty"`
	// [Output Only] This token allows you to get the next page of results
	// for list requests. If the number of results is larger than
	// maxResults, use the nextPageToken as a value for the query parameter
	// pageToken in the next list request. Subsequent list requests will
	// have their own nextPageToken to continue paging through the results.
	NextPageToken string `protobuf:"bytes,4,opt,name=nextPageToken" json:"nextPageToken,omitempty"`
	// [Output Only] Server-defined URL for this resource.
	SelfLink string                  `protobuf:"bytes,5,opt,name=selfLink" json:"selfLink,omitempty"`
	Warning  *TargetPoolList_Warning `protobuf:"bytes,6,opt,name=warning" json:"warning,omitempty"`
}

func (m *TargetPoolList) Reset()                    { *m = TargetPoolList{} }
func (m *TargetPoolList) String() string            { return proto.CompactTextString(m) }
func (*TargetPoolList) ProtoMessage()               {}
func (*TargetPoolList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{238} }

func (m *TargetPoolList) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *TargetPoolList) GetItems() []*TargetPool {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *TargetPoolList) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *TargetPoolList) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

func (m *TargetPoolList) GetSelfLink() string {
	if m != nil {
		return m.SelfLink
	}
	return ""
}

func (m *TargetPoolList) GetWarning() *TargetPoolList_Warning {
	if m != nil {
		return m.Warning
	}
	return nil
}

// [Output Only] Informational warning message.
// [Output Only] Informational warning message.
type TargetPoolList_Warning struct {
	// [Output Only] A warning code, if applicable. For example, Compute
	// Engine returns NO_RESULTS_ON_PAGE if there are no results in the
	// response.
	// Valid values:
	//     CLEANUP_FAILED
	//     DEPRECATED_RESOURCE_USED
	//     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
	//     FIELD_VALUE_OVERRIDEN
	//     INJECTED_KERNELS_DEPRECATED
	//     NEXT_HOP_ADDRESS_NOT_ASSIGNED
	//     NEXT_HOP_CANNOT_IP_FORWARD
	//     NEXT_HOP_INSTANCE_NOT_FOUND
	//     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
	//     NEXT_HOP_NOT_RUNNING
	//     NOT_CRITICAL_ERROR
	//     NO_RESULTS_ON_PAGE
	//     REQUIRED_TOS_AGREEMENT
	//     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
	//     RESOURCE_NOT_DELETED
	//     SINGLE_INSTANCE_PROPERTY_TEMPLATE
	//     UNREACHABLE
	Code string                         `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Data []*TargetPoolList_Warning_Data `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
	// [Output Only] A human-readable description of the warning code.
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *TargetPoolList_Warning) Reset()                    { *m = TargetPoolList_Warning{} }
func (m *TargetPoolList_Warning) String() string            { return proto.CompactTextString(m) }
func (*TargetPoolList_Warning) ProtoMessage()               {}
func (*TargetPoolList_Warning) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{238, 0} }

func (m *TargetPoolList_Warning) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *TargetPoolList_Warning) GetData() []*TargetPoolList_Warning_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *TargetPoolList_Warning) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// [Output Only] Metadata about this warning in key: value format. For
// example:
// "data": [ { "key": "scope", "value": "zones/us-east1-d" }
type TargetPoolList_Warning_Data struct {
	// [Output Only] A key that provides more detail on the warning being
	// returned. For example, for warnings where there are no results in a
	// list request for a particular zone, this key might be scope and the
	// key value might be the zone name. Other examples might be a key
	// indicating a deprecated resource and a suggested replacement, or a
	// warning about invalid network settings (for example, if an instance
	// attempts to perform IP forwarding but is not enabled for IP
	// forwarding).
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	// [Output Only] A warning data value corresponding to the key.
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *TargetPoolList_Warning_Data) Reset()         { *m = TargetPoolList_Warning_Data{} }
func (m *TargetPoolList_Warning_Data) String() string { return proto.CompactTextString(m) }
func (*TargetPoolList_Warning_Data) ProtoMessage()    {}
func (*TargetPoolList_Warning_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{238, 0, 0}
}

func (m *TargetPoolList_Warning_Data) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *TargetPoolList_Warning_Data) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type TargetPoolsAddHealthCheckRequest struct {
	// The HttpHealthCheck to add to the target pool.
	HealthChecks []*HealthCheckReference `protobuf:"bytes,1,rep,name=healthChecks" json:"healthChecks,omitempty"`
}

func (m *TargetPoolsAddHealthCheckRequest) Reset()         { *m = TargetPoolsAddHealthCheckRequest{} }
func (m *TargetPoolsAddHealthCheckRequest) String() string { return proto.CompactTextString(m) }
func (*TargetPoolsAddHealthCheckRequest) ProtoMessage()    {}
func (*TargetPoolsAddHealthCheckRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{239}
}

func (m *TargetPoolsAddHealthCheckRequest) GetHealthChecks() []*HealthCheckReference {
	if m != nil {
		return m.HealthChecks
	}
	return nil
}

type TargetPoolsAddInstanceRequest struct {
	// A full or partial URL to an instance to add to this target pool. This
	// can be a full or partial URL. For example, the following are valid
	// URLs:
	// -
	// https://www.googleapis.com/compute/v1/projects/project-id/zones/zone/instances/instance-name
	// - projects/project-id/zones/zone/instances/instance-name
	// - zones/zone/instances/instance-name
	Instances []*InstanceReference `protobuf:"bytes,1,rep,name=instances" json:"instances,omitempty"`
}

func (m *TargetPoolsAddInstanceRequest) Reset()                    { *m = TargetPoolsAddInstanceRequest{} }
func (m *TargetPoolsAddInstanceRequest) String() string            { return proto.CompactTextString(m) }
func (*TargetPoolsAddInstanceRequest) ProtoMessage()               {}
func (*TargetPoolsAddInstanceRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{240} }

func (m *TargetPoolsAddInstanceRequest) GetInstances() []*InstanceReference {
	if m != nil {
		return m.Instances
	}
	return nil
}

type TargetPoolsRemoveHealthCheckRequest struct {
	// Health check URL to be removed. This can be a full or valid partial
	// URL. For example, the following are valid URLs:
	// -
	// https://www.googleapis.com/compute/beta/projects/project/global/httpHealthChecks/health-check
	// - projects/project/global/httpHealthChecks/health-check
	// - global/httpHealthChecks/health-check
	HealthChecks []*HealthCheckReference `protobuf:"bytes,1,rep,name=healthChecks" json:"healthChecks,omitempty"`
}

func (m *TargetPoolsRemoveHealthCheckRequest) Reset()         { *m = TargetPoolsRemoveHealthCheckRequest{} }
func (m *TargetPoolsRemoveHealthCheckRequest) String() string { return proto.CompactTextString(m) }
func (*TargetPoolsRemoveHealthCheckRequest) ProtoMessage()    {}
func (*TargetPoolsRemoveHealthCheckRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{241}
}

func (m *TargetPoolsRemoveHealthCheckRequest) GetHealthChecks() []*HealthCheckReference {
	if m != nil {
		return m.HealthChecks
	}
	return nil
}

type TargetPoolsRemoveInstanceRequest struct {
	// URLs of the instances to be removed from target pool.
	Instances []*InstanceReference `protobuf:"bytes,1,rep,name=instances" json:"instances,omitempty"`
}

func (m *TargetPoolsRemoveInstanceRequest) Reset()         { *m = TargetPoolsRemoveInstanceRequest{} }
func (m *TargetPoolsRemoveInstanceRequest) String() string { return proto.CompactTextString(m) }
func (*TargetPoolsRemoveInstanceRequest) ProtoMessage()    {}
func (*TargetPoolsRemoveInstanceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{242}
}

func (m *TargetPoolsRemoveInstanceRequest) GetInstances() []*InstanceReference {
	if m != nil {
		return m.Instances
	}
	return nil
}

type TargetPoolsScopedList struct {
	// List of target pools contained in this scope.
	TargetPools []*TargetPool                  `protobuf:"bytes,1,rep,name=targetPools" json:"targetPools,omitempty"`
	Warning     *TargetPoolsScopedList_Warning `protobuf:"bytes,2,opt,name=warning" json:"warning,omitempty"`
}

func (m *TargetPoolsScopedList) Reset()                    { *m = TargetPoolsScopedList{} }
func (m *TargetPoolsScopedList) String() string            { return proto.CompactTextString(m) }
func (*TargetPoolsScopedList) ProtoMessage()               {}
func (*TargetPoolsScopedList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{243} }

func (m *TargetPoolsScopedList) GetTargetPools() []*TargetPool {
	if m != nil {
		return m.TargetPools
	}
	return nil
}

func (m *TargetPoolsScopedList) GetWarning() *TargetPoolsScopedList_Warning {
	if m != nil {
		return m.Warning
	}
	return nil
}

// Informational warning which replaces the list of addresses when the
// list is empty.
// Informational warning which replaces the list of addresses when the
// list is empty.
type TargetPoolsScopedList_Warning struct {
	// [Output Only] A warning code, if applicable. For example, Compute
	// Engine returns NO_RESULTS_ON_PAGE if there are no results in the
	// response.
	// Valid values:
	//     CLEANUP_FAILED
	//     DEPRECATED_RESOURCE_USED
	//     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
	//     FIELD_VALUE_OVERRIDEN
	//     INJECTED_KERNELS_DEPRECATED
	//     NEXT_HOP_ADDRESS_NOT_ASSIGNED
	//     NEXT_HOP_CANNOT_IP_FORWARD
	//     NEXT_HOP_INSTANCE_NOT_FOUND
	//     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
	//     NEXT_HOP_NOT_RUNNING
	//     NOT_CRITICAL_ERROR
	//     NO_RESULTS_ON_PAGE
	//     REQUIRED_TOS_AGREEMENT
	//     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
	//     RESOURCE_NOT_DELETED
	//     SINGLE_INSTANCE_PROPERTY_TEMPLATE
	//     UNREACHABLE
	Code string                                `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Data []*TargetPoolsScopedList_Warning_Data `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
	// [Output Only] A human-readable description of the warning code.
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *TargetPoolsScopedList_Warning) Reset()         { *m = TargetPoolsScopedList_Warning{} }
func (m *TargetPoolsScopedList_Warning) String() string { return proto.CompactTextString(m) }
func (*TargetPoolsScopedList_Warning) ProtoMessage()    {}
func (*TargetPoolsScopedList_Warning) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{243, 0}
}

func (m *TargetPoolsScopedList_Warning) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *TargetPoolsScopedList_Warning) GetData() []*TargetPoolsScopedList_Warning_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *TargetPoolsScopedList_Warning) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// [Output Only] Metadata about this warning in key: value format. For
// example:
// "data": [ { "key": "scope", "value": "zones/us-east1-d" }
type TargetPoolsScopedList_Warning_Data struct {
	// [Output Only] A key that provides more detail on the warning being
	// returned. For example, for warnings where there are no results in a
	// list request for a particular zone, this key might be scope and the
	// key value might be the zone name. Other examples might be a key
	// indicating a deprecated resource and a suggested replacement, or a
	// warning about invalid network settings (for example, if an instance
	// attempts to perform IP forwarding but is not enabled for IP
	// forwarding).
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	// [Output Only] A warning data value corresponding to the key.
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *TargetPoolsScopedList_Warning_Data) Reset()         { *m = TargetPoolsScopedList_Warning_Data{} }
func (m *TargetPoolsScopedList_Warning_Data) String() string { return proto.CompactTextString(m) }
func (*TargetPoolsScopedList_Warning_Data) ProtoMessage()    {}
func (*TargetPoolsScopedList_Warning_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{243, 0, 0}
}

func (m *TargetPoolsScopedList_Warning_Data) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *TargetPoolsScopedList_Warning_Data) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type TargetReference struct {
	Target string `protobuf:"bytes,1,opt,name=target" json:"target,omitempty"`
}

func (m *TargetReference) Reset()                    { *m = TargetReference{} }
func (m *TargetReference) String() string            { return proto.CompactTextString(m) }
func (*TargetReference) ProtoMessage()               {}
func (*TargetReference) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{244} }

func (m *TargetReference) GetTarget() string {
	if m != nil {
		return m.Target
	}
	return ""
}

type TargetSslProxiesSetBackendServiceRequest struct {
	// The URL of the new BackendService resource for the targetSslProxy.
	Service string `protobuf:"bytes,1,opt,name=service" json:"service,omitempty"`
}

func (m *TargetSslProxiesSetBackendServiceRequest) Reset() {
	*m = TargetSslProxiesSetBackendServiceRequest{}
}
func (m *TargetSslProxiesSetBackendServiceRequest) String() string { return proto.CompactTextString(m) }
func (*TargetSslProxiesSetBackendServiceRequest) ProtoMessage()    {}
func (*TargetSslProxiesSetBackendServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{245}
}

func (m *TargetSslProxiesSetBackendServiceRequest) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

type TargetSslProxiesSetProxyHeaderRequest struct {
	// The new type of proxy header to append before sending data to the
	// backend. NONE or PROXY_V1 are allowed.
	// Valid values:
	//     NONE
	//     PROXY_V1
	ProxyHeader string `protobuf:"bytes,1,opt,name=proxyHeader" json:"proxyHeader,omitempty"`
}

func (m *TargetSslProxiesSetProxyHeaderRequest) Reset()         { *m = TargetSslProxiesSetProxyHeaderRequest{} }
func (m *TargetSslProxiesSetProxyHeaderRequest) String() string { return proto.CompactTextString(m) }
func (*TargetSslProxiesSetProxyHeaderRequest) ProtoMessage()    {}
func (*TargetSslProxiesSetProxyHeaderRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{246}
}

func (m *TargetSslProxiesSetProxyHeaderRequest) GetProxyHeader() string {
	if m != nil {
		return m.ProxyHeader
	}
	return ""
}

type TargetSslProxiesSetSslCertificatesRequest struct {
	// New set of URLs to SslCertificate resources to associate with this
	// TargetSslProxy. Currently exactly one ssl certificate must be
	// specified.
	SslCertificates []string `protobuf:"bytes,1,rep,name=sslCertificates" json:"sslCertificates,omitempty"`
}

func (m *TargetSslProxiesSetSslCertificatesRequest) Reset() {
	*m = TargetSslProxiesSetSslCertificatesRequest{}
}
func (m *TargetSslProxiesSetSslCertificatesRequest) String() string { return proto.CompactTextString(m) }
func (*TargetSslProxiesSetSslCertificatesRequest) ProtoMessage()    {}
func (*TargetSslProxiesSetSslCertificatesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{247}
}

func (m *TargetSslProxiesSetSslCertificatesRequest) GetSslCertificates() []string {
	if m != nil {
		return m.SslCertificates
	}
	return nil
}

// A TargetSslProxy resource. This resource defines an SSL proxy.
type TargetSslProxy struct {
	// [Output Only] Creation timestamp in RFC3339 text format.
	CreationTimestamp string `protobuf:"bytes,1,opt,name=creationTimestamp" json:"creationTimestamp,omitempty"`
	// An optional description of this resource. Provide this property when
	// you create the resource.
	Description string `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	// [Output Only] The unique identifier for the resource. This identifier
	// is defined by the server.
	Id string `protobuf:"bytes,3,opt,name=id" json:"id,omitempty"`
	// [Output Only] Type of the resource. Always compute#targetSslProxy for
	// target SSL proxies.
	Kind string `protobuf:"bytes,4,opt,name=kind" json:"kind,omitempty"`
	// Name of the resource. Provided by the client when the resource is
	// created. The name must be 1-63 characters long, and comply with
	// RFC1035. Specifically, the name must be 1-63 characters long and
	// match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means
	// the first character must be a lowercase letter, and all following
	// characters must be a dash, lowercase letter, or digit, except the
	// last character, which cannot be a dash.
	Name string `protobuf:"bytes,5,opt,name=name" json:"name,omitempty"`
	// Specifies the type of proxy header to append before sending data to
	// the backend, either NONE or PROXY_V1. The default is NONE.
	// Valid values:
	//     NONE
	//     PROXY_V1
	ProxyHeader string `protobuf:"bytes,6,opt,name=proxyHeader" json:"proxyHeader,omitempty"`
	// [Output Only] Server-defined URL for the resource.
	SelfLink string `protobuf:"bytes,7,opt,name=selfLink" json:"selfLink,omitempty"`
	// URL to the BackendService resource.
	Service string `protobuf:"bytes,8,opt,name=service" json:"service,omitempty"`
	// URLs to SslCertificate resources that are used to authenticate
	// connections to Backends. Currently exactly one SSL certificate must
	// be specified.
	SslCertificates []string `protobuf:"bytes,9,rep,name=sslCertificates" json:"sslCertificates,omitempty"`
}

func (m *TargetSslProxy) Reset()                    { *m = TargetSslProxy{} }
func (m *TargetSslProxy) String() string            { return proto.CompactTextString(m) }
func (*TargetSslProxy) ProtoMessage()               {}
func (*TargetSslProxy) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{248} }

func (m *TargetSslProxy) GetCreationTimestamp() string {
	if m != nil {
		return m.CreationTimestamp
	}
	return ""
}

func (m *TargetSslProxy) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *TargetSslProxy) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *TargetSslProxy) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *TargetSslProxy) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *TargetSslProxy) GetProxyHeader() string {
	if m != nil {
		return m.ProxyHeader
	}
	return ""
}

func (m *TargetSslProxy) GetSelfLink() string {
	if m != nil {
		return m.SelfLink
	}
	return ""
}

func (m *TargetSslProxy) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

func (m *TargetSslProxy) GetSslCertificates() []string {
	if m != nil {
		return m.SslCertificates
	}
	return nil
}

// Contains a list of TargetSslProxy resources.
type TargetSslProxyList struct {
	// [Output Only] Unique identifier for the resource; defined by the
	// server.
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// A list of TargetSslProxy resources.
	Items []*TargetSslProxy `protobuf:"bytes,2,rep,name=items" json:"items,omitempty"`
	// Type of resource.
	Kind string `protobuf:"bytes,3,opt,name=kind" json:"kind,omitempty"`
	// [Output Only] This token allows you to get the next page of results
	// for list requests. If the number of results is larger than
	// maxResults, use the nextPageToken as a value for the query parameter
	// pageToken in the next list request. Subsequent list requests will
	// have their own nextPageToken to continue paging through the results.
	NextPageToken string `protobuf:"bytes,4,opt,name=nextPageToken" json:"nextPageToken,omitempty"`
	// [Output Only] Server-defined URL for this resource.
	SelfLink string                      `protobuf:"bytes,5,opt,name=selfLink" json:"selfLink,omitempty"`
	Warning  *TargetSslProxyList_Warning `protobuf:"bytes,6,opt,name=warning" json:"warning,omitempty"`
}

func (m *TargetSslProxyList) Reset()                    { *m = TargetSslProxyList{} }
func (m *TargetSslProxyList) String() string            { return proto.CompactTextString(m) }
func (*TargetSslProxyList) ProtoMessage()               {}
func (*TargetSslProxyList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{249} }

func (m *TargetSslProxyList) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *TargetSslProxyList) GetItems() []*TargetSslProxy {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *TargetSslProxyList) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *TargetSslProxyList) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

func (m *TargetSslProxyList) GetSelfLink() string {
	if m != nil {
		return m.SelfLink
	}
	return ""
}

func (m *TargetSslProxyList) GetWarning() *TargetSslProxyList_Warning {
	if m != nil {
		return m.Warning
	}
	return nil
}

// [Output Only] Informational warning message.
// [Output Only] Informational warning message.
type TargetSslProxyList_Warning struct {
	// [Output Only] A warning code, if applicable. For example, Compute
	// Engine returns NO_RESULTS_ON_PAGE if there are no results in the
	// response.
	// Valid values:
	//     CLEANUP_FAILED
	//     DEPRECATED_RESOURCE_USED
	//     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
	//     FIELD_VALUE_OVERRIDEN
	//     INJECTED_KERNELS_DEPRECATED
	//     NEXT_HOP_ADDRESS_NOT_ASSIGNED
	//     NEXT_HOP_CANNOT_IP_FORWARD
	//     NEXT_HOP_INSTANCE_NOT_FOUND
	//     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
	//     NEXT_HOP_NOT_RUNNING
	//     NOT_CRITICAL_ERROR
	//     NO_RESULTS_ON_PAGE
	//     REQUIRED_TOS_AGREEMENT
	//     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
	//     RESOURCE_NOT_DELETED
	//     SINGLE_INSTANCE_PROPERTY_TEMPLATE
	//     UNREACHABLE
	Code string                             `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Data []*TargetSslProxyList_Warning_Data `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
	// [Output Only] A human-readable description of the warning code.
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *TargetSslProxyList_Warning) Reset()                    { *m = TargetSslProxyList_Warning{} }
func (m *TargetSslProxyList_Warning) String() string            { return proto.CompactTextString(m) }
func (*TargetSslProxyList_Warning) ProtoMessage()               {}
func (*TargetSslProxyList_Warning) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{249, 0} }

func (m *TargetSslProxyList_Warning) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *TargetSslProxyList_Warning) GetData() []*TargetSslProxyList_Warning_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *TargetSslProxyList_Warning) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// [Output Only] Metadata about this warning in key: value format. For
// example:
// "data": [ { "key": "scope", "value": "zones/us-east1-d" }
type TargetSslProxyList_Warning_Data struct {
	// [Output Only] A key that provides more detail on the warning being
	// returned. For example, for warnings where there are no results in a
	// list request for a particular zone, this key might be scope and the
	// key value might be the zone name. Other examples might be a key
	// indicating a deprecated resource and a suggested replacement, or a
	// warning about invalid network settings (for example, if an instance
	// attempts to perform IP forwarding but is not enabled for IP
	// forwarding).
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	// [Output Only] A warning data value corresponding to the key.
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *TargetSslProxyList_Warning_Data) Reset()         { *m = TargetSslProxyList_Warning_Data{} }
func (m *TargetSslProxyList_Warning_Data) String() string { return proto.CompactTextString(m) }
func (*TargetSslProxyList_Warning_Data) ProtoMessage()    {}
func (*TargetSslProxyList_Warning_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{249, 0, 0}
}

func (m *TargetSslProxyList_Warning_Data) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *TargetSslProxyList_Warning_Data) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type TargetTcpProxiesSetBackendServiceRequest struct {
	// The URL of the new BackendService resource for the targetTcpProxy.
	Service string `protobuf:"bytes,1,opt,name=service" json:"service,omitempty"`
}

func (m *TargetTcpProxiesSetBackendServiceRequest) Reset() {
	*m = TargetTcpProxiesSetBackendServiceRequest{}
}
func (m *TargetTcpProxiesSetBackendServiceRequest) String() string { return proto.CompactTextString(m) }
func (*TargetTcpProxiesSetBackendServiceRequest) ProtoMessage()    {}
func (*TargetTcpProxiesSetBackendServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{250}
}

func (m *TargetTcpProxiesSetBackendServiceRequest) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

type TargetTcpProxiesSetProxyHeaderRequest struct {
	// The new type of proxy header to append before sending data to the
	// backend. NONE or PROXY_V1 are allowed.
	// Valid values:
	//     NONE
	//     PROXY_V1
	ProxyHeader string `protobuf:"bytes,1,opt,name=proxyHeader" json:"proxyHeader,omitempty"`
}

func (m *TargetTcpProxiesSetProxyHeaderRequest) Reset()         { *m = TargetTcpProxiesSetProxyHeaderRequest{} }
func (m *TargetTcpProxiesSetProxyHeaderRequest) String() string { return proto.CompactTextString(m) }
func (*TargetTcpProxiesSetProxyHeaderRequest) ProtoMessage()    {}
func (*TargetTcpProxiesSetProxyHeaderRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{251}
}

func (m *TargetTcpProxiesSetProxyHeaderRequest) GetProxyHeader() string {
	if m != nil {
		return m.ProxyHeader
	}
	return ""
}

// A TargetTcpProxy resource. This resource defines a TCP proxy.
type TargetTcpProxy struct {
	// [Output Only] Creation timestamp in RFC3339 text format.
	CreationTimestamp string `protobuf:"bytes,1,opt,name=creationTimestamp" json:"creationTimestamp,omitempty"`
	// An optional description of this resource. Provide this property when
	// you create the resource.
	Description string `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	// [Output Only] The unique identifier for the resource. This identifier
	// is defined by the server.
	Id string `protobuf:"bytes,3,opt,name=id" json:"id,omitempty"`
	// [Output Only] Type of the resource. Always compute#targetTcpProxy for
	// target TCP proxies.
	Kind string `protobuf:"bytes,4,opt,name=kind" json:"kind,omitempty"`
	// Name of the resource. Provided by the client when the resource is
	// created. The name must be 1-63 characters long, and comply with
	// RFC1035. Specifically, the name must be 1-63 characters long and
	// match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means
	// the first character must be a lowercase letter, and all following
	// characters must be a dash, lowercase letter, or digit, except the
	// last character, which cannot be a dash.
	Name string `protobuf:"bytes,5,opt,name=name" json:"name,omitempty"`
	// Specifies the type of proxy header to append before sending data to
	// the backend, either NONE or PROXY_V1. The default is NONE.
	// Valid values:
	//     NONE
	//     PROXY_V1
	ProxyHeader string `protobuf:"bytes,6,opt,name=proxyHeader" json:"proxyHeader,omitempty"`
	// [Output Only] Server-defined URL for the resource.
	SelfLink string `protobuf:"bytes,7,opt,name=selfLink" json:"selfLink,omitempty"`
	// URL to the BackendService resource.
	Service string `protobuf:"bytes,8,opt,name=service" json:"service,omitempty"`
}

func (m *TargetTcpProxy) Reset()                    { *m = TargetTcpProxy{} }
func (m *TargetTcpProxy) String() string            { return proto.CompactTextString(m) }
func (*TargetTcpProxy) ProtoMessage()               {}
func (*TargetTcpProxy) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{252} }

func (m *TargetTcpProxy) GetCreationTimestamp() string {
	if m != nil {
		return m.CreationTimestamp
	}
	return ""
}

func (m *TargetTcpProxy) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *TargetTcpProxy) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *TargetTcpProxy) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *TargetTcpProxy) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *TargetTcpProxy) GetProxyHeader() string {
	if m != nil {
		return m.ProxyHeader
	}
	return ""
}

func (m *TargetTcpProxy) GetSelfLink() string {
	if m != nil {
		return m.SelfLink
	}
	return ""
}

func (m *TargetTcpProxy) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

// Contains a list of TargetTcpProxy resources.
type TargetTcpProxyList struct {
	// [Output Only] Unique identifier for the resource; defined by the
	// server.
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// A list of TargetTcpProxy resources.
	Items []*TargetTcpProxy `protobuf:"bytes,2,rep,name=items" json:"items,omitempty"`
	// Type of resource.
	Kind string `protobuf:"bytes,3,opt,name=kind" json:"kind,omitempty"`
	// [Output Only] This token allows you to get the next page of results
	// for list requests. If the number of results is larger than
	// maxResults, use the nextPageToken as a value for the query parameter
	// pageToken in the next list request. Subsequent list requests will
	// have their own nextPageToken to continue paging through the results.
	NextPageToken string `protobuf:"bytes,4,opt,name=nextPageToken" json:"nextPageToken,omitempty"`
	// [Output Only] Server-defined URL for this resource.
	SelfLink string                      `protobuf:"bytes,5,opt,name=selfLink" json:"selfLink,omitempty"`
	Warning  *TargetTcpProxyList_Warning `protobuf:"bytes,6,opt,name=warning" json:"warning,omitempty"`
}

func (m *TargetTcpProxyList) Reset()                    { *m = TargetTcpProxyList{} }
func (m *TargetTcpProxyList) String() string            { return proto.CompactTextString(m) }
func (*TargetTcpProxyList) ProtoMessage()               {}
func (*TargetTcpProxyList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{253} }

func (m *TargetTcpProxyList) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *TargetTcpProxyList) GetItems() []*TargetTcpProxy {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *TargetTcpProxyList) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *TargetTcpProxyList) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

func (m *TargetTcpProxyList) GetSelfLink() string {
	if m != nil {
		return m.SelfLink
	}
	return ""
}

func (m *TargetTcpProxyList) GetWarning() *TargetTcpProxyList_Warning {
	if m != nil {
		return m.Warning
	}
	return nil
}

// [Output Only] Informational warning message.
// [Output Only] Informational warning message.
type TargetTcpProxyList_Warning struct {
	// [Output Only] A warning code, if applicable. For example, Compute
	// Engine returns NO_RESULTS_ON_PAGE if there are no results in the
	// response.
	// Valid values:
	//     CLEANUP_FAILED
	//     DEPRECATED_RESOURCE_USED
	//     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
	//     FIELD_VALUE_OVERRIDEN
	//     INJECTED_KERNELS_DEPRECATED
	//     NEXT_HOP_ADDRESS_NOT_ASSIGNED
	//     NEXT_HOP_CANNOT_IP_FORWARD
	//     NEXT_HOP_INSTANCE_NOT_FOUND
	//     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
	//     NEXT_HOP_NOT_RUNNING
	//     NOT_CRITICAL_ERROR
	//     NO_RESULTS_ON_PAGE
	//     REQUIRED_TOS_AGREEMENT
	//     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
	//     RESOURCE_NOT_DELETED
	//     SINGLE_INSTANCE_PROPERTY_TEMPLATE
	//     UNREACHABLE
	Code string                             `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Data []*TargetTcpProxyList_Warning_Data `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
	// [Output Only] A human-readable description of the warning code.
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *TargetTcpProxyList_Warning) Reset()                    { *m = TargetTcpProxyList_Warning{} }
func (m *TargetTcpProxyList_Warning) String() string            { return proto.CompactTextString(m) }
func (*TargetTcpProxyList_Warning) ProtoMessage()               {}
func (*TargetTcpProxyList_Warning) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{253, 0} }

func (m *TargetTcpProxyList_Warning) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *TargetTcpProxyList_Warning) GetData() []*TargetTcpProxyList_Warning_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *TargetTcpProxyList_Warning) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// [Output Only] Metadata about this warning in key: value format. For
// example:
// "data": [ { "key": "scope", "value": "zones/us-east1-d" }
type TargetTcpProxyList_Warning_Data struct {
	// [Output Only] A key that provides more detail on the warning being
	// returned. For example, for warnings where there are no results in a
	// list request for a particular zone, this key might be scope and the
	// key value might be the zone name. Other examples might be a key
	// indicating a deprecated resource and a suggested replacement, or a
	// warning about invalid network settings (for example, if an instance
	// attempts to perform IP forwarding but is not enabled for IP
	// forwarding).
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	// [Output Only] A warning data value corresponding to the key.
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *TargetTcpProxyList_Warning_Data) Reset()         { *m = TargetTcpProxyList_Warning_Data{} }
func (m *TargetTcpProxyList_Warning_Data) String() string { return proto.CompactTextString(m) }
func (*TargetTcpProxyList_Warning_Data) ProtoMessage()    {}
func (*TargetTcpProxyList_Warning_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{253, 0, 0}
}

func (m *TargetTcpProxyList_Warning_Data) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *TargetTcpProxyList_Warning_Data) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

// Represents a Target VPN gateway resource.
type TargetVpnGateway struct {
	// [Output Only] Creation timestamp in RFC3339 text format.
	CreationTimestamp string `protobuf:"bytes,1,opt,name=creationTimestamp" json:"creationTimestamp,omitempty"`
	// An optional description of this resource. Provide this property when
	// you create the resource.
	Description string `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	// [Output Only] A list of URLs to the ForwardingRule resources.
	// ForwardingRules are created using compute.forwardingRules.insert and
	// associated to a VPN gateway.
	ForwardingRules []string `protobuf:"bytes,3,rep,name=forwardingRules" json:"forwardingRules,omitempty"`
	// [Output Only] The unique identifier for the resource. This identifier
	// is defined by the server.
	Id string `protobuf:"bytes,4,opt,name=id" json:"id,omitempty"`
	// [Output Only] Type of resource. Always compute#targetVpnGateway for
	// target VPN gateways.
	Kind string `protobuf:"bytes,5,opt,name=kind" json:"kind,omitempty"`
	// Name of the resource. Provided by the client when the resource is
	// created. The name must be 1-63 characters long, and comply with
	// RFC1035. Specifically, the name must be 1-63 characters long and
	// match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means
	// the first character must be a lowercase letter, and all following
	// characters must be a dash, lowercase letter, or digit, except the
	// last character, which cannot be a dash.
	Name string `protobuf:"bytes,6,opt,name=name" json:"name,omitempty"`
	// URL of the network to which this VPN gateway is attached. Provided by
	// the client when the VPN gateway is created.
	Network string `protobuf:"bytes,7,opt,name=network" json:"network,omitempty"`
	// [Output Only] URL of the region where the target VPN gateway resides.
	Region string `protobuf:"bytes,8,opt,name=region" json:"region,omitempty"`
	// [Output Only] Server-defined URL for the resource.
	SelfLink string `protobuf:"bytes,9,opt,name=selfLink" json:"selfLink,omitempty"`
	// [Output Only] The status of the VPN gateway.
	// Valid values:
	//     CREATING
	//     DELETING
	//     FAILED
	//     READY
	Status string `protobuf:"bytes,10,opt,name=status" json:"status,omitempty"`
	// [Output Only] A list of URLs to VpnTunnel resources. VpnTunnels are
	// created using compute.vpntunnels.insert method and associated to a
	// VPN gateway.
	Tunnels []string `protobuf:"bytes,11,rep,name=tunnels" json:"tunnels,omitempty"`
}

func (m *TargetVpnGateway) Reset()                    { *m = TargetVpnGateway{} }
func (m *TargetVpnGateway) String() string            { return proto.CompactTextString(m) }
func (*TargetVpnGateway) ProtoMessage()               {}
func (*TargetVpnGateway) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{254} }

func (m *TargetVpnGateway) GetCreationTimestamp() string {
	if m != nil {
		return m.CreationTimestamp
	}
	return ""
}

func (m *TargetVpnGateway) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *TargetVpnGateway) GetForwardingRules() []string {
	if m != nil {
		return m.ForwardingRules
	}
	return nil
}

func (m *TargetVpnGateway) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *TargetVpnGateway) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *TargetVpnGateway) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *TargetVpnGateway) GetNetwork() string {
	if m != nil {
		return m.Network
	}
	return ""
}

func (m *TargetVpnGateway) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *TargetVpnGateway) GetSelfLink() string {
	if m != nil {
		return m.SelfLink
	}
	return ""
}

func (m *TargetVpnGateway) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *TargetVpnGateway) GetTunnels() []string {
	if m != nil {
		return m.Tunnels
	}
	return nil
}

type TargetVpnGatewayAggregatedList struct {
	// [Output Only] Unique identifier for the resource; defined by the
	// server.
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// A list of TargetVpnGateway resources.
	Items map[string]*TargetVpnGatewaysScopedList `protobuf:"bytes,2,rep,name=items" json:"items,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// [Output Only] Type of resource. Always compute#targetVpnGateway for
	// target VPN gateways.
	Kind string `protobuf:"bytes,3,opt,name=kind" json:"kind,omitempty"`
	// [Output Only] This token allows you to get the next page of results
	// for list requests. If the number of results is larger than
	// maxResults, use the nextPageToken as a value for the query parameter
	// pageToken in the next list request. Subsequent list requests will
	// have their own nextPageToken to continue paging through the results.
	NextPageToken string `protobuf:"bytes,4,opt,name=nextPageToken" json:"nextPageToken,omitempty"`
	// [Output Only] Server-defined URL for this resource.
	SelfLink string                                  `protobuf:"bytes,5,opt,name=selfLink" json:"selfLink,omitempty"`
	Warning  *TargetVpnGatewayAggregatedList_Warning `protobuf:"bytes,6,opt,name=warning" json:"warning,omitempty"`
}

func (m *TargetVpnGatewayAggregatedList) Reset()         { *m = TargetVpnGatewayAggregatedList{} }
func (m *TargetVpnGatewayAggregatedList) String() string { return proto.CompactTextString(m) }
func (*TargetVpnGatewayAggregatedList) ProtoMessage()    {}
func (*TargetVpnGatewayAggregatedList) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{255}
}

func (m *TargetVpnGatewayAggregatedList) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *TargetVpnGatewayAggregatedList) GetItems() map[string]*TargetVpnGatewaysScopedList {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *TargetVpnGatewayAggregatedList) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *TargetVpnGatewayAggregatedList) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

func (m *TargetVpnGatewayAggregatedList) GetSelfLink() string {
	if m != nil {
		return m.SelfLink
	}
	return ""
}

func (m *TargetVpnGatewayAggregatedList) GetWarning() *TargetVpnGatewayAggregatedList_Warning {
	if m != nil {
		return m.Warning
	}
	return nil
}

// [Output Only] Informational warning message.
// [Output Only] Informational warning message.
type TargetVpnGatewayAggregatedList_Warning struct {
	// [Output Only] A warning code, if applicable. For example, Compute
	// Engine returns NO_RESULTS_ON_PAGE if there are no results in the
	// response.
	// Valid values:
	//     CLEANUP_FAILED
	//     DEPRECATED_RESOURCE_USED
	//     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
	//     FIELD_VALUE_OVERRIDEN
	//     INJECTED_KERNELS_DEPRECATED
	//     NEXT_HOP_ADDRESS_NOT_ASSIGNED
	//     NEXT_HOP_CANNOT_IP_FORWARD
	//     NEXT_HOP_INSTANCE_NOT_FOUND
	//     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
	//     NEXT_HOP_NOT_RUNNING
	//     NOT_CRITICAL_ERROR
	//     NO_RESULTS_ON_PAGE
	//     REQUIRED_TOS_AGREEMENT
	//     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
	//     RESOURCE_NOT_DELETED
	//     SINGLE_INSTANCE_PROPERTY_TEMPLATE
	//     UNREACHABLE
	Code string                                         `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Data []*TargetVpnGatewayAggregatedList_Warning_Data `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
	// [Output Only] A human-readable description of the warning code.
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *TargetVpnGatewayAggregatedList_Warning) Reset() {
	*m = TargetVpnGatewayAggregatedList_Warning{}
}
func (m *TargetVpnGatewayAggregatedList_Warning) String() string { return proto.CompactTextString(m) }
func (*TargetVpnGatewayAggregatedList_Warning) ProtoMessage()    {}
func (*TargetVpnGatewayAggregatedList_Warning) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{255, 1}
}

func (m *TargetVpnGatewayAggregatedList_Warning) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *TargetVpnGatewayAggregatedList_Warning) GetData() []*TargetVpnGatewayAggregatedList_Warning_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *TargetVpnGatewayAggregatedList_Warning) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// [Output Only] Metadata about this warning in key: value format. For
// example:
// "data": [ { "key": "scope", "value": "zones/us-east1-d" }
type TargetVpnGatewayAggregatedList_Warning_Data struct {
	// [Output Only] A key that provides more detail on the warning being
	// returned. For example, for warnings where there are no results in a
	// list request for a particular zone, this key might be scope and the
	// key value might be the zone name. Other examples might be a key
	// indicating a deprecated resource and a suggested replacement, or a
	// warning about invalid network settings (for example, if an instance
	// attempts to perform IP forwarding but is not enabled for IP
	// forwarding).
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	// [Output Only] A warning data value corresponding to the key.
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *TargetVpnGatewayAggregatedList_Warning_Data) Reset() {
	*m = TargetVpnGatewayAggregatedList_Warning_Data{}
}
func (m *TargetVpnGatewayAggregatedList_Warning_Data) String() string {
	return proto.CompactTextString(m)
}
func (*TargetVpnGatewayAggregatedList_Warning_Data) ProtoMessage() {}
func (*TargetVpnGatewayAggregatedList_Warning_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{255, 1, 0}
}

func (m *TargetVpnGatewayAggregatedList_Warning_Data) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *TargetVpnGatewayAggregatedList_Warning_Data) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

// Contains a list of TargetVpnGateway resources.
type TargetVpnGatewayList struct {
	// [Output Only] Unique identifier for the resource; defined by the
	// server.
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// A list of TargetVpnGateway resources.
	Items []*TargetVpnGateway `protobuf:"bytes,2,rep,name=items" json:"items,omitempty"`
	// [Output Only] Type of resource. Always compute#targetVpnGateway for
	// target VPN gateways.
	Kind string `protobuf:"bytes,3,opt,name=kind" json:"kind,omitempty"`
	// [Output Only] This token allows you to get the next page of results
	// for list requests. If the number of results is larger than
	// maxResults, use the nextPageToken as a value for the query parameter
	// pageToken in the next list request. Subsequent list requests will
	// have their own nextPageToken to continue paging through the results.
	NextPageToken string `protobuf:"bytes,4,opt,name=nextPageToken" json:"nextPageToken,omitempty"`
	// [Output Only] Server-defined URL for this resource.
	SelfLink string                        `protobuf:"bytes,5,opt,name=selfLink" json:"selfLink,omitempty"`
	Warning  *TargetVpnGatewayList_Warning `protobuf:"bytes,6,opt,name=warning" json:"warning,omitempty"`
}

func (m *TargetVpnGatewayList) Reset()                    { *m = TargetVpnGatewayList{} }
func (m *TargetVpnGatewayList) String() string            { return proto.CompactTextString(m) }
func (*TargetVpnGatewayList) ProtoMessage()               {}
func (*TargetVpnGatewayList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{256} }

func (m *TargetVpnGatewayList) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *TargetVpnGatewayList) GetItems() []*TargetVpnGateway {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *TargetVpnGatewayList) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *TargetVpnGatewayList) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

func (m *TargetVpnGatewayList) GetSelfLink() string {
	if m != nil {
		return m.SelfLink
	}
	return ""
}

func (m *TargetVpnGatewayList) GetWarning() *TargetVpnGatewayList_Warning {
	if m != nil {
		return m.Warning
	}
	return nil
}

// [Output Only] Informational warning message.
// [Output Only] Informational warning message.
type TargetVpnGatewayList_Warning struct {
	// [Output Only] A warning code, if applicable. For example, Compute
	// Engine returns NO_RESULTS_ON_PAGE if there are no results in the
	// response.
	// Valid values:
	//     CLEANUP_FAILED
	//     DEPRECATED_RESOURCE_USED
	//     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
	//     FIELD_VALUE_OVERRIDEN
	//     INJECTED_KERNELS_DEPRECATED
	//     NEXT_HOP_ADDRESS_NOT_ASSIGNED
	//     NEXT_HOP_CANNOT_IP_FORWARD
	//     NEXT_HOP_INSTANCE_NOT_FOUND
	//     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
	//     NEXT_HOP_NOT_RUNNING
	//     NOT_CRITICAL_ERROR
	//     NO_RESULTS_ON_PAGE
	//     REQUIRED_TOS_AGREEMENT
	//     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
	//     RESOURCE_NOT_DELETED
	//     SINGLE_INSTANCE_PROPERTY_TEMPLATE
	//     UNREACHABLE
	Code string                               `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Data []*TargetVpnGatewayList_Warning_Data `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
	// [Output Only] A human-readable description of the warning code.
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *TargetVpnGatewayList_Warning) Reset()         { *m = TargetVpnGatewayList_Warning{} }
func (m *TargetVpnGatewayList_Warning) String() string { return proto.CompactTextString(m) }
func (*TargetVpnGatewayList_Warning) ProtoMessage()    {}
func (*TargetVpnGatewayList_Warning) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{256, 0}
}

func (m *TargetVpnGatewayList_Warning) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *TargetVpnGatewayList_Warning) GetData() []*TargetVpnGatewayList_Warning_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *TargetVpnGatewayList_Warning) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// [Output Only] Metadata about this warning in key: value format. For
// example:
// "data": [ { "key": "scope", "value": "zones/us-east1-d" }
type TargetVpnGatewayList_Warning_Data struct {
	// [Output Only] A key that provides more detail on the warning being
	// returned. For example, for warnings where there are no results in a
	// list request for a particular zone, this key might be scope and the
	// key value might be the zone name. Other examples might be a key
	// indicating a deprecated resource and a suggested replacement, or a
	// warning about invalid network settings (for example, if an instance
	// attempts to perform IP forwarding but is not enabled for IP
	// forwarding).
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	// [Output Only] A warning data value corresponding to the key.
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *TargetVpnGatewayList_Warning_Data) Reset()         { *m = TargetVpnGatewayList_Warning_Data{} }
func (m *TargetVpnGatewayList_Warning_Data) String() string { return proto.CompactTextString(m) }
func (*TargetVpnGatewayList_Warning_Data) ProtoMessage()    {}
func (*TargetVpnGatewayList_Warning_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{256, 0, 0}
}

func (m *TargetVpnGatewayList_Warning_Data) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *TargetVpnGatewayList_Warning_Data) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type TargetVpnGatewaysScopedList struct {
	// [Output Only] List of target vpn gateways contained in this scope.
	TargetVpnGateways []*TargetVpnGateway                  `protobuf:"bytes,1,rep,name=targetVpnGateways" json:"targetVpnGateways,omitempty"`
	Warning           *TargetVpnGatewaysScopedList_Warning `protobuf:"bytes,2,opt,name=warning" json:"warning,omitempty"`
}

func (m *TargetVpnGatewaysScopedList) Reset()                    { *m = TargetVpnGatewaysScopedList{} }
func (m *TargetVpnGatewaysScopedList) String() string            { return proto.CompactTextString(m) }
func (*TargetVpnGatewaysScopedList) ProtoMessage()               {}
func (*TargetVpnGatewaysScopedList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{257} }

func (m *TargetVpnGatewaysScopedList) GetTargetVpnGateways() []*TargetVpnGateway {
	if m != nil {
		return m.TargetVpnGateways
	}
	return nil
}

func (m *TargetVpnGatewaysScopedList) GetWarning() *TargetVpnGatewaysScopedList_Warning {
	if m != nil {
		return m.Warning
	}
	return nil
}

// [Output Only] Informational warning which replaces the list of
// addresses when the list is empty.
// [Output Only] Informational warning which replaces the list of
// addresses when the list is empty.
type TargetVpnGatewaysScopedList_Warning struct {
	// [Output Only] A warning code, if applicable. For example, Compute
	// Engine returns NO_RESULTS_ON_PAGE if there are no results in the
	// response.
	// Valid values:
	//     CLEANUP_FAILED
	//     DEPRECATED_RESOURCE_USED
	//     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
	//     FIELD_VALUE_OVERRIDEN
	//     INJECTED_KERNELS_DEPRECATED
	//     NEXT_HOP_ADDRESS_NOT_ASSIGNED
	//     NEXT_HOP_CANNOT_IP_FORWARD
	//     NEXT_HOP_INSTANCE_NOT_FOUND
	//     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
	//     NEXT_HOP_NOT_RUNNING
	//     NOT_CRITICAL_ERROR
	//     NO_RESULTS_ON_PAGE
	//     REQUIRED_TOS_AGREEMENT
	//     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
	//     RESOURCE_NOT_DELETED
	//     SINGLE_INSTANCE_PROPERTY_TEMPLATE
	//     UNREACHABLE
	Code string                                      `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Data []*TargetVpnGatewaysScopedList_Warning_Data `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
	// [Output Only] A human-readable description of the warning code.
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *TargetVpnGatewaysScopedList_Warning) Reset()         { *m = TargetVpnGatewaysScopedList_Warning{} }
func (m *TargetVpnGatewaysScopedList_Warning) String() string { return proto.CompactTextString(m) }
func (*TargetVpnGatewaysScopedList_Warning) ProtoMessage()    {}
func (*TargetVpnGatewaysScopedList_Warning) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{257, 0}
}

func (m *TargetVpnGatewaysScopedList_Warning) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *TargetVpnGatewaysScopedList_Warning) GetData() []*TargetVpnGatewaysScopedList_Warning_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *TargetVpnGatewaysScopedList_Warning) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// [Output Only] Metadata about this warning in key: value format. For
// example:
// "data": [ { "key": "scope", "value": "zones/us-east1-d" }
type TargetVpnGatewaysScopedList_Warning_Data struct {
	// [Output Only] A key that provides more detail on the warning being
	// returned. For example, for warnings where there are no results in a
	// list request for a particular zone, this key might be scope and the
	// key value might be the zone name. Other examples might be a key
	// indicating a deprecated resource and a suggested replacement, or a
	// warning about invalid network settings (for example, if an instance
	// attempts to perform IP forwarding but is not enabled for IP
	// forwarding).
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	// [Output Only] A warning data value corresponding to the key.
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *TargetVpnGatewaysScopedList_Warning_Data) Reset() {
	*m = TargetVpnGatewaysScopedList_Warning_Data{}
}
func (m *TargetVpnGatewaysScopedList_Warning_Data) String() string { return proto.CompactTextString(m) }
func (*TargetVpnGatewaysScopedList_Warning_Data) ProtoMessage()    {}
func (*TargetVpnGatewaysScopedList_Warning_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{257, 0, 0}
}

func (m *TargetVpnGatewaysScopedList_Warning_Data) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *TargetVpnGatewaysScopedList_Warning_Data) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type TestFailure struct {
	ActualService   string `protobuf:"bytes,1,opt,name=actualService" json:"actualService,omitempty"`
	ExpectedService string `protobuf:"bytes,2,opt,name=expectedService" json:"expectedService,omitempty"`
	Host            string `protobuf:"bytes,3,opt,name=host" json:"host,omitempty"`
	Path            string `protobuf:"bytes,4,opt,name=path" json:"path,omitempty"`
}

func (m *TestFailure) Reset()                    { *m = TestFailure{} }
func (m *TestFailure) String() string            { return proto.CompactTextString(m) }
func (*TestFailure) ProtoMessage()               {}
func (*TestFailure) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{258} }

func (m *TestFailure) GetActualService() string {
	if m != nil {
		return m.ActualService
	}
	return ""
}

func (m *TestFailure) GetExpectedService() string {
	if m != nil {
		return m.ExpectedService
	}
	return ""
}

func (m *TestFailure) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *TestFailure) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

type TestPermissionsRequest struct {
	// The set of permissions to check for the 'resource'. Permissions with
	// wildcards (such as '*' or 'storage.*') are not allowed.
	Permissions []string `protobuf:"bytes,1,rep,name=permissions" json:"permissions,omitempty"`
}

func (m *TestPermissionsRequest) Reset()                    { *m = TestPermissionsRequest{} }
func (m *TestPermissionsRequest) String() string            { return proto.CompactTextString(m) }
func (*TestPermissionsRequest) ProtoMessage()               {}
func (*TestPermissionsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{259} }

func (m *TestPermissionsRequest) GetPermissions() []string {
	if m != nil {
		return m.Permissions
	}
	return nil
}

type TestPermissionsResponse struct {
	// A subset of `TestPermissionsRequest.permissions` that the caller is
	// allowed.
	Permissions []string `protobuf:"bytes,1,rep,name=permissions" json:"permissions,omitempty"`
}

func (m *TestPermissionsResponse) Reset()                    { *m = TestPermissionsResponse{} }
func (m *TestPermissionsResponse) String() string            { return proto.CompactTextString(m) }
func (*TestPermissionsResponse) ProtoMessage()               {}
func (*TestPermissionsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{260} }

func (m *TestPermissionsResponse) GetPermissions() []string {
	if m != nil {
		return m.Permissions
	}
	return nil
}

type UDPHealthCheck struct {
	// The UDP port number for the health check request. Valid values are 1
	// through 65535.
	Port int32 `protobuf:"varint,1,opt,name=port" json:"port,omitempty"`
	// Port name as defined in InstanceGroup#NamedPort#name. If both port
	// and port_name are defined, port takes precedence.
	PortName string `protobuf:"bytes,2,opt,name=portName" json:"portName,omitempty"`
	// Raw data of request to send in payload of UDP packet. It is an error
	// if this is empty. The request data can only be ASCII.
	Request string `protobuf:"bytes,3,opt,name=request" json:"request,omitempty"`
	// The bytes to match against the beginning of the response data. It is
	// an error if this is empty. The response data can only be ASCII.
	Response string `protobuf:"bytes,4,opt,name=response" json:"response,omitempty"`
}

func (m *UDPHealthCheck) Reset()                    { *m = UDPHealthCheck{} }
func (m *UDPHealthCheck) String() string            { return proto.CompactTextString(m) }
func (*UDPHealthCheck) ProtoMessage()               {}
func (*UDPHealthCheck) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{261} }

func (m *UDPHealthCheck) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *UDPHealthCheck) GetPortName() string {
	if m != nil {
		return m.PortName
	}
	return ""
}

func (m *UDPHealthCheck) GetRequest() string {
	if m != nil {
		return m.Request
	}
	return ""
}

func (m *UDPHealthCheck) GetResponse() string {
	if m != nil {
		return m.Response
	}
	return ""
}

// A UrlMap resource. This resource defines the mapping from URL to the
// BackendService resource, based on the "longest-match" of the URL's
// host and path.
type UrlMap struct {
	// [Output Only] Creation timestamp in RFC3339 text format.
	CreationTimestamp string `protobuf:"bytes,1,opt,name=creationTimestamp" json:"creationTimestamp,omitempty"`
	// The URL of the BackendService resource if none of the hostRules
	// match.
	DefaultService string `protobuf:"bytes,2,opt,name=defaultService" json:"defaultService,omitempty"`
	// An optional description of this resource. Provide this property when
	// you create the resource.
	Description string `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	// Fingerprint of this resource. A hash of the contents stored in this
	// object. This field is used in optimistic locking. This field will be
	// ignored when inserting a UrlMap. An up-to-date fingerprint must be
	// provided in order to update the UrlMap.
	Fingerprint string `protobuf:"bytes,4,opt,name=fingerprint" json:"fingerprint,omitempty"`
	// The list of HostRules to use against the URL.
	HostRules []*HostRule `protobuf:"bytes,5,rep,name=hostRules" json:"hostRules,omitempty"`
	// [Output Only] The unique identifier for the resource. This identifier
	// is defined by the server.
	Id string `protobuf:"bytes,6,opt,name=id" json:"id,omitempty"`
	// [Output Only] Type of the resource. Always compute#urlMaps for url
	// maps.
	Kind string `protobuf:"bytes,7,opt,name=kind" json:"kind,omitempty"`
	// Name of the resource. Provided by the client when the resource is
	// created. The name must be 1-63 characters long, and comply with
	// RFC1035. Specifically, the name must be 1-63 characters long and
	// match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means
	// the first character must be a lowercase letter, and all following
	// characters must be a dash, lowercase letter, or digit, except the
	// last character, which cannot be a dash.
	Name string `protobuf:"bytes,8,opt,name=name" json:"name,omitempty"`
	// The list of named PathMatchers to use against the URL.
	PathMatchers []*PathMatcher `protobuf:"bytes,9,rep,name=pathMatchers" json:"pathMatchers,omitempty"`
	// [Output Only] Server-defined URL for the resource.
	SelfLink string `protobuf:"bytes,10,opt,name=selfLink" json:"selfLink,omitempty"`
	// The list of expected URL mappings. Request to update this UrlMap will
	// succeed only if all of the test cases pass.
	Tests []*UrlMapTest `protobuf:"bytes,11,rep,name=tests" json:"tests,omitempty"`
}

func (m *UrlMap) Reset()                    { *m = UrlMap{} }
func (m *UrlMap) String() string            { return proto.CompactTextString(m) }
func (*UrlMap) ProtoMessage()               {}
func (*UrlMap) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{262} }

func (m *UrlMap) GetCreationTimestamp() string {
	if m != nil {
		return m.CreationTimestamp
	}
	return ""
}

func (m *UrlMap) GetDefaultService() string {
	if m != nil {
		return m.DefaultService
	}
	return ""
}

func (m *UrlMap) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *UrlMap) GetFingerprint() string {
	if m != nil {
		return m.Fingerprint
	}
	return ""
}

func (m *UrlMap) GetHostRules() []*HostRule {
	if m != nil {
		return m.HostRules
	}
	return nil
}

func (m *UrlMap) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UrlMap) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *UrlMap) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UrlMap) GetPathMatchers() []*PathMatcher {
	if m != nil {
		return m.PathMatchers
	}
	return nil
}

func (m *UrlMap) GetSelfLink() string {
	if m != nil {
		return m.SelfLink
	}
	return ""
}

func (m *UrlMap) GetTests() []*UrlMapTest {
	if m != nil {
		return m.Tests
	}
	return nil
}

// Contains a list of UrlMap resources.
type UrlMapList struct {
	// [Output Only] Unique identifier for the resource; defined by the
	// server.
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// A list of UrlMap resources.
	Items []*UrlMap `protobuf:"bytes,2,rep,name=items" json:"items,omitempty"`
	// Type of resource.
	Kind string `protobuf:"bytes,3,opt,name=kind" json:"kind,omitempty"`
	// [Output Only] This token allows you to get the next page of results
	// for list requests. If the number of results is larger than
	// maxResults, use the nextPageToken as a value for the query parameter
	// pageToken in the next list request. Subsequent list requests will
	// have their own nextPageToken to continue paging through the results.
	NextPageToken string `protobuf:"bytes,4,opt,name=nextPageToken" json:"nextPageToken,omitempty"`
	// [Output Only] Server-defined URL for this resource.
	SelfLink string              `protobuf:"bytes,5,opt,name=selfLink" json:"selfLink,omitempty"`
	Warning  *UrlMapList_Warning `protobuf:"bytes,6,opt,name=warning" json:"warning,omitempty"`
}

func (m *UrlMapList) Reset()                    { *m = UrlMapList{} }
func (m *UrlMapList) String() string            { return proto.CompactTextString(m) }
func (*UrlMapList) ProtoMessage()               {}
func (*UrlMapList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{263} }

func (m *UrlMapList) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UrlMapList) GetItems() []*UrlMap {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *UrlMapList) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *UrlMapList) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

func (m *UrlMapList) GetSelfLink() string {
	if m != nil {
		return m.SelfLink
	}
	return ""
}

func (m *UrlMapList) GetWarning() *UrlMapList_Warning {
	if m != nil {
		return m.Warning
	}
	return nil
}

// [Output Only] Informational warning message.
// [Output Only] Informational warning message.
type UrlMapList_Warning struct {
	// [Output Only] A warning code, if applicable. For example, Compute
	// Engine returns NO_RESULTS_ON_PAGE if there are no results in the
	// response.
	// Valid values:
	//     CLEANUP_FAILED
	//     DEPRECATED_RESOURCE_USED
	//     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
	//     FIELD_VALUE_OVERRIDEN
	//     INJECTED_KERNELS_DEPRECATED
	//     NEXT_HOP_ADDRESS_NOT_ASSIGNED
	//     NEXT_HOP_CANNOT_IP_FORWARD
	//     NEXT_HOP_INSTANCE_NOT_FOUND
	//     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
	//     NEXT_HOP_NOT_RUNNING
	//     NOT_CRITICAL_ERROR
	//     NO_RESULTS_ON_PAGE
	//     REQUIRED_TOS_AGREEMENT
	//     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
	//     RESOURCE_NOT_DELETED
	//     SINGLE_INSTANCE_PROPERTY_TEMPLATE
	//     UNREACHABLE
	Code string                     `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Data []*UrlMapList_Warning_Data `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
	// [Output Only] A human-readable description of the warning code.
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *UrlMapList_Warning) Reset()                    { *m = UrlMapList_Warning{} }
func (m *UrlMapList_Warning) String() string            { return proto.CompactTextString(m) }
func (*UrlMapList_Warning) ProtoMessage()               {}
func (*UrlMapList_Warning) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{263, 0} }

func (m *UrlMapList_Warning) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *UrlMapList_Warning) GetData() []*UrlMapList_Warning_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *UrlMapList_Warning) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// [Output Only] Metadata about this warning in key: value format. For
// example:
// "data": [ { "key": "scope", "value": "zones/us-east1-d" }
type UrlMapList_Warning_Data struct {
	// [Output Only] A key that provides more detail on the warning being
	// returned. For example, for warnings where there are no results in a
	// list request for a particular zone, this key might be scope and the
	// key value might be the zone name. Other examples might be a key
	// indicating a deprecated resource and a suggested replacement, or a
	// warning about invalid network settings (for example, if an instance
	// attempts to perform IP forwarding but is not enabled for IP
	// forwarding).
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	// [Output Only] A warning data value corresponding to the key.
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *UrlMapList_Warning_Data) Reset()                    { *m = UrlMapList_Warning_Data{} }
func (m *UrlMapList_Warning_Data) String() string            { return proto.CompactTextString(m) }
func (*UrlMapList_Warning_Data) ProtoMessage()               {}
func (*UrlMapList_Warning_Data) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{263, 0, 0} }

func (m *UrlMapList_Warning_Data) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *UrlMapList_Warning_Data) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type UrlMapReference struct {
	UrlMap string `protobuf:"bytes,1,opt,name=urlMap" json:"urlMap,omitempty"`
}

func (m *UrlMapReference) Reset()                    { *m = UrlMapReference{} }
func (m *UrlMapReference) String() string            { return proto.CompactTextString(m) }
func (*UrlMapReference) ProtoMessage()               {}
func (*UrlMapReference) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{264} }

func (m *UrlMapReference) GetUrlMap() string {
	if m != nil {
		return m.UrlMap
	}
	return ""
}

// Message for the expected URL mappings.
type UrlMapTest struct {
	// Description of this test case.
	Description string `protobuf:"bytes,1,opt,name=description" json:"description,omitempty"`
	// Host portion of the URL.
	Host string `protobuf:"bytes,2,opt,name=host" json:"host,omitempty"`
	// Path portion of the URL.
	Path string `protobuf:"bytes,3,opt,name=path" json:"path,omitempty"`
	// Expected BackendService resource the given URL should be mapped to.
	Service string `protobuf:"bytes,4,opt,name=service" json:"service,omitempty"`
}

func (m *UrlMapTest) Reset()                    { *m = UrlMapTest{} }
func (m *UrlMapTest) String() string            { return proto.CompactTextString(m) }
func (*UrlMapTest) ProtoMessage()               {}
func (*UrlMapTest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{265} }

func (m *UrlMapTest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *UrlMapTest) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *UrlMapTest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *UrlMapTest) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

// Message representing the validation result for a UrlMap.
type UrlMapValidationResult struct {
	LoadErrors []string `protobuf:"bytes,1,rep,name=loadErrors" json:"loadErrors,omitempty"`
	// Whether the given UrlMap can be successfully loaded. If false,
	// 'loadErrors' indicates the reasons.
	LoadSucceeded bool           `protobuf:"varint,2,opt,name=loadSucceeded" json:"loadSucceeded,omitempty"`
	TestFailures  []*TestFailure `protobuf:"bytes,3,rep,name=testFailures" json:"testFailures,omitempty"`
	// If successfully loaded, this field indicates whether the test passed.
	// If false, 'testFailures's indicate the reason of failure.
	TestPassed bool `protobuf:"varint,4,opt,name=testPassed" json:"testPassed,omitempty"`
}

func (m *UrlMapValidationResult) Reset()                    { *m = UrlMapValidationResult{} }
func (m *UrlMapValidationResult) String() string            { return proto.CompactTextString(m) }
func (*UrlMapValidationResult) ProtoMessage()               {}
func (*UrlMapValidationResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{266} }

func (m *UrlMapValidationResult) GetLoadErrors() []string {
	if m != nil {
		return m.LoadErrors
	}
	return nil
}

func (m *UrlMapValidationResult) GetLoadSucceeded() bool {
	if m != nil {
		return m.LoadSucceeded
	}
	return false
}

func (m *UrlMapValidationResult) GetTestFailures() []*TestFailure {
	if m != nil {
		return m.TestFailures
	}
	return nil
}

func (m *UrlMapValidationResult) GetTestPassed() bool {
	if m != nil {
		return m.TestPassed
	}
	return false
}

type UrlMapsValidateRequest struct {
	// Content of the UrlMap to be validated.
	Resource *UrlMap `protobuf:"bytes,1,opt,name=resource" json:"resource,omitempty"`
}

func (m *UrlMapsValidateRequest) Reset()                    { *m = UrlMapsValidateRequest{} }
func (m *UrlMapsValidateRequest) String() string            { return proto.CompactTextString(m) }
func (*UrlMapsValidateRequest) ProtoMessage()               {}
func (*UrlMapsValidateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{267} }

func (m *UrlMapsValidateRequest) GetResource() *UrlMap {
	if m != nil {
		return m.Resource
	}
	return nil
}

type UrlMapsValidateResponse struct {
	Result *UrlMapValidationResult `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
}

func (m *UrlMapsValidateResponse) Reset()                    { *m = UrlMapsValidateResponse{} }
func (m *UrlMapsValidateResponse) String() string            { return proto.CompactTextString(m) }
func (*UrlMapsValidateResponse) ProtoMessage()               {}
func (*UrlMapsValidateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{268} }

func (m *UrlMapsValidateResponse) GetResult() *UrlMapValidationResult {
	if m != nil {
		return m.Result
	}
	return nil
}

// The location in Cloud Storage and naming method of the daily usage
// report. Contains bucket_name and report_name prefix.
type UsageExportLocation struct {
	// The name of an existing bucket in Cloud Storage where the usage
	// report object is stored. The Google Service Account is granted write
	// access to this bucket. This can either be the bucket name by itself,
	// such as example-bucket, or the bucket name with gs:// or
	// https://storage.googleapis.com/ in front of it, such as
	// gs://example-bucket.
	BucketName string `protobuf:"bytes,1,opt,name=bucketName" json:"bucketName,omitempty"`
	// An optional prefix for the name of the usage report object stored in
	// bucketName. If not supplied, defaults to usage. The report is stored
	// as a CSV file named report_name_prefix_gce_YYYYMMDD.csv where
	// YYYYMMDD is the day of the usage according to Pacific Time. If you
	// supply a prefix, it should conform to Cloud Storage object naming
	// conventions.
	ReportNamePrefix string `protobuf:"bytes,2,opt,name=reportNamePrefix" json:"reportNamePrefix,omitempty"`
}

func (m *UsageExportLocation) Reset()                    { *m = UsageExportLocation{} }
func (m *UsageExportLocation) String() string            { return proto.CompactTextString(m) }
func (*UsageExportLocation) ProtoMessage()               {}
func (*UsageExportLocation) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{269} }

func (m *UsageExportLocation) GetBucketName() string {
	if m != nil {
		return m.BucketName
	}
	return ""
}

func (m *UsageExportLocation) GetReportNamePrefix() string {
	if m != nil {
		return m.ReportNamePrefix
	}
	return ""
}

type VpnTunnel struct {
	// [Output Only] Creation timestamp in RFC3339 text format.
	CreationTimestamp string `protobuf:"bytes,1,opt,name=creationTimestamp" json:"creationTimestamp,omitempty"`
	// An optional description of this resource. Provide this property when
	// you create the resource.
	Description string `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	// [Output Only] Detailed status message for the VPN tunnel.
	DetailedStatus string `protobuf:"bytes,3,opt,name=detailedStatus" json:"detailedStatus,omitempty"`
	// [Output Only] The unique identifier for the resource. This identifier
	// is defined by the server.
	Id string `protobuf:"bytes,4,opt,name=id" json:"id,omitempty"`
	// IKE protocol version to use when establishing the VPN tunnel with
	// peer VPN gateway. Acceptable IKE versions are 1 or 2. Default version
	// is 2.
	IkeVersion int32 `protobuf:"varint,5,opt,name=ikeVersion" json:"ikeVersion,omitempty"`
	// [Output Only] Type of resource. Always compute#vpnTunnel for VPN
	// tunnels.
	Kind string `protobuf:"bytes,6,opt,name=kind" json:"kind,omitempty"`
	// Local traffic selector to use when establishing the VPN tunnel with
	// peer VPN gateway. The value should be a CIDR formatted string, for
	// example: 192.168.0.0/16. The ranges should be disjoint. Only IPv4 is
	// supported.
	LocalTrafficSelector []string `protobuf:"bytes,7,rep,name=localTrafficSelector" json:"localTrafficSelector,omitempty"`
	// Name of the resource. Provided by the client when the resource is
	// created. The name must be 1-63 characters long, and comply with
	// RFC1035. Specifically, the name must be 1-63 characters long and
	// match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means
	// the first character must be a lowercase letter, and all following
	// characters must be a dash, lowercase letter, or digit, except the
	// last character, which cannot be a dash.
	Name string `protobuf:"bytes,8,opt,name=name" json:"name,omitempty"`
	// IP address of the peer VPN gateway. Only IPv4 is supported.
	PeerIp string `protobuf:"bytes,9,opt,name=peerIp" json:"peerIp,omitempty"`
	// [Output Only] URL of the region where the VPN tunnel resides.
	Region string `protobuf:"bytes,10,opt,name=region" json:"region,omitempty"`
	// Remote traffic selectors to use when establishing the VPN tunnel with
	// peer VPN gateway. The value should be a CIDR formatted string, for
	// example: 192.168.0.0/16. The ranges should be disjoint. Only IPv4 is
	// supported.
	RemoteTrafficSelector []string `protobuf:"bytes,11,rep,name=remoteTrafficSelector" json:"remoteTrafficSelector,omitempty"`
	// URL of router resource to be used for dynamic routing.
	Router string `protobuf:"bytes,12,opt,name=router" json:"router,omitempty"`
	// [Output Only] Server-defined URL for the resource.
	SelfLink string `protobuf:"bytes,13,opt,name=selfLink" json:"selfLink,omitempty"`
	// Shared secret used to set the secure session between the Cloud VPN
	// gateway and the peer VPN gateway.
	SharedSecret string `protobuf:"bytes,14,opt,name=sharedSecret" json:"sharedSecret,omitempty"`
	// Hash of the shared secret.
	SharedSecretHash string `protobuf:"bytes,15,opt,name=sharedSecretHash" json:"sharedSecretHash,omitempty"`
	// [Output Only] The status of the VPN tunnel.
	// Valid values:
	//     ALLOCATING_RESOURCES
	//     AUTHORIZATION_ERROR
	//     DEPROVISIONING
	//     ESTABLISHED
	//     FAILED
	//     FIRST_HANDSHAKE
	//     NEGOTIATION_FAILURE
	//     NETWORK_ERROR
	//     NO_INCOMING_PACKETS
	//     PROVISIONING
	//     REJECTED
	//     WAITING_FOR_FULL_CONFIG
	Status string `protobuf:"bytes,16,opt,name=status" json:"status,omitempty"`
	// URL of the VPN gateway with which this VPN tunnel is associated.
	// Provided by the client when the VPN tunnel is created.
	TargetVpnGateway string `protobuf:"bytes,17,opt,name=targetVpnGateway" json:"targetVpnGateway,omitempty"`
}

func (m *VpnTunnel) Reset()                    { *m = VpnTunnel{} }
func (m *VpnTunnel) String() string            { return proto.CompactTextString(m) }
func (*VpnTunnel) ProtoMessage()               {}
func (*VpnTunnel) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{270} }

func (m *VpnTunnel) GetCreationTimestamp() string {
	if m != nil {
		return m.CreationTimestamp
	}
	return ""
}

func (m *VpnTunnel) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *VpnTunnel) GetDetailedStatus() string {
	if m != nil {
		return m.DetailedStatus
	}
	return ""
}

func (m *VpnTunnel) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *VpnTunnel) GetIkeVersion() int32 {
	if m != nil {
		return m.IkeVersion
	}
	return 0
}

func (m *VpnTunnel) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *VpnTunnel) GetLocalTrafficSelector() []string {
	if m != nil {
		return m.LocalTrafficSelector
	}
	return nil
}

func (m *VpnTunnel) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *VpnTunnel) GetPeerIp() string {
	if m != nil {
		return m.PeerIp
	}
	return ""
}

func (m *VpnTunnel) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *VpnTunnel) GetRemoteTrafficSelector() []string {
	if m != nil {
		return m.RemoteTrafficSelector
	}
	return nil
}

func (m *VpnTunnel) GetRouter() string {
	if m != nil {
		return m.Router
	}
	return ""
}

func (m *VpnTunnel) GetSelfLink() string {
	if m != nil {
		return m.SelfLink
	}
	return ""
}

func (m *VpnTunnel) GetSharedSecret() string {
	if m != nil {
		return m.SharedSecret
	}
	return ""
}

func (m *VpnTunnel) GetSharedSecretHash() string {
	if m != nil {
		return m.SharedSecretHash
	}
	return ""
}

func (m *VpnTunnel) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *VpnTunnel) GetTargetVpnGateway() string {
	if m != nil {
		return m.TargetVpnGateway
	}
	return ""
}

type VpnTunnelAggregatedList struct {
	// [Output Only] Unique identifier for the resource; defined by the
	// server.
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// A list of VpnTunnelsScopedList resources.
	Items map[string]*VpnTunnelsScopedList `protobuf:"bytes,2,rep,name=items" json:"items,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// [Output Only] Type of resource. Always compute#vpnTunnel for VPN
	// tunnels.
	Kind string `protobuf:"bytes,3,opt,name=kind" json:"kind,omitempty"`
	// [Output Only] This token allows you to get the next page of results
	// for list requests. If the number of results is larger than
	// maxResults, use the nextPageToken as a value for the query parameter
	// pageToken in the next list request. Subsequent list requests will
	// have their own nextPageToken to continue paging through the results.
	NextPageToken string `protobuf:"bytes,4,opt,name=nextPageToken" json:"nextPageToken,omitempty"`
	// [Output Only] Server-defined URL for this resource.
	SelfLink string                           `protobuf:"bytes,5,opt,name=selfLink" json:"selfLink,omitempty"`
	Warning  *VpnTunnelAggregatedList_Warning `protobuf:"bytes,6,opt,name=warning" json:"warning,omitempty"`
}

func (m *VpnTunnelAggregatedList) Reset()                    { *m = VpnTunnelAggregatedList{} }
func (m *VpnTunnelAggregatedList) String() string            { return proto.CompactTextString(m) }
func (*VpnTunnelAggregatedList) ProtoMessage()               {}
func (*VpnTunnelAggregatedList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{271} }

func (m *VpnTunnelAggregatedList) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *VpnTunnelAggregatedList) GetItems() map[string]*VpnTunnelsScopedList {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *VpnTunnelAggregatedList) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *VpnTunnelAggregatedList) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

func (m *VpnTunnelAggregatedList) GetSelfLink() string {
	if m != nil {
		return m.SelfLink
	}
	return ""
}

func (m *VpnTunnelAggregatedList) GetWarning() *VpnTunnelAggregatedList_Warning {
	if m != nil {
		return m.Warning
	}
	return nil
}

// [Output Only] Informational warning message.
// [Output Only] Informational warning message.
type VpnTunnelAggregatedList_Warning struct {
	// [Output Only] A warning code, if applicable. For example, Compute
	// Engine returns NO_RESULTS_ON_PAGE if there are no results in the
	// response.
	// Valid values:
	//     CLEANUP_FAILED
	//     DEPRECATED_RESOURCE_USED
	//     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
	//     FIELD_VALUE_OVERRIDEN
	//     INJECTED_KERNELS_DEPRECATED
	//     NEXT_HOP_ADDRESS_NOT_ASSIGNED
	//     NEXT_HOP_CANNOT_IP_FORWARD
	//     NEXT_HOP_INSTANCE_NOT_FOUND
	//     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
	//     NEXT_HOP_NOT_RUNNING
	//     NOT_CRITICAL_ERROR
	//     NO_RESULTS_ON_PAGE
	//     REQUIRED_TOS_AGREEMENT
	//     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
	//     RESOURCE_NOT_DELETED
	//     SINGLE_INSTANCE_PROPERTY_TEMPLATE
	//     UNREACHABLE
	Code string                                  `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Data []*VpnTunnelAggregatedList_Warning_Data `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
	// [Output Only] A human-readable description of the warning code.
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *VpnTunnelAggregatedList_Warning) Reset()         { *m = VpnTunnelAggregatedList_Warning{} }
func (m *VpnTunnelAggregatedList_Warning) String() string { return proto.CompactTextString(m) }
func (*VpnTunnelAggregatedList_Warning) ProtoMessage()    {}
func (*VpnTunnelAggregatedList_Warning) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{271, 1}
}

func (m *VpnTunnelAggregatedList_Warning) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *VpnTunnelAggregatedList_Warning) GetData() []*VpnTunnelAggregatedList_Warning_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *VpnTunnelAggregatedList_Warning) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// [Output Only] Metadata about this warning in key: value format. For
// example:
// "data": [ { "key": "scope", "value": "zones/us-east1-d" }
type VpnTunnelAggregatedList_Warning_Data struct {
	// [Output Only] A key that provides more detail on the warning being
	// returned. For example, for warnings where there are no results in a
	// list request for a particular zone, this key might be scope and the
	// key value might be the zone name. Other examples might be a key
	// indicating a deprecated resource and a suggested replacement, or a
	// warning about invalid network settings (for example, if an instance
	// attempts to perform IP forwarding but is not enabled for IP
	// forwarding).
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	// [Output Only] A warning data value corresponding to the key.
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *VpnTunnelAggregatedList_Warning_Data) Reset()         { *m = VpnTunnelAggregatedList_Warning_Data{} }
func (m *VpnTunnelAggregatedList_Warning_Data) String() string { return proto.CompactTextString(m) }
func (*VpnTunnelAggregatedList_Warning_Data) ProtoMessage()    {}
func (*VpnTunnelAggregatedList_Warning_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{271, 1, 0}
}

func (m *VpnTunnelAggregatedList_Warning_Data) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *VpnTunnelAggregatedList_Warning_Data) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

// Contains a list of VpnTunnel resources.
type VpnTunnelList struct {
	// [Output Only] Unique identifier for the resource; defined by the
	// server.
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// A list of VpnTunnel resources.
	Items []*VpnTunnel `protobuf:"bytes,2,rep,name=items" json:"items,omitempty"`
	// [Output Only] Type of resource. Always compute#vpnTunnel for VPN
	// tunnels.
	Kind string `protobuf:"bytes,3,opt,name=kind" json:"kind,omitempty"`
	// [Output Only] This token allows you to get the next page of results
	// for list requests. If the number of results is larger than
	// maxResults, use the nextPageToken as a value for the query parameter
	// pageToken in the next list request. Subsequent list requests will
	// have their own nextPageToken to continue paging through the results.
	NextPageToken string `protobuf:"bytes,4,opt,name=nextPageToken" json:"nextPageToken,omitempty"`
	// [Output Only] Server-defined URL for this resource.
	SelfLink string                 `protobuf:"bytes,5,opt,name=selfLink" json:"selfLink,omitempty"`
	Warning  *VpnTunnelList_Warning `protobuf:"bytes,6,opt,name=warning" json:"warning,omitempty"`
}

func (m *VpnTunnelList) Reset()                    { *m = VpnTunnelList{} }
func (m *VpnTunnelList) String() string            { return proto.CompactTextString(m) }
func (*VpnTunnelList) ProtoMessage()               {}
func (*VpnTunnelList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{272} }

func (m *VpnTunnelList) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *VpnTunnelList) GetItems() []*VpnTunnel {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *VpnTunnelList) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *VpnTunnelList) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

func (m *VpnTunnelList) GetSelfLink() string {
	if m != nil {
		return m.SelfLink
	}
	return ""
}

func (m *VpnTunnelList) GetWarning() *VpnTunnelList_Warning {
	if m != nil {
		return m.Warning
	}
	return nil
}

// [Output Only] Informational warning message.
// [Output Only] Informational warning message.
type VpnTunnelList_Warning struct {
	// [Output Only] A warning code, if applicable. For example, Compute
	// Engine returns NO_RESULTS_ON_PAGE if there are no results in the
	// response.
	// Valid values:
	//     CLEANUP_FAILED
	//     DEPRECATED_RESOURCE_USED
	//     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
	//     FIELD_VALUE_OVERRIDEN
	//     INJECTED_KERNELS_DEPRECATED
	//     NEXT_HOP_ADDRESS_NOT_ASSIGNED
	//     NEXT_HOP_CANNOT_IP_FORWARD
	//     NEXT_HOP_INSTANCE_NOT_FOUND
	//     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
	//     NEXT_HOP_NOT_RUNNING
	//     NOT_CRITICAL_ERROR
	//     NO_RESULTS_ON_PAGE
	//     REQUIRED_TOS_AGREEMENT
	//     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
	//     RESOURCE_NOT_DELETED
	//     SINGLE_INSTANCE_PROPERTY_TEMPLATE
	//     UNREACHABLE
	Code string                        `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Data []*VpnTunnelList_Warning_Data `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
	// [Output Only] A human-readable description of the warning code.
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *VpnTunnelList_Warning) Reset()                    { *m = VpnTunnelList_Warning{} }
func (m *VpnTunnelList_Warning) String() string            { return proto.CompactTextString(m) }
func (*VpnTunnelList_Warning) ProtoMessage()               {}
func (*VpnTunnelList_Warning) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{272, 0} }

func (m *VpnTunnelList_Warning) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *VpnTunnelList_Warning) GetData() []*VpnTunnelList_Warning_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *VpnTunnelList_Warning) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// [Output Only] Metadata about this warning in key: value format. For
// example:
// "data": [ { "key": "scope", "value": "zones/us-east1-d" }
type VpnTunnelList_Warning_Data struct {
	// [Output Only] A key that provides more detail on the warning being
	// returned. For example, for warnings where there are no results in a
	// list request for a particular zone, this key might be scope and the
	// key value might be the zone name. Other examples might be a key
	// indicating a deprecated resource and a suggested replacement, or a
	// warning about invalid network settings (for example, if an instance
	// attempts to perform IP forwarding but is not enabled for IP
	// forwarding).
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	// [Output Only] A warning data value corresponding to the key.
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *VpnTunnelList_Warning_Data) Reset()         { *m = VpnTunnelList_Warning_Data{} }
func (m *VpnTunnelList_Warning_Data) String() string { return proto.CompactTextString(m) }
func (*VpnTunnelList_Warning_Data) ProtoMessage()    {}
func (*VpnTunnelList_Warning_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{272, 0, 0}
}

func (m *VpnTunnelList_Warning_Data) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *VpnTunnelList_Warning_Data) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type VpnTunnelsScopedList struct {
	// List of vpn tunnels contained in this scope.
	VpnTunnels []*VpnTunnel                  `protobuf:"bytes,1,rep,name=vpnTunnels" json:"vpnTunnels,omitempty"`
	Warning    *VpnTunnelsScopedList_Warning `protobuf:"bytes,2,opt,name=warning" json:"warning,omitempty"`
}

func (m *VpnTunnelsScopedList) Reset()                    { *m = VpnTunnelsScopedList{} }
func (m *VpnTunnelsScopedList) String() string            { return proto.CompactTextString(m) }
func (*VpnTunnelsScopedList) ProtoMessage()               {}
func (*VpnTunnelsScopedList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{273} }

func (m *VpnTunnelsScopedList) GetVpnTunnels() []*VpnTunnel {
	if m != nil {
		return m.VpnTunnels
	}
	return nil
}

func (m *VpnTunnelsScopedList) GetWarning() *VpnTunnelsScopedList_Warning {
	if m != nil {
		return m.Warning
	}
	return nil
}

// Informational warning which replaces the list of addresses when the
// list is empty.
// Informational warning which replaces the list of addresses when the
// list is empty.
type VpnTunnelsScopedList_Warning struct {
	// [Output Only] A warning code, if applicable. For example, Compute
	// Engine returns NO_RESULTS_ON_PAGE if there are no results in the
	// response.
	// Valid values:
	//     CLEANUP_FAILED
	//     DEPRECATED_RESOURCE_USED
	//     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
	//     FIELD_VALUE_OVERRIDEN
	//     INJECTED_KERNELS_DEPRECATED
	//     NEXT_HOP_ADDRESS_NOT_ASSIGNED
	//     NEXT_HOP_CANNOT_IP_FORWARD
	//     NEXT_HOP_INSTANCE_NOT_FOUND
	//     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
	//     NEXT_HOP_NOT_RUNNING
	//     NOT_CRITICAL_ERROR
	//     NO_RESULTS_ON_PAGE
	//     REQUIRED_TOS_AGREEMENT
	//     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
	//     RESOURCE_NOT_DELETED
	//     SINGLE_INSTANCE_PROPERTY_TEMPLATE
	//     UNREACHABLE
	Code string                               `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Data []*VpnTunnelsScopedList_Warning_Data `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
	// [Output Only] A human-readable description of the warning code.
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *VpnTunnelsScopedList_Warning) Reset()         { *m = VpnTunnelsScopedList_Warning{} }
func (m *VpnTunnelsScopedList_Warning) String() string { return proto.CompactTextString(m) }
func (*VpnTunnelsScopedList_Warning) ProtoMessage()    {}
func (*VpnTunnelsScopedList_Warning) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{273, 0}
}

func (m *VpnTunnelsScopedList_Warning) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *VpnTunnelsScopedList_Warning) GetData() []*VpnTunnelsScopedList_Warning_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *VpnTunnelsScopedList_Warning) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// [Output Only] Metadata about this warning in key: value format. For
// example:
// "data": [ { "key": "scope", "value": "zones/us-east1-d" }
type VpnTunnelsScopedList_Warning_Data struct {
	// [Output Only] A key that provides more detail on the warning being
	// returned. For example, for warnings where there are no results in a
	// list request for a particular zone, this key might be scope and the
	// key value might be the zone name. Other examples might be a key
	// indicating a deprecated resource and a suggested replacement, or a
	// warning about invalid network settings (for example, if an instance
	// attempts to perform IP forwarding but is not enabled for IP
	// forwarding).
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	// [Output Only] A warning data value corresponding to the key.
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *VpnTunnelsScopedList_Warning_Data) Reset()         { *m = VpnTunnelsScopedList_Warning_Data{} }
func (m *VpnTunnelsScopedList_Warning_Data) String() string { return proto.CompactTextString(m) }
func (*VpnTunnelsScopedList_Warning_Data) ProtoMessage()    {}
func (*VpnTunnelsScopedList_Warning_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{273, 0, 0}
}

func (m *VpnTunnelsScopedList_Warning_Data) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *VpnTunnelsScopedList_Warning_Data) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type XpnHostList struct {
	// [Output Only] Unique identifier for the resource; defined by the
	// server.
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// [Output Only] A list of shared VPC host project URLs.
	Items []*Project `protobuf:"bytes,2,rep,name=items" json:"items,omitempty"`
	// [Output Only] Type of resource. Always compute#xpnHostList for lists
	// of shared VPC hosts.
	Kind string `protobuf:"bytes,3,opt,name=kind" json:"kind,omitempty"`
	// [Output Only] This token allows you to get the next page of results
	// for list requests. If the number of results is larger than
	// maxResults, use the nextPageToken as a value for the query parameter
	// pageToken in the next list request. Subsequent list requests will
	// have their own nextPageToken to continue paging through the results.
	NextPageToken string `protobuf:"bytes,4,opt,name=nextPageToken" json:"nextPageToken,omitempty"`
	// [Output Only] Server-defined URL for this resource.
	SelfLink string               `protobuf:"bytes,5,opt,name=selfLink" json:"selfLink,omitempty"`
	Warning  *XpnHostList_Warning `protobuf:"bytes,6,opt,name=warning" json:"warning,omitempty"`
}

func (m *XpnHostList) Reset()                    { *m = XpnHostList{} }
func (m *XpnHostList) String() string            { return proto.CompactTextString(m) }
func (*XpnHostList) ProtoMessage()               {}
func (*XpnHostList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{274} }

func (m *XpnHostList) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *XpnHostList) GetItems() []*Project {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *XpnHostList) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *XpnHostList) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

func (m *XpnHostList) GetSelfLink() string {
	if m != nil {
		return m.SelfLink
	}
	return ""
}

func (m *XpnHostList) GetWarning() *XpnHostList_Warning {
	if m != nil {
		return m.Warning
	}
	return nil
}

// [Output Only] Informational warning message.
// [Output Only] Informational warning message.
type XpnHostList_Warning struct {
	// [Output Only] A warning code, if applicable. For example, Compute
	// Engine returns NO_RESULTS_ON_PAGE if there are no results in the
	// response.
	// Valid values:
	//     CLEANUP_FAILED
	//     DEPRECATED_RESOURCE_USED
	//     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
	//     FIELD_VALUE_OVERRIDEN
	//     INJECTED_KERNELS_DEPRECATED
	//     NEXT_HOP_ADDRESS_NOT_ASSIGNED
	//     NEXT_HOP_CANNOT_IP_FORWARD
	//     NEXT_HOP_INSTANCE_NOT_FOUND
	//     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
	//     NEXT_HOP_NOT_RUNNING
	//     NOT_CRITICAL_ERROR
	//     NO_RESULTS_ON_PAGE
	//     REQUIRED_TOS_AGREEMENT
	//     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
	//     RESOURCE_NOT_DELETED
	//     SINGLE_INSTANCE_PROPERTY_TEMPLATE
	//     UNREACHABLE
	Code string                      `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Data []*XpnHostList_Warning_Data `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
	// [Output Only] A human-readable description of the warning code.
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *XpnHostList_Warning) Reset()                    { *m = XpnHostList_Warning{} }
func (m *XpnHostList_Warning) String() string            { return proto.CompactTextString(m) }
func (*XpnHostList_Warning) ProtoMessage()               {}
func (*XpnHostList_Warning) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{274, 0} }

func (m *XpnHostList_Warning) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *XpnHostList_Warning) GetData() []*XpnHostList_Warning_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *XpnHostList_Warning) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// [Output Only] Metadata about this warning in key: value format. For
// example:
// "data": [ { "key": "scope", "value": "zones/us-east1-d" }
type XpnHostList_Warning_Data struct {
	// [Output Only] A key that provides more detail on the warning being
	// returned. For example, for warnings where there are no results in a
	// list request for a particular zone, this key might be scope and the
	// key value might be the zone name. Other examples might be a key
	// indicating a deprecated resource and a suggested replacement, or a
	// warning about invalid network settings (for example, if an instance
	// attempts to perform IP forwarding but is not enabled for IP
	// forwarding).
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	// [Output Only] A warning data value corresponding to the key.
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *XpnHostList_Warning_Data) Reset()         { *m = XpnHostList_Warning_Data{} }
func (m *XpnHostList_Warning_Data) String() string { return proto.CompactTextString(m) }
func (*XpnHostList_Warning_Data) ProtoMessage()    {}
func (*XpnHostList_Warning_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{274, 0, 0}
}

func (m *XpnHostList_Warning_Data) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *XpnHostList_Warning_Data) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

// Service resource (a.k.a service project) ID.
type XpnResourceId struct {
	// The ID of the service resource. In the case of projects, this field
	// matches the project ID (e.g., my-project), not the project number
	// (e.g., 12345678).
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// The type of the service resource.
	// Valid values:
	//     PROJECT
	//     XPN_RESOURCE_TYPE_UNSPECIFIED
	Type string `protobuf:"bytes,2,opt,name=type" json:"type,omitempty"`
}

func (m *XpnResourceId) Reset()                    { *m = XpnResourceId{} }
func (m *XpnResourceId) String() string            { return proto.CompactTextString(m) }
func (*XpnResourceId) ProtoMessage()               {}
func (*XpnResourceId) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{275} }

func (m *XpnResourceId) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *XpnResourceId) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

// A Zone resource.
type Zone struct {
	// [Output Only] Available cpu/platform selections for the zone.
	AvailableCpuPlatforms []string `protobuf:"bytes,1,rep,name=availableCpuPlatforms" json:"availableCpuPlatforms,omitempty"`
	// [Output Only] Creation timestamp in RFC3339 text format.
	CreationTimestamp string `protobuf:"bytes,2,opt,name=creationTimestamp" json:"creationTimestamp,omitempty"`
	// [Output Only] The deprecation status associated with this zone.
	Deprecated *DeprecationStatus `protobuf:"bytes,3,opt,name=deprecated" json:"deprecated,omitempty"`
	// [Output Only] Textual description of the resource.
	Description string `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	// [Output Only] The unique identifier for the resource. This identifier
	// is defined by the server.
	Id string `protobuf:"bytes,5,opt,name=id" json:"id,omitempty"`
	// [Output Only] Type of the resource. Always compute#zone for zones.
	Kind string `protobuf:"bytes,6,opt,name=kind" json:"kind,omitempty"`
	// [Output Only] Name of the resource.
	Name string `protobuf:"bytes,7,opt,name=name" json:"name,omitempty"`
	// [Output Only] Full URL reference to the region which hosts the zone.
	Region string `protobuf:"bytes,8,opt,name=region" json:"region,omitempty"`
	// [Output Only] Server-defined URL for the resource.
	SelfLink string `protobuf:"bytes,9,opt,name=selfLink" json:"selfLink,omitempty"`
	// [Output Only] Status of the zone, either UP or DOWN.
	// Valid values:
	//     DOWN
	//     UP
	Status string `protobuf:"bytes,10,opt,name=status" json:"status,omitempty"`
}

func (m *Zone) Reset()                    { *m = Zone{} }
func (m *Zone) String() string            { return proto.CompactTextString(m) }
func (*Zone) ProtoMessage()               {}
func (*Zone) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{276} }

func (m *Zone) GetAvailableCpuPlatforms() []string {
	if m != nil {
		return m.AvailableCpuPlatforms
	}
	return nil
}

func (m *Zone) GetCreationTimestamp() string {
	if m != nil {
		return m.CreationTimestamp
	}
	return ""
}

func (m *Zone) GetDeprecated() *DeprecationStatus {
	if m != nil {
		return m.Deprecated
	}
	return nil
}

func (m *Zone) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Zone) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Zone) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *Zone) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Zone) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *Zone) GetSelfLink() string {
	if m != nil {
		return m.SelfLink
	}
	return ""
}

func (m *Zone) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

// Contains a list of zone resources.
type ZoneList struct {
	// [Output Only] Unique identifier for the resource; defined by the
	// server.
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// A list of Zone resources.
	Items []*Zone `protobuf:"bytes,2,rep,name=items" json:"items,omitempty"`
	// Type of resource.
	Kind string `protobuf:"bytes,3,opt,name=kind" json:"kind,omitempty"`
	// [Output Only] This token allows you to get the next page of results
	// for list requests. If the number of results is larger than
	// maxResults, use the nextPageToken as a value for the query parameter
	// pageToken in the next list request. Subsequent list requests will
	// have their own nextPageToken to continue paging through the results.
	NextPageToken string `protobuf:"bytes,4,opt,name=nextPageToken" json:"nextPageToken,omitempty"`
	// [Output Only] Server-defined URL for this resource.
	SelfLink string            `protobuf:"bytes,5,opt,name=selfLink" json:"selfLink,omitempty"`
	Warning  *ZoneList_Warning `protobuf:"bytes,6,opt,name=warning" json:"warning,omitempty"`
}

func (m *ZoneList) Reset()                    { *m = ZoneList{} }
func (m *ZoneList) String() string            { return proto.CompactTextString(m) }
func (*ZoneList) ProtoMessage()               {}
func (*ZoneList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{277} }

func (m *ZoneList) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ZoneList) GetItems() []*Zone {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *ZoneList) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *ZoneList) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

func (m *ZoneList) GetSelfLink() string {
	if m != nil {
		return m.SelfLink
	}
	return ""
}

func (m *ZoneList) GetWarning() *ZoneList_Warning {
	if m != nil {
		return m.Warning
	}
	return nil
}

// [Output Only] Informational warning message.
// [Output Only] Informational warning message.
type ZoneList_Warning struct {
	// [Output Only] A warning code, if applicable. For example, Compute
	// Engine returns NO_RESULTS_ON_PAGE if there are no results in the
	// response.
	// Valid values:
	//     CLEANUP_FAILED
	//     DEPRECATED_RESOURCE_USED
	//     DISK_SIZE_LARGER_THAN_IMAGE_SIZE
	//     FIELD_VALUE_OVERRIDEN
	//     INJECTED_KERNELS_DEPRECATED
	//     NEXT_HOP_ADDRESS_NOT_ASSIGNED
	//     NEXT_HOP_CANNOT_IP_FORWARD
	//     NEXT_HOP_INSTANCE_NOT_FOUND
	//     NEXT_HOP_INSTANCE_NOT_ON_NETWORK
	//     NEXT_HOP_NOT_RUNNING
	//     NOT_CRITICAL_ERROR
	//     NO_RESULTS_ON_PAGE
	//     REQUIRED_TOS_AGREEMENT
	//     RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
	//     RESOURCE_NOT_DELETED
	//     SINGLE_INSTANCE_PROPERTY_TEMPLATE
	//     UNREACHABLE
	Code string                   `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Data []*ZoneList_Warning_Data `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
	// [Output Only] A human-readable description of the warning code.
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *ZoneList_Warning) Reset()                    { *m = ZoneList_Warning{} }
func (m *ZoneList_Warning) String() string            { return proto.CompactTextString(m) }
func (*ZoneList_Warning) ProtoMessage()               {}
func (*ZoneList_Warning) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{277, 0} }

func (m *ZoneList_Warning) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *ZoneList_Warning) GetData() []*ZoneList_Warning_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ZoneList_Warning) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// [Output Only] Metadata about this warning in key: value format. For
// example:
// "data": [ { "key": "scope", "value": "zones/us-east1-d" }
type ZoneList_Warning_Data struct {
	// [Output Only] A key that provides more detail on the warning being
	// returned. For example, for warnings where there are no results in a
	// list request for a particular zone, this key might be scope and the
	// key value might be the zone name. Other examples might be a key
	// indicating a deprecated resource and a suggested replacement, or a
	// warning about invalid network settings (for example, if an instance
	// attempts to perform IP forwarding but is not enabled for IP
	// forwarding).
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	// [Output Only] A warning data value corresponding to the key.
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *ZoneList_Warning_Data) Reset()                    { *m = ZoneList_Warning_Data{} }
func (m *ZoneList_Warning_Data) String() string            { return proto.CompactTextString(m) }
func (*ZoneList_Warning_Data) ProtoMessage()               {}
func (*ZoneList_Warning_Data) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{277, 0, 0} }

func (m *ZoneList_Warning_Data) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *ZoneList_Warning_Data) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type ZoneSetLabelsRequest struct {
	// The fingerprint of the previous set of labels for this resource, used
	// to detect conflicts. The fingerprint is initially generated by
	// Compute Engine and changes after every request to modify or update
	// labels. You must always provide an up-to-date fingerprint hash in
	// order to update or change labels. Make a get() request to the
	// resource to get the latest fingerprint.
	LabelFingerprint string `protobuf:"bytes,1,opt,name=labelFingerprint" json:"labelFingerprint,omitempty"`
	// The labels to set for this resource.
	Labels map[string]string `protobuf:"bytes,2,rep,name=labels" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *ZoneSetLabelsRequest) Reset()                    { *m = ZoneSetLabelsRequest{} }
func (m *ZoneSetLabelsRequest) String() string            { return proto.CompactTextString(m) }
func (*ZoneSetLabelsRequest) ProtoMessage()               {}
func (*ZoneSetLabelsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{278} }

func (m *ZoneSetLabelsRequest) GetLabelFingerprint() string {
	if m != nil {
		return m.LabelFingerprint
	}
	return ""
}

func (m *ZoneSetLabelsRequest) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func init() {
	proto.RegisterType((*AcceleratorConfig)(nil), "compute.AcceleratorConfig")
	proto.RegisterType((*AcceleratorType)(nil), "compute.AcceleratorType")
	proto.RegisterType((*AcceleratorTypeAggregatedList)(nil), "compute.AcceleratorTypeAggregatedList")
	proto.RegisterType((*AcceleratorTypeAggregatedList_Warning)(nil), "compute.AcceleratorTypeAggregatedList.Warning")
	proto.RegisterType((*AcceleratorTypeAggregatedList_Warning_Data)(nil), "compute.AcceleratorTypeAggregatedList.Warning.Data")
	proto.RegisterType((*AcceleratorTypeList)(nil), "compute.AcceleratorTypeList")
	proto.RegisterType((*AcceleratorTypeList_Warning)(nil), "compute.AcceleratorTypeList.Warning")
	proto.RegisterType((*AcceleratorTypeList_Warning_Data)(nil), "compute.AcceleratorTypeList.Warning.Data")
	proto.RegisterType((*AcceleratorTypesScopedList)(nil), "compute.AcceleratorTypesScopedList")
	proto.RegisterType((*AcceleratorTypesScopedList_Warning)(nil), "compute.AcceleratorTypesScopedList.Warning")
	proto.RegisterType((*AcceleratorTypesScopedList_Warning_Data)(nil), "compute.AcceleratorTypesScopedList.Warning.Data")
	proto.RegisterType((*AccessConfig)(nil), "compute.AccessConfig")
	proto.RegisterType((*Address)(nil), "compute.Address")
	proto.RegisterType((*AddressAggregatedList)(nil), "compute.AddressAggregatedList")
	proto.RegisterType((*AddressAggregatedList_Warning)(nil), "compute.AddressAggregatedList.Warning")
	proto.RegisterType((*AddressAggregatedList_Warning_Data)(nil), "compute.AddressAggregatedList.Warning.Data")
	proto.RegisterType((*AddressList)(nil), "compute.AddressList")
	proto.RegisterType((*AddressList_Warning)(nil), "compute.AddressList.Warning")
	proto.RegisterType((*AddressList_Warning_Data)(nil), "compute.AddressList.Warning.Data")
	proto.RegisterType((*AddressesScopedList)(nil), "compute.AddressesScopedList")
	proto.RegisterType((*AddressesScopedList_Warning)(nil), "compute.AddressesScopedList.Warning")
	proto.RegisterType((*AddressesScopedList_Warning_Data)(nil), "compute.AddressesScopedList.Warning.Data")
	proto.RegisterType((*AliasIpRange)(nil), "compute.AliasIpRange")
	proto.RegisterType((*AttachedDisk)(nil), "compute.AttachedDisk")
	proto.RegisterType((*AttachedDiskInitializeParams)(nil), "compute.AttachedDiskInitializeParams")
	proto.RegisterType((*AuditConfig)(nil), "compute.AuditConfig")
	proto.RegisterType((*AuditLogConfig)(nil), "compute.AuditLogConfig")
	proto.RegisterType((*AuthorizationLoggingOptions)(nil), "compute.AuthorizationLoggingOptions")
	proto.RegisterType((*Autoscaler)(nil), "compute.Autoscaler")
	proto.RegisterType((*AutoscalerAggregatedList)(nil), "compute.AutoscalerAggregatedList")
	proto.RegisterType((*AutoscalerAggregatedList_Warning)(nil), "compute.AutoscalerAggregatedList.Warning")
	proto.RegisterType((*AutoscalerAggregatedList_Warning_Data)(nil), "compute.AutoscalerAggregatedList.Warning.Data")
	proto.RegisterType((*AutoscalerList)(nil), "compute.AutoscalerList")
	proto.RegisterType((*AutoscalerList_Warning)(nil), "compute.AutoscalerList.Warning")
	proto.RegisterType((*AutoscalerList_Warning_Data)(nil), "compute.AutoscalerList.Warning.Data")
	proto.RegisterType((*AutoscalerStatusDetails)(nil), "compute.AutoscalerStatusDetails")
	proto.RegisterType((*AutoscalersScopedList)(nil), "compute.AutoscalersScopedList")
	proto.RegisterType((*AutoscalersScopedList_Warning)(nil), "compute.AutoscalersScopedList.Warning")
	proto.RegisterType((*AutoscalersScopedList_Warning_Data)(nil), "compute.AutoscalersScopedList.Warning.Data")
	proto.RegisterType((*AutoscalingPolicy)(nil), "compute.AutoscalingPolicy")
	proto.RegisterType((*AutoscalingPolicyCpuUtilization)(nil), "compute.AutoscalingPolicyCpuUtilization")
	proto.RegisterType((*AutoscalingPolicyCustomMetricUtilization)(nil), "compute.AutoscalingPolicyCustomMetricUtilization")
	proto.RegisterType((*AutoscalingPolicyLoadBalancingUtilization)(nil), "compute.AutoscalingPolicyLoadBalancingUtilization")
	proto.RegisterType((*Backend)(nil), "compute.Backend")
	proto.RegisterType((*BackendBucket)(nil), "compute.BackendBucket")
	proto.RegisterType((*BackendBucketList)(nil), "compute.BackendBucketList")
	proto.RegisterType((*BackendBucketList_Warning)(nil), "compute.BackendBucketList.Warning")
	proto.RegisterType((*BackendBucketList_Warning_Data)(nil), "compute.BackendBucketList.Warning.Data")
	proto.RegisterType((*BackendService)(nil), "compute.BackendService")
	proto.RegisterType((*BackendServiceAggregatedList)(nil), "compute.BackendServiceAggregatedList")
	proto.RegisterType((*BackendServiceAggregatedList_Warning)(nil), "compute.BackendServiceAggregatedList.Warning")
	proto.RegisterType((*BackendServiceAggregatedList_Warning_Data)(nil), "compute.BackendServiceAggregatedList.Warning.Data")
	proto.RegisterType((*BackendServiceCdnPolicy)(nil), "compute.BackendServiceCdnPolicy")
	proto.RegisterType((*BackendServiceGroupHealth)(nil), "compute.BackendServiceGroupHealth")
	proto.RegisterType((*BackendServiceIAP)(nil), "compute.BackendServiceIAP")
	proto.RegisterType((*BackendServiceList)(nil), "compute.BackendServiceList")
	proto.RegisterType((*BackendServiceList_Warning)(nil), "compute.BackendServiceList.Warning")
	proto.RegisterType((*BackendServiceList_Warning_Data)(nil), "compute.BackendServiceList.Warning.Data")
	proto.RegisterType((*BackendServicesScopedList)(nil), "compute.BackendServicesScopedList")
	proto.RegisterType((*BackendServicesScopedList_Warning)(nil), "compute.BackendServicesScopedList.Warning")
	proto.RegisterType((*BackendServicesScopedList_Warning_Data)(nil), "compute.BackendServicesScopedList.Warning.Data")
	proto.RegisterType((*Binding)(nil), "compute.Binding")
	proto.RegisterType((*CacheInvalidationRule)(nil), "compute.CacheInvalidationRule")
	proto.RegisterType((*CacheKeyPolicy)(nil), "compute.CacheKeyPolicy")
	proto.RegisterType((*Commitment)(nil), "compute.Commitment")
	proto.RegisterType((*CommitmentAggregatedList)(nil), "compute.CommitmentAggregatedList")
	proto.RegisterType((*CommitmentAggregatedList_Warning)(nil), "compute.CommitmentAggregatedList.Warning")
	proto.RegisterType((*CommitmentAggregatedList_Warning_Data)(nil), "compute.CommitmentAggregatedList.Warning.Data")
	proto.RegisterType((*CommitmentList)(nil), "compute.CommitmentList")
	proto.RegisterType((*CommitmentList_Warning)(nil), "compute.CommitmentList.Warning")
	proto.RegisterType((*CommitmentList_Warning_Data)(nil), "compute.CommitmentList.Warning.Data")
	proto.RegisterType((*CommitmentsScopedList)(nil), "compute.CommitmentsScopedList")
	proto.RegisterType((*CommitmentsScopedList_Warning)(nil), "compute.CommitmentsScopedList.Warning")
	proto.RegisterType((*CommitmentsScopedList_Warning_Data)(nil), "compute.CommitmentsScopedList.Warning.Data")
	proto.RegisterType((*Condition)(nil), "compute.Condition")
	proto.RegisterType((*ConnectionDraining)(nil), "compute.ConnectionDraining")
	proto.RegisterType((*CustomerEncryptionKey)(nil), "compute.CustomerEncryptionKey")
	proto.RegisterType((*CustomerEncryptionKeyProtectedDisk)(nil), "compute.CustomerEncryptionKeyProtectedDisk")
	proto.RegisterType((*DeprecationStatus)(nil), "compute.DeprecationStatus")
	proto.RegisterType((*Disk)(nil), "compute.Disk")
	proto.RegisterType((*DiskAggregatedList)(nil), "compute.DiskAggregatedList")
	proto.RegisterType((*DiskAggregatedList_Warning)(nil), "compute.DiskAggregatedList.Warning")
	proto.RegisterType((*DiskAggregatedList_Warning_Data)(nil), "compute.DiskAggregatedList.Warning.Data")
	proto.RegisterType((*DiskList)(nil), "compute.DiskList")
	proto.RegisterType((*DiskList_Warning)(nil), "compute.DiskList.Warning")
	proto.RegisterType((*DiskList_Warning_Data)(nil), "compute.DiskList.Warning.Data")
	proto.RegisterType((*DiskMoveRequest)(nil), "compute.DiskMoveRequest")
	proto.RegisterType((*DiskType)(nil), "compute.DiskType")
	proto.RegisterType((*DiskTypeAggregatedList)(nil), "compute.DiskTypeAggregatedList")
	proto.RegisterType((*DiskTypeAggregatedList_Warning)(nil), "compute.DiskTypeAggregatedList.Warning")
	proto.RegisterType((*DiskTypeAggregatedList_Warning_Data)(nil), "compute.DiskTypeAggregatedList.Warning.Data")
	proto.RegisterType((*DiskTypeList)(nil), "compute.DiskTypeList")
	proto.RegisterType((*DiskTypeList_Warning)(nil), "compute.DiskTypeList.Warning")
	proto.RegisterType((*DiskTypeList_Warning_Data)(nil), "compute.DiskTypeList.Warning.Data")
	proto.RegisterType((*DiskTypesScopedList)(nil), "compute.DiskTypesScopedList")
	proto.RegisterType((*DiskTypesScopedList_Warning)(nil), "compute.DiskTypesScopedList.Warning")
	proto.RegisterType((*DiskTypesScopedList_Warning_Data)(nil), "compute.DiskTypesScopedList.Warning.Data")
	proto.RegisterType((*DisksResizeRequest)(nil), "compute.DisksResizeRequest")
	proto.RegisterType((*DisksScopedList)(nil), "compute.DisksScopedList")
	proto.RegisterType((*DisksScopedList_Warning)(nil), "compute.DisksScopedList.Warning")
	proto.RegisterType((*DisksScopedList_Warning_Data)(nil), "compute.DisksScopedList.Warning.Data")
	proto.RegisterType((*DistributionPolicy)(nil), "compute.DistributionPolicy")
	proto.RegisterType((*DistributionPolicyZoneConfiguration)(nil), "compute.DistributionPolicyZoneConfiguration")
	proto.RegisterType((*Expr)(nil), "compute.Expr")
	proto.RegisterType((*Firewall)(nil), "compute.Firewall")
	proto.RegisterType((*Firewall_Allowed)(nil), "compute.Firewall.Allowed")
	proto.RegisterType((*Firewall_Denied)(nil), "compute.Firewall.Denied")
	proto.RegisterType((*FirewallList)(nil), "compute.FirewallList")
	proto.RegisterType((*FirewallList_Warning)(nil), "compute.FirewallList.Warning")
	proto.RegisterType((*FirewallList_Warning_Data)(nil), "compute.FirewallList.Warning.Data")
	proto.RegisterType((*FixedOrPercent)(nil), "compute.FixedOrPercent")
	proto.RegisterType((*ForwardingRule)(nil), "compute.ForwardingRule")
	proto.RegisterType((*ForwardingRuleAggregatedList)(nil), "compute.ForwardingRuleAggregatedList")
	proto.RegisterType((*ForwardingRuleAggregatedList_Warning)(nil), "compute.ForwardingRuleAggregatedList.Warning")
	proto.RegisterType((*ForwardingRuleAggregatedList_Warning_Data)(nil), "compute.ForwardingRuleAggregatedList.Warning.Data")
	proto.RegisterType((*ForwardingRuleList)(nil), "compute.ForwardingRuleList")
	proto.RegisterType((*ForwardingRuleList_Warning)(nil), "compute.ForwardingRuleList.Warning")
	proto.RegisterType((*ForwardingRuleList_Warning_Data)(nil), "compute.ForwardingRuleList.Warning.Data")
	proto.RegisterType((*ForwardingRulesScopedList)(nil), "compute.ForwardingRulesScopedList")
	proto.RegisterType((*ForwardingRulesScopedList_Warning)(nil), "compute.ForwardingRulesScopedList.Warning")
	proto.RegisterType((*ForwardingRulesScopedList_Warning_Data)(nil), "compute.ForwardingRulesScopedList.Warning.Data")
	proto.RegisterType((*GlobalSetLabelsRequest)(nil), "compute.GlobalSetLabelsRequest")
	proto.RegisterType((*GuestOsFeature)(nil), "compute.GuestOsFeature")
	proto.RegisterType((*HTTPHealthCheck)(nil), "compute.HTTPHealthCheck")
	proto.RegisterType((*HTTPSHealthCheck)(nil), "compute.HTTPSHealthCheck")
	proto.RegisterType((*HealthCheck)(nil), "compute.HealthCheck")
	proto.RegisterType((*HealthCheckList)(nil), "compute.HealthCheckList")
	proto.RegisterType((*HealthCheckList_Warning)(nil), "compute.HealthCheckList.Warning")
	proto.RegisterType((*HealthCheckList_Warning_Data)(nil), "compute.HealthCheckList.Warning.Data")
	proto.RegisterType((*HealthCheckReference)(nil), "compute.HealthCheckReference")
	proto.RegisterType((*HealthStatus)(nil), "compute.HealthStatus")
	proto.RegisterType((*HostRule)(nil), "compute.HostRule")
	proto.RegisterType((*HttpHealthCheck)(nil), "compute.HttpHealthCheck")
	proto.RegisterType((*HttpHealthCheckList)(nil), "compute.HttpHealthCheckList")
	proto.RegisterType((*HttpHealthCheckList_Warning)(nil), "compute.HttpHealthCheckList.Warning")
	proto.RegisterType((*HttpHealthCheckList_Warning_Data)(nil), "compute.HttpHealthCheckList.Warning.Data")
	proto.RegisterType((*HttpsHealthCheck)(nil), "compute.HttpsHealthCheck")
	proto.RegisterType((*HttpsHealthCheckList)(nil), "compute.HttpsHealthCheckList")
	proto.RegisterType((*HttpsHealthCheckList_Warning)(nil), "compute.HttpsHealthCheckList.Warning")
	proto.RegisterType((*HttpsHealthCheckList_Warning_Data)(nil), "compute.HttpsHealthCheckList.Warning.Data")
	proto.RegisterType((*Image)(nil), "compute.Image")
	proto.RegisterType((*Image_RawDisk)(nil), "compute.Image.RawDisk")
	proto.RegisterType((*ImageList)(nil), "compute.ImageList")
	proto.RegisterType((*ImageList_Warning)(nil), "compute.ImageList.Warning")
	proto.RegisterType((*ImageList_Warning_Data)(nil), "compute.ImageList.Warning.Data")
	proto.RegisterType((*Instance)(nil), "compute.Instance")
	proto.RegisterType((*InstanceAggregatedList)(nil), "compute.InstanceAggregatedList")
	proto.RegisterType((*InstanceAggregatedList_Warning)(nil), "compute.InstanceAggregatedList.Warning")
	proto.RegisterType((*InstanceAggregatedList_Warning_Data)(nil), "compute.InstanceAggregatedList.Warning.Data")
	proto.RegisterType((*InstanceGroup)(nil), "compute.InstanceGroup")
	proto.RegisterType((*InstanceGroupAggregatedList)(nil), "compute.InstanceGroupAggregatedList")
	proto.RegisterType((*InstanceGroupAggregatedList_Warning)(nil), "compute.InstanceGroupAggregatedList.Warning")
	proto.RegisterType((*InstanceGroupAggregatedList_Warning_Data)(nil), "compute.InstanceGroupAggregatedList.Warning.Data")
	proto.RegisterType((*InstanceGroupList)(nil), "compute.InstanceGroupList")
	proto.RegisterType((*InstanceGroupList_Warning)(nil), "compute.InstanceGroupList.Warning")
	proto.RegisterType((*InstanceGroupList_Warning_Data)(nil), "compute.InstanceGroupList.Warning.Data")
	proto.RegisterType((*InstanceGroupManager)(nil), "compute.InstanceGroupManager")
	proto.RegisterType((*InstanceGroupManagerActionsSummary)(nil), "compute.InstanceGroupManagerActionsSummary")
	proto.RegisterType((*InstanceGroupManagerAggregatedList)(nil), "compute.InstanceGroupManagerAggregatedList")
	proto.RegisterType((*InstanceGroupManagerAggregatedList_Warning)(nil), "compute.InstanceGroupManagerAggregatedList.Warning")
	proto.RegisterType((*InstanceGroupManagerAggregatedList_Warning_Data)(nil), "compute.InstanceGroupManagerAggregatedList.Warning.Data")
	proto.RegisterType((*InstanceGroupManagerAutoHealingPolicy)(nil), "compute.InstanceGroupManagerAutoHealingPolicy")
	proto.RegisterType((*InstanceGroupManagerList)(nil), "compute.InstanceGroupManagerList")
	proto.RegisterType((*InstanceGroupManagerList_Warning)(nil), "compute.InstanceGroupManagerList.Warning")
	proto.RegisterType((*InstanceGroupManagerList_Warning_Data)(nil), "compute.InstanceGroupManagerList.Warning.Data")
	proto.RegisterType((*InstanceGroupManagerPendingActionsSummary)(nil), "compute.InstanceGroupManagerPendingActionsSummary")
	proto.RegisterType((*InstanceGroupManagerUpdatePolicy)(nil), "compute.InstanceGroupManagerUpdatePolicy")
	proto.RegisterType((*InstanceGroupManagerVersion)(nil), "compute.InstanceGroupManagerVersion")
	proto.RegisterType((*InstanceGroupManagersAbandonInstancesRequest)(nil), "compute.InstanceGroupManagersAbandonInstancesRequest")
	proto.RegisterType((*InstanceGroupManagersDeleteInstancesRequest)(nil), "compute.InstanceGroupManagersDeleteInstancesRequest")
	proto.RegisterType((*InstanceGroupManagersListManagedInstancesResponse)(nil), "compute.InstanceGroupManagersListManagedInstancesResponse")
	proto.RegisterType((*InstanceGroupManagersRecreateInstancesRequest)(nil), "compute.InstanceGroupManagersRecreateInstancesRequest")
	proto.RegisterType((*InstanceGroupManagersResizeAdvancedRequest)(nil), "compute.InstanceGroupManagersResizeAdvancedRequest")
	proto.RegisterType((*InstanceGroupManagersScopedList)(nil), "compute.InstanceGroupManagersScopedList")
	proto.RegisterType((*InstanceGroupManagersScopedList_Warning)(nil), "compute.InstanceGroupManagersScopedList.Warning")
	proto.RegisterType((*InstanceGroupManagersScopedList_Warning_Data)(nil), "compute.InstanceGroupManagersScopedList.Warning.Data")
	proto.RegisterType((*InstanceGroupManagersSetAutoHealingRequest)(nil), "compute.InstanceGroupManagersSetAutoHealingRequest")
	proto.RegisterType((*InstanceGroupManagersSetInstanceTemplateRequest)(nil), "compute.InstanceGroupManagersSetInstanceTemplateRequest")
	proto.RegisterType((*InstanceGroupManagersSetTargetPoolsRequest)(nil), "compute.InstanceGroupManagersSetTargetPoolsRequest")
	proto.RegisterType((*InstanceGroupsAddInstancesRequest)(nil), "compute.InstanceGroupsAddInstancesRequest")
	proto.RegisterType((*InstanceGroupsListInstances)(nil), "compute.InstanceGroupsListInstances")
	proto.RegisterType((*InstanceGroupsListInstances_Warning)(nil), "compute.InstanceGroupsListInstances.Warning")
	proto.RegisterType((*InstanceGroupsListInstances_Warning_Data)(nil), "compute.InstanceGroupsListInstances.Warning.Data")
	proto.RegisterType((*InstanceGroupsListInstancesRequest)(nil), "compute.InstanceGroupsListInstancesRequest")
	proto.RegisterType((*InstanceGroupsRemoveInstancesRequest)(nil), "compute.InstanceGroupsRemoveInstancesRequest")
	proto.RegisterType((*InstanceGroupsScopedList)(nil), "compute.InstanceGroupsScopedList")
	proto.RegisterType((*InstanceGroupsScopedList_Warning)(nil), "compute.InstanceGroupsScopedList.Warning")
	proto.RegisterType((*InstanceGroupsScopedList_Warning_Data)(nil), "compute.InstanceGroupsScopedList.Warning.Data")
	proto.RegisterType((*InstanceGroupsSetNamedPortsRequest)(nil), "compute.InstanceGroupsSetNamedPortsRequest")
	proto.RegisterType((*InstanceList)(nil), "compute.InstanceList")
	proto.RegisterType((*InstanceList_Warning)(nil), "compute.InstanceList.Warning")
	proto.RegisterType((*InstanceList_Warning_Data)(nil), "compute.InstanceList.Warning.Data")
	proto.RegisterType((*InstanceListReferrers)(nil), "compute.InstanceListReferrers")
	proto.RegisterType((*InstanceListReferrers_Warning)(nil), "compute.InstanceListReferrers.Warning")
	proto.RegisterType((*InstanceListReferrers_Warning_Data)(nil), "compute.InstanceListReferrers.Warning.Data")
	proto.RegisterType((*InstanceMoveRequest)(nil), "compute.InstanceMoveRequest")
	proto.RegisterType((*InstanceProperties)(nil), "compute.InstanceProperties")
	proto.RegisterType((*InstanceReference)(nil), "compute.InstanceReference")
	proto.RegisterType((*InstanceTemplate)(nil), "compute.InstanceTemplate")
	proto.RegisterType((*InstanceTemplateList)(nil), "compute.InstanceTemplateList")
	proto.RegisterType((*InstanceTemplateList_Warning)(nil), "compute.InstanceTemplateList.Warning")
	proto.RegisterType((*InstanceTemplateList_Warning_Data)(nil), "compute.InstanceTemplateList.Warning.Data")
	proto.RegisterType((*InstanceWithNamedPorts)(nil), "compute.InstanceWithNamedPorts")
	proto.RegisterType((*InstancesScopedList)(nil), "compute.InstancesScopedList")
	proto.RegisterType((*InstancesScopedList_Warning)(nil), "compute.InstancesScopedList.Warning")
	proto.RegisterType((*InstancesScopedList_Warning_Data)(nil), "compute.InstancesScopedList.Warning.Data")
	proto.RegisterType((*InstancesSetLabelsRequest)(nil), "compute.InstancesSetLabelsRequest")
	proto.RegisterType((*InstancesSetMachineResourcesRequest)(nil), "compute.InstancesSetMachineResourcesRequest")
	proto.RegisterType((*InstancesSetMachineTypeRequest)(nil), "compute.InstancesSetMachineTypeRequest")
	proto.RegisterType((*InstancesSetMinCpuPlatformRequest)(nil), "compute.InstancesSetMinCpuPlatformRequest")
	proto.RegisterType((*InstancesSetServiceAccountRequest)(nil), "compute.InstancesSetServiceAccountRequest")
	proto.RegisterType((*InstancesStartWithEncryptionKeyRequest)(nil), "compute.InstancesStartWithEncryptionKeyRequest")
	proto.RegisterType((*Interconnect)(nil), "compute.Interconnect")
	proto.RegisterType((*InterconnectAttachment)(nil), "compute.InterconnectAttachment")
	proto.RegisterType((*InterconnectAttachmentAggregatedList)(nil), "compute.InterconnectAttachmentAggregatedList")
	proto.RegisterType((*InterconnectAttachmentAggregatedList_Warning)(nil), "compute.InterconnectAttachmentAggregatedList.Warning")
	proto.RegisterType((*InterconnectAttachmentAggregatedList_Warning_Data)(nil), "compute.InterconnectAttachmentAggregatedList.Warning.Data")
	proto.RegisterType((*InterconnectAttachmentList)(nil), "compute.InterconnectAttachmentList")
	proto.RegisterType((*InterconnectAttachmentList_Warning)(nil), "compute.InterconnectAttachmentList.Warning")
	proto.RegisterType((*InterconnectAttachmentList_Warning_Data)(nil), "compute.InterconnectAttachmentList.Warning.Data")
	proto.RegisterType((*InterconnectAttachmentPrivateInfo)(nil), "compute.InterconnectAttachmentPrivateInfo")
	proto.RegisterType((*InterconnectAttachmentsScopedList)(nil), "compute.InterconnectAttachmentsScopedList")
	proto.RegisterType((*InterconnectAttachmentsScopedList_Warning)(nil), "compute.InterconnectAttachmentsScopedList.Warning")
	proto.RegisterType((*InterconnectAttachmentsScopedList_Warning_Data)(nil), "compute.InterconnectAttachmentsScopedList.Warning.Data")
	proto.RegisterType((*InterconnectCircuitInfo)(nil), "compute.InterconnectCircuitInfo")
	proto.RegisterType((*InterconnectList)(nil), "compute.InterconnectList")
	proto.RegisterType((*InterconnectList_Warning)(nil), "compute.InterconnectList.Warning")
	proto.RegisterType((*InterconnectList_Warning_Data)(nil), "compute.InterconnectList.Warning.Data")
	proto.RegisterType((*InterconnectLocation)(nil), "compute.InterconnectLocation")
	proto.RegisterType((*InterconnectLocationList)(nil), "compute.InterconnectLocationList")
	proto.RegisterType((*InterconnectLocationList_Warning)(nil), "compute.InterconnectLocationList.Warning")
	proto.RegisterType((*InterconnectLocationList_Warning_Data)(nil), "compute.InterconnectLocationList.Warning.Data")
	proto.RegisterType((*InterconnectLocationRegionInfo)(nil), "compute.InterconnectLocationRegionInfo")
	proto.RegisterType((*InterconnectOutageNotification)(nil), "compute.InterconnectOutageNotification")
	proto.RegisterType((*License)(nil), "compute.License")
	proto.RegisterType((*LogConfig)(nil), "compute.LogConfig")
	proto.RegisterType((*LogConfigCloudAuditOptions)(nil), "compute.LogConfigCloudAuditOptions")
	proto.RegisterType((*LogConfigCounterOptions)(nil), "compute.LogConfigCounterOptions")
	proto.RegisterType((*LogConfigDataAccessOptions)(nil), "compute.LogConfigDataAccessOptions")
	proto.RegisterType((*MachineType)(nil), "compute.MachineType")
	proto.RegisterType((*MachineTypeAggregatedList)(nil), "compute.MachineTypeAggregatedList")
	proto.RegisterType((*MachineTypeAggregatedList_Warning)(nil), "compute.MachineTypeAggregatedList.Warning")
	proto.RegisterType((*MachineTypeAggregatedList_Warning_Data)(nil), "compute.MachineTypeAggregatedList.Warning.Data")
	proto.RegisterType((*MachineTypeList)(nil), "compute.MachineTypeList")
	proto.RegisterType((*MachineTypeList_Warning)(nil), "compute.MachineTypeList.Warning")
	proto.RegisterType((*MachineTypeList_Warning_Data)(nil), "compute.MachineTypeList.Warning.Data")
	proto.RegisterType((*MachineTypesScopedList)(nil), "compute.MachineTypesScopedList")
	proto.RegisterType((*MachineTypesScopedList_Warning)(nil), "compute.MachineTypesScopedList.Warning")
	proto.RegisterType((*MachineTypesScopedList_Warning_Data)(nil), "compute.MachineTypesScopedList.Warning.Data")
	proto.RegisterType((*ManagedInstance)(nil), "compute.ManagedInstance")
	proto.RegisterType((*ManagedInstanceLastAttempt)(nil), "compute.ManagedInstanceLastAttempt")
	proto.RegisterType((*ManagedInstanceLastAttempt_Errors)(nil), "compute.ManagedInstanceLastAttempt.Errors")
	proto.RegisterType((*ManagedInstanceLastAttempt_Errors_Errors)(nil), "compute.ManagedInstanceLastAttempt.Errors.Errors")
	proto.RegisterType((*ManagedInstanceVersion)(nil), "compute.ManagedInstanceVersion")
	proto.RegisterType((*Metadata)(nil), "compute.Metadata")
	proto.RegisterType((*Metadata_Items)(nil), "compute.Metadata.Items")
	proto.RegisterType((*NamedPort)(nil), "compute.NamedPort")
	proto.RegisterType((*Network)(nil), "compute.Network")
	proto.RegisterType((*NetworkInterface)(nil), "compute.NetworkInterface")
	proto.RegisterType((*NetworkList)(nil), "compute.NetworkList")
	proto.RegisterType((*NetworkList_Warning)(nil), "compute.NetworkList.Warning")
	proto.RegisterType((*NetworkList_Warning_Data)(nil), "compute.NetworkList.Warning.Data")
	proto.RegisterType((*NetworkPeering)(nil), "compute.NetworkPeering")
	proto.RegisterType((*NetworkRoutingConfig)(nil), "compute.NetworkRoutingConfig")
	proto.RegisterType((*NetworksAddPeeringRequest)(nil), "compute.NetworksAddPeeringRequest")
	proto.RegisterType((*NetworksRemovePeeringRequest)(nil), "compute.NetworksRemovePeeringRequest")
	proto.RegisterType((*Operation)(nil), "compute.Operation")
	proto.RegisterType((*Operation_Error)(nil), "compute.Operation.Error")
	proto.RegisterType((*Operation_Error_Errors)(nil), "compute.Operation.Error.Errors")
	proto.RegisterType((*Operation_Warnings)(nil), "compute.Operation.Warnings")
	proto.RegisterType((*Operation_Warnings_Data)(nil), "compute.Operation.Warnings.Data")
	proto.RegisterType((*OperationAggregatedList)(nil), "compute.OperationAggregatedList")
	proto.RegisterType((*OperationAggregatedList_Warning)(nil), "compute.OperationAggregatedList.Warning")
	proto.RegisterType((*OperationAggregatedList_Warning_Data)(nil), "compute.OperationAggregatedList.Warning.Data")
	proto.RegisterType((*OperationList)(nil), "compute.OperationList")
	proto.RegisterType((*OperationList_Warning)(nil), "compute.OperationList.Warning")
	proto.RegisterType((*OperationList_Warning_Data)(nil), "compute.OperationList.Warning.Data")
	proto.RegisterType((*OperationsScopedList)(nil), "compute.OperationsScopedList")
	proto.RegisterType((*OperationsScopedList_Warning)(nil), "compute.OperationsScopedList.Warning")
	proto.RegisterType((*OperationsScopedList_Warning_Data)(nil), "compute.OperationsScopedList.Warning.Data")
	proto.RegisterType((*PathMatcher)(nil), "compute.PathMatcher")
	proto.RegisterType((*PathRule)(nil), "compute.PathRule")
	proto.RegisterType((*Policy)(nil), "compute.Policy")
	proto.RegisterType((*Project)(nil), "compute.Project")
	proto.RegisterType((*ProjectsDisableXpnResourceRequest)(nil), "compute.ProjectsDisableXpnResourceRequest")
	proto.RegisterType((*ProjectsEnableXpnResourceRequest)(nil), "compute.ProjectsEnableXpnResourceRequest")
	proto.RegisterType((*ProjectsGetXpnResources)(nil), "compute.ProjectsGetXpnResources")
	proto.RegisterType((*ProjectsListXpnHostsRequest)(nil), "compute.ProjectsListXpnHostsRequest")
	proto.RegisterType((*Quota)(nil), "compute.Quota")
	proto.RegisterType((*Reference)(nil), "compute.Reference")
	proto.RegisterType((*Region)(nil), "compute.Region")
	proto.RegisterType((*RegionAutoscalerList)(nil), "compute.RegionAutoscalerList")
	proto.RegisterType((*RegionAutoscalerList_Warning)(nil), "compute.RegionAutoscalerList.Warning")
	proto.RegisterType((*RegionAutoscalerList_Warning_Data)(nil), "compute.RegionAutoscalerList.Warning.Data")
	proto.RegisterType((*RegionInstanceGroupList)(nil), "compute.RegionInstanceGroupList")
	proto.RegisterType((*RegionInstanceGroupList_Warning)(nil), "compute.RegionInstanceGroupList.Warning")
	proto.RegisterType((*RegionInstanceGroupList_Warning_Data)(nil), "compute.RegionInstanceGroupList.Warning.Data")
	proto.RegisterType((*RegionInstanceGroupManagerList)(nil), "compute.RegionInstanceGroupManagerList")
	proto.RegisterType((*RegionInstanceGroupManagerList_Warning)(nil), "compute.RegionInstanceGroupManagerList.Warning")
	proto.RegisterType((*RegionInstanceGroupManagerList_Warning_Data)(nil), "compute.RegionInstanceGroupManagerList.Warning.Data")
	proto.RegisterType((*RegionInstanceGroupManagersAbandonInstancesRequest)(nil), "compute.RegionInstanceGroupManagersAbandonInstancesRequest")
	proto.RegisterType((*RegionInstanceGroupManagersDeleteInstancesRequest)(nil), "compute.RegionInstanceGroupManagersDeleteInstancesRequest")
	proto.RegisterType((*RegionInstanceGroupManagersListInstancesResponse)(nil), "compute.RegionInstanceGroupManagersListInstancesResponse")
	proto.RegisterType((*RegionInstanceGroupManagersRecreateRequest)(nil), "compute.RegionInstanceGroupManagersRecreateRequest")
	proto.RegisterType((*RegionInstanceGroupManagersSetAutoHealingRequest)(nil), "compute.RegionInstanceGroupManagersSetAutoHealingRequest")
	proto.RegisterType((*RegionInstanceGroupManagersSetTargetPoolsRequest)(nil), "compute.RegionInstanceGroupManagersSetTargetPoolsRequest")
	proto.RegisterType((*RegionInstanceGroupManagersSetTemplateRequest)(nil), "compute.RegionInstanceGroupManagersSetTemplateRequest")
	proto.RegisterType((*RegionInstanceGroupsListInstances)(nil), "compute.RegionInstanceGroupsListInstances")
	proto.RegisterType((*RegionInstanceGroupsListInstances_Warning)(nil), "compute.RegionInstanceGroupsListInstances.Warning")
	proto.RegisterType((*RegionInstanceGroupsListInstances_Warning_Data)(nil), "compute.RegionInstanceGroupsListInstances.Warning.Data")
	proto.RegisterType((*RegionInstanceGroupsListInstancesRequest)(nil), "compute.RegionInstanceGroupsListInstancesRequest")
	proto.RegisterType((*RegionInstanceGroupsSetNamedPortsRequest)(nil), "compute.RegionInstanceGroupsSetNamedPortsRequest")
	proto.RegisterType((*RegionList)(nil), "compute.RegionList")
	proto.RegisterType((*RegionList_Warning)(nil), "compute.RegionList.Warning")
	proto.RegisterType((*RegionList_Warning_Data)(nil), "compute.RegionList.Warning.Data")
	proto.RegisterType((*RegionSetLabelsRequest)(nil), "compute.RegionSetLabelsRequest")
	proto.RegisterType((*ResourceCommitment)(nil), "compute.ResourceCommitment")
	proto.RegisterType((*ResourceGroupReference)(nil), "compute.ResourceGroupReference")
	proto.RegisterType((*Route)(nil), "compute.Route")
	proto.RegisterType((*Route_Warnings)(nil), "compute.Route.Warnings")
	proto.RegisterType((*Route_Warnings_Data)(nil), "compute.Route.Warnings.Data")
	proto.RegisterType((*RouteList)(nil), "compute.RouteList")
	proto.RegisterType((*RouteList_Warning)(nil), "compute.RouteList.Warning")
	proto.RegisterType((*RouteList_Warning_Data)(nil), "compute.RouteList.Warning.Data")
	proto.RegisterType((*Router)(nil), "compute.Router")
	proto.RegisterType((*RouterAggregatedList)(nil), "compute.RouterAggregatedList")
	proto.RegisterType((*RouterAggregatedList_Warning)(nil), "compute.RouterAggregatedList.Warning")
	proto.RegisterType((*RouterAggregatedList_Warning_Data)(nil), "compute.RouterAggregatedList.Warning.Data")
	proto.RegisterType((*RouterBgp)(nil), "compute.RouterBgp")
	proto.RegisterType((*RouterBgpPeer)(nil), "compute.RouterBgpPeer")
	proto.RegisterType((*RouterInterface)(nil), "compute.RouterInterface")
	proto.RegisterType((*RouterList)(nil), "compute.RouterList")
	proto.RegisterType((*RouterList_Warning)(nil), "compute.RouterList.Warning")
	proto.RegisterType((*RouterList_Warning_Data)(nil), "compute.RouterList.Warning.Data")
	proto.RegisterType((*RouterStatus)(nil), "compute.RouterStatus")
	proto.RegisterType((*RouterStatusBgpPeerStatus)(nil), "compute.RouterStatusBgpPeerStatus")
	proto.RegisterType((*RouterStatusResponse)(nil), "compute.RouterStatusResponse")
	proto.RegisterType((*RoutersPreviewResponse)(nil), "compute.RoutersPreviewResponse")
	proto.RegisterType((*RoutersScopedList)(nil), "compute.RoutersScopedList")
	proto.RegisterType((*RoutersScopedList_Warning)(nil), "compute.RoutersScopedList.Warning")
	proto.RegisterType((*RoutersScopedList_Warning_Data)(nil), "compute.RoutersScopedList.Warning.Data")
	proto.RegisterType((*Rule)(nil), "compute.Rule")
	proto.RegisterType((*SSLHealthCheck)(nil), "compute.SSLHealthCheck")
	proto.RegisterType((*Scheduling)(nil), "compute.Scheduling")
	proto.RegisterType((*SecurityPolicy)(nil), "compute.SecurityPolicy")
	proto.RegisterType((*SecurityPolicyList)(nil), "compute.SecurityPolicyList")
	proto.RegisterType((*SecurityPolicyList_Warning)(nil), "compute.SecurityPolicyList.Warning")
	proto.RegisterType((*SecurityPolicyList_Warning_Data)(nil), "compute.SecurityPolicyList.Warning.Data")
	proto.RegisterType((*SecurityPolicyReference)(nil), "compute.SecurityPolicyReference")
	proto.RegisterType((*SecurityPolicyRule)(nil), "compute.SecurityPolicyRule")
	proto.RegisterType((*SecurityPolicyRuleMatcher)(nil), "compute.SecurityPolicyRuleMatcher")
	proto.RegisterType((*SerialPortOutput)(nil), "compute.SerialPortOutput")
	proto.RegisterType((*ServiceAccount)(nil), "compute.ServiceAccount")
	proto.RegisterType((*Snapshot)(nil), "compute.Snapshot")
	proto.RegisterType((*SnapshotList)(nil), "compute.SnapshotList")
	proto.RegisterType((*SnapshotList_Warning)(nil), "compute.SnapshotList.Warning")
	proto.RegisterType((*SnapshotList_Warning_Data)(nil), "compute.SnapshotList.Warning.Data")
	proto.RegisterType((*SslCertificate)(nil), "compute.SslCertificate")
	proto.RegisterType((*SslCertificateList)(nil), "compute.SslCertificateList")
	proto.RegisterType((*SslCertificateList_Warning)(nil), "compute.SslCertificateList.Warning")
	proto.RegisterType((*SslCertificateList_Warning_Data)(nil), "compute.SslCertificateList.Warning.Data")
	proto.RegisterType((*Subnetwork)(nil), "compute.Subnetwork")
	proto.RegisterType((*SubnetworkAggregatedList)(nil), "compute.SubnetworkAggregatedList")
	proto.RegisterType((*SubnetworkAggregatedList_Warning)(nil), "compute.SubnetworkAggregatedList.Warning")
	proto.RegisterType((*SubnetworkAggregatedList_Warning_Data)(nil), "compute.SubnetworkAggregatedList.Warning.Data")
	proto.RegisterType((*SubnetworkList)(nil), "compute.SubnetworkList")
	proto.RegisterType((*SubnetworkList_Warning)(nil), "compute.SubnetworkList.Warning")
	proto.RegisterType((*SubnetworkList_Warning_Data)(nil), "compute.SubnetworkList.Warning.Data")
	proto.RegisterType((*SubnetworkSecondaryRange)(nil), "compute.SubnetworkSecondaryRange")
	proto.RegisterType((*SubnetworksExpandIpCidrRangeRequest)(nil), "compute.SubnetworksExpandIpCidrRangeRequest")
	proto.RegisterType((*SubnetworksScopedList)(nil), "compute.SubnetworksScopedList")
	proto.RegisterType((*SubnetworksScopedList_Warning)(nil), "compute.SubnetworksScopedList.Warning")
	proto.RegisterType((*SubnetworksScopedList_Warning_Data)(nil), "compute.SubnetworksScopedList.Warning.Data")
	proto.RegisterType((*SubnetworksSetPrivateIpGoogleAccessRequest)(nil), "compute.SubnetworksSetPrivateIpGoogleAccessRequest")
	proto.RegisterType((*TCPHealthCheck)(nil), "compute.TCPHealthCheck")
	proto.RegisterType((*Tags)(nil), "compute.Tags")
	proto.RegisterType((*TargetHttpProxy)(nil), "compute.TargetHttpProxy")
	proto.RegisterType((*TargetHttpProxyList)(nil), "compute.TargetHttpProxyList")
	proto.RegisterType((*TargetHttpProxyList_Warning)(nil), "compute.TargetHttpProxyList.Warning")
	proto.RegisterType((*TargetHttpProxyList_Warning_Data)(nil), "compute.TargetHttpProxyList.Warning.Data")
	proto.RegisterType((*TargetHttpsProxiesSetSslCertificatesRequest)(nil), "compute.TargetHttpsProxiesSetSslCertificatesRequest")
	proto.RegisterType((*TargetHttpsProxy)(nil), "compute.TargetHttpsProxy")
	proto.RegisterType((*TargetHttpsProxyList)(nil), "compute.TargetHttpsProxyList")
	proto.RegisterType((*TargetHttpsProxyList_Warning)(nil), "compute.TargetHttpsProxyList.Warning")
	proto.RegisterType((*TargetHttpsProxyList_Warning_Data)(nil), "compute.TargetHttpsProxyList.Warning.Data")
	proto.RegisterType((*TargetInstance)(nil), "compute.TargetInstance")
	proto.RegisterType((*TargetInstanceAggregatedList)(nil), "compute.TargetInstanceAggregatedList")
	proto.RegisterType((*TargetInstanceAggregatedList_Warning)(nil), "compute.TargetInstanceAggregatedList.Warning")
	proto.RegisterType((*TargetInstanceAggregatedList_Warning_Data)(nil), "compute.TargetInstanceAggregatedList.Warning.Data")
	proto.RegisterType((*TargetInstanceList)(nil), "compute.TargetInstanceList")
	proto.RegisterType((*TargetInstanceList_Warning)(nil), "compute.TargetInstanceList.Warning")
	proto.RegisterType((*TargetInstanceList_Warning_Data)(nil), "compute.TargetInstanceList.Warning.Data")
	proto.RegisterType((*TargetInstancesScopedList)(nil), "compute.TargetInstancesScopedList")
	proto.RegisterType((*TargetInstancesScopedList_Warning)(nil), "compute.TargetInstancesScopedList.Warning")
	proto.RegisterType((*TargetInstancesScopedList_Warning_Data)(nil), "compute.TargetInstancesScopedList.Warning.Data")
	proto.RegisterType((*TargetPool)(nil), "compute.TargetPool")
	proto.RegisterType((*TargetPoolAggregatedList)(nil), "compute.TargetPoolAggregatedList")
	proto.RegisterType((*TargetPoolAggregatedList_Warning)(nil), "compute.TargetPoolAggregatedList.Warning")
	proto.RegisterType((*TargetPoolAggregatedList_Warning_Data)(nil), "compute.TargetPoolAggregatedList.Warning.Data")
	proto.RegisterType((*TargetPoolInstanceHealth)(nil), "compute.TargetPoolInstanceHealth")
	proto.RegisterType((*TargetPoolList)(nil), "compute.TargetPoolList")
	proto.RegisterType((*TargetPoolList_Warning)(nil), "compute.TargetPoolList.Warning")
	proto.RegisterType((*TargetPoolList_Warning_Data)(nil), "compute.TargetPoolList.Warning.Data")
	proto.RegisterType((*TargetPoolsAddHealthCheckRequest)(nil), "compute.TargetPoolsAddHealthCheckRequest")
	proto.RegisterType((*TargetPoolsAddInstanceRequest)(nil), "compute.TargetPoolsAddInstanceRequest")
	proto.RegisterType((*TargetPoolsRemoveHealthCheckRequest)(nil), "compute.TargetPoolsRemoveHealthCheckRequest")
	proto.RegisterType((*TargetPoolsRemoveInstanceRequest)(nil), "compute.TargetPoolsRemoveInstanceRequest")
	proto.RegisterType((*TargetPoolsScopedList)(nil), "compute.TargetPoolsScopedList")
	proto.RegisterType((*TargetPoolsScopedList_Warning)(nil), "compute.TargetPoolsScopedList.Warning")
	proto.RegisterType((*TargetPoolsScopedList_Warning_Data)(nil), "compute.TargetPoolsScopedList.Warning.Data")
	proto.RegisterType((*TargetReference)(nil), "compute.TargetReference")
	proto.RegisterType((*TargetSslProxiesSetBackendServiceRequest)(nil), "compute.TargetSslProxiesSetBackendServiceRequest")
	proto.RegisterType((*TargetSslProxiesSetProxyHeaderRequest)(nil), "compute.TargetSslProxiesSetProxyHeaderRequest")
	proto.RegisterType((*TargetSslProxiesSetSslCertificatesRequest)(nil), "compute.TargetSslProxiesSetSslCertificatesRequest")
	proto.RegisterType((*TargetSslProxy)(nil), "compute.TargetSslProxy")
	proto.RegisterType((*TargetSslProxyList)(nil), "compute.TargetSslProxyList")
	proto.RegisterType((*TargetSslProxyList_Warning)(nil), "compute.TargetSslProxyList.Warning")
	proto.RegisterType((*TargetSslProxyList_Warning_Data)(nil), "compute.TargetSslProxyList.Warning.Data")
	proto.RegisterType((*TargetTcpProxiesSetBackendServiceRequest)(nil), "compute.TargetTcpProxiesSetBackendServiceRequest")
	proto.RegisterType((*TargetTcpProxiesSetProxyHeaderRequest)(nil), "compute.TargetTcpProxiesSetProxyHeaderRequest")
	proto.RegisterType((*TargetTcpProxy)(nil), "compute.TargetTcpProxy")
	proto.RegisterType((*TargetTcpProxyList)(nil), "compute.TargetTcpProxyList")
	proto.RegisterType((*TargetTcpProxyList_Warning)(nil), "compute.TargetTcpProxyList.Warning")
	proto.RegisterType((*TargetTcpProxyList_Warning_Data)(nil), "compute.TargetTcpProxyList.Warning.Data")
	proto.RegisterType((*TargetVpnGateway)(nil), "compute.TargetVpnGateway")
	proto.RegisterType((*TargetVpnGatewayAggregatedList)(nil), "compute.TargetVpnGatewayAggregatedList")
	proto.RegisterType((*TargetVpnGatewayAggregatedList_Warning)(nil), "compute.TargetVpnGatewayAggregatedList.Warning")
	proto.RegisterType((*TargetVpnGatewayAggregatedList_Warning_Data)(nil), "compute.TargetVpnGatewayAggregatedList.Warning.Data")
	proto.RegisterType((*TargetVpnGatewayList)(nil), "compute.TargetVpnGatewayList")
	proto.RegisterType((*TargetVpnGatewayList_Warning)(nil), "compute.TargetVpnGatewayList.Warning")
	proto.RegisterType((*TargetVpnGatewayList_Warning_Data)(nil), "compute.TargetVpnGatewayList.Warning.Data")
	proto.RegisterType((*TargetVpnGatewaysScopedList)(nil), "compute.TargetVpnGatewaysScopedList")
	proto.RegisterType((*TargetVpnGatewaysScopedList_Warning)(nil), "compute.TargetVpnGatewaysScopedList.Warning")
	proto.RegisterType((*TargetVpnGatewaysScopedList_Warning_Data)(nil), "compute.TargetVpnGatewaysScopedList.Warning.Data")
	proto.RegisterType((*TestFailure)(nil), "compute.TestFailure")
	proto.RegisterType((*TestPermissionsRequest)(nil), "compute.TestPermissionsRequest")
	proto.RegisterType((*TestPermissionsResponse)(nil), "compute.TestPermissionsResponse")
	proto.RegisterType((*UDPHealthCheck)(nil), "compute.UDPHealthCheck")
	proto.RegisterType((*UrlMap)(nil), "compute.UrlMap")
	proto.RegisterType((*UrlMapList)(nil), "compute.UrlMapList")
	proto.RegisterType((*UrlMapList_Warning)(nil), "compute.UrlMapList.Warning")
	proto.RegisterType((*UrlMapList_Warning_Data)(nil), "compute.UrlMapList.Warning.Data")
	proto.RegisterType((*UrlMapReference)(nil), "compute.UrlMapReference")
	proto.RegisterType((*UrlMapTest)(nil), "compute.UrlMapTest")
	proto.RegisterType((*UrlMapValidationResult)(nil), "compute.UrlMapValidationResult")
	proto.RegisterType((*UrlMapsValidateRequest)(nil), "compute.UrlMapsValidateRequest")
	proto.RegisterType((*UrlMapsValidateResponse)(nil), "compute.UrlMapsValidateResponse")
	proto.RegisterType((*UsageExportLocation)(nil), "compute.UsageExportLocation")
	proto.RegisterType((*VpnTunnel)(nil), "compute.VpnTunnel")
	proto.RegisterType((*VpnTunnelAggregatedList)(nil), "compute.VpnTunnelAggregatedList")
	proto.RegisterType((*VpnTunnelAggregatedList_Warning)(nil), "compute.VpnTunnelAggregatedList.Warning")
	proto.RegisterType((*VpnTunnelAggregatedList_Warning_Data)(nil), "compute.VpnTunnelAggregatedList.Warning.Data")
	proto.RegisterType((*VpnTunnelList)(nil), "compute.VpnTunnelList")
	proto.RegisterType((*VpnTunnelList_Warning)(nil), "compute.VpnTunnelList.Warning")
	proto.RegisterType((*VpnTunnelList_Warning_Data)(nil), "compute.VpnTunnelList.Warning.Data")
	proto.RegisterType((*VpnTunnelsScopedList)(nil), "compute.VpnTunnelsScopedList")
	proto.RegisterType((*VpnTunnelsScopedList_Warning)(nil), "compute.VpnTunnelsScopedList.Warning")
	proto.RegisterType((*VpnTunnelsScopedList_Warning_Data)(nil), "compute.VpnTunnelsScopedList.Warning.Data")
	proto.RegisterType((*XpnHostList)(nil), "compute.XpnHostList")
	proto.RegisterType((*XpnHostList_Warning)(nil), "compute.XpnHostList.Warning")
	proto.RegisterType((*XpnHostList_Warning_Data)(nil), "compute.XpnHostList.Warning.Data")
	proto.RegisterType((*XpnResourceId)(nil), "compute.XpnResourceId")
	proto.RegisterType((*Zone)(nil), "compute.Zone")
	proto.RegisterType((*ZoneList)(nil), "compute.ZoneList")
	proto.RegisterType((*ZoneList_Warning)(nil), "compute.ZoneList.Warning")
	proto.RegisterType((*ZoneList_Warning_Data)(nil), "compute.ZoneList.Warning.Data")
	proto.RegisterType((*ZoneSetLabelsRequest)(nil), "compute.ZoneSetLabelsRequest")
}

func init() { proto.RegisterFile("schema/gcp/compute/compute-api.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 13583 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0xbd, 0x6b, 0x90, 0x1c, 0x47,
	0x72, 0x18, 0x1c, 0xf3, 0xda, 0x9d, 0xc9, 0x7d, 0xa2, 0xb1, 0x0b, 0x2c, 0x41, 0x10, 0x04, 0x1b,
	0x38, 0x1c, 0x08, 0x82, 0x0b, 0x70, 0x01, 0x90, 0x20, 0xee, 0x8e, 0xe4, 0x62, 0x17, 0x8f, 0x15,
	0x01, 0x70, 0xaf, 0x77, 0x79, 0xc7, 0xa3, 0xee, 0xbe, 0xb8, 0xde, 0x99, 0xda, 0xd9, 0x16, 0x7a,
	0xba, 0xe7, 0xba, 0x7b, 0x16, 0x58, 0x46, 0x7c, 0xb6, 0xc2, 0x92, 0xad, 0x47, 0xc8, 0x8e, 0x93,
	0x83, 0x21, 0x9d, 0x1e, 0xa6, 0x74, 0x96, 0xce, 0x27, 0xcb, 0xd6, 0x9d, 0xfc, 0x90, 0xed, 0xf0,
	0x85, 0x2c, 0xc9, 0x96, 0xfd, 0xc3, 0x61, 0xfd, 0x90, 0xf4, 0x4b, 0xbf, 0x14, 0x76, 0x38, 0xc2,
	0xf7, 0x43, 0x3f, 0xf4, 0xb8, 0xb0, 0x15, 0x0a, 0x39, 0xc2, 0x51, 0xaf, 0xee, 0xaa, 0xea, 0xea,
	0xe9, 0x99, 0xc1, 0x34, 0x97, 0x74, 0xf8, 0xd7, 0x4c, 0x67, 0x55, 0x65, 0xbd, 0xb2, 0x32, 0xb3,
	0xb2, 0xb2, 0xb2, 0xe0, 0x6c, 0xd8, 0xdc, 0x43, 0x1d, 0xfb, 0x52, 0xbb, 0xd9, 0xbd, 0xd4, 0xf4,
	0x3b, 0xdd, 0x5e, 0x84, 0xf8, 0xef, 0x8b, 0x76, 0xd7, 0x59, 0xee, 0x06, 0x7e, 0xe4, 0x1b, 0x93,
	0x0c, 0x64, 0x3a, 0x70, 0x64, 0xb5, 0xd9, 0x44, 0x2e, 0x0a, 0xec, 0xc8, 0x0f, 0xd6, 0x7c, 0x6f,
	0xd7, 0x69, 0x1b, 0x17, 0x60, 0xde, 0x16, 0x81, 0x3d, 0x2f, 0x5a, 0x2a, 0x9d, 0x2e, 0x9d, 0xaf,
	0x59, 0x29, 0xb8, 0x71, 0x1e, 0xe6, 0x04, 0xd8, 0xf6, 0x41, 0x17, 0x2d, 0x95, 0x4f, 0x97, 0xce,
	0x37, 0x2c, 0x15, 0x6c, 0xfe, 0x56, 0x19, 0xe6, 0x56, 0x65, 0x98, 0x71, 0x11, 0x8e, 0x34, 0x03,
	0x64, 0x47, 0x8e, 0xef, 0x6d, 0x3b, 0x1d, 0x14, 0x46, 0x76, 0xa7, 0x4b, 0xaa, 0x6a, 0x58, 0xe9,
	0x04, 0xe3, 0x06, 0x40, 0x0b, 0x75, 0x03, 0xd4, 0xb4, 0x23, 0xd4, 0x22, 0xd5, 0x4c, 0xad, 0x9c,
	0x58, 0x66, 0x5d, 0x59, 0x5e, 0x67, 0x49, 0x8e, 0xef, 0x6d, 0x45, 0x76, 0xd4, 0x0b, 0x2d, 0x21,
	0xb7, 0x71, 0x1a, 0xa6, 0x5a, 0x28, 0x6c, 0x06, 0x4e, 0x17, 0x67, 0x58, 0xaa, 0x90, 0x3a, 0x44,
	0x90, 0x31, 0x0b, 0x65, 0xa7, 0xb5, 0x54, 0x25, 0x09, 0x65, 0xa7, 0x65, 0x18, 0x50, 0x7d, 0xe8,
	0x78, 0xad, 0xa5, 0x1a, 0x81, 0x90, 0xff, 0xc6, 0x75, 0x38, 0xde, 0xb1, 0x1f, 0x3b, 0x9d, 0x5e,
	0x67, 0xcd, 0x0e, 0x5a, 0xe1, 0x26, 0x0a, 0x36, 0xbc, 0x30, 0xb2, 0xbd, 0x26, 0x5a, 0x9a, 0x20,
	0x03, 0x94, 0x95, 0x8c, 0xb1, 0x79, 0x76, 0x07, 0x2d, 0x4d, 0x52, 0x6c, 0xf8, 0xbf, 0x71, 0x02,
	0xea, 0x21, 0x72, 0x77, 0xef, 0x39, 0xde, 0xc3, 0xa5, 0x3a, 0x81, 0xc7, 0xdf, 0x38, 0xff, 0x7b,
	0xbe, 0x87, 0x96, 0x1a, 0x34, 0x3f, 0xfe, 0x6f, 0xfe, 0x6a, 0x15, 0x9e, 0x51, 0x46, 0x70, 0xb5,
	0xdd, 0x0e, 0x50, 0x1b, 0xf7, 0xf0, 0x9e, 0x13, 0x46, 0xac, 0x0f, 0xa5, 0xb8, 0x0f, 0x77, 0xa0,
	0xe6, 0x44, 0xa8, 0x13, 0x2e, 0x95, 0x4f, 0x57, 0xce, 0x4f, 0xad, 0xbc, 0x14, 0x0f, 0x56, 0x5f,
	0x34, 0xcb, 0x1b, 0xb8, 0xcc, 0x2d, 0x2f, 0x0a, 0x0e, 0x2c, 0x5a, 0x3e, 0x1e, 0x8c, 0x8a, 0x30,
	0x18, 0x67, 0x61, 0xc6, 0x43, 0x8f, 0xa3, 0x4d, 0xbb, 0x8d, 0xb6, 0xfd, 0x87, 0xc8, 0x63, 0x63,
	0x27, 0x03, 0xa5, 0x4e, 0xd6, 0x94, 0x4e, 0xde, 0x85, 0xc9, 0x47, 0x76, 0xe0, 0x39, 0x5e, 0x9b,
	0x0c, 0xdf, 0xd4, 0xca, 0xf2, 0x80, 0x0d, 0xfc, 0x3c, 0x2d, 0x65, 0xf1, 0xe2, 0x27, 0xbe, 0x04,
	0x90, 0x34, 0xda, 0x98, 0x87, 0xca, 0x43, 0x74, 0xc0, 0xc6, 0x01, 0xff, 0x35, 0x5e, 0x85, 0xda,
	0xbe, 0xed, 0xf6, 0x10, 0xa3, 0x9a, 0x33, 0x59, 0xf5, 0x84, 0x5b, 0x4d, 0xbf, 0x4b, 0x2b, 0xb1,
	0x68, 0x89, 0x1b, 0xe5, 0xeb, 0xa5, 0x13, 0xbf, 0x5e, 0x82, 0x49, 0x56, 0x27, 0x1e, 0x8a, 0xa6,
	0xdf, 0x42, 0x0c, 0x3b, 0xf9, 0x6f, 0xdc, 0x81, 0x6a, 0xcb, 0x8e, 0x6c, 0x36, 0xcc, 0x57, 0x86,
	0xeb, 0xc5, 0xf2, 0xba, 0x1d, 0xd9, 0x16, 0x41, 0x60, 0x2c, 0xc1, 0x64, 0x07, 0x85, 0xa1, 0xdd,
	0x46, 0x6c, 0xa8, 0xf9, 0xe7, 0x89, 0x65, 0xa8, 0xe2, 0x7c, 0x9a, 0xbe, 0x2d, 0x88, 0x7d, 0x6b,
	0xb0, 0x66, 0x9b, 0xef, 0x57, 0xe0, 0xa8, 0x52, 0xbd, 0x96, 0x44, 0x96, 0x65, 0x12, 0x59, 0xca,
	0x6a, 0x7b, 0xb1, 0x94, 0xf0, 0x9a, 0x4a, 0x09, 0x67, 0xb3, 0xda, 0xa1, 0x9f, 0xff, 0x7f, 0x94,
	0x33, 0x41, 0x9f, 0x91, 0x26, 0xe8, 0xf9, 0x41, 0x90, 0x17, 0x33, 0x2d, 0x7f, 0x54, 0x86, 0x13,
	0xd9, 0x34, 0x67, 0xac, 0x4b, 0xac, 0x97, 0xa4, 0x2e, 0x95, 0x72, 0x26, 0x26, 0x55, 0xc2, 0xb8,
	0x95, 0x8c, 0x26, 0xa5, 0xf7, 0x17, 0x06, 0xa0, 0xf7, 0xf4, 0xa0, 0xfe, 0x5a, 0xce, 0xa0, 0xae,
	0x4b, 0x83, 0x7a, 0x79, 0x88, 0x3a, 0x8a, 0x19, 0xdb, 0x7f, 0x55, 0x82, 0x69, 0x5c, 0x77, 0x18,
	0x32, 0x41, 0xc6, 0x69, 0xb5, 0x24, 0xd0, 0x2a, 0x67, 0xc4, 0x65, 0x81, 0x11, 0x2f, 0x40, 0xcd,
	0xb3, 0xa3, 0x8d, 0x4d, 0xd6, 0x00, 0xfa, 0x61, 0x5c, 0x86, 0xa3, 0xdd, 0xde, 0x8e, 0xeb, 0x34,
	0x37, 0xa3, 0x60, 0xdd, 0xef, 0xd8, 0x8e, 0xf7, 0x00, 0x17, 0xa4, 0xb4, 0xad, 0x4b, 0x32, 0x4c,
	0x98, 0x0e, 0x51, 0xb4, 0xc9, 0x53, 0x08, 0x95, 0xd7, 0x2d, 0x09, 0x86, 0xeb, 0x8f, 0xb0, 0x94,
	0x9c, 0xa0, 0xf5, 0xe3, 0xff, 0xe6, 0x8f, 0x57, 0x61, 0x72, 0xb5, 0xd5, 0x0a, 0x50, 0x18, 0xe2,
	0xe1, 0xb0, 0xe9, 0x5f, 0xd6, 0x6c, 0xfe, 0x89, 0x45, 0x18, 0xfb, 0x2b, 0x88, 0x59, 0x11, 0xa4,
	0x17, 0xa7, 0x95, 0x2c, 0x71, 0xaa, 0x88, 0xc4, 0x6a, 0x96, 0x48, 0xac, 0xc5, 0xbc, 0xe2, 0x24,
	0x34, 0x9c, 0xee, 0xe7, 0x50, 0x10, 0xe2, 0xfc, 0xb4, 0x03, 0x09, 0x20, 0x1e, 0xed, 0x49, 0x61,
	0xb4, 0x2f, 0xc0, 0xbc, 0x6b, 0xef, 0x20, 0xf7, 0xb6, 0xe3, 0xb5, 0x51, 0xd0, 0x0d, 0x1c, 0x2f,
	0x62, 0xa2, 0x2e, 0x05, 0x37, 0xae, 0xc2, 0x04, 0x81, 0x85, 0x4b, 0x0d, 0x42, 0x50, 0x27, 0x13,
	0x82, 0xa2, 0x7d, 0x5c, 0xbe, 0x47, 0x92, 0xa9, 0x60, 0x62, 0x79, 0xe3, 0xf9, 0x04, 0x61, 0x3e,
	0x8f, 0xc1, 0x44, 0x80, 0xda, 0xb8, 0x91, 0x53, 0x04, 0xca, 0xbe, 0x24, 0x0e, 0x34, 0xad, 0x70,
	0xa0, 0x63, 0x30, 0x11, 0x12, 0xb5, 0x61, 0x69, 0x86, 0x96, 0xa1, 0x5f, 0xc6, 0x29, 0x80, 0xb0,
	0xb7, 0xe3, 0xa1, 0xe8, 0x91, 0x1f, 0x3c, 0x5c, 0x9a, 0x25, 0x69, 0x02, 0x04, 0xd3, 0x4e, 0x2f,
	0x44, 0x41, 0xb8, 0x34, 0x77, 0xba, 0x82, 0x69, 0x87, 0x7c, 0x9c, 0x78, 0x15, 0xa6, 0x84, 0xc6,
	0x0e, 0x4a, 0xc1, 0x58, 0xd6, 0x98, 0x3f, 0x54, 0x85, 0x45, 0xd6, 0xe1, 0x1c, 0xe9, 0xfe, 0xba,
	0xcc, 0xba, 0x9f, 0x57, 0xc7, 0xeb, 0x90, 0xa4, 0xfa, 0x1b, 0x2a, 0x2f, 0x3f, 0x97, 0xd3, 0xb0,
	0x14, 0xe3, 0xf9, 0x5c, 0x8e, 0x34, 0x5f, 0x91, 0xa5, 0x79, 0x8a, 0x50, 0xb2, 0xc4, 0xf8, 0xaf,
	0xe4, 0x30, 0xb4, 0xd7, 0x25, 0x86, 0xf6, 0xc2, 0x60, 0xcd, 0x2e, 0x86, 0x97, 0x7d, 0xaf, 0x0c,
	0x53, 0xac, 0x5a, 0xed, 0xdc, 0x9f, 0x93, 0xe7, 0x7e, 0x5e, 0x6d, 0x6b, 0xb1, 0x53, 0xfc, 0xb2,
	0x3a, 0xc5, 0xa9, 0x29, 0xd0, 0x4f, 0xec, 0x07, 0x39, 0x13, 0x70, 0x4d, 0x9a, 0x80, 0xe7, 0xfa,
	0x21, 0x2d, 0x66, 0xd8, 0xbf, 0x55, 0x86, 0xa3, 0x1a, 0x22, 0x32, 0x96, 0xa1, 0x61, 0x73, 0x30,
	0x13, 0xc8, 0xe9, 0x21, 0x4f, 0xb2, 0x88, 0xfa, 0x4c, 0x59, 0xd5, 0x67, 0xd2, 0xe8, 0xc7, 0xa8,
	0xcf, 0x64, 0x23, 0x2f, 0x66, 0xc0, 0x76, 0x60, 0x7a, 0xd5, 0x75, 0xec, 0x70, 0xa3, 0x6b, 0xd9,
	0x5e, 0x1b, 0x61, 0xa1, 0xe2, 0x74, 0xd7, 0x9c, 0x56, 0x40, 0x3e, 0x59, 0x79, 0x11, 0x84, 0xc5,
	0x6a, 0xc2, 0x3e, 0x09, 0xe8, 0x41, 0x22, 0x8f, 0x75, 0x49, 0xe6, 0x37, 0x2b, 0x30, 0xbd, 0x1a,
	0x45, 0x76, 0x73, 0x0f, 0xb5, 0xd6, 0x9d, 0xf0, 0x21, 0xe6, 0xc9, 0x76, 0x2f, 0xf2, 0xd7, 0x91,
	0x8b, 0x22, 0x5a, 0x47, 0xdd, 0x12, 0x20, 0x78, 0xc4, 0x76, 0x7c, 0x3f, 0x22, 0x38, 0xeb, 0x16,
	0xf9, 0x8f, 0xcb, 0xb4, 0xd0, 0xbe, 0xd3, 0xa4, 0xb5, 0xd1, 0x5e, 0x0b, 0x10, 0xe3, 0x1e, 0x1c,
	0x69, 0x39, 0xe1, 0xc3, 0x5b, 0x5e, 0x33, 0x38, 0x20, 0xd2, 0xef, 0x4d, 0x74, 0x40, 0x16, 0xc6,
	0xd4, 0xca, 0xa9, 0x78, 0x78, 0xd7, 0x7a, 0x61, 0xe4, 0x77, 0x50, 0x20, 0xe5, 0xb2, 0xd2, 0x05,
	0xf1, 0x60, 0x39, 0x5e, 0x0b, 0x3d, 0x26, 0x2b, 0xa7, 0x66, 0xd1, 0x0f, 0xe3, 0xb3, 0x30, 0xef,
	0x78, 0x4e, 0xe4, 0xd8, 0xae, 0xf3, 0x1e, 0xda, 0xb4, 0x03, 0xbb, 0x13, 0xb2, 0xf5, 0xf3, 0x89,
	0x64, 0x06, 0x85, 0x8e, 0x6e, 0x28, 0x99, 0xad, 0x54, 0x71, 0x22, 0x92, 0xbd, 0x08, 0x05, 0xbb,
	0x76, 0x93, 0x6f, 0x2e, 0x13, 0x40, 0xbc, 0xfa, 0xeb, 0xc2, 0xea, 0x3f, 0x01, 0x75, 0xd7, 0x69,
	0x22, 0x0f, 0x53, 0x72, 0x83, 0xc8, 0xac, 0xf8, 0x1b, 0xe7, 0xef, 0x60, 0x52, 0x63, 0xc2, 0x14,
	0xff, 0x27, 0x82, 0xd1, 0xef, 0x05, 0x4d, 0xc4, 0x85, 0x29, 0xfd, 0x8a, 0x15, 0x99, 0x69, 0x41,
	0x91, 0xf9, 0xa0, 0x0c, 0x27, 0xfb, 0x75, 0x00, 0x57, 0x8e, 0x07, 0x8b, 0xcc, 0x01, 0xa5, 0x8d,
	0xf8, 0x9b, 0xcc, 0x90, 0x13, 0x3e, 0xdc, 0x72, 0xde, 0x43, 0x77, 0x76, 0x18, 0x3d, 0x08, 0x10,
	0xe3, 0x3c, 0xcc, 0x91, 0xaf, 0xc8, 0x0f, 0x30, 0x93, 0xc2, 0x75, 0xd3, 0x69, 0x54, 0xc1, 0xbc,
	0x16, 0x92, 0xa5, 0x9a, 0xd4, 0x42, 0xd2, 0x4e, 0xc3, 0x14, 0xed, 0xc0, 0x46, 0x07, 0x93, 0x3f,
	0xe5, 0x6c, 0x22, 0xc8, 0x78, 0x17, 0x96, 0x84, 0x4f, 0x99, 0x20, 0x26, 0x06, 0x22, 0x88, 0xcc,
	0xf2, 0xe6, 0xfb, 0x25, 0x98, 0x5a, 0xed, 0xb5, 0x9c, 0x88, 0x69, 0xa8, 0xab, 0x30, 0x67, 0xe3,
	0xcf, 0x7b, 0x7e, 0x9b, 0x42, 0x38, 0x77, 0x39, 0x9e, 0x10, 0x84, 0x94, 0x6e, 0xa9, 0xf9, 0xf1,
	0xb0, 0xa0, 0xc7, 0xa8, 0xd3, 0x8d, 0x50, 0xeb, 0x3e, 0xea, 0xec, 0x60, 0x55, 0xa4, 0x4c, 0xa6,
	0x55, 0x05, 0xe3, 0x55, 0x1f, 0xa2, 0x00, 0x53, 0x3c, 0x5f, 0xf5, 0xec, 0xd3, 0xdc, 0x86, 0x59,
	0xb9, 0x1a, 0x1d, 0xd6, 0x52, 0x26, 0x56, 0xd7, 0x6f, 0x0b, 0x2a, 0x29, 0xff, 0x34, 0x6f, 0xc1,
	0xd3, 0xab, 0xbd, 0x68, 0xcf, 0x0f, 0x9c, 0xf7, 0x88, 0xea, 0x79, 0xcf, 0x6f, 0xb7, 0x1d, 0xaf,
	0xfd, 0x16, 0x19, 0x8d, 0xd0, 0x38, 0x07, 0xb3, 0x5d, 0x14, 0x74, 0x9c, 0x10, 0x6b, 0x8f, 0xa4,
	0x3c, 0xa5, 0x08, 0x05, 0x6a, 0x7e, 0x50, 0x01, 0x58, 0xed, 0x45, 0x7e, 0xd8, 0xb4, 0x5d, 0x14,
	0x18, 0x77, 0xe1, 0x88, 0xcd, 0xbe, 0x1c, 0xaf, 0xbd, 0xe9, 0xbb, 0x4e, 0x93, 0xf2, 0x29, 0xd1,
	0x18, 0xb4, 0xaa, 0xe6, 0xb0, 0xd2, 0x85, 0xf4, 0xea, 0x72, 0x79, 0x40, 0x75, 0x79, 0x44, 0x0b,
	0x12, 0x57, 0x57, 0x27, 0xb4, 0xea, 0xea, 0x64, 0xa6, 0xba, 0x5a, 0xcf, 0x54, 0x57, 0x1b, 0x92,
	0xba, 0x7a, 0x1b, 0x66, 0xe8, 0xbf, 0x75, 0x14, 0xd9, 0x8e, 0x1b, 0x2e, 0x01, 0x21, 0xa7, 0xd3,
	0xa9, 0x91, 0x41, 0xc1, 0x96, 0x98, 0xcf, 0x92, 0x8b, 0x61, 0xfc, 0x91, 0x1d, 0xb4, 0x51, 0xc4,
	0x57, 0x3d, 0xfd, 0x8a, 0xed, 0x52, 0xd3, 0x82, 0x5d, 0xea, 0x27, 0xab, 0xb0, 0x94, 0xa0, 0xcd,
	0x51, 0x5a, 0x6f, 0xca, 0x8a, 0xcb, 0x45, 0x4d, 0xc3, 0x0e, 0x49, 0x6f, 0x5d, 0x53, 0x95, 0x9a,
	0xe7, 0xf3, 0xdb, 0x96, 0x12, 0xdc, 0xef, 0xe4, 0xa8, 0xae, 0x57, 0x65, 0xd5, 0xf5, 0x94, 0xa6,
	0x8a, 0x0c, 0xe5, 0xf5, 0x9f, 0xe4, 0xa8, 0x04, 0x37, 0x25, 0x95, 0x60, 0x79, 0xe0, 0xb6, 0x17,
	0xa3, 0x17, 0xfc, 0x60, 0x05, 0xb3, 0x14, 0x5e, 0xb3, 0x96, 0x12, 0x9e, 0x97, 0x29, 0xe1, 0xa8,
	0xa6, 0xc5, 0xc5, 0x4e, 0xf8, 0xab, 0xea, 0x84, 0x3f, 0xab, 0x69, 0x82, 0x7e, 0x9a, 0xbf, 0x9e,
	0x33, 0x19, 0xd7, 0xa5, 0xc9, 0x38, 0x9b, 0x83, 0xb7, 0x98, 0x29, 0xb8, 0x03, 0xc7, 0x33, 0x16,
	0xbb, 0x58, 0x49, 0x49, 0xaa, 0x24, 0x96, 0xea, 0x65, 0x41, 0xaa, 0x7f, 0xa7, 0x0c, 0x8b, 0x5a,
	0xf2, 0x34, 0xae, 0xc1, 0x94, 0x9d, 0x24, 0x30, 0xd1, 0xa5, 0x9d, 0x48, 0x31, 0x9f, 0xb8, 0x43,
	0x2c, 0xab, 0x3b, 0x44, 0x5d, 0x3d, 0xe9, 0xf1, 0x1f, 0x79, 0x27, 0xd7, 0x0f, 0x7d, 0x31, 0xd3,
	0xf0, 0xef, 0x2b, 0x70, 0x64, 0x55, 0x2b, 0x7b, 0x7c, 0xdf, 0x5d, 0xf7, 0x1f, 0x79, 0x9b, 0x28,
	0x70, 0xfc, 0xd6, 0x16, 0x6a, 0xb2, 0x43, 0x96, 0x74, 0x82, 0xb1, 0x09, 0xb3, 0xcd, 0x6e, 0xef,
	0xed, 0xc8, 0x71, 0x99, 0x28, 0x65, 0xe3, 0x76, 0x3e, 0x5b, 0xe0, 0xad, 0x49, 0xf9, 0x2d, 0xa5,
	0xbc, 0xd1, 0x81, 0xa5, 0x26, 0xd1, 0x5d, 0xee, 0xa3, 0x28, 0x70, 0x9a, 0x42, 0x52, 0xb8, 0x54,
	0x51, 0x0f, 0x0b, 0x52, 0xb8, 0xf5, 0x25, 0xad, 0x4c, 0x94, 0x86, 0x07, 0x4b, 0xae, 0x6f, 0xb7,
	0x6e, 0xda, 0xae, 0xed, 0x35, 0x1d, 0xaf, 0x2d, 0x76, 0x85, 0x2a, 0xd9, 0x2b, 0xd9, 0xd5, 0xdd,
	0xcb, 0x28, 0x69, 0x65, 0xe2, 0xc4, 0xba, 0x45, 0xc7, 0x7e, 0xfc, 0xa0, 0xd7, 0xb1, 0x50, 0xd7,
	0x75, 0x9a, 0x76, 0xc8, 0x14, 0x71, 0x05, 0x4a, 0xf2, 0x39, 0x9e, 0x98, 0x6f, 0x82, 0xe5, 0x93,
	0xa0, 0xe6, 0x5b, 0xf0, 0x6c, 0xce, 0x08, 0xe3, 0x19, 0xed, 0x25, 0x9f, 0xdb, 0x54, 0x78, 0xe2,
	0x19, 0x2d, 0x59, 0xe9, 0x04, 0xf3, 0xaf, 0x4a, 0x70, 0x7e, 0xd0, 0x71, 0xc5, 0xc2, 0x78, 0xd7,
	0x71, 0x23, 0x14, 0x30, 0x6a, 0x63, 0x5f, 0x18, 0xde, 0x21, 0x99, 0x19, 0xc5, 0xb1, 0x2f, 0xe3,
	0x06, 0x2c, 0x85, 0x8e, 0xd7, 0x76, 0x11, 0x3f, 0x7e, 0x5a, 0x0d, 0x43, 0xa7, 0xed, 0x75, 0x90,
	0x17, 0x11, 0x6a, 0x2e, 0x59, 0x99, 0xe9, 0xfa, 0x6e, 0x54, 0x33, 0xba, 0x61, 0x5c, 0x85, 0xc5,
	0x14, 0x90, 0xa8, 0x72, 0x94, 0xd7, 0xea, 0x13, 0xcd, 0x2f, 0xc0, 0xf3, 0x03, 0x4f, 0xf2, 0x90,
	0xe3, 0xfa, 0x3f, 0xca, 0x30, 0x79, 0xd3, 0x6e, 0x3e, 0x44, 0x54, 0x42, 0xec, 0x70, 0x8c, 0xf7,
	0x13, 0x0e, 0x21, 0x03, 0x31, 0x09, 0x34, 0xed, 0xae, 0xdd, 0x74, 0xa2, 0x83, 0x2d, 0xc2, 0x19,
	0xc8, 0x60, 0x96, 0x2d, 0x05, 0x3a, 0x80, 0xfe, 0xb7, 0x00, 0xb5, 0x76, 0xe0, 0xf7, 0xba, 0x4c,
	0x12, 0xd1, 0x0f, 0x46, 0x8a, 0x6b, 0xbe, 0xe7, 0xa1, 0x26, 0x5d, 0x5f, 0x09, 0x29, 0x0a, 0x50,
	0xe3, 0xd3, 0xf0, 0x94, 0x0c, 0x49, 0x9f, 0x2e, 0x66, 0x67, 0x20, 0xfc, 0xca, 0x7e, 0x6c, 0xd9,
	0x11, 0xdd, 0x05, 0xd6, 0x2c, 0xfe, 0x69, 0x2c, 0x83, 0xc1, 0xfe, 0x8a, 0x08, 0xeb, 0xa4, 0x8f,
	0x9a, 0x14, 0xd6, 0x5e, 0x71, 0x81, 0x36, 0xe8, 0x78, 0xc8, 0x50, 0xf3, 0xcf, 0x4a, 0x30, 0xc3,
	0x46, 0xfa, 0x66, 0xaf, 0xf9, 0x10, 0x91, 0x2d, 0xf6, 0x0e, 0xf9, 0x27, 0x6c, 0xef, 0x04, 0xc8,
	0xd8, 0xf5, 0xed, 0x93, 0xd0, 0x40, 0x9e, 0xbd, 0xe3, 0xa2, 0xb5, 0x16, 0xe5, 0x22, 0x75, 0x2b,
	0x01, 0xa4, 0x8c, 0xd7, 0x5c, 0x87, 0x98, 0xd0, 0x68, 0xe3, 0x03, 0x9e, 0xca, 0x9a, 0x3f, 0x51,
	0x81, 0x23, 0x52, 0x9f, 0xb5, 0x8a, 0xcd, 0x45, 0x59, 0xb1, 0x39, 0x16, 0x73, 0x36, 0xa9, 0x68,
	0xb1, 0xba, 0xcd, 0xa7, 0x55, 0xdd, 0xc6, 0xd4, 0xb7, 0x42, 0x2f, 0x5e, 0x7f, 0x39, 0x47, 0xbc,
	0x7e, 0x4a, 0x12, 0xaf, 0x9f, 0xcc, 0x47, 0x5d, 0x8c, 0x68, 0xfd, 0xcd, 0x09, 0x98, 0x65, 0x55,
	0x6e, 0xd1, 0x9d, 0xac, 0xb1, 0x02, 0x0b, 0xf6, 0xee, 0xae, 0xe3, 0x39, 0xd1, 0xc1, 0x9a, 0xef,
	0x3f, 0x74, 0xd0, 0x76, 0xe4, 0x26, 0xa2, 0x55, 0x9b, 0x66, 0x5c, 0x84, 0xfa, 0x0e, 0xc5, 0x92,
	0x36, 0xa7, 0x32, 0xf4, 0x56, 0x9c, 0xc3, 0x78, 0x0d, 0x1a, 0xcd, 0x96, 0xc7, 0xf6, 0x9d, 0x15,
	0x32, 0xb6, 0xa7, 0xd5, 0xec, 0xac, 0x35, 0x6b, 0x3c, 0x9f, 0x95, 0x14, 0x31, 0xde, 0x04, 0xa3,
	0x19, 0xaf, 0xe1, 0xf5, 0xc0, 0x76, 0xc8, 0x24, 0x51, 0x21, 0xf8, 0x74, 0x62, 0x58, 0x48, 0x65,
	0xb1, 0x34, 0xc5, 0xf4, 0x4b, 0xaa, 0x36, 0xe0, 0x92, 0x9a, 0xe8, 0xb7, 0xa4, 0xd6, 0x1f, 0x90,
	0x55, 0x91, 0x2c, 0xa9, 0xf5, 0x07, 0xb8, 0xfc, 0x6e, 0xea, 0x20, 0x47, 0x04, 0x19, 0x26, 0x4c,
	0xef, 0x21, 0xdb, 0x8d, 0xf6, 0xd6, 0xf6, 0x50, 0xf3, 0x21, 0x37, 0x30, 0x49, 0x30, 0xe3, 0x22,
	0x54, 0x1c, 0xbb, 0x4b, 0x6c, 0x4c, 0xe2, 0x96, 0x5d, 0x1e, 0xba, 0x8d, 0xd5, 0x4d, 0x0b, 0x67,
	0x63, 0x8b, 0x6b, 0x2a, 0xb5, 0x8c, 0xa7, 0x85, 0xe5, 0x72, 0x19, 0x8e, 0x4a, 0x9a, 0xc0, 0x56,
	0x73, 0x0f, 0x75, 0x10, 0x3b, 0xc8, 0xd1, 0x25, 0xc5, 0x0b, 0x7f, 0x56, 0x58, 0xf8, 0x06, 0x54,
	0xbb, 0x7e, 0x10, 0x2d, 0xcd, 0x11, 0x52, 0x21, 0xff, 0xf1, 0x12, 0xc3, 0xbf, 0x84, 0xa1, 0xcd,
	0xd3, 0x25, 0xc6, 0xbf, 0x49, 0x5a, 0xe0, 0x47, 0x7e, 0xd3, 0x77, 0x97, 0x8e, 0xb0, 0x34, 0xf6,
	0x2d, 0x6c, 0xe9, 0x0d, 0x69, 0x4b, 0x7f, 0x0e, 0x66, 0x43, 0xd4, 0xec, 0x05, 0x4e, 0x74, 0xc0,
	0x28, 0xe8, 0x28, 0xb5, 0x79, 0xc8, 0x50, 0x69, 0x69, 0x2f, 0x28, 0x4b, 0xfb, 0x3c, 0xcc, 0x85,
	0x88, 0x98, 0x47, 0x56, 0x19, 0x35, 0x2f, 0x2d, 0x52, 0x3b, 0x98, 0x02, 0xc6, 0x0c, 0x39, 0x72,
	0x3a, 0xc8, 0xef, 0x45, 0x78, 0x09, 0x1c, 0x23, 0xfd, 0x12, 0x20, 0xe6, 0x37, 0xaa, 0x70, 0x52,
	0x1e, 0xf6, 0x9c, 0xcd, 0xfb, 0x6d, 0x99, 0xb3, 0x5d, 0xce, 0x98, 0xbc, 0x43, 0xda, 0xc0, 0xdf,
	0x51, 0x79, 0xde, 0x8b, 0x83, 0xb5, 0x2f, 0xc5, 0xfe, 0xbe, 0x98, 0xb3, 0x89, 0xbf, 0x2e, 0x6f,
	0xe2, 0xcd, 0x8c, 0x6a, 0x32, 0x36, 0xf2, 0xdf, 0xce, 0x61, 0xae, 0xb7, 0x25, 0xe6, 0xba, 0x32,
	0x54, 0x1f, 0x8a, 0xe1, 0xb3, 0xef, 0xc2, 0xf1, 0x0c, 0xc6, 0x66, 0xbc, 0x8e, 0xb5, 0xa7, 0xe6,
	0x1e, 0x7a, 0x13, 0x1d, 0x48, 0xa6, 0xb8, 0xc4, 0x7e, 0xb9, 0x26, 0x25, 0x5b, 0x4a, 0x76, 0xf3,
	0x07, 0xe0, 0x29, 0x19, 0xf7, 0x1d, 0xac, 0x35, 0xdd, 0x25, 0x0c, 0xc3, 0x78, 0x95, 0xb3, 0x13,
	0xba, 0x7d, 0x65, 0x1b, 0xcc, 0xc5, 0x18, 0xf7, 0x5d, 0x21, 0xd1, 0x92, 0xb2, 0xc6, 0x24, 0x56,
	0x4e, 0x48, 0xcc, 0xfc, 0x9d, 0x52, 0x2c, 0xbe, 0x13, 0x36, 0x83, 0xc7, 0x89, 0xb2, 0xb8, 0x16,
	0x3b, 0x4a, 0xe0, 0x9f, 0x78, 0xb5, 0xfa, 0x76, 0x2f, 0xda, 0x5b, 0x59, 0x73, 0x1d, 0xe4, 0x45,
	0x1b, 0x1c, 0x9b, 0x02, 0xc5, 0x2a, 0x96, 0x08, 0xd9, 0x42, 0xcd, 0x00, 0x45, 0x6c, 0xd0, 0x35,
	0x29, 0x58, 0x3f, 0x4f, 0x43, 0xb7, 0xf6, 0xec, 0x95, 0x6b, 0x2f, 0x33, 0xaa, 0xcf, 0x4c, 0x37,
	0xbf, 0x5a, 0x01, 0x43, 0xee, 0x83, 0x76, 0xa5, 0xbe, 0x28, 0xaf, 0xd4, 0xe3, 0x19, 0x54, 0x54,
	0xec, 0x82, 0xfc, 0x8c, 0xba, 0x20, 0xcf, 0x64, 0x34, 0x43, 0xbf, 0x0c, 0xbf, 0x91, 0xb3, 0x50,
	0x3e, 0x2d, 0x2d, 0x94, 0xf3, 0x03, 0xe0, 0x2e, 0x66, 0x79, 0xfc, 0x61, 0x59, 0xa5, 0x61, 0xd1,
	0x46, 0xb2, 0x0a, 0x73, 0x3b, 0x72, 0x62, 0xca, 0xc4, 0xaf, 0xcc, 0x89, 0x9a, 0xdf, 0x58, 0x57,
	0xed, 0x25, 0x17, 0xf2, 0x39, 0x4e, 0x7a, 0x38, 0xff, 0x69, 0xce, 0x70, 0xae, 0x49, 0xc3, 0x79,
	0x69, 0xf0, 0x2a, 0x8a, 0x19, 0xd5, 0x16, 0x4c, 0xde, 0x74, 0xbc, 0x16, 0x6e, 0xed, 0x0b, 0xd0,
	0x68, 0xfa, 0x5e, 0xcb, 0x21, 0x5a, 0x0b, 0xe5, 0x2f, 0x33, 0x71, 0xf3, 0x6e, 0x3d, 0xee, 0x06,
	0x56, 0x92, 0x4e, 0x5b, 0x20, 0x9e, 0x83, 0xf0, 0x4f, 0xdc, 0xe9, 0xc0, 0x77, 0x79, 0xc3, 0xc8,
	0x7f, 0xf3, 0x75, 0x58, 0x24, 0x0c, 0x6a, 0xc3, 0xdb, 0xb7, 0x5d, 0xa7, 0x45, 0xed, 0x0a, 0x3d,
	0x97, 0x68, 0x03, 0x7b, 0x7e, 0x18, 0xf1, 0x11, 0xc2, 0xff, 0x89, 0x86, 0x60, 0x47, 0x7b, 0x9c,
	0xa7, 0xe0, 0xff, 0xe6, 0xf7, 0x4a, 0x30, 0x2b, 0xb3, 0x38, 0x72, 0x06, 0xea, 0x35, 0xdd, 0x5e,
	0x0b, 0xdd, 0xe5, 0x18, 0xea, 0x96, 0x08, 0xc2, 0x22, 0x9c, 0x7d, 0x6e, 0x72, 0x0d, 0x82, 0x9e,
	0x55, 0xaa, 0x60, 0xcc, 0x5a, 0x18, 0xe8, 0xb3, 0x3d, 0x14, 0x1c, 0x6c, 0x45, 0x01, 0xa6, 0x82,
	0x0a, 0xc9, 0xac, 0x49, 0xc1, 0xfa, 0xef, 0x57, 0x92, 0xcf, 0x9b, 0xae, 0xdd, 0x7c, 0xe8, 0x3a,
	0x21, 0xde, 0xc1, 0xe3, 0xa1, 0xd0, 0xa6, 0x29, 0x65, 0x3e, 0xbf, 0xe7, 0x44, 0x88, 0x94, 0xa9,
	0xa5, 0xca, 0xc4, 0x69, 0xe6, 0xd7, 0x2b, 0x00, 0x6b, 0x7e, 0xa7, 0xe3, 0x44, 0xdc, 0x6a, 0x30,
	0x84, 0x23, 0xaf, 0xa2, 0x87, 0x96, 0xd3, 0x7a, 0xa8, 0x09, 0xd3, 0xc8, 0x6b, 0xa9, 0x4e, 0x4c,
	0x12, 0x6c, 0xe4, 0xe3, 0x16, 0x3c, 0x8b, 0xae, 0xcd, 0x0f, 0x5b, 0xc8, 0x7f, 0x41, 0x5f, 0xab,
	0x4b, 0xfa, 0xda, 0xab, 0xd0, 0x08, 0x10, 0x3d, 0xcd, 0xe3, 0x6e, 0x49, 0x89, 0x8e, 0x6e, 0xb1,
	0x94, 0x64, 0x1c, 0xac, 0x24, 0xb7, 0xc4, 0x18, 0x41, 0x61, 0x8c, 0x58, 0x0d, 0x8c, 0xec, 0x20,
	0x4a, 0x3a, 0x38, 0xc5, 0xd4, 0x40, 0x09, 0x2a, 0x9c, 0xf2, 0x4c, 0x4b, 0xa7, 0x3c, 0x67, 0xf9,
	0x29, 0xcf, 0x7d, 0xb6, 0xd6, 0xa8, 0xaa, 0x2b, 0x03, 0xc9, 0xb9, 0x4c, 0xd2, 0xb6, 0x51, 0xcf,
	0x65, 0xb2, 0x30, 0x7c, 0x14, 0xce, 0x65, 0x32, 0xdb, 0x36, 0xbe, 0x73, 0x99, 0xa4, 0x8a, 0x31,
	0x9f, 0xcb, 0xe4, 0xb5, 0xbd, 0xb8, 0x73, 0x99, 0xa4, 0xe6, 0xe1, 0xce, 0x65, 0x04, 0x3a, 0x3f,
	0xac, 0x73, 0x19, 0xb9, 0xe9, 0xe3, 0x3b, 0x97, 0xd1, 0xe3, 0x2d, 0x66, 0x0a, 0xbe, 0x53, 0x86,
	0x45, 0x2d, 0x55, 0x19, 0xd7, 0x60, 0xaa, 0x99, 0x24, 0xa4, 0x8e, 0x53, 0x84, 0xf1, 0x17, 0xf3,
	0xf5, 0x3b, 0x4e, 0xd1, 0xd6, 0x33, 0xbe, 0xe3, 0x94, 0xbe, 0xe8, 0x8b, 0x19, 0xbd, 0xbf, 0x09,
	0x8d, 0xb5, 0x58, 0xd6, 0xcf, 0x43, 0xc5, 0xb1, 0x3b, 0xbc, 0x90, 0x63, 0x77, 0x30, 0x31, 0xfb,
	0xdc, 0xa8, 0x58, 0xf6, 0xbb, 0x38, 0x47, 0xb8, 0xdf, 0x64, 0x95, 0xe2, 0xbf, 0x04, 0x72, 0x10,
	0x32, 0xaa, 0xc4, 0x7f, 0x93, 0x8a, 0x6a, 0x42, 0x45, 0x98, 0xf7, 0x92, 0x3f, 0xe1, 0xd2, 0x04,
	0x91, 0x83, 0xec, 0xcb, 0x5c, 0x07, 0x23, 0x6d, 0x9c, 0xc1, 0x72, 0xba, 0xc5, 0xfe, 0x6f, 0x27,
	0x5b, 0x6e, 0x6a, 0x75, 0xd2, 0xa4, 0x98, 0x5f, 0x81, 0x45, 0xad, 0xef, 0x08, 0x91, 0x44, 0xf6,
	0xa3, 0x37, 0xe3, 0xa1, 0x60, 0x5f, 0x58, 0x65, 0x08, 0x42, 0x9b, 0xe5, 0x45, 0x2d, 0x9c, 0x81,
	0x5d, 0xb4, 0x51, 0xc0, 0x44, 0x68, 0xd0, 0xbd, 0x44, 0x85, 0x09, 0x0d, 0xba, 0x73, 0xf8, 0xf1,
	0x12, 0x98, 0xda, 0x3a, 0xb1, 0xb2, 0x81, 0x9a, 0x11, 0x73, 0xae, 0xd2, 0x3a, 0x42, 0x95, 0x46,
	0x75, 0x84, 0x4a, 0xbc, 0x87, 0xca, 0xa2, 0xf7, 0x90, 0xf9, 0xf5, 0x12, 0x1c, 0x49, 0xdd, 0xd8,
	0xc1, 0x64, 0xd2, 0x22, 0x2e, 0x5c, 0x9c, 0x1f, 0xf1, 0x4f, 0xea, 0xbe, 0x25, 0xdd, 0xfd, 0x69,
	0x48, 0xf7, 0x7b, 0x4e, 0x40, 0xdd, 0xdf, 0x09, 0x7d, 0xe2, 0x10, 0x46, 0xbb, 0x1d, 0x7f, 0x63,
	0x75, 0x23, 0x40, 0x5d, 0xd7, 0x6e, 0x22, 0x72, 0x02, 0xc2, 0x1c, 0x9d, 0x05, 0x10, 0xa6, 0x00,
	0x2c, 0x3a, 0x63, 0x0a, 0x20, 0x1f, 0xe6, 0x4f, 0xd5, 0xa1, 0x4a, 0x86, 0x64, 0xdc, 0xda, 0x8d,
	0x76, 0x88, 0x2b, 0xa3, 0x0e, 0xf1, 0x20, 0x7a, 0x90, 0xce, 0x0f, 0x7b, 0x22, 0xc3, 0x0f, 0xfb,
	0xa5, 0xd8, 0x0f, 0x7b, 0x92, 0x2c, 0xf7, 0xa7, 0x92, 0x2b, 0x56, 0x4e, 0xf8, 0x50, 0xeb, 0x84,
	0x7d, 0x19, 0x8e, 0xba, 0x76, 0x18, 0x51, 0xd7, 0xaf, 0x64, 0x88, 0xea, 0xcc, 0x00, 0x97, 0x4e,
	0xe2, 0x25, 0xd6, 0x91, 0x5c, 0xa2, 0x91, 0x94, 0x50, 0x92, 0x24, 0xbf, 0x35, 0x48, 0xfb, 0xad,
	0x11, 0x35, 0x6f, 0x4a, 0x50, 0xf3, 0x96, 0x60, 0xd2, 0xa7, 0x9e, 0x46, 0x4c, 0x79, 0xe2, 0x9f,
	0x92, 0xec, 0x99, 0xd1, 0xf8, 0xd5, 0x50, 0x07, 0xb4, 0x59, 0x46, 0xaf, 0xd4, 0xf9, 0x4c, 0x71,
	0x1b, 0x9b, 0x1b, 0xce, 0x6d, 0x6c, 0xfe, 0xc9, 0xdc, 0xc6, 0x88, 0xbe, 0x97, 0xa4, 0x6d, 0xb4,
	0x98, 0xbd, 0x51, 0x06, 0x12, 0xad, 0x92, 0x00, 0xb6, 0x3c, 0xbb, 0x1b, 0xee, 0xf9, 0x11, 0x33,
	0x3e, 0x2a, 0x50, 0xe3, 0xcb, 0xf0, 0xb4, 0x0c, 0x91, 0x1b, 0x7b, 0x74, 0xa0, 0xc6, 0xf6, 0x43,
	0x81, 0xc9, 0x4d, 0x4e, 0xde, 0x68, 0x31, 0x33, 0x66, 0x0a, 0x2e, 0xe8, 0xb8, 0x8b, 0x92, 0x8e,
	0x8b, 0x47, 0x5c, 0x70, 0xf5, 0x3b, 0xc6, 0x46, 0x5c, 0x70, 0xf3, 0xe3, 0xbe, 0x0a, 0xc7, 0x13,
	0x5f, 0x85, 0xc4, 0x1d, 0x7f, 0x49, 0x70, 0xc7, 0x8f, 0xbd, 0x96, 0x9e, 0x4a, 0xbc, 0x96, 0x9e,
	0xc4, 0x45, 0xff, 0x2f, 0x2a, 0x60, 0xe0, 0xb5, 0x90, 0xa3, 0x52, 0x7f, 0x5a, 0x56, 0xa4, 0xce,
	0x49, 0xeb, 0xe8, 0x90, 0x94, 0xe9, 0x3e, 0x26, 0x19, 0x4d, 0xab, 0x52, 0x8a, 0x82, 0x95, 0xa3,
	0x46, 0x2f, 0xcb, 0x6a, 0xf4, 0x92, 0x84, 0x3c, 0x43, 0x81, 0x1e, 0xd5, 0xcc, 0x93, 0xdd, 0xde,
	0x62, 0x34, 0x8f, 0xef, 0x96, 0xa1, 0x8e, 0xeb, 0xd4, 0xce, 0xf5, 0x19, 0x79, 0xae, 0x67, 0xa4,
	0x56, 0x16, 0x3b, 0xa5, 0x57, 0xd4, 0x29, 0x95, 0x19, 0xb6, 0x7e, 0x22, 0x7f, 0x2e, 0x67, 0xd0,
	0x57, 0xa4, 0x41, 0x3f, 0x95, 0x89, 0xb1, 0x98, 0xa1, 0xfe, 0x7e, 0x98, 0xc3, 0x15, 0xdd, 0xf7,
	0xf7, 0x91, 0x85, 0xbe, 0xd2, 0x43, 0xd4, 0x64, 0xd2, 0x42, 0x61, 0xe4, 0x78, 0x44, 0xda, 0xbe,
	0x8b, 0x57, 0x73, 0x89, 0x79, 0xff, 0xca, 0x60, 0x72, 0xea, 0x41, 0x9c, 0x01, 0x30, 0x0a, 0xae,
	0x2a, 0x24, 0x10, 0xf3, 0x0f, 0xd8, 0x3c, 0x8e, 0x70, 0x03, 0xf9, 0x22, 0x1c, 0x69, 0xa1, 0x5d,
	0xbb, 0xe7, 0x12, 0x4c, 0x92, 0xa7, 0x72, 0x3a, 0x41, 0xb9, 0xaf, 0x5c, 0x79, 0x92, 0xfb, 0xca,
	0x03, 0x5c, 0xce, 0x1a, 0xc3, 0xf9, 0x36, 0x26, 0x46, 0x62, 0x06, 0xe3, 0x9d, 0x60, 0xf2, 0x58,
	0x06, 0xc6, 0xdc, 0x14, 0x04, 0x1f, 0xd0, 0x1f, 0xa9, 0xc2, 0x31, 0x3e, 0xa8, 0x39, 0x6c, 0xf1,
	0x0d, 0x79, 0xa9, 0x5c, 0x90, 0x68, 0xeb, 0x10, 0x6f, 0x23, 0xaf, 0xaa, 0xeb, 0xe8, 0x93, 0x79,
	0x2d, 0x1b, 0xdf, 0xc5, 0x25, 0x5e, 0x41, 0x06, 0x8b, 0xfc, 0xc7, 0x39, 0xab, 0xf5, 0x0d, 0x69,
	0xb5, 0x5e, 0x1c, 0xb0, 0xdd, 0xc5, 0xac, 0xdd, 0xbf, 0x2c, 0xc3, 0x34, 0xaf, 0x57, 0x3b, 0xff,
	0x9f, 0x94, 0xe7, 0xff, 0x48, 0xaa, 0xb5, 0xc5, 0x4e, 0xf3, 0x2b, 0xea, 0x34, 0x3f, 0x93, 0x6a,
	0x80, 0x7e, 0x72, 0x7f, 0x21, 0x67, 0x12, 0x5e, 0x96, 0x26, 0xc1, 0xec, 0x8b, 0xb5, 0x98, 0xa1,
	0xff, 0x76, 0x19, 0x8e, 0x6a, 0x28, 0xc9, 0xb8, 0x04, 0x0d, 0x7e, 0xff, 0x81, 0x5b, 0x15, 0x34,
	0xa3, 0x9e, 0xe4, 0xe9, 0x77, 0x7d, 0x49, 0x83, 0x7f, 0x7c, 0xd7, 0x97, 0xfa, 0x20, 0x2f, 0x66,
	0xc4, 0x2e, 0x52, 0x45, 0x2e, 0xb4, 0x10, 0xd6, 0xf3, 0xb9, 0xac, 0x49, 0x36, 0x01, 0x25, 0x71,
	0x13, 0x60, 0xfe, 0x74, 0x99, 0xca, 0x25, 0x71, 0x6c, 0xcf, 0x40, 0x0d, 0x8f, 0x1b, 0x1f, 0x57,
	0x55, 0xf0, 0x93, 0x34, 0xe3, 0x86, 0x3a, 0x9e, 0xa7, 0xb3, 0x14, 0xa3, 0xf4, 0x58, 0xfe, 0xc3,
	0x9c, 0xb1, 0x7c, 0x55, 0x1a, 0xcb, 0x4f, 0xe4, 0x21, 0x2e, 0x66, 0x1c, 0xdf, 0x21, 0xe3, 0x18,
	0x05, 0xce, 0x4e, 0x0f, 0x0b, 0x27, 0x76, 0x10, 0x72, 0x13, 0x6a, 0x58, 0x38, 0xf0, 0xb1, 0x91,
	0xf8, 0x92, 0x92, 0x17, 0x4b, 0x6e, 0x7a, 0xf5, 0xa4, 0x17, 0xd0, 0x43, 0x18, 0x5a, 0xd4, 0x7c,
	0x15, 0xce, 0x0c, 0x90, 0x3b, 0x96, 0x49, 0x25, 0x41, 0x26, 0xbd, 0x07, 0xd5, 0x5b, 0x8f, 0xbb,
	0x29, 0xcf, 0xbd, 0x52, 0x5a, 0x96, 0x9e, 0x02, 0x40, 0x8f, 0xbb, 0x01, 0x75, 0x9f, 0xe0, 0x2a,
	0x43, 0x02, 0x21, 0x7b, 0x4f, 0x9f, 0xca, 0x6a, 0x6e, 0x5d, 0xe0, 0xdf, 0x78, 0x40, 0x22, 0x27,
	0x72, 0xf9, 0x4d, 0x23, 0xfa, 0x61, 0x7e, 0xb7, 0x06, 0xf5, 0xdb, 0x4e, 0x80, 0x1e, 0xd9, 0xae,
	0x8b, 0x35, 0x34, 0xdb, 0x75, 0xfd, 0x47, 0xc4, 0xac, 0x21, 0x6f, 0xa9, 0x79, 0x9e, 0xe5, 0x55,
	0x9a, 0xc1, 0xe2, 0x39, 0x87, 0xf4, 0x96, 0xbb, 0x0c, 0x13, 0x2d, 0xe4, 0x39, 0x44, 0xcf, 0x90,
	0xc3, 0x05, 0xc4, 0x35, 0xac, 0x93, 0x74, 0x8b, 0xe5, 0x1b, 0x40, 0xc3, 0x20, 0xda, 0x4e, 0xac,
	0x5b, 0x91, 0xfb, 0x78, 0x21, 0x3b, 0x14, 0x4a, 0x27, 0x18, 0x27, 0x31, 0x93, 0x09, 0xa8, 0x59,
	0x8c, 0x5f, 0x0e, 0x8f, 0x01, 0x4c, 0x08, 0x4c, 0xa6, 0xb4, 0x95, 0xba, 0x46, 0x5b, 0x69, 0xc8,
	0xbb, 0x78, 0x7e, 0xf7, 0x9a, 0xaa, 0x1b, 0xfc, 0x93, 0xba, 0xdf, 0x38, 0x7e, 0xe0, 0x44, 0x07,
	0x64, 0xdf, 0x5f, 0xb3, 0xe2, 0xef, 0xbe, 0x17, 0xbd, 0x4d, 0x98, 0xa6, 0x7b, 0x50, 0xd6, 0xa1,
	0x19, 0xea, 0xa2, 0x24, 0xc2, 0x8c, 0xab, 0xb0, 0xc8, 0xf6, 0xa9, 0xcc, 0xd9, 0xa2, 0xd9, 0xf4,
	0x7b, 0x5e, 0x14, 0x2e, 0xcd, 0x92, 0xcc, 0xfa, 0x44, 0x72, 0x55, 0x9c, 0x24, 0x6c, 0xdb, 0x6d,
	0x7e, 0x1f, 0x5c, 0x80, 0x60, 0xac, 0x54, 0x0d, 0x55, 0xb1, 0xce, 0x53, 0xac, 0xda, 0xc4, 0x44,
	0x9d, 0x25, 0x58, 0x8f, 0x50, 0xac, 0x09, 0xe4, 0xc4, 0xeb, 0x30, 0xc9, 0x68, 0x07, 0x67, 0xdd,
	0xd8, 0x8c, 0x4f, 0x14, 0x99, 0x03, 0x66, 0x02, 0xc1, 0xa4, 0xda, 0xf5, 0x83, 0x88, 0x1f, 0x8c,
	0xd2, 0x8f, 0x13, 0xaf, 0xc1, 0x04, 0x25, 0x8d, 0xd1, 0xca, 0x13, 0x81, 0xcf, 0x89, 0x6c, 0x38,
	0x81, 0xcf, 0x4b, 0x1d, 0x9a, 0xc0, 0x17, 0x9b, 0x3d, 0x3e, 0x81, 0xaf, 0xc3, 0x5a, 0x0c, 0xdb,
	0xfd, 0x32, 0xcc, 0xde, 0x76, 0x1e, 0xa3, 0xd6, 0x5b, 0xc1, 0x26, 0x0a, 0x9a, 0xc8, 0x23, 0x3e,
	0xb8, 0x4d, 0xdb, 0x6d, 0xf6, 0x5c, 0x9b, 0x1b, 0x51, 0x6b, 0x96, 0x00, 0xc1, 0x78, 0x76, 0x71,
	0x09, 0x82, 0xa7, 0x66, 0xd1, 0x0f, 0xdc, 0xa2, 0x2e, 0x45, 0x40, 0x5a, 0x54, 0xb3, 0xf8, 0xa7,
	0xf9, 0xe7, 0x35, 0x98, 0xbd, 0xed, 0x07, 0x8f, 0xec, 0xa0, 0x85, 0xc7, 0xa6, 0xe7, 0x22, 0xbc,
	0xd0, 0x37, 0x36, 0x57, 0xa5, 0x18, 0x15, 0x09, 0x40, 0xa1, 0xa1, 0x72, 0x8a, 0x86, 0xce, 0xc1,
	0xac, 0xec, 0xde, 0xc0, 0xc6, 0x40, 0x81, 0xea, 0xd9, 0x5f, 0x75, 0x40, 0x9b, 0x6b, 0x2d, 0x6b,
	0xbb, 0x34, 0xa1, 0x8f, 0x65, 0x31, 0x99, 0x15, 0xcb, 0xa2, 0x9e, 0x63, 0x43, 0x6d, 0x64, 0xd8,
	0x50, 0x3f, 0x15, 0xdb, 0x50, 0xe9, 0xfd, 0xbb, 0xc4, 0xca, 0x22, 0x0f, 0x66, 0xa6, 0x35, 0x55,
	0xe3, 0xce, 0x38, 0x95, 0xef, 0xce, 0x38, 0xad, 0xe7, 0x9c, 0x33, 0x32, 0xe7, 0x3c, 0x09, 0x0d,
	0xbc, 0x72, 0xe9, 0x0d, 0x6d, 0x6a, 0xe6, 0x4c, 0x00, 0xc9, 0x22, 0x9f, 0x13, 0x16, 0xb9, 0x70,
	0x40, 0x3e, 0x9f, 0x79, 0x47, 0xf1, 0x88, 0x86, 0xd3, 0x32, 0x1f, 0x1c, 0xdc, 0x31, 0x66, 0x8d,
	0x94, 0x60, 0xc4, 0xca, 0x47, 0xbf, 0x89, 0x8f, 0xe5, 0x51, 0x66, 0xe5, 0x4b, 0x40, 0x4a, 0x00,
	0x8e, 0x85, 0x54, 0x00, 0x8e, 0xe4, 0xa6, 0xe2, 0xa2, 0x78, 0x53, 0xf1, 0x49, 0xec, 0x7b, 0xdf,
	0xa8, 0xc2, 0x49, 0x79, 0x9e, 0x46, 0xf5, 0x8b, 0xec, 0x87, 0xe5, 0xa3, 0xe0, 0x17, 0xd9, 0xb7,
	0x7d, 0xe3, 0xf3, 0x8b, 0x94, 0xab, 0x19, 0xb3, 0x5f, 0xe4, 0x20, 0x7d, 0x28, 0x86, 0xfd, 0x7e,
	0xb5, 0x02, 0x86, 0x5c, 0xfb, 0x70, 0xbe, 0x78, 0x72, 0xd9, 0x43, 0x33, 0xfc, 0xa6, 0xbb, 0x30,
	0x3e, 0x5f, 0xbc, 0x6c, 0xdc, 0xc5, 0xf9, 0xe2, 0x65, 0x52, 0x9b, 0xb1, 0x0a, 0x73, 0xbb, 0x72,
	0x62, 0xca, 0x17, 0x4f, 0x99, 0x13, 0x35, 0x7f, 0x3f, 0x5f, 0xbc, 0xcc, 0x7a, 0xc7, 0xe7, 0x8b,
	0x97, 0x5b, 0x45, 0x31, 0xa3, 0xfa, 0xbb, 0x25, 0x38, 0x76, 0xc7, 0xf5, 0x77, 0x6c, 0x77, 0x0b,
	0x45, 0x94, 0xab, 0xf2, 0xbd, 0xb2, 0x4e, 0x2a, 0x96, 0x32, 0xa4, 0xe2, 0x5a, 0x2c, 0x15, 0x55,
	0x47, 0x02, 0x3d, 0x72, 0x9d, 0x74, 0x7c, 0x12, 0xbe, 0x7e, 0x16, 0x66, 0xef, 0x60, 0xbc, 0x6f,
	0x85, 0xb7, 0x91, 0x1d, 0xf5, 0x82, 0xe4, 0x08, 0xa9, 0x24, 0x5c, 0x77, 0xfd, 0x99, 0x12, 0xcc,
	0xdd, 0xdd, 0xde, 0xde, 0xbc, 0x9b, 0x5c, 0x5a, 0xc8, 0xf4, 0x06, 0xf4, 0x83, 0x88, 0x69, 0x52,
	0xe9, 0xfb, 0x02, 0x15, 0xe5, 0xbe, 0xc0, 0x69, 0x98, 0xea, 0x06, 0xfe, 0xe3, 0x83, 0xbb, 0xc8,
	0x6e, 0xa1, 0x80, 0x6f, 0xb8, 0x04, 0x10, 0x3d, 0xa8, 0x26, 0x3d, 0xdf, 0xb4, 0xa3, 0x3d, 0xae,
	0xc5, 0x08, 0x20, 0xf3, 0x67, 0x4b, 0x30, 0x8f, 0xdb, 0xb6, 0xf5, 0x51, 0x6c, 0xdc, 0x77, 0x6a,
	0x30, 0x25, 0xb6, 0xeb, 0x02, 0xcc, 0x37, 0xf1, 0x9f, 0x0d, 0x2f, 0x42, 0xc1, 0xbe, 0x2d, 0xdc,
	0xc3, 0x49, 0xc1, 0xc7, 0x7e, 0x37, 0xec, 0x02, 0xcc, 0x53, 0x77, 0xf0, 0x83, 0xed, 0xbd, 0x00,
	0x85, 0x7b, 0xbe, 0x4b, 0x8f, 0xc8, 0x6b, 0x56, 0x0a, 0x6e, 0xdc, 0x84, 0xb9, 0xbd, 0x28, 0xea,
	0x0a, 0x4d, 0x27, 0xbd, 0x13, 0x37, 0xd1, 0x0a, 0x3d, 0x58, 0x6a, 0x01, 0xe3, 0x16, 0xcc, 0x63,
	0x50, 0x28, 0x22, 0x51, 0x4f, 0x63, 0xd4, 0x89, 0xb3, 0x52, 0x45, 0x46, 0xde, 0x26, 0xf7, 0x73,
	0x36, 0x7c, 0x1d, 0x66, 0xc3, 0xd0, 0x15, 0x1b, 0x36, 0xa5, 0xb8, 0xe8, 0x6f, 0x6d, 0xdd, 0x13,
	0x9b, 0xa5, 0x64, 0xc7, 0x08, 0xa2, 0xa6, 0x34, 0x3c, 0xd3, 0x0a, 0x82, 0xed, 0x35, 0x69, 0x74,
	0x94, 0xec, 0xca, 0x3d, 0x94, 0x19, 0xf5, 0x1e, 0x4a, 0xbc, 0x0a, 0x67, 0x85, 0x83, 0xdc, 0xd7,
	0x61, 0xb6, 0xd7, 0x92, 0x2a, 0x9d, 0x53, 0x2a, 0x7d, 0x7b, 0x5d, 0xae, 0x54, 0xce, 0x6e, 0x2c,
	0x83, 0xd1, 0xf3, 0x52, 0x34, 0x30, 0x4f, 0x3d, 0x72, 0xd2, 0x29, 0xe6, 0x0f, 0x57, 0x60, 0x4e,
	0x28, 0xaf, 0x95, 0xe4, 0x17, 0x64, 0x49, 0xbe, 0xa0, 0x5c, 0x44, 0xa0, 0x0d, 0x29, 0x54, 0x8c,
	0xdf, 0x50, 0xc5, 0xf8, 0x69, 0x5d, 0x1b, 0xc6, 0x6b, 0x49, 0xcc, 0x40, 0x5c, 0x8c, 0xa8, 0xb9,
	0x0e, 0x0b, 0xe2, 0x60, 0xa2, 0x5d, 0x14, 0x20, 0xaf, 0x49, 0x18, 0x94, 0x70, 0x8b, 0x8c, 0x1b,
	0xf1, 0x04, 0x90, 0xf9, 0x37, 0x60, 0x5a, 0xbc, 0x0f, 0x92, 0x94, 0xd8, 0x22, 0xae, 0x3d, 0x52,
	0x09, 0x02, 0xc2, 0x03, 0xed, 0xf0, 0x0b, 0xb1, 0xb4, 0x11, 0xf1, 0x37, 0xdd, 0x1f, 0xf2, 0x5d,
	0x6e, 0x85, 0xef, 0x0f, 0xf9, 0x2e, 0x97, 0xb3, 0xd7, 0x6a, 0xc2, 0x5e, 0xcd, 0x16, 0xd4, 0xef,
	0xfa, 0x61, 0x44, 0xf6, 0xc8, 0xf9, 0x26, 0xc7, 0x05, 0xa8, 0x61, 0x46, 0x1d, 0xdb, 0x52, 0xc8,
	0x07, 0x61, 0xc3, 0x76, 0xb4, 0x77, 0xdf, 0x8e, 0x9a, 0x7b, 0x28, 0xe0, 0x8c, 0x4d, 0x00, 0x99,
	0xdf, 0xc4, 0x64, 0xaa, 0x30, 0x9f, 0x8f, 0x0b, 0xa3, 0xe5, 0x82, 0xaa, 0x26, 0x08, 0x2a, 0x75,
	0x5f, 0xae, 0x8b, 0x22, 0xc9, 0x39, 0x5e, 0x5d, 0x73, 0x5b, 0xaf, 0x21, 0x08, 0x38, 0x45, 0x44,
	0x41, 0x4a, 0x44, 0x49, 0x4b, 0x6b, 0x4a, 0x59, 0x5a, 0x32, 0x97, 0x9a, 0x4e, 0x71, 0x29, 0x3d,
	0x43, 0x99, 0xc9, 0x64, 0x28, 0xef, 0x57, 0xe0, 0xa8, 0x32, 0x53, 0xc3, 0x45, 0xe0, 0x55, 0x0a,
	0x1f, 0x5a, 0x04, 0x5e, 0x4d, 0x27, 0xc6, 0x77, 0xe4, 0xd3, 0x07, 0x79, 0x31, 0x0c, 0xe6, 0x57,
	0x2a, 0x30, 0x7f, 0x57, 0x95, 0xbb, 0xff, 0x6f, 0x05, 0x7d, 0x14, 0x57, 0xd0, 0xd7, 0x2a, 0xb0,
	0xa0, 0x4e, 0x95, 0x76, 0x09, 0x5d, 0x92, 0x97, 0xd0, 0x53, 0x12, 0x75, 0x85, 0x1f, 0xda, 0x1a,
	0x7a, 0x5d, 0x5d, 0x43, 0x9f, 0xc8, 0x6c, 0x88, 0x7e, 0x11, 0x7d, 0x33, 0x67, 0x11, 0xbd, 0x26,
	0x2d, 0xa2, 0x0b, 0x03, 0x61, 0x2f, 0x28, 0x50, 0x66, 0x03, 0x6a, 0xd4, 0xef, 0xf1, 0x02, 0xcc,
	0xdb, 0x41, 0x73, 0xcf, 0xd9, 0x47, 0x5b, 0xce, 0x7b, 0xe8, 0xe6, 0x41, 0x84, 0xb8, 0x55, 0x38,
	0x05, 0x1f, 0x72, 0xe9, 0x14, 0xeb, 0x3f, 0x23, 0x87, 0x1b, 0xac, 0xa5, 0xc2, 0x0d, 0x1e, 0x83,
	0x89, 0x5d, 0xbb, 0xe3, 0xb8, 0x07, 0x6c, 0x69, 0xb1, 0x2f, 0x63, 0x15, 0xe6, 0xda, 0xd2, 0x26,
	0x92, 0xfb, 0xc9, 0x26, 0x9a, 0xa9, 0xbc, 0xc9, 0xb4, 0xd4, 0xfc, 0x8c, 0x7c, 0xeb, 0x31, 0xf9,
	0x3e, 0x00, 0xc3, 0x49, 0x3b, 0x8d, 0x36, 0x06, 0xf2, 0xc3, 0xd4, 0x94, 0x8c, 0xa9, 0x1b, 0x72,
	0xac, 0xd7, 0x53, 0x19, 0xfb, 0xf4, 0x95, 0x78, 0x9f, 0x3e, 0x4d, 0x7a, 0x96, 0x0c, 0x3a, 0x99,
	0x72, 0xad, 0xd1, 0x5a, 0x74, 0xcf, 0x9d, 0xc9, 0x70, 0xcf, 0x15, 0x6f, 0xdb, 0x5f, 0x86, 0xc9,
	0xc0, 0x7e, 0x44, 0x5c, 0xb4, 0xa8, 0x62, 0x7f, 0x4c, 0xa9, 0xc4, 0xa2, 0xa9, 0x16, 0xcf, 0x26,
	0xad, 0xbc, 0xf9, 0x34, 0xe7, 0xa1, 0x07, 0x6d, 0x04, 0xe1, 0x11, 0x66, 0x24, 0x8e, 0x21, 0xc6,
	0x3b, 0x70, 0x3c, 0xf9, 0x92, 0x87, 0xd9, 0x18, 0x68, 0x98, 0xb3, 0x8a, 0x27, 0xc7, 0x89, 0x24,
	0xde, 0x65, 0x8b, 0x59, 0xb0, 0x25, 0x98, 0xea, 0x3c, 0xbc, 0x30, 0x9c, 0xf3, 0xf0, 0xe2, 0xb8,
	0x9d, 0x87, 0x8f, 0xe9, 0x9c, 0x87, 0x93, 0xc3, 0xcb, 0xc4, 0xa5, 0x56, 0x80, 0x08, 0x6e, 0xba,
	0x4b, 0xa2, 0x9b, 0xee, 0x13, 0x98, 0x63, 0x4e, 0x3c, 0x84, 0x49, 0x36, 0xc9, 0xb8, 0x8d, 0x4d,
	0xdf, 0x8b, 0x6c, 0xc7, 0x43, 0x81, 0x10, 0x0a, 0x52, 0x06, 0x92, 0xb1, 0xde, 0xb3, 0x5f, 0xa2,
	0x71, 0x24, 0x7a, 0x1d, 0x86, 0x51, 0x82, 0x09, 0x17, 0x0e, 0x2a, 0xd2, 0x85, 0x83, 0x3f, 0x29,
	0x43, 0x83, 0xf4, 0x55, 0x2b, 0x40, 0xce, 0xca, 0x02, 0x64, 0x56, 0xa6, 0xc5, 0x62, 0xa5, 0xc6,
	0x55, 0x55, 0x6a, 0x28, 0xcb, 0x4d, 0x2f, 0x2a, 0x7e, 0x3e, 0x47, 0x54, 0x5c, 0x91, 0x44, 0xc5,
	0xb3, 0xd9, 0x28, 0x8b, 0x91, 0x0f, 0xff, 0x6d, 0x12, 0xea, 0x71, 0x48, 0x21, 0x13, 0xa6, 0x9b,
	0xb6, 0xb7, 0xd1, 0x65, 0xd6, 0x4b, 0x76, 0x23, 0x56, 0x82, 0xe1, 0x35, 0xd2, 0xec, 0xf6, 0x36,
	0x5d, 0x3b, 0xda, 0xf5, 0x03, 0x3e, 0xb5, 0x22, 0x68, 0xec, 0xd1, 0xed, 0x5f, 0xe0, 0x9e, 0x3b,
	0x35, 0x25, 0xaa, 0x80, 0x18, 0xc1, 0x96, 0x7b, 0xf0, 0xdc, 0x85, 0x23, 0x84, 0x8b, 0x0b, 0x6f,
	0x1b, 0xd0, 0x8b, 0x41, 0x52, 0xd4, 0x51, 0xf5, 0x29, 0x1d, 0x2b, 0x5d, 0x68, 0x20, 0x13, 0xcf,
	0x30, 0x47, 0x8d, 0xd7, 0x94, 0xa3, 0xc6, 0xe4, 0x74, 0x9b, 0x8f, 0xbf, 0x96, 0x5f, 0x9f, 0x86,
	0xa9, 0x8e, 0xdd, 0xdc, 0x73, 0x3c, 0xba, 0xe0, 0xa9, 0x28, 0x10, 0x41, 0xc6, 0x8b, 0x50, 0xef,
	0xa0, 0xc8, 0x26, 0x54, 0x44, 0x0d, 0x3e, 0xc9, 0xc9, 0xfd, 0x7d, 0x96, 0x60, 0xc5, 0x59, 0x58,
	0x28, 0xb5, 0x35, 0x61, 0x0e, 0xe9, 0xb1, 0xa3, 0x02, 0xd5, 0x0a, 0x83, 0x3b, 0x70, 0x84, 0x1d,
	0xe7, 0x6d, 0xf0, 0xd8, 0xc5, 0xf4, 0xfc, 0x51, 0xd4, 0xe5, 0x1e, 0x28, 0x39, 0xac, 0x74, 0x19,
	0xe3, 0x0a, 0x40, 0x88, 0xa7, 0xae, 0xe7, 0xe2, 0xe5, 0x44, 0xaf, 0x5d, 0x24, 0x17, 0xe8, 0xb6,
	0xe2, 0x24, 0x4b, 0xc8, 0xd6, 0xf7, 0x0c, 0x73, 0x15, 0xe6, 0x42, 0xc5, 0x5b, 0xc3, 0x50, 0xa4,
	0xbd, 0xec, 0xb0, 0x61, 0xa9, 0xf9, 0x49, 0xbc, 0x96, 0xc8, 0x0e, 0x22, 0x0b, 0x85, 0x51, 0xe0,
	0x34, 0xb1, 0x2e, 0x73, 0x94, 0x5e, 0xf6, 0x56, 0xc0, 0x02, 0x8f, 0x5d, 0xe8, 0x7f, 0xdd, 0x77,
	0x51, 0x73, 0xdd, 0xd7, 0x78, 0x0e, 0xaa, 0x91, 0xdd, 0x0e, 0x09, 0x7b, 0x17, 0x1d, 0xd1, 0xb6,
	0xed, 0x76, 0x68, 0x91, 0xa4, 0xd8, 0x4b, 0xea, 0xf8, 0x78, 0xee, 0x41, 0xfc, 0x48, 0x15, 0x8e,
	0xc5, 0x21, 0xe4, 0x46, 0x74, 0xfa, 0xd5, 0x97, 0xff, 0x28, 0x38, 0xfd, 0x66, 0xb4, 0x6c, 0x7c,
	0x4e, 0xbf, 0xbc, 0x82, 0x31, 0x3b, 0xfd, 0xf6, 0x6f, 0x77, 0x31, 0xec, 0xfe, 0x87, 0x2a, 0x30,
	0xc3, 0xeb, 0x25, 0x01, 0x5c, 0xc6, 0x7e, 0x67, 0x4e, 0x89, 0x3d, 0x55, 0x49, 0xc7, 0x9e, 0x1a,
	0x35, 0x1e, 0xc0, 0x0a, 0x00, 0xfe, 0x6d, 0x6d, 0x12, 0xaf, 0x07, 0xaa, 0xcb, 0x1b, 0x09, 0xd7,
	0xe1, 0x49, 0x96, 0x90, 0x4b, 0x74, 0xae, 0xa8, 0xcb, 0xce, 0x15, 0x89, 0xa3, 0x44, 0x23, 0xd3,
	0x51, 0x02, 0xd2, 0x8f, 0x7d, 0x85, 0xce, 0x7b, 0x88, 0xb9, 0xb1, 0x91, 0xff, 0x8a, 0xdb, 0xc3,
	0x74, 0xca, 0xed, 0x81, 0x2f, 0xe5, 0x19, 0xc1, 0xe1, 0xf1, 0x17, 0xab, 0xf0, 0xb4, 0x34, 0x0b,
	0x39, 0x8b, 0xf2, 0x96, 0xbc, 0x28, 0x2f, 0xa5, 0x48, 0x48, 0x83, 0xe4, 0x43, 0x5b, 0x99, 0xb7,
	0xd5, 0x95, 0x79, 0x71, 0xa0, 0xe6, 0xa5, 0x96, 0xe7, 0xf7, 0xe7, 0x2c, 0xcf, 0x57, 0xe4, 0xe5,
	0xf9, 0x9c, 0xbe, 0x96, 0x8c, 0x35, 0xfa, 0xad, 0x9c, 0x35, 0x7a, 0x4b, 0x5a, 0xa3, 0x2f, 0x0d,
	0xd3, 0x83, 0x62, 0x16, 0xea, 0x4f, 0x54, 0xe0, 0x88, 0x54, 0xf9, 0x70, 0x11, 0x0c, 0xa5, 0xa2,
	0x87, 0x16, 0xc1, 0x30, 0xd5, 0x81, 0xf1, 0x45, 0x30, 0xcc, 0x44, 0x5d, 0x50, 0x04, 0xc3, 0x3a,
	0x2c, 0x48, 0x55, 0xde, 0xb7, 0x3d, 0xbb, 0x8d, 0x02, 0xe3, 0xcb, 0x70, 0xd4, 0xee, 0x45, 0xfe,
	0x5d, 0x94, 0x84, 0x48, 0x75, 0x62, 0x6f, 0x85, 0x65, 0x7d, 0x73, 0x59, 0xd9, 0x55, 0xa5, 0xdc,
	0x81, 0xa5, 0x43, 0x85, 0x75, 0xcc, 0x1d, 0x3b, 0x8c, 0x43, 0xc0, 0x0a, 0x8f, 0x70, 0xa4, 0xe0,
	0x43, 0xaa, 0xde, 0x5b, 0x30, 0xdb, 0xec, 0x05, 0x01, 0xf2, 0xa2, 0x55, 0x16, 0xf1, 0xb4, 0xaa,
	0xbc, 0x42, 0xa6, 0x6d, 0x36, 0xcd, 0xbb, 0xd5, 0xeb, 0x74, 0xec, 0xe0, 0xc0, 0x52, 0x50, 0x0c,
	0xe0, 0xe1, 0xf7, 0x26, 0x18, 0xad, 0x94, 0xa7, 0x38, 0xa3, 0x9d, 0xa7, 0xfb, 0xb8, 0x9e, 0x5b,
	0x9a, 0x62, 0x58, 0x9b, 0xdd, 0xb5, 0x1d, 0xd7, 0xdf, 0xe7, 0x0d, 0x63, 0x1a, 0xbb, 0x02, 0x1d,
	0x20, 0x24, 0x22, 0x5d, 0x5b, 0x0d, 0x61, 0xab, 0x39, 0xe3, 0x88, 0xdd, 0x67, 0xd2, 0x40, 0x06,
	0xe2, 0xd9, 0xe1, 0x80, 0x6d, 0xd4, 0xe9, 0xba, 0x76, 0xc4, 0x75, 0xf4, 0x14, 0x5c, 0x1b, 0x12,
	0x91, 0x0b, 0xba, 0x99, 0x4c, 0x41, 0x37, 0x3b, 0x90, 0xa0, 0x7b, 0x17, 0x66, 0xbb, 0x88, 0x44,
	0x61, 0xe2, 0x73, 0x39, 0xa7, 0x84, 0x6b, 0xd6, 0xcd, 0xe5, 0xa6, 0x54, 0x24, 0x9e, 0x52, 0x19,
	0xd3, 0x48, 0x3e, 0x85, 0x24, 0x80, 0xa2, 0xa8, 0x5f, 0xc7, 0x77, 0x9c, 0x25, 0x28, 0x9e, 0x17,
	0xea, 0x07, 0xb8, 0xe9, 0xfb, 0x6e, 0xb8, 0x74, 0x94, 0x58, 0xa4, 0x44, 0x50, 0xe2, 0x57, 0x4d,
	0x2e, 0xba, 0x2d, 0x30, 0x63, 0x75, 0x0c, 0x31, 0xee, 0xc3, 0x74, 0xaf, 0xdb, 0xb2, 0x23, 0xc4,
	0x08, 0x69, 0x51, 0x89, 0x3d, 0xa3, 0xeb, 0xf7, 0xdb, 0x42, 0x01, 0x4b, 0x2a, 0x6e, 0xbc, 0x01,
	0xf5, 0x7d, 0xea, 0x5c, 0x8a, 0x35, 0x74, 0x39, 0xfa, 0x88, 0x0e, 0x15, 0xf3, 0x44, 0xb5, 0xe2,
	0x52, 0x3a, 0xe5, 0xdd, 0xfc, 0x4f, 0x65, 0x30, 0xf3, 0x17, 0x13, 0x79, 0x30, 0x67, 0xc7, 0xf6,
	0x5a, 0x3e, 0x61, 0xa7, 0xcc, 0x2b, 0x38, 0x81, 0xe0, 0x11, 0xa7, 0xcb, 0x98, 0x79, 0x35, 0xd5,
	0xac, 0xf8, 0xdb, 0x78, 0x19, 0x8e, 0xf1, 0xff, 0x9f, 0x77, 0xa2, 0x3d, 0xbf, 0x17, 0x59, 0x28,
	0x0a, 0x30, 0x33, 0xa2, 0xae, 0xc2, 0x19, 0xa9, 0xe4, 0x11, 0x16, 0xe4, 0xa2, 0x88, 0x47, 0x37,
	0xad, 0x59, 0xf1, 0x37, 0xa1, 0x4e, 0xdc, 0x15, 0x1a, 0x09, 0x99, 0xfc, 0xc7, 0x6d, 0x0c, 0x50,
	0xdc, 0x0a, 0x1a, 0xf0, 0x58, 0x80, 0xd0, 0xf4, 0xdd, 0x00, 0x85, 0x7b, 0x38, 0x7d, 0x92, 0xa7,
	0x73, 0x08, 0x4d, 0x27, 0x3b, 0x2a, 0x9c, 0x5e, 0xe7, 0xe9, 0x1c, 0x62, 0x9c, 0x84, 0xc6, 0x3e,
	0x0a, 0x9c, 0xdd, 0x03, 0x9c, 0x4c, 0xcf, 0x3c, 0x12, 0x80, 0xf9, 0x1f, 0xaa, 0x19, 0x03, 0xd9,
	0x5f, 0x83, 0xba, 0x27, 0x0b, 0xca, 0x97, 0xfb, 0x73, 0xb8, 0xc3, 0x51, 0xa4, 0xee, 0xab, 0x82,
	0xf4, 0xca, 0x30, 0xad, 0x4c, 0x49, 0xd6, 0x9d, 0x1c, 0x7d, 0xea, 0x35, 0x59, 0x9f, 0x3a, 0xdf,
	0xb7, 0xb2, 0x0c, 0xb5, 0xea, 0x37, 0x72, 0xa4, 0xf7, 0x3d, 0x49, 0x7a, 0x5f, 0x1f, 0xa1, 0x3f,
	0xc5, 0x88, 0xf3, 0x10, 0x3e, 0x31, 0x90, 0x44, 0xce, 0xf7, 0x66, 0xa0, 0x21, 0xe2, 0xc8, 0xeb,
	0x49, 0xeb, 0xc8, 0xb5, 0x0f, 0xb6, 0x50, 0x93, 0xad, 0x4c, 0x15, 0x6c, 0xfe, 0x4a, 0x05, 0x96,
	0x74, 0xb5, 0x6a, 0x09, 0xf6, 0x8a, 0x4c, 0xb0, 0xcf, 0xf4, 0x1d, 0xba, 0x43, 0x8b, 0xeb, 0x95,
	0xd5, 0x9d, 0x34, 0x35, 0x8e, 0x1a, 0x7d, 0x2b, 0xaf, 0x86, 0x62, 0xe8, 0xe3, 0x97, 0x4a, 0xf0,
	0xfc, 0xc0, 0xf2, 0x52, 0xe2, 0xca, 0x25, 0x85, 0x2b, 0x8b, 0xdc, 0xb5, 0xac, 0x70, 0x57, 0x99,
	0x93, 0x56, 0xf4, 0x9c, 0x34, 0xe6, 0x94, 0x55, 0x95, 0x53, 0x9a, 0xdf, 0x2b, 0xc1, 0xe9, 0x3c,
	0xe9, 0x66, 0x5c, 0x81, 0x7a, 0xc7, 0x7e, 0xbc, 0xd5, 0x0b, 0xd8, 0x1b, 0x22, 0x92, 0x0f, 0xad,
	0x74, 0x27, 0xc5, 0x8a, 0x33, 0x1a, 0xaf, 0xd3, 0xd8, 0xf2, 0x9e, 0xbd, 0x6f, 0x3b, 0xae, 0xbd,
	0xe3, 0x72, 0x26, 0x91, 0x59, 0x54, 0xc9, 0x4e, 0xac, 0x96, 0x8e, 0x67, 0x21, 0xbb, 0x45, 0x56,
	0x04, 0xed, 0x9b, 0x08, 0xc2, 0x74, 0xd9, 0x71, 0x3c, 0xa7, 0x63, 0xbb, 0x4c, 0x6f, 0x63, 0x74,
	0x29, 0x01, 0x63, 0x8f, 0xb3, 0x9a, 0xe0, 0xf7, 0xf9, 0x53, 0x25, 0x65, 0xf7, 0x2c, 0x4b, 0x62,
	0xad, 0x4a, 0x56, 0xca, 0x56, 0xc9, 0x52, 0xaf, 0xcc, 0xbe, 0x22, 0x29, 0x1c, 0x95, 0xfe, 0x1d,
	0x17, 0xb2, 0x9a, 0xf7, 0xe0, 0xa2, 0x96, 0x77, 0xae, 0x52, 0x01, 0x1e, 0x9b, 0x91, 0xb8, 0x4b,
	0x2e, 0x79, 0x13, 0x8e, 0xc1, 0xd8, 0xab, 0x5d, 0x09, 0xc0, 0x7c, 0x13, 0x5e, 0xd0, 0x62, 0xa3,
	0x6f, 0xe7, 0x0d, 0x89, 0xec, 0x17, 0x4a, 0xf0, 0x92, 0x16, 0x1b, 0x5e, 0x4b, 0xf4, 0x7f, 0x4b,
	0x40, 0x19, 0x76, 0x7d, 0x2f, 0x44, 0xc6, 0x3a, 0xcc, 0x77, 0x94, 0xb4, 0xd4, 0x2b, 0xc7, 0x4a,
	0x61, 0x2b, 0x55, 0x22, 0xcd, 0x81, 0xca, 0x1a, 0x0e, 0x64, 0xde, 0x87, 0x17, 0xb5, 0x0d, 0xb4,
	0xe8, 0x7a, 0x18, 0xb6, 0xc3, 0xef, 0xc1, 0x85, 0x0c, 0x74, 0xa1, 0xf3, 0x1e, 0x5a, 0x6d, 0xed,
	0xe3, 0x94, 0x16, 0xc7, 0x75, 0x11, 0x8e, 0x78, 0xfe, 0x1a, 0xdb, 0x20, 0x71, 0xb5, 0x89, 0x9e,
	0x7e, 0xa4, 0x13, 0x14, 0x8d, 0xb4, 0xac, 0x6a, 0xa4, 0xe6, 0xff, 0x2a, 0xc3, 0xb3, 0x39, 0x42,
	0xd4, 0xd8, 0x82, 0x45, 0x47, 0x97, 0x85, 0x8d, 0x6f, 0x0e, 0xbf, 0xd7, 0x97, 0x35, 0xbe, 0x4f,
	0xf5, 0x79, 0xbf, 0x3c, 0xa8, 0x50, 0x4f, 0x33, 0xec, 0x7f, 0x9e, 0xc3, 0xb0, 0x37, 0x24, 0x86,
	0x7d, 0x6d, 0xd8, 0x8a, 0x8a, 0xe1, 0xdb, 0x7f, 0xaf, 0x94, 0x31, 0xed, 0x5b, 0x28, 0x12, 0x84,
	0x3b, 0x9f, 0xf6, 0xc2, 0x37, 0xef, 0xe6, 0x97, 0xe0, 0x52, 0x56, 0x7b, 0x36, 0x14, 0x5e, 0x24,
	0x38, 0xea, 0x0f, 0xca, 0xbe, 0xcc, 0x6e, 0x76, 0x77, 0xb7, 0x93, 0x2d, 0x14, 0xc7, 0xac, 0xec,
	0x81, 0x4b, 0xe9, 0x3d, 0xb0, 0xb2, 0x1b, 0x2b, 0xa7, 0x76, 0x63, 0xe6, 0x97, 0xe0, 0x39, 0xd9,
	0xde, 0xb6, 0xda, 0x6a, 0xa5, 0x96, 0xe6, 0x75, 0x75, 0x69, 0x4a, 0x67, 0xa5, 0x9c, 0x53, 0x70,
	0x97, 0x51, 0x71, 0xd9, 0xfe, 0x8b, 0x8a, 0xc2, 0xdb, 0x09, 0x83, 0x4a, 0x78, 0x89, 0xaa, 0x26,
	0x5d, 0x93, 0xd5, 0xa4, 0x67, 0x53, 0xb5, 0xe0, 0xcd, 0x4e, 0xbc, 0x63, 0x0e, 0x3f, 0x1a, 0x96,
	0x50, 0xb9, 0x4f, 0xe9, 0xa5, 0x37, 0x16, 0x63, 0xa5, 0xbe, 0x92, 0x62, 0x96, 0xdd, 0xf7, 0x29,
	0x7b, 0x32, 0xb9, 0x6e, 0x4e, 0x15, 0x82, 0x41, 0x45, 0xf4, 0xf4, 0x95, 0x81, 0xe6, 0x97, 0xe1,
	0xac, 0x8c, 0xcb, 0x42, 0x1d, 0x7f, 0x1f, 0x8d, 0x91, 0xc6, 0x7e, 0xaf, 0xac, 0xe8, 0xe1, 0x22,
	0x5f, 0x7e, 0x0d, 0x66, 0x25, 0xde, 0xca, 0x71, 0x67, 0x99, 0x56, 0x95, 0xdc, 0xa2, 0xb2, 0x5c,
	0xee, 0xa7, 0x2c, 0xf7, 0xe5, 0xbd, 0x63, 0x51, 0x96, 0x3f, 0x34, 0xa6, 0xfb, 0x9e, 0x3a, 0xfb,
	0x5b, 0xf4, 0x1d, 0x21, 0xb6, 0xe4, 0x06, 0x66, 0x3e, 0xb2, 0xd9, 0xab, 0x3c, 0x88, 0xd9, 0x8b,
	0xdc, 0x69, 0xe7, 0x95, 0x0f, 0x77, 0xa7, 0x3d, 0x26, 0x91, 0xc3, 0xba, 0xd3, 0x2e, 0x36, 0x7b,
	0x7c, 0x77, 0xda, 0x75, 0x58, 0x8b, 0x99, 0xf6, 0xf7, 0x2b, 0xb0, 0x28, 0xd6, 0x46, 0xd6, 0x5a,
	0x80, 0x82, 0x34, 0x93, 0x3e, 0x2f, 0xcf, 0x81, 0x21, 0x04, 0xe6, 0xe6, 0xcb, 0xf3, 0xb0, 0x1e,
	0xba, 0xd7, 0x76, 0x60, 0x7c, 0x71, 0x77, 0xfb, 0xa2, 0x2f, 0x66, 0x5a, 0xda, 0x70, 0x94, 0xd7,
	0x3a, 0x5a, 0x58, 0xb6, 0x73, 0x30, 0x4b, 0x05, 0xfe, 0x86, 0x7c, 0xe5, 0x42, 0x81, 0x9a, 0xbf,
	0x5a, 0x03, 0x83, 0x7f, 0x6c, 0x06, 0x7e, 0x17, 0x05, 0x11, 0x56, 0x8e, 0x07, 0xf4, 0x21, 0xca,
	0x39, 0x45, 0x8e, 0x7d, 0x7e, 0x2a, 0xa3, 0xfa, 0xfc, 0x54, 0x47, 0xf1, 0xf9, 0x79, 0x3d, 0xf6,
	0xd1, 0xa9, 0x65, 0x9c, 0x37, 0x25, 0x3d, 0x1d, 0xc4, 0x5b, 0x67, 0xa2, 0xbf, 0xb7, 0xce, 0xe4,
	0x28, 0xde, 0x3a, 0x75, 0xad, 0xb7, 0x8e, 0xd6, 0x33, 0xa7, 0xf1, 0xc4, 0x9e, 0x39, 0x30, 0x98,
	0x67, 0x8e, 0xc6, 0xfb, 0x66, 0x6a, 0x48, 0xef, 0x1b, 0xee, 0x15, 0x33, 0x9d, 0xe9, 0x15, 0xf3,
	0x24, 0x1e, 0x30, 0x97, 0x92, 0xd3, 0xd4, 0xe4, 0xaa, 0x92, 0x78, 0xad, 0xa8, 0x24, 0x5f, 0x2b,
	0x32, 0xff, 0xa2, 0x04, 0xf3, 0xaa, 0x86, 0x3e, 0x76, 0x5f, 0x09, 0xca, 0x28, 0x2b, 0x29, 0x4f,
	0x88, 0xaa, 0xe6, 0x80, 0xa8, 0x26, 0x58, 0x28, 0x3e, 0x05, 0xd0, 0x8d, 0xe9, 0x30, 0x75, 0x72,
	0x96, 0x26, 0x55, 0x4b, 0xc8, 0x2e, 0x71, 0xca, 0x49, 0xe5, 0xdd, 0xbc, 0xaf, 0x55, 0x92, 0x63,
	0x4e, 0xde, 0xeb, 0xe1, 0x1c, 0xf9, 0x53, 0xbb, 0x9a, 0xc3, 0x72, 0xe4, 0xd7, 0x75, 0x63, 0x7c,
	0x8e, 0xfc, 0xfd, 0xb0, 0x17, 0xf4, 0x20, 0x40, 0x29, 0xf1, 0xe1, 0x92, 0x37, 0x35, 0xfd, 0xe8,
	0x78, 0x14, 0xa5, 0x4a, 0x70, 0x6f, 0xab, 0x88, 0xee, 0x6d, 0x24, 0x6c, 0x9d, 0xc6, 0x17, 0xca,
	0xb8, 0x94, 0x56, 0xc5, 0x35, 0x7a, 0x56, 0x92, 0xa7, 0x5f, 0xd8, 0x3a, 0x0d, 0xfe, 0xf1, 0xdd,
	0x61, 0xea, 0x83, 0xbc, 0x98, 0x49, 0xfb, 0xcf, 0x25, 0x78, 0x2a, 0xa9, 0xf4, 0x49, 0xae, 0xe4,
	0xdf, 0x56, 0xae, 0xe4, 0x2f, 0x6b, 0x3a, 0x55, 0xf0, 0xad, 0x7c, 0x1f, 0xce, 0x88, 0x75, 0xdd,
	0xa7, 0x42, 0x8d, 0x3f, 0xae, 0x12, 0xf7, 0x4a, 0x2b, 0x8d, 0x4b, 0x23, 0x48, 0x63, 0xf3, 0x26,
	0x9c, 0xd2, 0x54, 0x48, 0x62, 0x20, 0x26, 0x9b, 0x0a, 0x51, 0xdc, 0x96, 0x52, 0xe2, 0xd6, 0x7c,
	0x33, 0xb1, 0x57, 0x10, 0x1c, 0x92, 0xd4, 0xe4, 0x68, 0xd2, 0x42, 0xb6, 0xa4, 0x13, 0xb2, 0xe6,
	0x67, 0x65, 0x64, 0x8a, 0x48, 0x63, 0xc8, 0x16, 0xa0, 0x86, 0x3a, 0xb6, 0xc3, 0xe3, 0x72, 0xd1,
	0x0f, 0xb2, 0xa6, 0x30, 0xd1, 0x71, 0xa3, 0x0a, 0xfb, 0x32, 0x1f, 0xc2, 0xb9, 0x04, 0x65, 0x64,
	0x07, 0x11, 0x5e, 0xdb, 0xf2, 0x8d, 0x01, 0x86, 0x77, 0x55, 0x0e, 0x60, 0xf8, 0x42, 0xff, 0x7b,
	0x06, 0xd2, 0x5b, 0x01, 0x4c, 0x51, 0x32, 0xbf, 0x31, 0x89, 0x77, 0x4b, 0x11, 0x0a, 0xd8, 0x0b,
	0x95, 0x58, 0x59, 0xb3, 0x5b, 0x1d, 0xc7, 0xbb, 0x25, 0xbd, 0xab, 0x26, 0xc1, 0x8c, 0x75, 0x98,
	0x6e, 0x3a, 0x41, 0xb3, 0xe7, 0x44, 0x1b, 0xde, 0xae, 0xcf, 0xe9, 0xef, 0xb4, 0x40, 0x7f, 0x09,
	0xc2, 0xb5, 0x24, 0xa3, 0x25, 0x95, 0x32, 0xae, 0xc3, 0xf1, 0xe4, 0x59, 0xcc, 0xd5, 0x5e, 0xb4,
	0xe7, 0x07, 0xfc, 0xd9, 0x5a, 0xba, 0xc6, 0xb2, 0x92, 0x87, 0x0c, 0x30, 0x85, 0xd5, 0x4f, 0x36,
	0x1e, 0x0f, 0x12, 0xb1, 0x29, 0xc1, 0x06, 0x78, 0x5e, 0xf3, 0xb3, 0x30, 0x87, 0x1e, 0x77, 0xc9,
	0xf8, 0xbd, 0xd5, 0x8b, 0xec, 0x76, 0x7c, 0x77, 0xe8, 0x93, 0xda, 0x6e, 0xd3, 0x3c, 0x0f, 0xfc,
	0xc8, 0xd9, 0x75, 0xe8, 0x4d, 0x27, 0x4b, 0x2d, 0x8f, 0x15, 0xf0, 0xb6, 0xef, 0xb7, 0x5d, 0xb4,
	0x11, 0xdf, 0x56, 0xa6, 0x9a, 0x9c, 0x0a, 0xc6, 0x1d, 0xa6, 0xa0, 0x58, 0x53, 0xd9, 0xe0, 0x7e,
	0x29, 0xe9, 0x04, 0x26, 0x99, 0x21, 0x96, 0xcc, 0xd7, 0xe1, 0xb8, 0x23, 0x34, 0x8d, 0xea, 0xcb,
	0xf4, 0x9d, 0x92, 0x29, 0x42, 0x79, 0x59, 0xc9, 0xd4, 0xf0, 0x98, 0x24, 0x91, 0x15, 0x35, 0xcd,
	0x0d, 0x8f, 0x32, 0x3c, 0x16, 0xe7, 0x33, 0x82, 0x38, 0x27, 0x37, 0x8b, 0x3c, 0x12, 0x17, 0x94,
	0x39, 0x8d, 0xc7, 0xdf, 0x52, 0x60, 0xc6, 0x39, 0x25, 0x30, 0x23, 0xd7, 0x70, 0xe6, 0x05, 0x0d,
	0xe7, 0x3c, 0xcc, 0x79, 0x7e, 0x73, 0xcd, 0xf7, 0x22, 0xbb, 0x19, 0xdd, 0x22, 0xcb, 0x89, 0x7a,
	0x98, 0xa8, 0x60, 0x3c, 0x5a, 0x58, 0xb5, 0x21, 0xa8, 0x6c, 0x97, 0xbd, 0x3f, 0x48, 0x7d, 0x4d,
	0xd2, 0x09, 0x58, 0xe5, 0xe8, 0x22, 0x14, 0x24, 0x73, 0x40, 0xaf, 0x01, 0xc9, 0x40, 0x63, 0x05,
	0x16, 0xba, 0x81, 0xbf, 0xef, 0x84, 0x8e, 0xef, 0x61, 0x31, 0xe1, 0x3d, 0x5c, 0x23, 0x2e, 0x2c,
	0xd4, 0xf9, 0x44, 0x9b, 0x66, 0x2c, 0x83, 0xc1, 0xae, 0x5f, 0x8a, 0x25, 0x16, 0xe9, 0x9d, 0xc9,
	0x74, 0x8a, 0xa4, 0xd6, 0x1c, 0x53, 0xd4, 0xb0, 0xdf, 0x26, 0xfe, 0xda, 0xba, 0x59, 0xc2, 0x4d,
	0x6b, 0xba, 0x7e, 0xaf, 0x65, 0xf9, 0xbd, 0x48, 0xec, 0x07, 0x65, 0x36, 0xda, 0xb4, 0x21, 0x6f,
	0xf3, 0xe1, 0x95, 0xca, 0x56, 0x8b, 0x5a, 0x09, 0x5f, 0xa9, 0xfa, 0xe4, 0xc1, 0x22, 0x55, 0xa6,
	0x49, 0xbb, 0xd6, 0x9f, 0xb4, 0x93, 0x0b, 0xb3, 0x26, 0x4c, 0x8b, 0x84, 0xc8, 0xb4, 0x57, 0x09,
	0x36, 0x70, 0x20, 0x0e, 0x2d, 0xd9, 0x40, 0x16, 0xd9, 0xb4, 0xe0, 0x78, 0x37, 0x70, 0xf6, 0xc9,
	0x31, 0x54, 0x52, 0x19, 0xe6, 0x6c, 0x2c, 0x46, 0xc7, 0x05, 0x2d, 0x5f, 0x48, 0xe6, 0x6d, 0x93,
	0x97, 0xde, 0xf5, 0xad, 0x2c, 0x54, 0x82, 0x9f, 0xd5, 0xb4, 0xe4, 0x67, 0x85, 0xe1, 0x64, 0xa8,
	0xd9, 0x72, 0x63, 0x5f, 0x12, 0x09, 0xcd, 0x2a, 0x24, 0xf4, 0x7b, 0x55, 0x38, 0xab, 0x6f, 0x4a,
	0x8e, 0xa7, 0xcc, 0x03, 0x59, 0xb3, 0xbf, 0x9e, 0xd3, 0xb1, 0x43, 0xf2, 0x95, 0x79, 0x4b, 0x55,
	0xfc, 0xaf, 0x0d, 0xd7, 0xce, 0x94, 0x4a, 0xd9, 0xca, 0xf1, 0x96, 0x79, 0x43, 0xf6, 0x96, 0xc9,
	0x9b, 0xef, 0x0c, 0x7f, 0x99, 0x7f, 0x9d, 0xa3, 0xb8, 0x3e, 0x90, 0x14, 0xd7, 0x1b, 0x23, 0xf5,
	0xa9, 0x18, 0x4d, 0xf6, 0xd7, 0x2b, 0x70, 0x42, 0xdf, 0x0a, 0x2d, 0x15, 0xf5, 0x39, 0x97, 0xd1,
	0xe1, 0x28, 0x96, 0x58, 0x6e, 0xa9, 0xc4, 0xf2, 0x42, 0x4e, 0x73, 0xf4, 0x24, 0xf2, 0x6b, 0x39,
	0x93, 0xb7, 0x2e, 0x4d, 0xde, 0xe5, 0x21, 0xea, 0x28, 0x66, 0xca, 0x5e, 0xc7, 0xda, 0x6a, 0x0e,
	0x33, 0xc2, 0xe3, 0x16, 0xd9, 0xed, 0xeb, 0x97, 0x57, 0x5e, 0xfa, 0x0a, 0xc1, 0x38, 0x63, 0xc5,
	0xdf, 0xe6, 0x0f, 0x55, 0xb2, 0x30, 0x88, 0xbb, 0xbf, 0x2f, 0x64, 0x2b, 0x1c, 0xa5, 0xc1, 0x26,
	0x3f, 0x53, 0x23, 0xb9, 0xa7, 0xee, 0x13, 0x57, 0x06, 0x5f, 0x76, 0xe9, 0xf9, 0xfb, 0x97, 0x39,
	0xf3, 0xf7, 0xa6, 0x34, 0x7f, 0xaf, 0x0c, 0x5f, 0x55, 0x31, 0xd3, 0xf8, 0xd3, 0x25, 0x38, 0x9e,
	0xa1, 0x63, 0x93, 0x70, 0x18, 0x4c, 0x18, 0xaf, 0xa3, 0x8e, 0x1d, 0x34, 0x37, 0xf8, 0x22, 0x4c,
	0xc1, 0x13, 0x05, 0x94, 0x23, 0xe0, 0xcf, 0x73, 0xa9, 0x60, 0xbc, 0x1d, 0xa2, 0xa0, 0x18, 0x27,
	0x0b, 0xfd, 0x2a, 0x43, 0xcd, 0x1f, 0xad, 0xc0, 0xbc, 0xd8, 0x32, 0x2d, 0x27, 0x78, 0x41, 0xe6,
	0x04, 0x8b, 0xda, 0x61, 0x2d, 0x76, 0xfd, 0x7f, 0x4a, 0x5d, 0xff, 0xcf, 0x69, 0x1b, 0xa1, 0xa7,
	0x9a, 0x5f, 0xca, 0xa1, 0x9a, 0x1b, 0x12, 0xd5, 0x9c, 0xcb, 0xc5, 0x5c, 0x0c, 0x91, 0xfc, 0x5c,
	0x15, 0x16, 0xa4, 0x1a, 0xb9, 0x72, 0xbd, 0x04, 0x93, 0xb6, 0xa4, 0x22, 0xf2, 0x4f, 0x12, 0x0f,
	0x82, 0xfa, 0x6b, 0x39, 0xae, 0x13, 0x91, 0x50, 0xed, 0xfc, 0x5e, 0x81, 0x0a, 0x27, 0x1d, 0x77,
	0xa2, 0x03, 0x3e, 0x2f, 0xf8, 0xbf, 0x71, 0x92, 0x3c, 0xf6, 0x1b, 0x39, 0x5e, 0xf2, 0x56, 0x5b,
	0x02, 0xd0, 0xeb, 0x9c, 0xb5, 0x01, 0x4d, 0xa5, 0x13, 0xda, 0xe0, 0x2b, 0xbb, 0x76, 0x93, 0xb4,
	0x68, 0x13, 0xab, 0xdf, 0x2d, 0x14, 0x30, 0xfd, 0x2f, 0x05, 0x37, 0x5e, 0x83, 0x13, 0x2a, 0xec,
	0x36, 0xfb, 0xde, 0xe0, 0x9a, 0x61, 0x9f, 0x1c, 0xa9, 0x9b, 0x00, 0xba, 0x30, 0x0d, 0xba, 0x97,
	0xcc, 0x2e, 0xc3, 0x51, 0xbc, 0x8f, 0x70, 0xbc, 0x76, 0x6b, 0x47, 0xa8, 0x90, 0x2a, 0x73, 0xba,
	0x24, 0x63, 0x03, 0xa6, 0xa8, 0x8e, 0x47, 0xb7, 0xd6, 0x33, 0x7d, 0xf6, 0x98, 0x7c, 0x46, 0xad,
	0x38, 0xbf, 0x25, 0x96, 0xed, 0xab, 0x0c, 0x52, 0xcf, 0xd3, 0x34, 0xae, 0x61, 0x3d, 0x4f, 0x35,
	0xad, 0x39, 0x3c, 0xcf, 0x53, 0x7d, 0x77, 0xc6, 0x79, 0x98, 0xde, 0xbf, 0x86, 0x82, 0xa2, 0x1e,
	0x95, 0xe0, 0x54, 0xff, 0x69, 0xc7, 0xe3, 0xca, 0x8d, 0x0b, 0x56, 0x14, 0xdd, 0xe7, 0x0b, 0x5b,
	0x06, 0x12, 0xe3, 0x22, 0x2b, 0xbb, 0x19, 0xa0, 0x10, 0x25, 0x07, 0x79, 0x29, 0xb8, 0xb0, 0xf1,
	0xa8, 0x48, 0x1b, 0x8f, 0x93, 0xd0, 0xa0, 0xff, 0xde, 0x44, 0x07, 0x7c, 0x89, 0xc7, 0x00, 0xf3,
	0xef, 0x94, 0xe5, 0xa6, 0xa6, 0xad, 0x20, 0x84, 0xc7, 0xec, 0xee, 0x92, 0x56, 0x31, 0xf1, 0xc2,
	0x5d, 0xf5, 0x52, 0xf0, 0x01, 0x8e, 0x4b, 0x96, 0x60, 0x92, 0x3d, 0x2c, 0xcd, 0x47, 0x99, 0x7d,
	0x12, 0x5f, 0xc0, 0x30, 0xec, 0x51, 0x2b, 0x20, 0x6b, 0x68, 0x0c, 0xd0, 0x1e, 0xa1, 0x24, 0xe1,
	0x27, 0x26, 0xc4, 0xf0, 0x13, 0x18, 0x53, 0xfc, 0xb6, 0x33, 0x0f, 0x37, 0x1e, 0x03, 0x92, 0xf7,
	0x27, 0xeb, 0xe2, 0xfb, 0x93, 0x21, 0x4c, 0xde, 0xa3, 0x21, 0x54, 0x48, 0x7c, 0x8c, 0x3d, 0x3b,
	0x68, 0xa3, 0xf0, 0xed, 0x10, 0xdd, 0x46, 0x88, 0x59, 0xd4, 0x64, 0x60, 0xbc, 0x5a, 0xca, 0x1a,
	0x86, 0x52, 0xc9, 0x88, 0x16, 0x59, 0x55, 0xd6, 0xf4, 0xef, 0x97, 0xa0, 0x71, 0xcf, 0x6f, 0x53,
	0xeb, 0xa9, 0xb1, 0x06, 0x40, 0xb6, 0xfe, 0xab, 0xbd, 0x96, 0x13, 0x31, 0x3f, 0xdf, 0x24, 0x70,
	0x70, 0x9c, 0x6f, 0x2d, 0xce, 0xf3, 0x16, 0x7d, 0x63, 0xd1, 0x12, 0x8a, 0x19, 0x37, 0x60, 0x92,
	0x58, 0x32, 0x51, 0x90, 0x7a, 0xfd, 0x24, 0xc1, 0x40, 0x33, 0xf0, 0xe2, 0xbc, 0x00, 0x6e, 0x00,
	0x5e, 0x09, 0xab, 0xcd, 0x26, 0x37, 0x14, 0x68, 0x1b, 0xb0, 0x1e, 0xe7, 0x89, 0x1b, 0x90, 0x14,
	0x33, 0x3f, 0x28, 0xc1, 0x89, 0xec, 0xb6, 0x1a, 0xbb, 0xf0, 0xb4, 0x2d, 0x9a, 0x06, 0xef, 0xf9,
	0xed, 0xb6, 0xe3, 0xb5, 0x59, 0x32, 0xeb, 0x75, 0x72, 0x94, 0xb0, 0x9a, 0x9d, 0xd7, 0xea, 0x87,
	0x08, 0xd3, 0x99, 0xeb, 0xb7, 0x85, 0x8b, 0x76, 0xfc, 0xd3, 0xbc, 0x03, 0xc7, 0x33, 0x46, 0x82,
	0x06, 0xec, 0x47, 0x2e, 0xe7, 0xa4, 0xf4, 0x03, 0x93, 0x59, 0x07, 0x45, 0x81, 0xd3, 0xe4, 0xcf,
	0xaa, 0xd2, 0x2f, 0xf3, 0x65, 0xa1, 0xa3, 0xa9, 0x31, 0x61, 0x0d, 0xb8, 0x9f, 0x70, 0x2a, 0xfe,
	0x69, 0xfe, 0x51, 0x05, 0xa6, 0x04, 0x3b, 0xf8, 0x90, 0x27, 0x92, 0x37, 0x52, 0x8f, 0xb3, 0x8e,
	0x1c, 0xa8, 0x49, 0x13, 0x1f, 0xed, 0x24, 0x34, 0x88, 0x0d, 0x7f, 0xad, 0xdb, 0x0b, 0x99, 0xb7,
	0x7a, 0x02, 0x48, 0x3d, 0x83, 0x76, 0x1a, 0xa6, 0x9c, 0x70, 0x6b, 0xcf, 0x0e, 0x50, 0x6b, 0xad,
	0xdb, 0x23, 0xab, 0xb0, 0x6e, 0x89, 0x20, 0x6d, 0x7c, 0xb4, 0x97, 0xe1, 0x58, 0xc7, 0x7e, 0xec,
	0x74, 0x7a, 0x9d, 0x4d, 0x14, 0x84, 0x4e, 0x18, 0x21, 0x8f, 0xbc, 0xe4, 0x16, 0xb2, 0x8b, 0x44,
	0x19, 0xa9, 0xc6, 0x4d, 0x38, 0xa9, 0x4f, 0x61, 0x61, 0xa5, 0xa8, 0xb0, 0xef, 0x9b, 0x07, 0xaf,
	0xc6, 0x0e, 0xea, 0xf8, 0xc1, 0xc1, 0xfd, 0x1d, 0xa2, 0x0a, 0xd4, 0xac, 0xf8, 0x5b, 0xab, 0x0e,
	0xf4, 0x7b, 0xdc, 0x44, 0x77, 0x2b, 0xfc, 0xa7, 0xaa, 0xf0, 0x94, 0x30, 0xb7, 0x39, 0x76, 0x9a,
	0x35, 0x59, 0x4c, 0xbf, 0x28, 0x38, 0x64, 0x67, 0xa0, 0xf8, 0xd0, 0x8c, 0x33, 0xeb, 0xaa, 0xd8,
	0xbe, 0x30, 0x40, 0xe3, 0x52, 0x72, 0xfb, 0x0b, 0x39, 0x16, 0x99, 0x6b, 0xb2, 0x45, 0xe6, 0x59,
	0x5d, 0x1d, 0x19, 0x66, 0x98, 0x51, 0xa3, 0x7a, 0xe7, 0xb6, 0xbe, 0x18, 0x9d, 0xe0, 0x87, 0x2b,
	0x30, 0x27, 0x54, 0x3d, 0x5c, 0xc4, 0x5b, 0xf1, 0xd4, 0xec, 0xb0, 0x22, 0xde, 0x2a, 0x8d, 0x1f,
	0x5f, 0xc4, 0xdb, 0x0c, 0xc4, 0xc5, 0x4c, 0xc3, 0xef, 0x94, 0xe1, 0x98, 0x9e, 0xb6, 0x8c, 0xeb,
	0x30, 0x2d, 0x1c, 0x3a, 0x72, 0xc3, 0x87, 0x7e, 0x12, 0xa4, 0x9c, 0x62, 0x5c, 0x93, 0xb2, 0x12,
	0xd7, 0x44, 0x5f, 0x57, 0x7a, 0xf0, 0x46, 0x8d, 0x3f, 0xd2, 0x1f, 0x7f, 0x31, 0x63, 0xf8, 0x77,
	0xcb, 0x98, 0x94, 0xa5, 0x0b, 0x22, 0x44, 0x67, 0x12, 0xef, 0x90, 0xc7, 0x31, 0xc5, 0x44, 0x20,
	0x23, 0xf8, 0x72, 0x4c, 0xf0, 0xa2, 0xd3, 0x43, 0x45, 0x71, 0x7a, 0x38, 0x97, 0x38, 0xf1, 0x32,
	0xcb, 0x3e, 0xa5, 0x66, 0x05, 0x6a, 0xdc, 0x82, 0x29, 0xf6, 0xe6, 0x35, 0xea, 0x74, 0x23, 0x16,
	0x4c, 0xfc, 0x4c, 0xd6, 0xd5, 0x96, 0x7b, 0x49, 0x56, 0x4b, 0x2c, 0x67, 0xbc, 0x0a, 0x93, 0xec,
	0xf2, 0x2f, 0xa3, 0xfc, 0x67, 0xb3, 0x50, 0xf0, 0xcb, 0xc2, 0x3c, 0xbf, 0xf9, 0xe3, 0x65, 0x38,
	0x91, 0x5d, 0x8d, 0x71, 0x13, 0x26, 0x50, 0x10, 0xd0, 0x03, 0x74, 0x95, 0x91, 0x66, 0x15, 0x5a,
	0xbe, 0x45, 0x4a, 0x58, 0xac, 0xe4, 0x89, 0x6f, 0x96, 0x60, 0x82, 0x82, 0x8c, 0x0d, 0x01, 0x9d,
	0xec, 0x3a, 0x9e, 0x8b, 0x4e, 0xc5, 0x6a, 0xc5, 0x48, 0x75, 0x24, 0x27, 0x1e, 0xf7, 0x95, 0x95,
	0xe3, 0xbe, 0x4c, 0x62, 0x32, 0xdf, 0xc1, 0xeb, 0x4b, 0x37, 0x5e, 0x4f, 0x7a, 0xa5, 0xcb, 0xfc,
	0xc5, 0x12, 0xd4, 0xb9, 0x73, 0xdd, 0x00, 0x9e, 0xc8, 0x99, 0x0f, 0x81, 0x70, 0x1c, 0x54, 0x94,
	0xf6, 0xe1, 0xa7, 0x27, 0x2e, 0x41, 0x8d, 0xe4, 0x19, 0x78, 0x65, 0x5c, 0x81, 0x46, 0xec, 0x8d,
	0x13, 0xf7, 0xa1, 0xa4, 0x09, 0x03, 0x2b, 0xbc, 0x14, 0x60, 0xfe, 0x56, 0x05, 0x26, 0x1f, 0x24,
	0xaf, 0x05, 0x6d, 0x6c, 0xee, 0x5f, 0xa5, 0xaf, 0x05, 0xc5, 0xcf, 0x3d, 0x31, 0x80, 0x71, 0x15,
	0x16, 0xed, 0x5e, 0x44, 0xaf, 0x32, 0xa1, 0xad, 0x38, 0x3c, 0x4d, 0x48, 0xd0, 0xd5, 0x2d, 0x7d,
	0xe2, 0xd8, 0x43, 0xb9, 0x9d, 0x86, 0x29, 0x2c, 0x33, 0x1f, 0xd9, 0x07, 0xb8, 0x65, 0x3c, 0x38,
	0x84, 0x00, 0x1a, 0x39, 0x48, 0xee, 0x15, 0xa8, 0x33, 0x03, 0x0b, 0x77, 0x7b, 0x3c, 0xae, 0xba,
	0x3d, 0x6e, 0xd2, 0x74, 0x2b, 0xce, 0x68, 0xac, 0xc1, 0x4c, 0xe0, 0xf7, 0x22, 0xc7, 0x63, 0x9a,
	0x38, 0x73, 0x77, 0x7c, 0x46, 0x2d, 0x69, 0x89, 0x99, 0x2c, 0xb9, 0x4c, 0xdf, 0x40, 0xbb, 0xa7,
	0x61, 0x2a, 0x14, 0xc6, 0x7a, 0x9a, 0xde, 0xa7, 0x11, 0x40, 0xe6, 0xb7, 0xca, 0x30, 0xaf, 0xba,
	0x65, 0x1a, 0x9f, 0x82, 0x19, 0x9b, 0x6c, 0x08, 0x68, 0x15, 0x7c, 0xb9, 0x2e, 0x4a, 0xee, 0x33,
	0x3c, 0xd5, 0x92, 0xf3, 0x92, 0xc2, 0xae, 0x63, 0x87, 0x1b, 0x5d, 0xf6, 0x70, 0x9e, 0x6a, 0x78,
	0x5d, 0x15, 0x52, 0x2d, 0x39, 0xef, 0x00, 0xd1, 0x9b, 0x06, 0xf5, 0x51, 0x14, 0x22, 0x2f, 0x4d,
	0xa4, 0x9e, 0xb5, 0xe2, 0x6e, 0xa7, 0x9b, 0x7c, 0x8b, 0x1d, 0x03, 0x94, 0x78, 0x4a, 0x75, 0x35,
	0x9e, 0x92, 0xf9, 0xbd, 0x32, 0x4c, 0xb1, 0x01, 0xd3, 0x2a, 0x42, 0xe7, 0xe4, 0xb5, 0x3b, 0x9f,
	0x9a, 0xcb, 0x42, 0x95, 0xa0, 0x97, 0x55, 0x25, 0xe8, 0xa4, 0x5a, 0xbf, 0x5e, 0x86, 0x7f, 0x90,
	0x23, 0xc3, 0xaf, 0x49, 0x32, 0xfc, 0xb9, 0x7e, 0x48, 0x8b, 0x11, 0xdc, 0xbf, 0x5c, 0x82, 0x59,
	0x79, 0x1d, 0x11, 0xe3, 0x4e, 0xcc, 0x35, 0x88, 0x2f, 0x00, 0xbf, 0x33, 0x99, 0x82, 0x6b, 0xef,
	0xd9, 0x0a, 0x14, 0x52, 0x91, 0x29, 0x24, 0x36, 0xb3, 0x54, 0x05, 0x33, 0x0b, 0x89, 0x2a, 0x8a,
	0xff, 0xac, 0xa3, 0xc8, 0x76, 0x88, 0x8b, 0x36, 0x8d, 0x2a, 0x2a, 0xc0, 0xcc, 0xeb, 0xb0, 0xa0,
	0x5b, 0xb3, 0x24, 0x5e, 0x36, 0x05, 0x08, 0xbb, 0x6a, 0x11, 0x64, 0xfe, 0xff, 0xf0, 0x14, 0x2b,
	0x19, 0xae, 0xb6, 0x5a, 0x9c, 0x57, 0x24, 0x9e, 0x7a, 0x4f, 0xd4, 0xd5, 0xd3, 0x30, 0x85, 0x99,
	0xce, 0x03, 0xa9, 0xbb, 0x22, 0xc8, 0x5c, 0x81, 0x93, 0xbc, 0x7a, 0x7a, 0xe1, 0x49, 0x69, 0x81,
	0x46, 0x22, 0x98, 0xbf, 0x5e, 0x87, 0xc6, 0x5b, 0xdc, 0x57, 0x81, 0xf0, 0x6a, 0xd7, 0x41, 0x5e,
	0x14, 0x83, 0xe2, 0xc3, 0xa0, 0x74, 0xc2, 0xd8, 0x83, 0xa3, 0x0b, 0xb6, 0xb9, 0xaa, 0x6c, 0x9b,
	0x5b, 0x86, 0x1a, 0xd1, 0x19, 0x52, 0x6f, 0xb5, 0xc4, 0xcd, 0xa1, 0xba, 0x85, 0x45, 0xb3, 0x91,
	0x30, 0xeb, 0x51, 0xd4, 0x25, 0x30, 0x1e, 0x47, 0x91, 0x72, 0x90, 0x14, 0xdc, 0xb8, 0x0c, 0x47,
	0x63, 0x18, 0xd5, 0xe9, 0xd6, 0xf0, 0xf4, 0xd2, 0xa0, 0x23, 0xba, 0xa4, 0x54, 0x48, 0xe7, 0x53,
	0x00, 0x8e, 0x17, 0x22, 0x66, 0xf0, 0xa3, 0x66, 0x00, 0x01, 0x32, 0xb0, 0xed, 0xff, 0x2c, 0xcc,
	0xc4, 0x6e, 0x23, 0x82, 0xe7, 0x94, 0x0c, 0xa4, 0x6f, 0xa1, 0xfa, 0x6d, 0x72, 0x1c, 0x33, 0xc3,
	0xdf, 0x42, 0xa5, 0xdf, 0x82, 0x11, 0x76, 0x36, 0x33, 0xca, 0xce, 0x9c, 0xc2, 0x6e, 0x24, 0x6b,
	0xe5, 0xbc, 0x6a, 0xad, 0x4c, 0xfc, 0x78, 0x8f, 0xf4, 0x0f, 0x53, 0x69, 0xe8, 0xc2, 0x54, 0x92,
	0x93, 0x61, 0x72, 0xe3, 0x83, 0x07, 0x4b, 0x8e, 0xbf, 0x93, 0x1b, 0xd0, 0xa4, 0x55, 0x0b, 0xe2,
	0xd3, 0xfd, 0xdc, 0xbc, 0xd1, 0x0b, 0x51, 0xc0, 0xe2, 0x5f, 0x92, 0xff, 0xc6, 0x2b, 0x50, 0x67,
	0xdc, 0x8e, 0x07, 0xd6, 0x79, 0x5a, 0x43, 0x0a, 0x8c, 0x89, 0x85, 0x56, 0x9c, 0x59, 0x1b, 0x0c,
	0xf3, 0xfd, 0x12, 0xd4, 0xc8, 0xd4, 0x1a, 0xaf, 0x28, 0x3a, 0xed, 0xb3, 0x59, 0xf4, 0xf5, 0x21,
	0x68, 0xb0, 0x98, 0x8d, 0xd7, 0x3f, 0x2f, 0xb4, 0x3b, 0x85, 0xf6, 0xaa, 0xc4, 0xc7, 0x4f, 0xf7,
	0x19, 0x80, 0x82, 0xc2, 0xca, 0x55, 0xe1, 0x78, 0x5c, 0x57, 0x8e, 0x85, 0x69, 0x55, 0x96, 0xa4,
	0x2f, 0xa4, 0x1b, 0x7b, 0x48, 0xf6, 0xa5, 0x9b, 0xaa, 0x90, 0x3d, 0x9f, 0xdb, 0xb4, 0x94, 0xc0,
	0xfd, 0x7c, 0x8e, 0x75, 0xe9, 0x8a, 0x6c, 0x5d, 0x7a, 0x26, 0x5d, 0x43, 0x86, 0x6d, 0xe9, 0x57,
	0x73, 0x24, 0xf9, 0xaa, 0x44, 0x01, 0x2f, 0x0e, 0xda, 0xf2, 0x62, 0xc8, 0xe1, 0xaf, 0xcb, 0x30,
	0x13, 0x57, 0xac, 0x25, 0x82, 0xcc, 0xbb, 0x7b, 0x71, 0xb1, 0x62, 0xe7, 0xfa, 0xba, 0x3a, 0xd7,
	0xa7, 0xd2, 0x2d, 0xd0, 0xcf, 0xf0, 0x2f, 0xe6, 0x4c, 0xc4, 0x2b, 0xd2, 0x44, 0x9c, 0xe9, 0x8f,
	0xb6, 0x98, 0xe1, 0xff, 0x8d, 0x32, 0x2c, 0xe8, 0xe8, 0xc9, 0x58, 0x01, 0x88, 0x05, 0x07, 0x67,
	0x6c, 0xba, 0xa1, 0x17, 0x72, 0x89, 0x77, 0x61, 0xca, 0xca, 0x5d, 0x18, 0x5d, 0x1d, 0xe3, 0xbb,
	0x0b, 0xd3, 0x0f, 0x7b, 0x31, 0xe3, 0xf6, 0xf3, 0x25, 0x98, 0xda, 0x4c, 0xde, 0x5a, 0x32, 0xce,
	0xc1, 0x6c, 0x0b, 0xed, 0xda, 0x3d, 0x97, 0xbb, 0xe4, 0x73, 0xff, 0x7d, 0x19, 0x3a, 0xc0, 0x11,
	0xa3, 0xee, 0x14, 0xee, 0x12, 0x34, 0xba, 0x76, 0xb4, 0x47, 0x9f, 0xa1, 0xac, 0x2a, 0xd7, 0x5b,
	0x36, 0x59, 0x8a, 0x95, 0xe4, 0x31, 0x6f, 0x40, 0x9d, 0x83, 0xc9, 0x2b, 0xbd, 0x76, 0xb4, 0xc7,
	0x8f, 0x3d, 0xe9, 0x07, 0x1e, 0x0a, 0x76, 0xff, 0x8d, 0x9f, 0x30, 0xb1, 0x4f, 0xf3, 0x8f, 0x4b,
	0x30, 0xc1, 0x22, 0xf7, 0x5c, 0x87, 0x69, 0xbb, 0xd7, 0x72, 0x22, 0x79, 0x13, 0xb8, 0x20, 0x9c,
	0x6f, 0xc5, 0x89, 0x96, 0x94, 0xd3, 0xb8, 0x08, 0xf5, 0x1d, 0x87, 0x44, 0x2a, 0x4a, 0x6f, 0x83,
	0x6e, 0xd2, 0x04, 0x2b, 0xce, 0x81, 0xfb, 0x8c, 0x22, 0xbb, 0xcd, 0xfb, 0x8c, 0xff, 0x13, 0xeb,
	0x9a, 0xdd, 0x79, 0xeb, 0x91, 0x87, 0xe8, 0x4e, 0xaf, 0x6e, 0xc5, 0xdf, 0xc6, 0x19, 0xa8, 0x05,
	0x64, 0x2c, 0xe8, 0x1d, 0xc9, 0xe4, 0xaa, 0x1e, 0x7d, 0x1c, 0x95, 0xa4, 0xe1, 0x1e, 0x8a, 0x36,
	0xb1, 0x5a, 0x62, 0xf2, 0xfa, 0xeb, 0x0a, 0x4c, 0x6e, 0x06, 0xfe, 0x0f, 0xa0, 0x66, 0x64, 0x6c,
	0xc0, 0xb1, 0xa6, 0xdf, 0xe9, 0x24, 0xb1, 0x71, 0xb8, 0x81, 0x85, 0xd9, 0xbb, 0x34, 0x57, 0x23,
	0x33, 0x0a, 0x0c, 0xa9, 0xd0, 0x5e, 0x85, 0x45, 0x99, 0x36, 0x78, 0x94, 0x42, 0x3a, 0x08, 0xfa,
	0xc4, 0x01, 0x0c, 0x1c, 0xe7, 0x61, 0x0e, 0xd1, 0x7b, 0x13, 0xf1, 0xa3, 0x23, 0xf4, 0x21, 0x7e,
	0x15, 0x3c, 0xb2, 0xa1, 0xe3, 0x1c, 0x4c, 0x7c, 0xa5, 0xe7, 0x47, 0x36, 0x37, 0x73, 0x24, 0x4f,
	0x20, 0x7c, 0x16, 0x83, 0x2d, 0x96, 0xda, 0x37, 0x8e, 0xf1, 0x03, 0x38, 0xda, 0xc3, 0x0b, 0xef,
	0xd6, 0xe3, 0xae, 0x1f, 0xc4, 0x2e, 0x06, 0xcc, 0x95, 0x39, 0xd9, 0xb1, 0xbe, 0x9d, 0xce, 0x63,
	0xe9, 0x0a, 0x62, 0x95, 0xfd, 0x71, 0xd7, 0x63, 0x93, 0xca, 0x2c, 0xae, 0xec, 0xe6, 0x80, 0x0a,
	0x37, 0xbf, 0x04, 0xcf, 0x31, 0x40, 0xb8, 0xee, 0x84, 0x78, 0x4c, 0xde, 0xe9, 0x7a, 0xfc, 0x12,
	0x51, 0x12, 0xdc, 0x61, 0xea, 0x71, 0x02, 0x65, 0xc4, 0x90, 0x84, 0x60, 0x10, 0x4a, 0x6c, 0xb4,
	0x2c, 0x31, 0xab, 0xf9, 0x45, 0x38, 0xcd, 0xd1, 0xd3, 0x0b, 0x2c, 0x63, 0xc5, 0xfe, 0x63, 0x25,
	0x38, 0xce, 0xd1, 0xdf, 0x41, 0x91, 0x90, 0x33, 0x91, 0x7f, 0xa5, 0x7e, 0xf2, 0x4f, 0x17, 0xfa,
	0xc8, 0xb8, 0x0a, 0x8d, 0x80, 0xa3, 0x61, 0x17, 0x9e, 0xb3, 0x5a, 0x93, 0x64, 0x34, 0x57, 0xe1,
	0x69, 0xde, 0x14, 0xcc, 0x71, 0xdf, 0xe9, 0x7a, 0x77, 0xfd, 0x30, 0x89, 0xb7, 0x60, 0xc2, 0xb4,
	0x1f, 0xb4, 0x6d, 0x8f, 0xdf, 0xb2, 0xa1, 0xcd, 0x92, 0x60, 0xe6, 0x9b, 0x50, 0x23, 0x44, 0x83,
	0xb9, 0x94, 0xeb, 0x74, 0x98, 0xe7, 0x40, 0xc9, 0xa2, 0x1f, 0x59, 0x87, 0xd7, 0x38, 0x77, 0x2f,
	0x66, 0xe3, 0x25, 0x8b, 0x7e, 0x98, 0x07, 0xd0, 0x48, 0xae, 0xd6, 0x66, 0x0c, 0x46, 0xc0, 0x33,
	0x90, 0x2d, 0x12, 0x1b, 0x0c, 0x09, 0x88, 0xe9, 0x36, 0x60, 0x37, 0xe5, 0xb9, 0x5d, 0x9f, 0x7f,
	0x0b, 0x4f, 0x88, 0x57, 0xc5, 0x27, 0xc4, 0xcd, 0x7f, 0x57, 0x86, 0x09, 0xea, 0x20, 0xf3, 0x91,
	0x3a, 0x10, 0x1f, 0x35, 0xd0, 0x79, 0xb2, 0xc4, 0x27, 0x07, 0x5e, 0xe2, 0x75, 0x65, 0x89, 0x27,
	0x7b, 0xbf, 0x86, 0xb4, 0xf7, 0x5b, 0x80, 0x1a, 0xde, 0x40, 0xd1, 0x47, 0x28, 0x1a, 0x16, 0xfd,
	0x30, 0xff, 0x7e, 0x05, 0x16, 0xe8, 0x00, 0xae, 0xf6, 0x22, 0x3f, 0x6c, 0xda, 0x6e, 0x46, 0x58,
	0xc2, 0xe7, 0x65, 0x75, 0xf0, 0xa8, 0xe8, 0x6c, 0xc1, 0xca, 0x1d, 0xda, 0x8d, 0x5f, 0x5d, 0x07,
	0xc6, 0xa7, 0xe5, 0xf4, 0xc3, 0x5e, 0x8c, 0x96, 0xf3, 0x41, 0x05, 0x8e, 0x73, 0xb7, 0xaf, 0x8f,
	0x43, 0x20, 0xf0, 0x3e, 0xdb, 0xb2, 0x8c, 0x6e, 0xa4, 0x67, 0x67, 0xd4, 0xdd, 0x53, 0x4e, 0x05,
	0xc5, 0x4c, 0xd0, 0xbf, 0xad, 0xc0, 0x29, 0x4d, 0xc5, 0x1f, 0x93, 0xb0, 0x9e, 0x1b, 0xea, 0x74,
	0x5d, 0xea, 0x37, 0x9a, 0x7d, 0x83, 0x7b, 0xfe, 0xb3, 0x9c, 0x59, 0xbb, 0x2b, 0xcd, 0xda, 0xd5,
	0x21, 0xeb, 0x29, 0x66, 0xf2, 0x2c, 0x58, 0xc9, 0xae, 0x7e, 0xc4, 0x90, 0x8d, 0x9f, 0x85, 0x97,
	0xfa, 0xe0, 0x1c, 0x29, 0x70, 0xe3, 0x07, 0x25, 0xb8, 0xdc, 0x07, 0xa7, 0x12, 0x68, 0xeb, 0x10,
	0xe2, 0x36, 0x7e, 0x1f, 0x5c, 0xe8, 0xd3, 0x3e, 0x1e, 0xbd, 0x71, 0xb0, 0xce, 0xbe, 0xdf, 0xbf,
	0xb3, 0x87, 0x15, 0xc4, 0x6f, 0x3f, 0xaf, 0x55, 0x05, 0xc5, 0xda, 0xfb, 0x7e, 0x78, 0x31, 0xa7,
	0xde, 0x27, 0x08, 0x1d, 0xf8, 0x1f, 0x2b, 0xf0, 0x9c, 0x06, 0xfb, 0xc7, 0x29, 0xde, 0xde, 0x3d,
	0x95, 0x83, 0xad, 0xf4, 0xe3, 0x2c, 0x79, 0x51, 0xf7, 0x46, 0xbd, 0x1e, 0x34, 0x70, 0x55, 0xc5,
	0xf0, 0x31, 0x17, 0xce, 0xe7, 0xb6, 0x60, 0xa8, 0x08, 0x7c, 0xe4, 0x90, 0xc2, 0x0f, 0x22, 0xc1,
	0xff, 0x35, 0xfe, 0x36, 0x7f, 0xb0, 0xa4, 0xaf, 0xee, 0x43, 0x0c, 0xf9, 0xf6, 0xa7, 0x65, 0x00,
	0xda, 0x04, 0xad, 0x84, 0xfd, 0x84, 0x4c, 0xa1, 0x73, 0xca, 0x3c, 0x15, 0x4b, 0x91, 0xd7, 0x54,
	0x8a, 0x7c, 0x5a, 0xa9, 0x5e, 0x2f, 0x3f, 0xff, 0x41, 0x0e, 0xe9, 0x65, 0x9d, 0x1a, 0xa4, 0x71,
	0x16, 0x43, 0x63, 0xbf, 0x5b, 0x82, 0x63, 0xb4, 0xae, 0x27, 0x8a, 0x61, 0xb2, 0xa6, 0xc4, 0x30,
	0x79, 0x41, 0xe9, 0x48, 0xd1, 0x01, 0x4c, 0xde, 0x00, 0x83, 0x6f, 0xa5, 0xd7, 0xfc, 0x4e, 0xc7,
	0x89, 0xc8, 0x8d, 0xfa, 0x63, 0x30, 0x61, 0x77, 0x88, 0xed, 0x87, 0x22, 0x61, 0x5f, 0x71, 0xe8,
	0xe9, 0xb2, 0x10, 0x7a, 0x7a, 0x19, 0x8f, 0x03, 0xc5, 0x40, 0x15, 0xea, 0x78, 0xc3, 0xbb, 0x00,
	0xb5, 0x36, 0x79, 0x25, 0x84, 0xb9, 0x7f, 0x93, 0x0f, 0xf3, 0xf7, 0x6b, 0x50, 0x23, 0xc7, 0xc2,
	0x63, 0x0f, 0x1d, 0x75, 0x12, 0x1a, 0x2d, 0x14, 0x46, 0xd4, 0xdb, 0x87, 0x3d, 0x7b, 0x1f, 0x03,
	0x46, 0xde, 0x79, 0x0a, 0x47, 0xf2, 0x93, 0xf2, 0x91, 0xfc, 0x39, 0x98, 0xc5, 0xcb, 0xe0, 0xae,
	0xdf, 0xbd, 0x43, 0xbd, 0x75, 0x78, 0x1c, 0x32, 0x19, 0x4a, 0x02, 0x37, 0x50, 0x48, 0x1c, 0x3e,
	0xae, 0xc1, 0x02, 0x37, 0xc8, 0x60, 0xea, 0x06, 0x42, 0x41, 0xfc, 0x6d, 0x95, 0x04, 0x20, 0xd4,
	0xc7, 0x0f, 0xcd, 0xa7, 0xa4, 0xfa, 0x1e, 0xa4, 0xda, 0xc5, 0x0e, 0xcc, 0x99, 0xe1, 0x49, 0x81,
	0x62, 0x3a, 0x65, 0x90, 0xcf, 0x75, 0xbd, 0xed, 0x9e, 0xe7, 0x21, 0x97, 0x39, 0x5f, 0xa7, 0xe0,
	0xf4, 0x94, 0xd6, 0xf1, 0x03, 0x27, 0x3a, 0x20, 0x67, 0xb1, 0x33, 0x56, 0xfc, 0xdd, 0xf7, 0x34,
	0xd6, 0x60, 0x21, 0xcc, 0xe6, 0x89, 0x28, 0xa7, 0x2f, 0xf9, 0x5d, 0x11, 0x4e, 0x3d, 0x8f, 0x28,
	0x7e, 0x49, 0x84, 0x32, 0x34, 0x27, 0x9e, 0x27, 0x7e, 0x36, 0xef, 0x18, 0xf1, 0xb2, 0xc4, 0x10,
	0x4e, 0x66, 0x60, 0x2c, 0x86, 0x19, 0xfc, 0x49, 0x19, 0x1a, 0xa4, 0x9e, 0xe1, 0x1e, 0x68, 0x25,
	0x45, 0x0e, 0xed, 0x81, 0xd6, 0xb8, 0xc1, 0xe3, 0x7b, 0xa0, 0x35, 0x85, 0xb2, 0x98, 0xe1, 0xfe,
	0xf3, 0x32, 0x4c, 0xd0, 0x40, 0x1b, 0xc6, 0x59, 0xa8, 0xec, 0xb4, 0xbb, 0xcc, 0x5e, 0x69, 0xc8,
	0x0d, 0x09, 0x6e, 0xb6, 0xbb, 0x16, 0x4e, 0x36, 0x56, 0xa0, 0xbe, 0xd3, 0x26, 0x74, 0x9f, 0xb6,
	0x06, 0xc4, 0x59, 0x71, 0xb2, 0x15, 0xe7, 0x1b, 0xbb, 0x9f, 0x9f, 0x7a, 0xd9, 0xe3, 0x3a, 0x80,
	0x93, 0x84, 0x25, 0x9c, 0x50, 0xb6, 0x22, 0x2c, 0x8e, 0x48, 0x1c, 0x95, 0x50, 0xc8, 0x3b, 0xb0,
	0x59, 0x5c, 0xe0, 0x5c, 0x8d, 0xac, 0x87, 0xfe, 0x20, 0xd3, 0xaf, 0x42, 0xf1, 0xdb, 0x33, 0xff,
	0x77, 0x05, 0x16, 0x68, 0xab, 0x72, 0xce, 0xc8, 0x5f, 0x93, 0xc9, 0xfd, 0xbc, 0xd2, 0xa7, 0x43,
	0x3a, 0x20, 0xef, 0x67, 0x24, 0xd3, 0xb5, 0x2b, 0xb5, 0x26, 0xb6, 0x73, 0x4e, 0xc7, 0x2f, 0xcb,
	0xa7, 0xe3, 0xca, 0x3a, 0xcb, 0x7a, 0x2d, 0x66, 0x64, 0xd3, 0x5b, 0x9f, 0x36, 0x17, 0xb3, 0xe8,
	0x9e, 0x61, 0x2c, 0x0e, 0x2f, 0x15, 0x5c, 0xc8, 0x0e, 0x3d, 0x16, 0x1d, 0x01, 0xff, 0x35, 0xff,
	0x6b, 0x09, 0x66, 0xa4, 0xa5, 0x64, 0x5c, 0x87, 0xe3, 0x76, 0x6b, 0x1f, 0x05, 0x91, 0x13, 0x22,
	0x1a, 0x7f, 0x67, 0x93, 0x4b, 0x10, 0x5a, 0x2e, 0x2b, 0x99, 0xea, 0xe4, 0x8c, 0xdc, 0x05, 0x95,
	0x5b, 0x06, 0x92, 0x7d, 0xb3, 0x12, 0x86, 0x27, 0x01, 0xc4, 0x0b, 0xa2, 0x2a, 0x2f, 0x88, 0x2e,
	0x42, 0xc1, 0x6a, 0x48, 0xdf, 0x60, 0x9b, 0xb1, 0xf8, 0x67, 0x3a, 0x06, 0xd2, 0x84, 0x26, 0x06,
	0x92, 0xf9, 0x6b, 0x25, 0x98, 0x53, 0x16, 0x26, 0xc6, 0xe9, 0x74, 0x45, 0x07, 0x63, 0xfe, 0x69,
	0xdc, 0x84, 0x93, 0xae, 0xe3, 0x3d, 0x44, 0x2d, 0x7d, 0xb0, 0x04, 0xd6, 0xa9, 0xbe, 0x79, 0xb0,
	0xea, 0x40, 0xd3, 0x13, 0x09, 0x4d, 0x7b, 0xaa, 0x82, 0x75, 0xfd, 0xa5, 0xdb, 0x02, 0xd2, 0xde,
	0x21, 0xb7, 0x05, 0xa4, 0xcc, 0xe1, 0x6d, 0x0b, 0xe2, 0x26, 0x8f, 0x71, 0x5b, 0x90, 0xc2, 0x59,
	0xcc, 0x2a, 0xf9, 0xef, 0x25, 0x98, 0xa6, 0x75, 0xb1, 0xfb, 0x14, 0xcb, 0x00, 0x3b, 0x58, 0x07,
	0xe5, 0x0e, 0x92, 0x3a, 0x0d, 0x40, 0xc8, 0x61, 0xbc, 0x01, 0x47, 0x93, 0xaf, 0xdb, 0x3e, 0x0b,
	0x28, 0x95, 0xa1, 0x3a, 0xe8, 0xb2, 0x1a, 0x77, 0x61, 0x86, 0x09, 0xb1, 0x2d, 0x1e, 0xb1, 0x52,
	0x8e, 0x87, 0x2d, 0xb6, 0xef, 0xa6, 0x98, 0xd3, 0x92, 0x0b, 0x8a, 0x02, 0xa4, 0x2a, 0x09, 0x10,
	0xf3, 0xcf, 0xca, 0xf0, 0x54, 0x26, 0x1a, 0xe3, 0x06, 0xcc, 0x2b, 0x4b, 0x3b, 0xab, 0xe7, 0xa9,
	0x7c, 0xf2, 0xaa, 0x2e, 0xab, 0xab, 0xfa, 0x89, 0xd6, 0x03, 0x51, 0x78, 0x7b, 0x9d, 0x7b, 0xc8,
	0x0e, 0xbc, 0xb8, 0x5d, 0x94, 0x11, 0xa4, 0xe0, 0x83, 0x71, 0x84, 0xc4, 0x2b, 0x77, 0x52, 0xf4,
	0xca, 0x4d, 0x0e, 0x9a, 0xea, 0xd2, 0x41, 0xd3, 0x31, 0x98, 0xe8, 0x75, 0xa3, 0xc4, 0xa9, 0x92,
	0x7d, 0xe1, 0xba, 0xe8, 0xbf, 0x2d, 0xd4, 0xf4, 0xbd, 0x16, 0x0f, 0xba, 0x25, 0x03, 0xcd, 0x2f,
	0x70, 0xf9, 0xcb, 0x26, 0x8b, 0x5b, 0x36, 0x75, 0xe7, 0x8a, 0x2f, 0x62, 0x01, 0x1f, 0xf6, 0xdc,
	0x88, 0x49, 0xa3, 0x45, 0xed, 0xe4, 0x5b, 0x2c, 0x93, 0x79, 0x0b, 0x8e, 0x31, 0x29, 0xb5, 0x19,
	0xa0, 0x7d, 0x07, 0x3d, 0x8a, 0x91, 0xbf, 0x00, 0xf5, 0x40, 0x3e, 0x14, 0x4e, 0xb1, 0x89, 0x38,
	0x83, 0xf9, 0x4b, 0x65, 0x38, 0x92, 0x92, 0x76, 0xc6, 0xf3, 0x30, 0x49, 0x83, 0x73, 0x71, 0x22,
	0x48, 0x61, 0xe0, 0xe9, 0xe2, 0xbb, 0xa9, 0x65, 0xe5, 0xdd, 0xd4, 0x14, 0xde, 0xf1, 0xbd, 0x9b,
	0x9a, 0x89, 0xba, 0x18, 0x16, 0xf1, 0xbd, 0x12, 0x54, 0x89, 0x1f, 0x0c, 0xde, 0x65, 0x8b, 0xb7,
	0xbb, 0xd8, 0x97, 0xb1, 0x02, 0x80, 0x67, 0xdc, 0xa1, 0x9e, 0x4e, 0xaa, 0x05, 0x68, 0x8d, 0x27,
	0x59, 0x42, 0xae, 0x01, 0x4e, 0x5e, 0xe7, 0xa1, 0xe2, 0x78, 0xd4, 0x59, 0xa7, 0x61, 0xe1, 0xbf,
	0xb8, 0x1e, 0x97, 0x5f, 0xb8, 0xe6, 0x9e, 0x2b, 0x46, 0xfa, 0x7e, 0xba, 0x25, 0xe4, 0xc2, 0x6d,
	0xf6, 0xfc, 0x68, 0xc3, 0xa3, 0x1a, 0x6b, 0xc3, 0x62, 0x5f, 0xd4, 0x9b, 0x3b, 0xe8, 0x38, 0x21,
	0x7d, 0x25, 0x72, 0x92, 0x5a, 0x6e, 0x05, 0x90, 0xf9, 0xb5, 0x12, 0xcc, 0x6e, 0x6d, 0xdd, 0xbb,
	0x2b, 0xbc, 0x13, 0xc7, 0xaf, 0xef, 0x94, 0x92, 0xeb, 0x3b, 0xfd, 0x2c, 0x6d, 0xa4, 0x92, 0xc0,
	0x7f, 0x7c, 0x70, 0x17, 0xd9, 0xad, 0xf8, 0x28, 0x5c, 0x04, 0xe1, 0x59, 0x62, 0x71, 0x05, 0x39,
	0xc7, 0x62, 0x9f, 0xf4, 0x0c, 0x9d, 0x12, 0x35, 0x97, 0x45, 0xfc, 0xdb, 0xfc, 0xd1, 0x12, 0x40,
	0x12, 0xc5, 0x9b, 0x7b, 0xb6, 0x77, 0xec, 0xc8, 0x69, 0x5a, 0xf4, 0x69, 0x31, 0xd1, 0xb3, 0x5d,
	0x84, 0x93, 0x98, 0x79, 0xc4, 0xc9, 0xe0, 0xbe, 0x8d, 0xb5, 0x13, 0x4f, 0x08, 0x0e, 0x9f, 0x4e,
	0xa0, 0x1d, 0x40, 0xa8, 0xd3, 0x8d, 0x9c, 0x1d, 0x97, 0x12, 0x52, 0xdd, 0x12, 0x41, 0xe6, 0x8f,
	0x95, 0x61, 0x76, 0x0b, 0x35, 0x7b, 0x58, 0x0f, 0x62, 0x3e, 0x4f, 0x1f, 0x9f, 0xd7, 0xc8, 0x5f,
	0xe2, 0x5e, 0x50, 0x93, 0x8a, 0x2f, 0xb3, 0xdc, 0x23, 0xd1, 0x27, 0xaa, 0xcf, 0x79, 0xbd, 0xf9,
	0xbd, 0x32, 0x18, 0x72, 0x49, 0xad, 0x1a, 0x93, 0x79, 0x33, 0x4d, 0xa9, 0xf5, 0x89, 0xd5, 0x99,
	0xcf, 0x24, 0xdc, 0x49, 0xbd, 0x16, 0x99, 0x6e, 0x66, 0x9a, 0x3d, 0x7d, 0x23, 0x87, 0x3d, 0x7d,
	0x5a, 0x62, 0x4f, 0xe7, 0x07, 0xc0, 0x5d, 0x0c, 0x7f, 0x5a, 0x85, 0xe3, 0xca, 0xc8, 0xc5, 0x16,
	0x3d, 0xf2, 0x82, 0xad, 0x98, 0xc4, 0x9d, 0x0a, 0x65, 0xa8, 0xf9, 0x07, 0x25, 0x75, 0xe6, 0xfa,
	0x32, 0xbc, 0x81, 0x7c, 0x10, 0x53, 0x93, 0x76, 0x1d, 0x6a, 0x1d, 0x3b, 0x6a, 0xee, 0xb1, 0x17,
	0x9a, 0xcd, 0x3e, 0xd4, 0xc6, 0x9c, 0x22, 0x2d, 0x5a, 0x80, 0xec, 0x03, 0xa8, 0x9c, 0x23, 0x13,
	0x59, 0xb7, 0xf8, 0xa7, 0x64, 0xe6, 0x9a, 0xe0, 0x97, 0x11, 0xe8, 0xb7, 0xf9, 0x19, 0x78, 0x2a,
	0x13, 0x33, 0xb9, 0xd5, 0x16, 0x34, 0xe3, 0xfb, 0x65, 0x25, 0x76, 0xab, 0x2d, 0x01, 0x61, 0x26,
	0x33, 0xbf, 0x85, 0x02, 0xc7, 0x76, 0x37, 0xfd, 0x20, 0x7a, 0xab, 0x17, 0x75, 0x7b, 0x84, 0x2b,
	0x35, 0x7d, 0xcc, 0x1e, 0x22, 0x1e, 0xb2, 0x26, 0xfe, 0xce, 0x8c, 0x88, 0x82, 0x1e, 0x47, 0xb1,
	0x2f, 0x26, 0x7a, 0x1c, 0xf5, 0x8b, 0x88, 0xc2, 0xf4, 0x93, 0x20, 0x62, 0x4b, 0x97, 0x7e, 0x98,
	0xaf, 0x61, 0x1e, 0x23, 0x79, 0xf1, 0x0d, 0x17, 0xa0, 0xf9, 0xbb, 0x35, 0xa8, 0x6f, 0x79, 0x76,
	0x37, 0xdc, 0xf3, 0xa3, 0xb1, 0xb3, 0xa7, 0x53, 0x00, 0x2d, 0x27, 0x7c, 0xc8, 0x82, 0x50, 0xd0,
	0x8e, 0x0a, 0x90, 0x81, 0x98, 0x93, 0xce, 0x02, 0x3f, 0x91, 0x61, 0x81, 0xbf, 0x16, 0x5b, 0xe0,
	0x27, 0x15, 0xff, 0x03, 0xde, 0x45, 0xed, 0xab, 0x16, 0x24, 0xb2, 0x2f, 0x09, 0x70, 0x83, 0xb5,
	0xbc, 0x0a, 0x8d, 0xec, 0x4b, 0xbf, 0xb5, 0xc1, 0x55, 0xfb, 0xf9, 0x1e, 0x6e, 0xc3, 0x62, 0xc8,
	0xea, 0x92, 0x02, 0x56, 0x33, 0xef, 0xc3, 0x53, 0xfd, 0xc3, 0x5a, 0x5b, 0xfa, 0xc2, 0xe4, 0xd6,
	0x20, 0xd1, 0xcb, 0xd6, 0x9d, 0x90, 0x47, 0xdb, 0x10, 0x20, 0xc6, 0x3b, 0x70, 0x3c, 0xf9, 0x92,
	0xeb, 0x9d, 0x19, 0xa8, 0xde, 0xac, 0xe2, 0xe4, 0x56, 0x5a, 0x9c, 0xb4, 0xd1, 0x62, 0x97, 0x77,
	0x24, 0x98, 0xa0, 0x23, 0xcf, 0x49, 0x3a, 0x32, 0xb9, 0xd1, 0xe6, 0x07, 0x76, 0x1b, 0xdd, 0x3c,
	0xc0, 0xfa, 0xf9, 0x3c, 0xbf, 0xd1, 0x96, 0xc0, 0x8c, 0x65, 0x30, 0xc4, 0xef, 0x2d, 0xf1, 0x42,
	0x8f, 0x26, 0xe5, 0x49, 0xce, 0x47, 0xfe, 0xb2, 0x0c, 0xd3, 0x9c, 0x0e, 0x86, 0x7b, 0x4c, 0x89,
	0x97, 0x3a, 0xb4, 0xc7, 0x94, 0xc4, 0x66, 0x8f, 0xef, 0x31, 0x25, 0x1d, 0xd6, 0x62, 0xe4, 0xd0,
	0xff, 0xc4, 0x0a, 0x63, 0xe8, 0xae, 0xe1, 0xfd, 0x21, 0x89, 0x9e, 0x45, 0xf4, 0xa7, 0x66, 0xf2,
	0xc9, 0x4f, 0x4f, 0x05, 0xd0, 0xd8, 0xef, 0xf0, 0x8d, 0xaa, 0x0a, 0x9d, 0x02, 0x60, 0x21, 0x8d,
	0xf1, 0x7a, 0xa2, 0xbb, 0x43, 0x01, 0xd2, 0x57, 0xef, 0xf9, 0x6a, 0x05, 0x0c, 0xb9, 0xe3, 0x43,
	0xea, 0x3d, 0x52, 0xd9, 0x62, 0xe9, 0xef, 0x33, 0x2a, 0xfd, 0x9d, 0xc9, 0x68, 0xc6, 0x98, 0x75,
	0xa2, 0x4c, 0xdc, 0xc5, 0xd0, 0xe2, 0xcf, 0x54, 0x01, 0x92, 0x20, 0x00, 0xc6, 0x4d, 0x38, 0x69,
	0xbb, 0xae, 0xff, 0x88, 0x82, 0xd6, 0x9c, 0x16, 0xb5, 0xbd, 0x84, 0x6f, 0xed, 0xa3, 0xc0, 0xb5,
	0xbb, 0x6c, 0xb7, 0xd0, 0x37, 0xcf, 0xd8, 0x29, 0x55, 0x51, 0xeb, 0xab, 0x69, 0xb5, 0xfe, 0x1c,
	0xcc, 0xb2, 0xb0, 0x02, 0xdc, 0xa6, 0x51, 0x63, 0x31, 0x4c, 0x25, 0x68, 0xca, 0x0d, 0xff, 0x34,
	0x4c, 0x39, 0x5d, 0xd2, 0x01, 0x62, 0xe6, 0xa4, 0xc4, 0x2c, 0x82, 0x06, 0x8e, 0x30, 0x2e, 0x18,
	0x94, 0x40, 0x3e, 0x91, 0xb8, 0x0a, 0x8b, 0x3c, 0x04, 0x78, 0xf7, 0x0e, 0x09, 0xa9, 0xca, 0xc2,
	0xa6, 0x4d, 0xd1, 0x58, 0x0c, 0xda, 0xc4, 0xcc, 0xe8, 0xe0, 0x6f, 0xc1, 0x91, 0x90, 0x58, 0x4d,
	0xec, 0xe0, 0x20, 0xd6, 0xc9, 0x66, 0x94, 0x7b, 0xe2, 0xc9, 0x7c, 0x6e, 0xf1, 0xbc, 0xf4, 0xfe,
	0x7f, 0xba, 0x6c, 0xdf, 0x48, 0x92, 0x3f, 0x59, 0x85, 0xa5, 0x04, 0x57, 0xce, 0xe1, 0xc8, 0x4d,
	0x79, 0xd1, 0x5e, 0xd4, 0xb4, 0xe6, 0x90, 0x0e, 0x48, 0xfa, 0x04, 0x96, 0xcc, 0x6c, 0x5b, 0x6a,
	0x3d, 0xbf, 0x93, 0x73, 0x48, 0x72, 0x55, 0x3e, 0x24, 0x39, 0xa5, 0xa9, 0x22, 0xe3, 0xa0, 0x64,
	0xd4, 0x90, 0x95, 0x79, 0x6d, 0x2f, 0xe8, 0x65, 0xa2, 0x0a, 0xcc, 0x26, 0x35, 0x0f, 0xe7, 0x36,
	0x9e, 0x94, 0x2b, 0x76, 0xc2, 0x5f, 0x55, 0x27, 0xfc, 0x59, 0x4d, 0x13, 0xf4, 0xd3, 0xfc, 0xf5,
	0x9c, 0xc9, 0xb8, 0x2e, 0x4d, 0xc6, 0xd9, 0x1c, 0xbc, 0xc5, 0x4c, 0xc1, 0xbb, 0xe2, 0xaa, 0x94,
	0x57, 0xb8, 0xca, 0xd1, 0x4a, 0x69, 0x8e, 0x76, 0x12, 0x1a, 0x01, 0xfe, 0x23, 0xd8, 0xa1, 0x12,
	0x80, 0x79, 0x07, 0xce, 0x08, 0x04, 0x7b, 0xeb, 0x71, 0xd7, 0xf6, 0x5a, 0x1b, 0x49, 0x69, 0xc1,
	0xd9, 0xab, 0x7f, 0x35, 0xe6, 0x77, 0xca, 0xb0, 0xa8, 0x25, 0x7d, 0xe3, 0x9a, 0x1c, 0x26, 0xa5,
	0x94, 0x4d, 0x24, 0x62, 0x3e, 0xf1, 0x5d, 0xc7, 0xb2, 0xf2, 0xae, 0xa3, 0xb6, 0x9e, 0xf1, 0xbd,
	0xeb, 0xd8, 0x17, 0x7d, 0x31, 0x53, 0xbc, 0x03, 0x17, 0xc4, 0x5a, 0x51, 0x1c, 0xc5, 0x5d, 0x92,
	0x12, 0x7c, 0x36, 0x32, 0x45, 0x4c, 0xa9, 0x8f, 0x88, 0x21, 0x66, 0xcb, 0xed, 0xb5, 0xcd, 0x8f,
	0xa2, 0xd9, 0xf2, 0x35, 0xa8, 0x6e, 0xdb, 0xed, 0x70, 0x00, 0x9f, 0xc2, 0x05, 0x91, 0xd7, 0x34,
	0x18, 0x5b, 0x31, 0x7f, 0xaf, 0x04, 0x73, 0xd4, 0x4d, 0xf7, 0x6e, 0x14, 0x75, 0x37, 0x71, 0x7b,
	0x3e, 0x32, 0xcf, 0xf9, 0x89, 0x8c, 0x6b, 0x22, 0x7d, 0x8f, 0xa7, 0x17, 0xb8, 0xf7, 0xed, 0x2e,
	0x53, 0x45, 0xd8, 0x97, 0xf9, 0x7e, 0x05, 0x8e, 0x2a, 0xfd, 0xd1, 0x72, 0xde, 0x65, 0x99, 0xf3,
	0x2e, 0x09, 0xef, 0x2a, 0x4a, 0x85, 0x8b, 0x65, 0xbf, 0xaf, 0xa9, 0xec, 0xf7, 0x6c, 0x56, 0x3b,
	0xc6, 0xfb, 0xe0, 0x5b, 0x1f, 0xe4, 0xc5, 0xac, 0xd2, 0xcf, 0xc3, 0x0b, 0x49, 0x9d, 0x21, 0xae,
	0xd4, 0xa1, 0x4f, 0x85, 0x49, 0x3a, 0x7c, 0x28, 0xbc, 0xca, 0x1a, 0xca, 0x29, 0xcc, 0x9a, 0xa6,
	0x82, 0xcd, 0xbf, 0x2c, 0xc1, 0xbc, 0x82, 0xf9, 0xe3, 0x41, 0xc0, 0x9a, 0x2e, 0x4e, 0x6a, 0xbb,
	0x28, 0x90, 0x7a, 0x5d, 0x22, 0xf5, 0xaf, 0x55, 0x60, 0x41, 0xed, 0xfa, 0x70, 0x8f, 0x52, 0xaa,
	0xa5, 0x0f, 0xcd, 0xfb, 0x46, 0xd7, 0x8d, 0xf1, 0x5d, 0x51, 0xeb, 0x87, 0xbd, 0x18, 0x72, 0xff,
	0x5b, 0x65, 0x98, 0xdd, 0x96, 0x9e, 0x05, 0x2e, 0x9c, 0x26, 0xc5, 0xb8, 0x8f, 0x55, 0x25, 0xee,
	0xe3, 0xa0, 0x06, 0x8b, 0x93, 0xd0, 0xf0, 0xec, 0x88, 0x59, 0xf5, 0x79, 0x04, 0x32, 0x0e, 0xe8,
	0x7b, 0xad, 0x92, 0xc7, 0xa2, 0x69, 0x08, 0x71, 0x7b, 0xbf, 0x51, 0x85, 0x93, 0xf2, 0x20, 0xe4,
	0xec, 0x8b, 0x6e, 0xcb, 0x74, 0x7a, 0x59, 0x99, 0x40, 0x3d, 0x96, 0x0f, 0x6d, 0x6f, 0x74, 0x47,
	0x25, 0xdf, 0x17, 0x07, 0x6b, 0x5f, 0x8a, 0x8c, 0xbf, 0x98, 0xb3, 0x3f, 0xba, 0x2e, 0xef, 0x8f,
	0xcc, 0x8c, 0x6a, 0x32, 0xf6, 0x48, 0xdf, 0xce, 0x59, 0x24, 0xb7, 0xa5, 0x45, 0xb2, 0x32, 0x54,
	0x1f, 0x8a, 0x59, 0x2c, 0x5f, 0xad, 0x80, 0x21, 0xd7, 0x3e, 0x9c, 0xa9, 0x4b, 0x2e, 0x7b, 0x68,
	0xa6, 0xae, 0x74, 0x17, 0xc6, 0x67, 0xea, 0xca, 0xc6, 0x5d, 0xcc, 0x94, 0xfc, 0x61, 0x19, 0x9e,
	0xca, 0xa4, 0x36, 0x63, 0x15, 0xe6, 0xe4, 0x37, 0xcf, 0xf9, 0xd6, 0x24, 0x73, 0x4e, 0xd4, 0xfc,
	0x62, 0x28, 0x6c, 0xf5, 0xe1, 0xb0, 0xcc, 0x7a, 0xd3, 0xc3, 0x39, 0x6a, 0xbc, 0xea, 0xdc, 0x2a,
	0x8a, 0x19, 0xd5, 0xbf, 0x2a, 0x03, 0x24, 0x57, 0xe2, 0x8c, 0x53, 0x00, 0x3b, 0x76, 0xf3, 0x61,
	0xaf, 0x8b, 0xbf, 0x58, 0x69, 0x01, 0x32, 0x76, 0xe3, 0xe0, 0x59, 0x98, 0xd9, 0xb5, 0x1d, 0xd7,
	0xdf, 0x47, 0x81, 0x85, 0x0b, 0x13, 0xea, 0x2f, 0x5b, 0x32, 0xd0, 0x30, 0x61, 0x7a, 0x2f, 0xd9,
	0xe7, 0xf0, 0x30, 0x1d, 0x12, 0x2c, 0x65, 0x1c, 0x94, 0x6e, 0x2f, 0x4e, 0x2a, 0xb7, 0x17, 0x07,
	0x36, 0x0c, 0x8e, 0xe0, 0x90, 0x4c, 0xb4, 0x28, 0x44, 0x9c, 0x4b, 0x56, 0x77, 0x77, 0x1d, 0xcf,
	0x89, 0x0e, 0x98, 0x15, 0x50, 0x05, 0x13, 0x0b, 0x5d, 0x32, 0xf8, 0xa3, 0x5a, 0xe8, 0xb2, 0x30,
	0x7c, 0x14, 0x2c, 0x74, 0x99, 0x6d, 0x1b, 0x9f, 0x85, 0x4e, 0xb8, 0xd0, 0x39, 0x5e, 0x0b, 0x5d,
	0x5e, 0xdb, 0x8b, 0x59, 0x90, 0x8e, 0x48, 0x12, 0x9c, 0x1d, 0xd0, 0x5d, 0xbe, 0xf1, 0x2a, 0x5f,
	0x07, 0xec, 0x64, 0x51, 0x0d, 0x35, 0x7b, 0x57, 0x48, 0xb4, 0xa4, 0xac, 0xba, 0x43, 0x7b, 0x62,
	0x0c, 0x4c, 0xea, 0x1a, 0xce, 0x18, 0x98, 0x94, 0x3b, 0x34, 0x63, 0xa0, 0xdc, 0xf4, 0xf1, 0x19,
	0x03, 0xf5, 0x78, 0x8b, 0x99, 0x6d, 0x04, 0xa7, 0x05, 0xfa, 0x5d, 0x6d, 0xb5, 0x04, 0x7b, 0x4e,
	0xf2, 0x98, 0xb4, 0xcc, 0xfd, 0x4a, 0x8a, 0x3b, 0x80, 0x54, 0x84, 0x79, 0xc4, 0xc8, 0xcc, 0xd1,
	0xfc, 0x02, 0x3c, 0x23, 0x57, 0x13, 0x4b, 0xc1, 0x38, 0xcc, 0x4e, 0xea, 0x59, 0xf8, 0x13, 0xe9,
	0x67, 0xe1, 0x63, 0xec, 0xc2, 0x3d, 0xf0, 0x3d, 0x38, 0x23, 0x5d, 0xa9, 0xee, 0xf8, 0xfb, 0xa8,
	0x98, 0x4e, 0x7c, 0x51, 0x1a, 0x2b, 0x5a, 0xd3, 0xf8, 0xfa, 0xf1, 0x9d, 0x32, 0x2c, 0x6a, 0x59,
	0x89, 0x71, 0x4d, 0xbe, 0xfc, 0x5d, 0xca, 0x5e, 0x09, 0x62, 0xbe, 0x7e, 0x16, 0x4f, 0x6d, 0x3d,
	0xe3, 0xb3, 0x78, 0xf6, 0x45, 0x5f, 0x0c, 0x1d, 0x3f, 0xcf, 0x2d, 0x76, 0x89, 0x4f, 0x56, 0x12,
	0x00, 0xa8, 0x24, 0x05, 0x00, 0x5a, 0x87, 0xf3, 0x34, 0xeb, 0x56, 0xe8, 0x26, 0x46, 0x97, 0x9b,
	0x76, 0xf3, 0x21, 0xf2, 0x5a, 0xcc, 0xfd, 0x87, 0x4f, 0xa7, 0x10, 0x7b, 0xad, 0x24, 0xc7, 0x5e,
	0xdb, 0x80, 0x4f, 0x68, 0xb0, 0x6c, 0x26, 0xb6, 0x4b, 0xc1, 0xd6, 0x2d, 0x1a, 0x39, 0x4b, 0x29,
	0x23, 0xa7, 0xf9, 0x36, 0x3c, 0xaf, 0x41, 0xf5, 0xc4, 0x56, 0xa0, 0x9f, 0x8d, 0xf7, 0xdb, 0x0c,
	0xef, 0x47, 0xc7, 0x06, 0xa4, 0x8c, 0xc9, 0x44, 0xda, 0xf0, 0x2b, 0xb2, 0xe4, 0x49, 0x85, 0x25,
	0x0b, 0x93, 0x52, 0x97, 0x26, 0x45, 0x37, 0x38, 0x0d, 0xfd, 0xe0, 0x24, 0xfb, 0x2b, 0x3e, 0x38,
	0xa3, 0xec, 0xaf, 0x78, 0xd9, 0x43, 0xde, 0x5f, 0x89, 0x5d, 0x18, 0xf7, 0xfe, 0x4a, 0x87, 0xbb,
	0x98, 0x25, 0x1c, 0xaf, 0xcb, 0xed, 0x66, 0x77, 0x0c, 0xeb, 0x52, 0xc2, 0x32, 0xd2, 0xba, 0xfc,
	0xd3, 0x12, 0x5f, 0x40, 0x0c, 0xd7, 0xff, 0xf5, 0x0b, 0x48, 0x58, 0x16, 0xbc, 0xcb, 0xa3, 0x2c,
	0x0b, 0x5e, 0xf6, 0x90, 0x97, 0x85, 0xd8, 0x85, 0x71, 0x2f, 0x0b, 0x1d, 0xee, 0x82, 0xe2, 0x29,
	0x94, 0xb9, 0x31, 0xff, 0x73, 0x5d, 0x8f, 0xdf, 0x9c, 0x1f, 0x37, 0x1d, 0x9e, 0x87, 0xb9, 0x5d,
	0x3f, 0x78, 0x64, 0x07, 0x24, 0xdc, 0x27, 0x71, 0x55, 0xaf, 0x50, 0xc6, 0xa9, 0x80, 0x0b, 0x88,
	0x16, 0x90, 0x6c, 0x71, 0xeb, 0x99, 0x5b, 0xdc, 0x46, 0x66, 0xc4, 0x3a, 0x90, 0x9c, 0x24, 0x97,
	0x60, 0x32, 0x22, 0xd7, 0x9c, 0xc2, 0xa5, 0x29, 0xd2, 0x7e, 0xfe, 0x69, 0x7e, 0xbb, 0x0a, 0xa7,
	0xd4, 0x61, 0xcc, 0xd9, 0xf0, 0xde, 0x95, 0xa9, 0x5c, 0x35, 0x0b, 0x66, 0xe1, 0xf9, 0xd0, 0xb6,
	0xbd, 0x7d, 0x82, 0x72, 0xe5, 0xb4, 0x30, 0xb5, 0x18, 0xfe, 0xbf, 0x9c, 0xcd, 0xef, 0x0d, 0x79,
	0xf3, 0x7b, 0x36, 0xb3, 0xa2, 0x8c, 0x2d, 0xf0, 0xa8, 0x41, 0xbf, 0x06, 0xeb, 0x47, 0x31, 0x0b,
	0x2f, 0x39, 0x4a, 0x4a, 0xea, 0x1f, 0xe5, 0x28, 0x29, 0x29, 0x7d, 0xc8, 0x47, 0x49, 0x72, 0x37,
	0xc6, 0x7d, 0x94, 0xa4, 0xc7, 0x5e, 0xcc, 0xd4, 0xfc, 0x71, 0x19, 0x9e, 0xee, 0x43, 0x79, 0xc6,
	0x1d, 0x38, 0x12, 0xa9, 0xc9, 0x6c, 0xdf, 0xd4, 0x67, 0x76, 0xd2, 0x65, 0x8c, 0xdb, 0xea, 0x1e,
	0xea, 0xe2, 0x20, 0x94, 0x9f, 0x1e, 0xda, 0x6f, 0xe5, 0x0c, 0xed, 0x2d, 0x69, 0x68, 0x5f, 0x1a,
	0xa6, 0x92, 0x62, 0x46, 0xf8, 0x6f, 0x97, 0x60, 0x6a, 0x1b, 0x85, 0xd1, 0x6d, 0xdb, 0x71, 0x7b,
	0x01, 0xb9, 0x89, 0x69, 0x37, 0xa3, 0x9e, 0xed, 0xca, 0x41, 0xb3, 0x65, 0x20, 0x89, 0x68, 0xcc,
	0x1e, 0x16, 0xde, 0x92, 0x42, 0x56, 0xab, 0x60, 0x3c, 0x08, 0x7b, 0x7e, 0x18, 0xdf, 0xd7, 0xc0,
	0xff, 0x89, 0xfb, 0x88, 0x1d, 0xed, 0x71, 0xe5, 0x07, 0xff, 0x37, 0x6f, 0xc0, 0x31, 0xdc, 0x8c,
	0xcd, 0xe4, 0xbe, 0x9c, 0xa8, 0xbf, 0x09, 0x17, 0xeb, 0x4a, 0xe9, 0x8b, 0x75, 0x9f, 0x82, 0xe3,
	0xa9, 0xb2, 0xec, 0xf6, 0x66, 0x7e, 0xe1, 0x7d, 0x98, 0x7d, 0x7b, 0xfd, 0x89, 0xbc, 0x5b, 0x04,
	0xdf, 0x95, 0x4a, 0xb6, 0xef, 0x4a, 0x55, 0xf1, 0x5d, 0xf9, 0x89, 0x0a, 0x4c, 0xbc, 0x4d, 0xce,
	0xb2, 0x87, 0x14, 0xf2, 0xe9, 0xb8, 0xe6, 0xe5, 0x41, 0xe2, 0x9a, 0x8f, 0xe4, 0x30, 0x7b, 0x09,
	0x1a, 0x78, 0xc6, 0x2c, 0x21, 0xb2, 0x77, 0xe2, 0xdf, 0x7f, 0x97, 0xa5, 0x58, 0x49, 0x9e, 0x91,
	0x03, 0x58, 0x5f, 0x87, 0xe9, 0x6e, 0x12, 0xbb, 0x9d, 0x87, 0xb1, 0x5e, 0x90, 0x22, 0xaa, 0xf3,
	0x3b, 0x4c, 0x52, 0xce, 0xbe, 0xd7, 0x4a, 0x9e, 0x87, 0x5a, 0x84, 0xc2, 0x88, 0xea, 0x08, 0xa2,
	0x29, 0x85, 0x0e, 0x3c, 0x26, 0x1a, 0x8b, 0xe6, 0x20, 0x91, 0x02, 0x28, 0x74, 0xb8, 0x48, 0x01,
	0xb4, 0xcc, 0xa1, 0x45, 0x0a, 0x48, 0x9a, 0x3c, 0xbe, 0x48, 0x01, 0x69, 0x9c, 0x85, 0x99, 0x72,
	0xd8, 0xe8, 0x89, 0xa6, 0x1c, 0xe6, 0xed, 0x51, 0x92, 0xbc, 0x3d, 0xba, 0x7c, 0x72, 0xb6, 0x19,
	0x47, 0x10, 0x29, 0xbb, 0xa4, 0xbd, 0x2d, 0x47, 0xb8, 0x4e, 0x59, 0xc3, 0x75, 0x2a, 0x09, 0xd7,
	0x11, 0x37, 0x48, 0x55, 0x79, 0x83, 0xf4, 0x6f, 0x4a, 0x70, 0x8c, 0x56, 0xf9, 0x39, 0xdb, 0x75,
	0x5a, 0xec, 0xb9, 0xf5, 0xb0, 0xe7, 0x46, 0xc6, 0x29, 0x00, 0xd7, 0xb7, 0x5b, 0xb7, 0x92, 0x07,
	0x66, 0x1a, 0x96, 0x00, 0xc1, 0x13, 0x8e, 0xbf, 0xb6, 0x7a, 0xcd, 0x26, 0x42, 0x2d, 0x16, 0x42,
	0xba, 0x6e, 0xc9, 0x40, 0x4c, 0xf1, 0x51, 0xc2, 0x77, 0x79, 0x8c, 0x82, 0x84, 0xe2, 0x05, 0xa6,
	0x6c, 0x49, 0x39, 0xc9, 0x3b, 0x3b, 0x98, 0xdd, 0xd9, 0x61, 0x18, 0x07, 0xe2, 0x17, 0x20, 0xe6,
	0x2d, 0xde, 0xf2, 0x90, 0x35, 0x3d, 0xde, 0x4d, 0xf7, 0xbb, 0xcb, 0xce, 0xa6, 0x22, 0xb9, 0xcb,
	0x6e, 0xc1, 0xf1, 0x14, 0x1a, 0xc6, 0x55, 0x5f, 0x89, 0x2f, 0xd7, 0x97, 0x14, 0x53, 0xb9, 0x7e,
	0xc8, 0xe2, 0x6b, 0xf6, 0x36, 0x1c, 0xd5, 0xc4, 0x8f, 0x27, 0x87, 0x81, 0xbd, 0xe6, 0x43, 0x1a,
	0x2e, 0x30, 0x3e, 0x0c, 0x8c, 0x21, 0xc6, 0x05, 0x98, 0x0f, 0x10, 0xe7, 0xb7, 0x9b, 0x01, 0xda,
	0x75, 0x1e, 0xf3, 0x67, 0xeb, 0x55, 0xb8, 0xf9, 0x9b, 0x55, 0x68, 0x24, 0x41, 0x10, 0xc6, 0xbd,
	0x7f, 0x22, 0xcc, 0x37, 0xb2, 0x1d, 0x17, 0xb5, 0xe2, 0xd8, 0x12, 0x8c, 0xf9, 0x8a, 0xd0, 0xd4,
	0xee, 0xe9, 0x14, 0x80, 0xf3, 0x90, 0xbf, 0x5c, 0x49, 0x16, 0x78, 0xcd, 0x12, 0x20, 0x31, 0xe3,
	0x98, 0x10, 0x18, 0xc7, 0x0a, 0x2c, 0xb8, 0x7e, 0xd3, 0x76, 0xb7, 0x03, 0x7b, 0x77, 0xd7, 0x69,
	0x6e, 0x21, 0x17, 0x35, 0x23, 0x3f, 0x60, 0x67, 0x8c, 0xda, 0x34, 0x2d, 0x6f, 0x3d, 0x06, 0x13,
	0x34, 0x66, 0x03, 0x0f, 0xba, 0x40, 0xbf, 0x32, 0x8f, 0x1c, 0xaf, 0xc2, 0x62, 0x80, 0x3a, 0x7e,
	0x84, 0xd4, 0x8a, 0xe9, 0x4e, 0x4b, 0x9f, 0x48, 0xb0, 0xd1, 0x48, 0x1d, 0xfc, 0x26, 0x02, 0x0d,
	0xc6, 0x21, 0x32, 0xb6, 0x19, 0x85, 0xb1, 0x99, 0x30, 0x1d, 0x92, 0x97, 0xbd, 0xb7, 0x50, 0x33,
	0x40, 0x51, 0x7c, 0x4d, 0x4e, 0x80, 0xe1, 0xb9, 0x17, 0xbf, 0xef, 0xda, 0xe1, 0x1e, 0xbb, 0x30,
	0x97, 0x82, 0x0b, 0xbb, 0xc5, 0x79, 0x69, 0xb7, 0x78, 0x01, 0xe6, 0x55, 0x95, 0x8f, 0x5d, 0x96,
	0x4b, 0xc1, 0xc9, 0x63, 0x48, 0x31, 0xfd, 0x8c, 0xfa, 0x18, 0x52, 0x06, 0x82, 0x8f, 0xc2, 0x63,
	0x48, 0x59, 0x4d, 0x1b, 0xdf, 0x63, 0x48, 0x71, 0x0d, 0x63, 0x7e, 0x0c, 0x29, 0xa7, 0xe5, 0xc5,
	0x3d, 0x86, 0x14, 0x57, 0x3c, 0xdc, 0x63, 0x48, 0x71, 0xb1, 0x43, 0x7b, 0x0c, 0x49, 0x6a, 0xf8,
	0xf8, 0x1e, 0x43, 0xd2, 0xa2, 0x2d, 0xee, 0x31, 0x24, 0x1d, 0x3d, 0x19, 0x2b, 0x00, 0xfb, 0x31,
	0x3c, 0xf5, 0x18, 0x52, 0x32, 0xf4, 0x42, 0xae, 0x7e, 0x8f, 0x21, 0xe9, 0xea, 0x18, 0xdf, 0xc6,
	0xb9, 0x1f, 0xf6, 0x82, 0x42, 0xac, 0x94, 0x61, 0x8a, 0x3d, 0xfe, 0x31, 0xdc, 0x83, 0xa8, 0xec,
	0xf5, 0x90, 0x43, 0x7b, 0x10, 0x55, 0x68, 0xf4, 0xf8, 0x1e, 0x44, 0xd5, 0x20, 0x2d, 0x66, 0xd8,
	0xaf, 0xc0, 0x8c, 0xf4, 0x34, 0x4b, 0x6a, 0xdc, 0x75, 0xf1, 0x63, 0xff, 0x4b, 0x19, 0xaa, 0xef,
	0xfa, 0x1e, 0x7d, 0x8e, 0x79, 0xdf, 0x76, 0x5c, 0x7b, 0xc7, 0x45, 0x6b, 0xdd, 0xde, 0xa6, 0x6b,
	0x47, 0xbb, 0x7e, 0xd0, 0xe1, 0x3a, 0xa6, 0x3e, 0x71, 0x48, 0x4f, 0x29, 0xf9, 0x71, 0x93, 0xca,
	0x93, 0x3c, 0x6e, 0x32, 0x40, 0x88, 0x47, 0x9d, 0x5a, 0xc3, 0x55, 0x94, 0x49, 0xad, 0xf7, 0xd3,
	0x13, 0x9b, 0x86, 0xcd, 0xef, 0x96, 0xa1, 0x8e, 0x87, 0x53, 0x4b, 0xf7, 0x67, 0x64, 0xba, 0x4f,
	0x9e, 0xa9, 0xc2, 0x25, 0x8a, 0x25, 0xfa, 0x2b, 0x2a, 0xd1, 0x3f, 0x25, 0x55, 0xae, 0xa7, 0xf8,
	0x9f, 0xcb, 0xa1, 0xf8, 0x15, 0x89, 0xe2, 0x4f, 0x65, 0x62, 0x2c, 0x86, 0xdc, 0x7f, 0xbb, 0x04,
	0x0b, 0xb8, 0xa6, 0x27, 0x0a, 0x00, 0xbd, 0xaa, 0x04, 0x80, 0x7e, 0x5e, 0xea, 0x44, 0xc1, 0xe1,
	0x9f, 0x6f, 0xbe, 0xfa, 0xee, 0x2b, 0xcd, 0xbd, 0xc0, 0xef, 0x38, 0xbd, 0xce, 0x72, 0x9b, 0x5c,
	0x7b, 0xa2, 0x6b, 0x17, 0x37, 0xe2, 0x12, 0xf2, 0x22, 0xd2, 0xca, 0x10, 0x5d, 0x6a, 0x22, 0xf7,
	0x52, 0xdb, 0xbf, 0xd4, 0x6e, 0x76, 0x2f, 0xb1, 0xe6, 0xed, 0x4c, 0x74, 0x03, 0x3f, 0xf2, 0xaf,
	0xfc, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xce, 0xd1, 0x68, 0x6e, 0xb6, 0x31, 0x01, 0x00,
}
