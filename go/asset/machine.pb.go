// Code generated by protoc-gen-go.
// source: schema/asset/machine.proto
// DO NOT EDIT!

package asset

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "chromium.googlesource.com/enterprise/cel/go/common"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// NetworkInterface describes a single network interface on a machine.
type NetworkInterface struct {
	// Name of Network entry describing the network that this interface is
	// attached to.
	Network string `protobuf:"bytes,1,opt,name=network" json:"network,omitempty"`
	// Fixed address, if this interface is to have one. Leave undefined if the
	// interface should obatain an address automatically.
	FixedAddress *FixedAddress `protobuf:"bytes,2,opt,name=fixed_address,json=fixedAddress" json:"fixed_address,omitempty"`
}

func (m *NetworkInterface) Reset()                    { *m = NetworkInterface{} }
func (m *NetworkInterface) String() string            { return proto.CompactTextString(m) }
func (*NetworkInterface) ProtoMessage()               {}
func (*NetworkInterface) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{0} }

func (m *NetworkInterface) GetNetwork() string {
	if m != nil {
		return m.Network
	}
	return ""
}

func (m *NetworkInterface) GetFixedAddress() *FixedAddress {
	if m != nil {
		return m.FixedAddress
	}
	return nil
}

// Machine describes a generic machine.
type Machine struct {
	// Name of the machine. Also becomes the hostname of the machine.
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// The name of a host.MachineType entry that describes the host machine.
	MachineType string `protobuf:"bytes,2,opt,name=machine_type,json=machineType" json:"machine_type,omitempty"`
	// Network interfaces. There can be more than one for multihomed machines.
	// There MUST be at least one of these.
	NetworkInterface []*NetworkInterface `protobuf:"bytes,3,rep,name=network_interface,json=networkInterface" json:"network_interface,omitempty"`
}

func (m *Machine) Reset()                    { *m = Machine{} }
func (m *Machine) String() string            { return proto.CompactTextString(m) }
func (*Machine) ProtoMessage()               {}
func (*Machine) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{1} }

func (m *Machine) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Machine) GetMachineType() string {
	if m != nil {
		return m.MachineType
	}
	return ""
}

func (m *Machine) GetNetworkInterface() []*NetworkInterface {
	if m != nil {
		return m.NetworkInterface
	}
	return nil
}

func init() {
	proto.RegisterType((*NetworkInterface)(nil), "asset.NetworkInterface")
	proto.RegisterType((*Machine)(nil), "asset.Machine")
}

func init() { proto.RegisterFile("schema/asset/machine.proto", fileDescriptor6) }

var fileDescriptor6 = []byte{
	// 305 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x91, 0xc1, 0x4e, 0x2a, 0x31,
	0x14, 0x86, 0x33, 0x70, 0x2f, 0x48, 0x81, 0x08, 0x65, 0xc1, 0x04, 0x37, 0x84, 0x15, 0x1b, 0xdb,
	0x08, 0x1b, 0xe3, 0x4e, 0x16, 0x26, 0x26, 0xea, 0x62, 0xe2, 0xca, 0x0d, 0xa9, 0xe5, 0xc0, 0x34,
	0xd2, 0x9e, 0x49, 0x5b, 0xa2, 0xc4, 0x1d, 0x2f, 0xe3, 0x13, 0xf0, 0x7e, 0x86, 0x69, 0x49, 0x90,
	0xdd, 0x9c, 0xf9, 0xbe, 0xfc, 0x3d, 0x7f, 0x4b, 0x06, 0x4e, 0xe6, 0xa0, 0x05, 0x17, 0xce, 0x81,
	0xe7, 0x5a, 0xc8, 0x5c, 0x19, 0x60, 0x85, 0x45, 0x8f, 0xf4, 0x7f, 0xf9, 0x73, 0xf0, 0x57, 0x31,
	0xe0, 0x3f, 0xd1, 0x7e, 0x04, 0x65, 0x70, 0x15, 0x99, 0x44, 0xad, 0xd1, 0x70, 0x2c, 0xbc, 0x42,
	0xe3, 0x02, 0x1c, 0x7d, 0x93, 0xce, 0x4b, 0xb0, 0x1f, 0x8d, 0x07, 0xbb, 0x14, 0x12, 0xe8, 0x35,
	0xa9, 0xc7, 0x84, 0x34, 0x19, 0x26, 0xe3, 0xc6, 0xac, 0xb7, 0xdb, 0xa7, 0x97, 0xb4, 0x5d, 0x86,
	0xb3, 0x88, 0xb2, 0xa3, 0x43, 0x6f, 0x49, 0x7b, 0xa9, 0xbe, 0x60, 0x31, 0x17, 0x8b, 0x85, 0x05,
	0xe7, 0xd2, 0xca, 0x30, 0x19, 0x37, 0x27, 0x3d, 0x16, 0xfc, 0x87, 0x03, 0xbb, 0x0f, 0x28, 0x6b,
	0x2d, 0x4f, 0xa6, 0xd1, 0x4f, 0x42, 0xea, 0xcf, 0xa1, 0x0e, 0xa5, 0xe4, 0x9f, 0x11, 0x1a, 0xc2,
	0x89, 0x59, 0xf9, 0x4d, 0xef, 0x48, 0x2b, 0xb6, 0x9d, 0xfb, 0x6d, 0x01, 0x65, 0x70, 0x63, 0xd6,
	0xdf, 0xed, 0xd3, 0x1e, 0xed, 0xe6, 0xe8, 0x3c, 0x3b, 0xc5, 0x59, 0x33, 0x4e, 0xaf, 0xdb, 0x02,
	0xe8, 0x13, 0xe9, 0xc6, 0x05, 0xe7, 0xea, 0xd8, 0x2c, 0xad, 0x0e, 0xab, 0xe3, 0xe6, 0xa4, 0x1f,
	0x37, 0x3b, 0x2f, 0x3e, 0xab, 0xed, 0xf6, 0x69, 0xe5, 0x22, 0xc9, 0x3a, 0xe6, 0x9c, 0x4c, 0xdf,
	0x6e, 0x64, 0x6e, 0x51, 0xab, 0x8d, 0x66, 0x2b, 0xc4, 0xd5, 0x1a, 0x1c, 0x6e, 0xac, 0x04, 0x26,
	0x51, 0x73, 0x38, 0x68, 0x85, 0x55, 0x0e, 0xb8, 0x84, 0x35, 0x5f, 0x61, 0x78, 0x86, 0xf7, 0x5a,
	0x79, 0xc5, 0xd3, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x16, 0xfd, 0x22, 0x9c, 0xc0, 0x01, 0x00,
	0x00,
}
