// Code generated by protoc-gen-go.
// source: schema/meta/meta.proto
// DO NOT EDIT!

/*
Package meta is a generated protocol buffer package.

It is generated from these files:
	schema/meta/meta.proto

It has these top-level messages:
	Tree
	FileReference
*/
package meta

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Type of object
type FileReference_Type int32

const (
	// This is a regular file.
	FileReference_FILE FileReference_Type = 0
	// This is a directory. The |size| and |digest| refer to a binary encoded
	// Tree object.
	FileReference_DIRECTORY FileReference_Type = 1
)

var FileReference_Type_name = map[int32]string{
	0: "FILE",
	1: "DIRECTORY",
}
var FileReference_Type_value = map[string]int32{
	"FILE":      0,
	"DIRECTORY": 1,
}

func (x FileReference_Type) String() string {
	return proto.EnumName(FileReference_Type_name, int32(x))
}
func (FileReference_Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 0} }

type Tree struct {
	// To canonicalize the representation, the list of files must be sorted by
	// name in en-US locale.
	File []*FileReference `protobuf:"bytes,1,rep,name=file" json:"file,omitempty"`
}

func (m *Tree) Reset()                    { *m = Tree{} }
func (m *Tree) String() string            { return proto.CompactTextString(m) }
func (*Tree) ProtoMessage()               {}
func (*Tree) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Tree) GetFile() []*FileReference {
	if m != nil {
		return m.File
	}
	return nil
}

type FileReference struct {
	// Name of file.
	Name string             `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Type FileReference_Type `protobuf:"varint,2,opt,name=type,enum=meta.FileReference_Type" json:"type,omitempty"`
	// Size in bytes of the object.
	Size int64 `protobuf:"varint,3,opt,name=size" json:"size,omitempty"`
	// The reference depends on the backend hosting the content indexed storage.
	Reference string `protobuf:"bytes,4,opt,name=reference" json:"reference,omitempty"`
}

func (m *FileReference) Reset()                    { *m = FileReference{} }
func (m *FileReference) String() string            { return proto.CompactTextString(m) }
func (*FileReference) ProtoMessage()               {}
func (*FileReference) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *FileReference) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *FileReference) GetType() FileReference_Type {
	if m != nil {
		return m.Type
	}
	return FileReference_FILE
}

func (m *FileReference) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *FileReference) GetReference() string {
	if m != nil {
		return m.Reference
	}
	return ""
}

func init() {
	proto.RegisterType((*Tree)(nil), "meta.Tree")
	proto.RegisterType((*FileReference)(nil), "meta.FileReference")
	proto.RegisterEnum("meta.FileReference_Type", FileReference_Type_name, FileReference_Type_value)
}

func init() { proto.RegisterFile("schema/meta/meta.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 243 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x90, 0xc1, 0x4a, 0xc4, 0x30,
	0x14, 0x45, 0x8d, 0x13, 0xc4, 0x3e, 0x19, 0x19, 0x22, 0x48, 0x16, 0x82, 0xa5, 0x1b, 0xbb, 0x90,
	0x44, 0xea, 0x1f, 0xa8, 0x33, 0x30, 0x20, 0x08, 0xa1, 0x1b, 0xdd, 0x8d, 0xe1, 0x4e, 0x27, 0xd0,
	0x34, 0x25, 0xed, 0x2c, 0xc6, 0xef, 0xf1, 0x43, 0xa5, 0x11, 0x11, 0xc1, 0xcd, 0xe3, 0xf2, 0x38,
	0xf7, 0x2c, 0x2e, 0x5d, 0x0e, 0x76, 0x07, 0xbf, 0xd1, 0x1e, 0xe3, 0xf7, 0x51, 0x7d, 0x0c, 0x63,
	0x10, 0x7c, 0xca, 0x85, 0x26, 0x5e, 0x47, 0x40, 0xdc, 0x10, 0xdf, 0xba, 0x16, 0x92, 0xe5, 0xb3,
	0xf2, 0xac, 0xba, 0x50, 0x09, 0x5c, 0xb9, 0x16, 0x06, 0x5b, 0x44, 0x74, 0x16, 0x26, 0x01, 0xc5,
	0x27, 0xa3, 0xf9, 0x9f, 0xbf, 0x10, 0xc4, 0xbb, 0x8d, 0x9f, 0xaa, 0xac, 0xcc, 0x4c, 0xca, 0xe2,
	0x96, 0xf8, 0x78, 0xe8, 0x21, 0x8f, 0x73, 0x56, 0x9e, 0x57, 0xf2, 0x1f, 0x9d, 0xaa, 0x0f, 0x3d,
	0x4c, 0xa2, 0x26, 0xc3, 0xe0, 0x3e, 0x20, 0x67, 0x39, 0x2b, 0x67, 0x26, 0x65, 0x71, 0x45, 0x59,
	0xfc, 0x61, 0x25, 0x4f, 0xea, 0xdf, 0x47, 0x71, 0x4d, 0x7c, 0xea, 0x8b, 0x53, 0xe2, 0xab, 0xf5,
	0xf3, 0x72, 0x71, 0x24, 0xe6, 0x94, 0x3d, 0xad, 0xcd, 0xf2, 0xb1, 0x7e, 0x31, 0xaf, 0x0b, 0xf6,
	0x50, 0xbd, 0xdd, 0xd9, 0x5d, 0x0c, 0xde, 0xed, 0xbd, 0x6a, 0x42, 0x68, 0x5a, 0x0c, 0x61, 0x1f,
	0x2d, 0x94, 0x0d, 0x5e, 0xa3, 0x1b, 0x11, 0xfb, 0xe8, 0x06, 0x68, 0x8b, 0x56, 0x37, 0x21, 0xed,
	0xf2, 0x7e, 0x92, 0x86, 0xb9, 0xff, 0x0a, 0x00, 0x00, 0xff, 0xff, 0x68, 0xc0, 0xb1, 0x19, 0x32,
	0x01, 0x00, 0x00,
}
